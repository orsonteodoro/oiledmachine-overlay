diff '--color=auto' -urp pytorch-1.13.1.orig/third_party/FBGEMM/fbgemm_gpu/CMakeLists.txt pytorch-1.13.1/third_party/FBGEMM/fbgemm_gpu/CMakeLists.txt
--- pytorch-1.13.1.orig/third_party/FBGEMM/fbgemm_gpu/CMakeLists.txt	2022-09-28 14:34:39.000000000 -0700
+++ pytorch-1.13.1/third_party/FBGEMM/fbgemm_gpu/CMakeLists.txt	2024-08-11 00:06:16.000699610 -0700
@@ -13,7 +13,7 @@ endif()
 option(USE_CUDA "Use CUDA" ON)
 option(USE_ROCM "Use ROCm" OFF)
 
-if(((EXISTS "/opt/rocm/") OR (EXISTS $ENV{ROCM_PATH}))
+if(((EXISTS "/opt/rocm-@ROCM_VERSION@/") OR (EXISTS $ENV{ROCM_PATH}))
    AND NOT (EXISTS "/bin/nvcc"))
   message("AMD GPU detected.")
   set(USE_CUDA OFF)
diff '--color=auto' -urp pytorch-1.13.1.orig/third_party/FBGEMM/fbgemm_gpu/cmake/Hip.cmake pytorch-1.13.1/third_party/FBGEMM/fbgemm_gpu/cmake/Hip.cmake
--- pytorch-1.13.1.orig/third_party/FBGEMM/fbgemm_gpu/cmake/Hip.cmake	2022-09-28 14:34:39.000000000 -0700
+++ pytorch-1.13.1/third_party/FBGEMM/fbgemm_gpu/cmake/Hip.cmake	2024-08-11 00:06:19.888635911 -0700
@@ -1,7 +1,7 @@
 set(FBGEMM_HAVE_HIP FALSE)
 
 IF(NOT DEFINED ENV{ROCM_PATH})
-  SET(ROCM_PATH /opt/rocm)
+  SET(ROCM_PATH /opt/rocm-@ROCM_VERSION@)
 ELSE()
   SET(ROCM_PATH $ENV{ROCM_PATH})
 ENDIF()
diff '--color=auto' -urp pytorch-1.13.1.orig/third_party/eigen/test/CMakeLists.txt pytorch-1.13.1/third_party/eigen/test/CMakeLists.txt
--- pytorch-1.13.1.orig/third_party/eigen/test/CMakeLists.txt	2021-08-18 13:41:58.000000000 -0700
+++ pytorch-1.13.1/third_party/eigen/test/CMakeLists.txt	2024-08-11 00:06:03.696901186 -0700
@@ -425,7 +425,7 @@ endif()
 option(EIGEN_TEST_HIP "Add HIP support." OFF)
 if (EIGEN_TEST_HIP)
 
-  set(HIP_PATH "/opt/rocm/hip" CACHE STRING "Path to the HIP installation.")
+  set(HIP_PATH "/opt/rocm-@ROCM_VERSION@/hip" CACHE STRING "Path to the HIP installation.")
 
   if (EXISTS ${HIP_PATH})
     
diff '--color=auto' -urp pytorch-1.13.1.orig/third_party/eigen/unsupported/test/CMakeLists.txt pytorch-1.13.1/third_party/eigen/unsupported/test/CMakeLists.txt
--- pytorch-1.13.1.orig/third_party/eigen/unsupported/test/CMakeLists.txt	2021-08-18 13:41:58.000000000 -0700
+++ pytorch-1.13.1/third_party/eigen/unsupported/test/CMakeLists.txt	2024-08-11 00:06:09.456806821 -0700
@@ -362,7 +362,7 @@ endif()
 # Add HIP specific tests
 if (EIGEN_TEST_HIP)
 
-  set(HIP_PATH "/opt/rocm/hip" CACHE STRING "Path to the HIP installation.")
+  set(HIP_PATH "/opt/rocm-@ROCM_VERSION@/hip" CACHE STRING "Path to the HIP installation.")
 
   if (EXISTS ${HIP_PATH})
 
diff '--color=auto' -urp pytorch-1.13.1.orig/third_party/gloo/cmake/Hip.cmake pytorch-1.13.1/third_party/gloo/cmake/Hip.cmake
--- pytorch-1.13.1.orig/third_party/gloo/cmake/Hip.cmake	2022-05-18 13:40:03.000000000 -0700
+++ pytorch-1.13.1/third_party/gloo/cmake/Hip.cmake	2024-08-11 00:05:45.217203937 -0700
@@ -1,7 +1,7 @@
 set(HAVE_HIP FALSE)
 
 IF(NOT DEFINED ENV{ROCM_PATH})
-  SET(ROCM_PATH /opt/rocm)
+  SET(ROCM_PATH /opt/rocm-@ROCM_VERSION@)
 ELSE()
   SET(ROCM_PATH $ENV{ROCM_PATH})
 ENDIF()
diff '--color=auto' -urp pytorch-1.13.1.orig/third_party/gloo/cmake/Modules/Findrccl.cmake pytorch-1.13.1/third_party/gloo/cmake/Modules/Findrccl.cmake
--- pytorch-1.13.1.orig/third_party/gloo/cmake/Modules/Findrccl.cmake	2022-05-18 13:40:03.000000000 -0700
+++ pytorch-1.13.1/third_party/gloo/cmake/Modules/Findrccl.cmake	2024-08-11 00:05:49.361136048 -0700
@@ -17,7 +17,7 @@
 if(DEFINED ENV{ROCM_PATH})
     set(RCCL_ROOT_DIR $ENV{ROCM_PATH} CACHE PATH "Folder contains AMD RCCL")
 else()
-    set(RCCL_ROOT_DIR "/opt/rocm")
+    set(RCCL_ROOT_DIR "/opt/rocm-@ROCM_VERSION@")
 endif()
 
 find_path(RCCL_INCLUDE_DIR
diff '--color=auto' -urp pytorch-1.13.1.orig/third_party/kineto/libkineto/CMakeLists.txt pytorch-1.13.1/third_party/kineto/libkineto/CMakeLists.txt
--- pytorch-1.13.1.orig/third_party/kineto/libkineto/CMakeLists.txt	2022-06-19 09:10:18.000000000 -0700
+++ pytorch-1.13.1/third_party/kineto/libkineto/CMakeLists.txt	2024-08-11 00:05:58.368988474 -0700
@@ -170,9 +170,9 @@ else()
 endif()
 
 if(NOT LIBKINETO_NOROCTRACER)
-  find_library(ROCTRACER_LIBRARY NAMES libroctracer64.so HINTS /opt/rocm/roctracer/lib)
+  find_library(ROCTRACER_LIBRARY NAMES libroctracer64.so HINTS /opt/rocm-@ROCM_VERSION@/roctracer/lib)
   target_link_libraries(kineto "${ROCTRACER_LIBRARY}")
-  find_library(KINETO_HIP_LIBRARY NAMES libamdhip64.so HINTS /opt/rocm/lib)
+  find_library(KINETO_HIP_LIBRARY NAMES libamdhip64.so HINTS /opt/rocm-@ROCM_VERSION@/lib)
   target_link_libraries(kineto "${KINETO_HIP_LIBRARY}")
 endif()
 
