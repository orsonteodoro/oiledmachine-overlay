diff '--color=auto' -urp pytorch-2.0.1.orig/third_party/FBGEMM/fbgemm_gpu/CMakeLists.txt pytorch-2.0.1/third_party/FBGEMM/fbgemm_gpu/CMakeLists.txt
--- pytorch-2.0.1.orig/third_party/FBGEMM/fbgemm_gpu/CMakeLists.txt	2023-02-10 11:11:39.000000000 -0800
+++ pytorch-2.0.1/third_party/FBGEMM/fbgemm_gpu/CMakeLists.txt	2024-08-11 02:01:34.066772367 -0700
@@ -13,7 +13,7 @@ endif()
 option(USE_CUDA "Use CUDA" ON)
 option(USE_ROCM "Use ROCm" OFF)
 
-if(((EXISTS "/opt/rocm/") OR (EXISTS $ENV{ROCM_PATH}))
+if(((EXISTS "/opt/rocm-@ROCM_VERSION@/") OR (EXISTS $ENV{ROCM_PATH}))
    AND NOT (EXISTS "/bin/nvcc"))
   message("AMD GPU detected.")
   set(USE_CUDA OFF)
diff '--color=auto' -urp pytorch-2.0.1.orig/third_party/FBGEMM/fbgemm_gpu/cmake/Hip.cmake pytorch-2.0.1/third_party/FBGEMM/fbgemm_gpu/cmake/Hip.cmake
--- pytorch-2.0.1.orig/third_party/FBGEMM/fbgemm_gpu/cmake/Hip.cmake	2023-02-10 11:11:39.000000000 -0800
+++ pytorch-2.0.1/third_party/FBGEMM/fbgemm_gpu/cmake/Hip.cmake	2024-08-11 02:01:38.226703874 -0700
@@ -1,7 +1,7 @@
 set(FBGEMM_HAVE_HIP FALSE)
 
 IF(NOT DEFINED ENV{ROCM_PATH})
-  SET(ROCM_PATH /opt/rocm)
+  SET(ROCM_PATH /opt/rocm-@ROCM_VERSION@)
 ELSE()
   SET(ROCM_PATH $ENV{ROCM_PATH})
 ENDIF()
diff '--color=auto' -urp pytorch-2.0.1.orig/third_party/eigen/test/CMakeLists.txt pytorch-2.0.1/third_party/eigen/test/CMakeLists.txt
--- pytorch-2.0.1.orig/third_party/eigen/test/CMakeLists.txt	2021-08-18 13:41:58.000000000 -0700
+++ pytorch-2.0.1/third_party/eigen/test/CMakeLists.txt	2024-08-11 02:01:22.970955056 -0700
@@ -425,7 +425,7 @@ endif()
 option(EIGEN_TEST_HIP "Add HIP support." OFF)
 if (EIGEN_TEST_HIP)
 
-  set(HIP_PATH "/opt/rocm/hip" CACHE STRING "Path to the HIP installation.")
+  set(HIP_PATH "/opt/rocm-@ROCM_VERSION@/hip" CACHE STRING "Path to the HIP installation.")
 
   if (EXISTS ${HIP_PATH})
     
diff '--color=auto' -urp pytorch-2.0.1.orig/third_party/eigen/unsupported/test/CMakeLists.txt pytorch-2.0.1/third_party/eigen/unsupported/test/CMakeLists.txt
--- pytorch-2.0.1.orig/third_party/eigen/unsupported/test/CMakeLists.txt	2021-08-18 13:41:58.000000000 -0700
+++ pytorch-2.0.1/third_party/eigen/unsupported/test/CMakeLists.txt	2024-08-11 02:01:28.722860353 -0700
@@ -362,7 +362,7 @@ endif()
 # Add HIP specific tests
 if (EIGEN_TEST_HIP)
 
-  set(HIP_PATH "/opt/rocm/hip" CACHE STRING "Path to the HIP installation.")
+  set(HIP_PATH "/opt/rocm-@ROCM_VERSION@/hip" CACHE STRING "Path to the HIP installation.")
 
   if (EXISTS ${HIP_PATH})
 
diff '--color=auto' -urp pytorch-2.0.1.orig/third_party/gloo/cmake/Hip.cmake pytorch-2.0.1/third_party/gloo/cmake/Hip.cmake
--- pytorch-2.0.1.orig/third_party/gloo/cmake/Hip.cmake	2023-01-17 14:42:56.000000000 -0800
+++ pytorch-2.0.1/third_party/gloo/cmake/Hip.cmake	2024-08-11 02:01:03.107282102 -0700
@@ -1,7 +1,7 @@
 set(HAVE_HIP FALSE)
 
 IF(NOT DEFINED ENV{ROCM_PATH})
-  SET(ROCM_PATH /opt/rocm)
+  SET(ROCM_PATH /opt/rocm-@ROCM_VERSION@)
 ELSE()
   SET(ROCM_PATH $ENV{ROCM_PATH})
 ENDIF()
diff '--color=auto' -urp pytorch-2.0.1.orig/third_party/gloo/cmake/Modules/Findrccl.cmake pytorch-2.0.1/third_party/gloo/cmake/Modules/Findrccl.cmake
--- pytorch-2.0.1.orig/third_party/gloo/cmake/Modules/Findrccl.cmake	2023-01-17 14:42:56.000000000 -0800
+++ pytorch-2.0.1/third_party/gloo/cmake/Modules/Findrccl.cmake	2024-08-11 02:01:08.163198860 -0700
@@ -17,7 +17,7 @@
 if(DEFINED ENV{ROCM_PATH})
     set(RCCL_ROOT_DIR $ENV{ROCM_PATH} CACHE PATH "Folder contains AMD RCCL")
 else()
-    set(RCCL_ROOT_DIR "/opt/rocm")
+    set(RCCL_ROOT_DIR "/opt/rocm-@ROCM_VERSION@")
 endif()
 
 find_path(RCCL_INCLUDE_DIR
diff '--color=auto' -urp pytorch-2.0.1.orig/third_party/ideep/mkl-dnn/third_party/oneDNN/cmake/FindHIP.cmake pytorch-2.0.1/third_party/ideep/mkl-dnn/third_party/oneDNN/cmake/FindHIP.cmake
--- pytorch-2.0.1.orig/third_party/ideep/mkl-dnn/third_party/oneDNN/cmake/FindHIP.cmake	2023-01-12 17:52:58.000000000 -0800
+++ pytorch-2.0.1/third_party/ideep/mkl-dnn/third_party/oneDNN/cmake/FindHIP.cmake	2024-08-11 02:01:53.490452558 -0700
@@ -20,7 +20,7 @@ find_package(Threads REQUIRED)
 list(APPEND hip_root_hints
             ${HIPROOT}
             $ENV{HIPROOT}
-            "/opt/rocm/hip")
+            "/opt/rocm-@ROCM_VERSION@/hip")
 
 find_path(
     HIP_INCLUDE_DIR "hip/hip_runtime_api.h"
diff '--color=auto' -urp pytorch-2.0.1.orig/third_party/ideep/mkl-dnn/third_party/oneDNN/cmake/FindMIOpen.cmake pytorch-2.0.1/third_party/ideep/mkl-dnn/third_party/oneDNN/cmake/FindMIOpen.cmake
--- pytorch-2.0.1.orig/third_party/ideep/mkl-dnn/third_party/oneDNN/cmake/FindMIOpen.cmake	2023-01-12 17:52:58.000000000 -0800
+++ pytorch-2.0.1/third_party/ideep/mkl-dnn/third_party/oneDNN/cmake/FindMIOpen.cmake	2024-08-11 02:02:02.706300819 -0700
@@ -21,7 +21,7 @@ find_package(rocBLAS REQUIRED)
 # Rely on the standard CMake config for amd_comgr as it doesn't add redundant
 # dependencies.
 find_package(amd_comgr REQUIRED CONFIG
-    HINTS ${COMGRROOT}/lib/cmake $ENV{COMGRROOT}/lib/cmake /opt/rocm/lib/cmake
+    HINTS ${COMGRROOT}/lib/cmake $ENV{COMGRROOT}/lib/cmake /opt/rocm-@ROCM_VERSION@/lib/cmake
 )
 
 # amd_comgr target adds "${COMGRROOT}/include` directory that may contain
@@ -36,7 +36,7 @@ list(APPEND EXTRA_SHARED_LIBS amd_comgr)
 list(APPEND miopen_root_hints
             ${MIOPENROOT}
             $ENV{MIOPENROOT}
-            "/opt/rocm/miopen"
+            "/opt/rocm-@ROCM_VERSION@/miopen"
 )
 
 find_path(
diff '--color=auto' -urp pytorch-2.0.1.orig/third_party/ideep/mkl-dnn/third_party/oneDNN/cmake/FindrocBLAS.cmake pytorch-2.0.1/third_party/ideep/mkl-dnn/third_party/oneDNN/cmake/FindrocBLAS.cmake
--- pytorch-2.0.1.orig/third_party/ideep/mkl-dnn/third_party/oneDNN/cmake/FindrocBLAS.cmake	2023-01-12 17:52:58.000000000 -0800
+++ pytorch-2.0.1/third_party/ideep/mkl-dnn/third_party/oneDNN/cmake/FindrocBLAS.cmake	2024-08-11 02:01:49.030525991 -0700
@@ -21,7 +21,7 @@ find_package(Threads REQUIRED)
 list(APPEND rocblas_root_hints
             ${ROCBLASROOT}
             $ENV{ROCBLASROOT}
-            "/opt/rocm/rocblas")
+            "/opt/rocm-@ROCM_VERSION@/rocblas")
 
 find_path(
     rocBLAS_INCLUDE_DIR "rocblas.h"
diff '--color=auto' -urp pytorch-2.0.1.orig/third_party/kineto/libkineto/CMakeLists.txt pytorch-2.0.1/third_party/kineto/libkineto/CMakeLists.txt
--- pytorch-2.0.1.orig/third_party/kineto/libkineto/CMakeLists.txt	2023-02-02 09:57:33.000000000 -0800
+++ pytorch-2.0.1/third_party/kineto/libkineto/CMakeLists.txt	2024-08-11 02:01:18.335031385 -0700
@@ -187,9 +187,9 @@ else()
 endif()
 
 if(NOT LIBKINETO_NOROCTRACER)
-  find_library(ROCTRACER_LIBRARY NAMES libroctracer64.so HINTS /opt/rocm/roctracer/lib)
+  find_library(ROCTRACER_LIBRARY NAMES libroctracer64.so HINTS /opt/rocm-@ROCM_VERSION@/roctracer/lib)
   target_link_libraries(kineto "${ROCTRACER_LIBRARY}")
-  find_library(KINETO_HIP_LIBRARY NAMES libamdhip64.so HINTS /opt/rocm/lib)
+  find_library(KINETO_HIP_LIBRARY NAMES libamdhip64.so HINTS /opt/rocm-@ROCM_VERSION@/lib)
   target_link_libraries(kineto "${KINETO_HIP_LIBRARY}")
 endif()
 
