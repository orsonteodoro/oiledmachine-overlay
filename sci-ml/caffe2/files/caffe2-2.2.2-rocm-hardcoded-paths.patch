diff '--color=auto' -urp pytorch-2.2.2.orig/caffe2/CMakeLists.txt pytorch-2.2.2/caffe2/CMakeLists.txt
--- pytorch-2.2.2.orig/caffe2/CMakeLists.txt	2024-08-11 01:06:47.780807652 -0700
+++ pytorch-2.2.2/caffe2/CMakeLists.txt	2024-08-11 01:14:42.645013867 -0700
@@ -1294,10 +1294,10 @@ if(USE_ROCM)
     __HIP_PLATFORM_AMD__
     )
   target_include_directories(torch_hip PRIVATE
-    /opt/rocm/include
-    /opt/rocm/hcc/include
-    /opt/rocm/rocblas/include
-    /opt/rocm/hipsparse/include
+    /opt/rocm-@ROCM_VERSION@/include
+    /opt/rocm-@ROCM_VERSION@/hcc/include
+    /opt/rocm-@ROCM_VERSION@/rocblas/include
+    /opt/rocm-@ROCM_VERSION@/hipsparse/include
     )
 endif()
 
diff '--color=auto' -urp pytorch-2.2.2.orig/cmake/Dependencies.cmake pytorch-2.2.2/cmake/Dependencies.cmake
--- pytorch-2.2.2.orig/cmake/Dependencies.cmake	2024-08-11 01:06:47.784807586 -0700
+++ pytorch-2.2.2/cmake/Dependencies.cmake	2024-08-11 01:14:51.244872657 -0700
@@ -1915,7 +1915,7 @@ if(USE_KINETO)
 
   if(NOT LIBKINETO_NOROCTRACER)
     if(NOT ENV{ROCM_SOURCE_DIR})
-      set(ENV{ROCM_SOURCE_DIR} "/opt/rocm")
+      set(ENV{ROCM_SOURCE_DIR} "/opt/rocm-@ROCM_VERSION@")
     endif()
   endif()
 
diff '--color=auto' -urp pytorch-2.2.2.orig/cmake/public/LoadHIP.cmake pytorch-2.2.2/cmake/public/LoadHIP.cmake
--- pytorch-2.2.2.orig/cmake/public/LoadHIP.cmake	2024-03-25 14:33:04.000000000 -0700
+++ pytorch-2.2.2/cmake/public/LoadHIP.cmake	2024-08-11 01:14:54.904812559 -0700
@@ -1,7 +1,7 @@
 set(PYTORCH_FOUND_HIP FALSE)
 
 if(NOT DEFINED ENV{ROCM_PATH})
-  set(ROCM_PATH /opt/rocm)
+  set(ROCM_PATH /opt/rocm-@ROCM_VERSION@)
 else()
   set(ROCM_PATH $ENV{ROCM_PATH})
 endif()
diff '--color=auto' -urp pytorch-2.2.2.orig/tools/amd_build/build_amd.py pytorch-2.2.2/tools/amd_build/build_amd.py
--- pytorch-2.2.2.orig/tools/amd_build/build_amd.py	2024-03-25 14:33:04.000000000 -0700
+++ pytorch-2.2.2/tools/amd_build/build_amd.py	2024-08-11 01:16:26.275312101 -0700
@@ -137,7 +137,7 @@ ignores = [os.path.join(proj_dir, ignore
 # Check if the compiler is hip-clang.
 def is_hip_clang() -> bool:
     try:
-        hip_path = os.getenv("HIP_PATH", "/opt/rocm/hip")
+        hip_path = os.getenv("HIP_PATH", "/opt/rocm-@ROCM_VERSION@/hip")
         with open(hip_path + "/lib/.hipInfo") as f:
             return "HIP_COMPILER=clang" in f.read()
     except OSError:
diff '--color=auto' -urp pytorch-2.2.2.orig/tools/stats/monitor.py pytorch-2.2.2/tools/stats/monitor.py
--- pytorch-2.2.2.orig/tools/stats/monitor.py	2024-03-25 14:33:04.000000000 -0700
+++ pytorch-2.2.2/tools/stats/monitor.py	2024-08-11 01:16:15.883482764 -0700
@@ -13,7 +13,7 @@ import pynvml  # type: ignore[import]
 # Must import from ROCm installation path.
 # Cannot use the high-level rocm_smi cmdline module due to its use of exit().
 # Must use the lower-level ctypes wrappers exposed through rsmiBindings.
-sys.path.append("/opt/rocm/libexec/rocm_smi")
+sys.path.append("/opt/rocm-@ROCM_VERSION@/libexec/rocm_smi")
 try:
     from ctypes import byref, c_uint32, c_uint64
 
diff '--color=auto' -urp pytorch-2.2.2.orig/tools/testing/test_selections.py pytorch-2.2.2/tools/testing/test_selections.py
--- pytorch-2.2.2.orig/tools/testing/test_selections.py	2024-03-25 14:33:04.000000000 -0700
+++ pytorch-2.2.2/tools/testing/test_selections.py	2024-08-11 01:16:20.123413133 -0700
@@ -16,7 +16,7 @@ IS_MEM_LEAK_CHECK = os.getenv("PYTORCH_T
 # to ensure that sharding is consistent, NUM_PROCS is the actual number of procs
 # used to run tests.  If they are not equal, the only consequence should be
 # unequal shards.
-IS_ROCM = os.path.exists("/opt/rocm")
+IS_ROCM = os.path.exists("/opt/rocm-@ROCM_VERSION@")
 NUM_PROCS = 1 if IS_MEM_LEAK_CHECK else 2
 NUM_PROCS_FOR_SHARDING_CALC = NUM_PROCS if not IS_ROCM or IS_MEM_LEAK_CHECK else 2
 THRESHOLD = 60 * 10  # 10 minutes
diff '--color=auto' -urp pytorch-2.2.2.orig/torch/utils/cpp_extension.py pytorch-2.2.2/torch/utils/cpp_extension.py
--- pytorch-2.2.2.orig/torch/utils/cpp_extension.py	2024-03-25 14:33:04.000000000 -0700
+++ pytorch-2.2.2/torch/utils/cpp_extension.py	2024-08-11 01:14:59.420738406 -0700
@@ -134,7 +134,7 @@ def _find_rocm_home() -> Optional[str]:
                 rocm_home = os.path.dirname(rocm_home)
         else:
             # Guess #3
-            fallback_path = '/opt/rocm'
+            fallback_path = '/opt/rocm-@ROCM_VERSION@'
             if os.path.exists(fallback_path):
                 rocm_home = fallback_path
     if rocm_home and torch.version.hip is None:
diff '--color=auto' -urp pytorch-2.2.2.orig/torch/utils/hipify/cuda_to_hip_mappings.py pytorch-2.2.2/torch/utils/hipify/cuda_to_hip_mappings.py
--- pytorch-2.2.2.orig/torch/utils/hipify/cuda_to_hip_mappings.py	2024-03-25 14:33:04.000000000 -0700
+++ pytorch-2.2.2/torch/utils/hipify/cuda_to_hip_mappings.py	2024-08-11 01:15:03.668668653 -0700
@@ -29,7 +29,7 @@ supported in ROCm/HIP yet.
 
 # We need to know the ROCm version so we can conditionalize some of the mappings later.
 # As of ROCm 5.0, the version is found in rocm_version.h header file under /opt/rocm/include.
-rocm_path = os.environ.get('ROCM_HOME') or os.environ.get('ROCM_PATH') or "/opt/rocm"
+rocm_path = os.environ.get('ROCM_HOME') or os.environ.get('ROCM_PATH') or "/opt/rocm-@ROCM_VERSION@"
 try:
     rocm_path = subprocess.check_output(["hipconfig", "--rocmpath"]).decode("utf-8")
 except subprocess.CalledProcessError:
