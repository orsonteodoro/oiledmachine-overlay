diff '--color=auto' -urp pytorch-2.4.0.orig/caffe2/CMakeLists.txt pytorch-2.4.0/caffe2/CMakeLists.txt
--- pytorch-2.4.0.orig/caffe2/CMakeLists.txt	2024-08-10 23:17:47.456375546 -0700
+++ pytorch-2.4.0/caffe2/CMakeLists.txt	2024-08-10 23:41:41.852814798 -0700
@@ -1307,7 +1307,7 @@ if(USE_ROCM)
     set(ROCM_SOURCE_DIR "$ENV{ROCM_SOURCE_DIR}")
   endif()
   if($ROCM_SOURCE_DIR STREQUAL "")
-    set(ROCM_SOURCE_DIR "/opt/rocm")
+    set(ROCM_SOURCE_DIR "/opt/rocm-@ROCM_VERSION@")
   endif()
   message(INFO "caffe2 ROCM_SOURCE_DIR = ${ROCM_SOURCE_DIR}")
   target_include_directories(torch_hip PRIVATE
diff '--color=auto' -urp pytorch-2.4.0.orig/cmake/Dependencies.cmake pytorch-2.4.0/cmake/Dependencies.cmake
--- pytorch-2.4.0.orig/cmake/Dependencies.cmake	2024-08-10 23:17:45.476408076 -0700
+++ pytorch-2.4.0/cmake/Dependencies.cmake	2024-08-10 23:41:55.832586493 -0700
@@ -1651,7 +1651,7 @@ if(USE_KINETO)
 
   if(NOT LIBKINETO_NOROCTRACER)
     if("$ENV{ROCM_SOURCE_DIR}" STREQUAL "")
-      set(ENV{ROCM_SOURCE_DIR} "/opt/rocm")
+      set(ENV{ROCM_SOURCE_DIR} "/opt/rocm-@ROCM_VERSION@")
     endif()
   endif()
 
diff '--color=auto' -urp pytorch-2.4.0.orig/cmake/public/LoadHIP.cmake pytorch-2.4.0/cmake/public/LoadHIP.cmake
--- pytorch-2.4.0.orig/cmake/public/LoadHIP.cmake	2024-07-09 11:17:43.000000000 -0700
+++ pytorch-2.4.0/cmake/public/LoadHIP.cmake	2024-08-10 23:42:00.360512545 -0700
@@ -1,7 +1,7 @@
 set(PYTORCH_FOUND_HIP FALSE)
 
 if(NOT DEFINED ENV{ROCM_PATH})
-  set(ROCM_PATH /opt/rocm)
+  set(ROCM_PATH /opt/rocm-@ROCM_VERSION@)
 else()
   set(ROCM_PATH $ENV{ROCM_PATH})
 endif()
diff '--color=auto' -urp pytorch-2.4.0.orig/tools/amd_build/build_amd.py pytorch-2.4.0/tools/amd_build/build_amd.py
--- pytorch-2.4.0.orig/tools/amd_build/build_amd.py	2024-07-09 11:17:43.000000000 -0700
+++ pytorch-2.4.0/tools/amd_build/build_amd.py	2024-08-10 23:44:35.353980751 -0700
@@ -144,7 +144,7 @@ ignores = [os.path.join(proj_dir, ignore
 # Check if the compiler is hip-clang.
 def is_hip_clang() -> bool:
     try:
-        hip_path = os.getenv("HIP_PATH", "/opt/rocm/hip")
+        hip_path = os.getenv("HIP_PATH", "/opt/rocm-@ROCM_VERSION@/hip")
         with open(hip_path + "/lib/.hipInfo") as f:
             return "HIP_COMPILER=clang" in f.read()
     except OSError:
diff '--color=auto' -urp pytorch-2.4.0.orig/tools/testing/test_selections.py pytorch-2.4.0/tools/testing/test_selections.py
--- pytorch-2.4.0.orig/tools/testing/test_selections.py	2024-07-09 11:17:43.000000000 -0700
+++ pytorch-2.4.0/tools/testing/test_selections.py	2024-08-10 23:44:29.190081457 -0700
@@ -18,7 +18,7 @@ USE_3_PROCS = "sm86" in BUILD_ENVIRONMEN
 # to ensure that sharding is consistent, NUM_PROCS is the actual number of procs
 # used to run tests.  If they are not equal, the only consequence should be
 # unequal shards.
-IS_ROCM = os.path.exists("/opt/rocm")
+IS_ROCM = os.path.exists("/opt/rocm-@ROCM_VERSION@")
 NUM_PROCS = 1 if IS_MEM_LEAK_CHECK else 3 if USE_3_PROCS else 2
 NUM_PROCS_FOR_SHARDING_CALC = NUM_PROCS if not IS_ROCM or IS_MEM_LEAK_CHECK else 2
 THRESHOLD = 60 * 10  # 10 minutes
diff '--color=auto' -urp pytorch-2.4.0.orig/torch/utils/cpp_extension.py pytorch-2.4.0/torch/utils/cpp_extension.py
--- pytorch-2.4.0.orig/torch/utils/cpp_extension.py	2024-07-09 11:17:43.000000000 -0700
+++ pytorch-2.4.0/torch/utils/cpp_extension.py	2024-08-10 23:42:04.600443300 -0700
@@ -132,7 +132,7 @@ def _find_rocm_home() -> Optional[str]:
                 rocm_home = os.path.dirname(rocm_home)
         else:
             # Guess #3
-            fallback_path = '/opt/rocm'
+            fallback_path = '/opt/rocm-@ROCM_VERSION@'
             if os.path.exists(fallback_path):
                 rocm_home = fallback_path
     if rocm_home and torch.version.hip is None:
