diff -urp flang-rocm-5.7.1.orig/CMakeLists.txt flang-rocm-5.7.1/CMakeLists.txt
--- flang-rocm-5.7.1.orig/CMakeLists.txt	2023-07-01 07:37:45.000000000 -0700
+++ flang-rocm-5.7.1/CMakeLists.txt	2023-11-11 20:39:52.808662083 -0800
@@ -67,8 +67,8 @@ set(CMAKE_HOST_SYSTEM_PROCESSOR ${TARGET
 # standalone project, using LLVM as an external library:
 if( CMAKE_SOURCE_DIR STREQUAL CMAKE_CURRENT_SOURCE_DIR )
   project(Flang)
-  # Set default libdir to be "lib" for ROCm, distros will override this anyway:
-  set(CMAKE_INSTALL_LIBDIR "lib" CACHE STRING "Library install directory")
+  # Set default libdir to be "@LIBDIR@" for ROCm, distros will override this anyway:
+  set(CMAKE_INSTALL_LIBDIR "@LIBDIR@" CACHE STRING "Library install directory")
   include(GNUInstallDirs)
   # Rely on llvm-config.
   set(CONFIG_OUTPUT)
@@ -118,12 +118,18 @@ if( CMAKE_SOURCE_DIR STREQUAL CMAKE_CURR
   endif()
 
   set(LLVM_TOOLS_BINARY_DIR ${TOOLS_BINARY_DIR} CACHE PATH "Path to llvm/bin")
-  set(LLVM_LIBRARY_DIR ${LIBRARY_DIR} CACHE PATH "Path to llvm/lib")
+  set(LLVM_LIBRARY_DIR ${LIBRARY_DIR} CACHE PATH "Path to llvm/@LIBDIR@")
   set(LLVM_MAIN_INCLUDE_DIR ${INCLUDE_DIR} CACHE PATH "Path to llvm/include")
   set(LLVM_BINARY_DIR ${LLVM_OBJ_ROOT} CACHE PATH "Path to LLVM build tree")
   set(LLVM_MAIN_SRC_DIR ${MAIN_SRC_DIR} CACHE PATH "Path to LLVM source tree")
 
-  set(LLVM_CMAKE_PATH "${LLVM_BINARY_DIR}/lib/cmake/llvm"
+  if(USE_AAOC)
+    set(_LLVM_CMAKE_PATH "${LLVM_BINARY_DIR}/lib/cmake/llvm")
+  else()
+    set(_LLVM_CMAKE_PATH "${LLVM_BINARY_DIR}/@LIBDIR@/cmake/llvm")
+  endif()
+
+  set(LLVM_CMAKE_PATH "${_LLVM_CMAKE_PATH}"
      CACHE PATH "Path to LLVM cmake modules")
   set(LLVMCONFIG_FILE "${LLVM_CMAKE_PATH}/LLVMConfig.cmake")
   if(EXISTS ${LLVMCONFIG_FILE})
@@ -143,7 +149,7 @@ if( CMAKE_SOURCE_DIR STREQUAL CMAKE_CURR
 
   # They are used as destination of target generators.
   set(LLVM_RUNTIME_OUTPUT_INTDIR ${CMAKE_BINARY_DIR}/${CMAKE_CFG_INTDIR}/bin)
-  set(LLVM_LIBRARY_OUTPUT_INTDIR ${CMAKE_BINARY_DIR}/${CMAKE_CFG_INTDIR}/lib)
+  set(LLVM_LIBRARY_OUTPUT_INTDIR ${CMAKE_BINARY_DIR}/${CMAKE_CFG_INTDIR}/@LIBDIR@)
 
   option(LLVM_INSTALL_TOOLCHAIN_ONLY
     "Only include toolchain files in the 'install' target." OFF)
@@ -167,8 +173,8 @@ if( CMAKE_SOURCE_DIR STREQUAL CMAKE_CURR
   link_directories("${LLVM_LIBRARY_DIR}")
 
   set( CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin )
-  set( CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/lib )
-  set( CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/lib )
+  set( CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/@LIBDIR@ )
+  set( CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/@LIBDIR@ )
   if(LLVM_INCLUDE_TESTS)
     set(Python_ADDITIONAL_VERSIONS 2.7)
     include(FindPythonInterp)
@@ -406,8 +412,8 @@ option(FLANG_INCLUDE_TESTS
 get_property(FLANG_TABLEGEN_TARGETS GLOBAL PROPERTY FLANG_TABLEGEN_TARGETS)
 list(APPEND LLVM_COMMON_DEPENDS ${FLANG_TABLEGEN_TARGETS})
 
-set(FLANG_LIB_DIR ${CMAKE_CURRENT_BINARY_DIR}/lib)
-set(FLANG_RTE_LIB_DIR ${CMAKE_CURRENT_BINARY_DIR}/lib)
+set(FLANG_LIB_DIR ${CMAKE_CURRENT_BINARY_DIR}/@LIBDIR@)
+set(FLANG_RTE_LIB_DIR ${CMAKE_CURRENT_BINARY_DIR}/@LIBDIR@)
 add_definitions( -DPGFLANG )
 
 if (LLVM_INSTALL_RUNTIME)
diff -urp flang-rocm-5.7.1.orig/flang-legacy/CMakeLists.txt flang-rocm-5.7.1/flang-legacy/CMakeLists.txt
--- flang-rocm-5.7.1.orig/flang-legacy/CMakeLists.txt	2023-07-01 07:37:45.000000000 -0700
+++ flang-rocm-5.7.1/flang-legacy/CMakeLists.txt	2023-11-11 20:39:31.928662323 -0800
@@ -1,4 +1,4 @@
-cmake_minimum_required(VERSION 3.13.4)
+Ycmake_minimum_required(VERSION 3.13.4)
 
 # If we are not building as a part of LLVM, which is usual for flang-legacy,
 # build flang-legacy as a standalone project, using LLVM as an external library:
@@ -23,185 +23,191 @@ target_include_directories(flang-legacy
     ${LLVM_DIR}/include
 )
 
+if(USE_AAOC)
+  set(_LLVM_LIBDIR "lib")
+else()
+  set(_LLVM_LIBDIR "@LIBDIR@")
+endif()
+
 target_link_libraries(flang-legacy
   PRIVATE 
-      ${LLVM_DIR}/lib/libLLVMAggressiveInstCombine.a
-      ${LLVM_DIR}/lib/libLLVMAMDGPUAsmParser.a
-      ${LLVM_DIR}/lib/libLLVMAMDGPUCodeGen.a
-      ${LLVM_DIR}/lib/libLLVMAMDGPUDesc.a
-      ${LLVM_DIR}/lib/libLLVMAMDGPUDisassembler.a
-      ${LLVM_DIR}/lib/libLLVMAMDGPUInfo.a
-      ${LLVM_DIR}/lib/libLLVMAMDGPUTargetMCA.a
-      ${LLVM_DIR}/lib/libLLVMAMDGPUUtils.a
-      ${LLVM_DIR}/lib/libLLVMAnalysis.a
-      ${LLVM_DIR}/lib/libLLVMAsmParser.a
-      ${LLVM_DIR}/lib/libLLVMAsmPrinter.a
-      ${LLVM_DIR}/lib/libLLVMBinaryFormat.a
-      ${LLVM_DIR}/lib/libLLVMBitReader.a
-      ${LLVM_DIR}/lib/libLLVMBitstreamReader.a
-      ${LLVM_DIR}/lib/libLLVMBitWriter.a
-      ${LLVM_DIR}/lib/libLLVMCFGuard.a
-      ${LLVM_DIR}/lib/libLLVMCFIVerify.a
-      ${LLVM_DIR}/lib/libLLVMCodeGen.a
-      ${LLVM_DIR}/lib/libLLVMCore.a
-      ${LLVM_DIR}/lib/libLLVMCoroutines.a
-      ${LLVM_DIR}/lib/libLLVMCoverage.a
-      ${LLVM_DIR}/lib/libLLVMDebugInfoCodeView.a
-      ${LLVM_DIR}/lib/libLLVMDebuginfod.a
-      ${LLVM_DIR}/lib/libLLVMDebugInfoDWARF.a
-      ${LLVM_DIR}/lib/libLLVMDebugInfoGSYM.a
-      ${LLVM_DIR}/lib/libLLVMDebugInfoMSF.a
-      ${LLVM_DIR}/lib/libLLVMDebugInfoPDB.a
-      ${LLVM_DIR}/lib/libLLVMDemangle.a
-      ${LLVM_DIR}/lib/libLLVMDiff.a
-      ${LLVM_DIR}/lib/libLLVMDlltoolDriver.a
-      ${LLVM_DIR}/lib/libLLVMDWARFLinker.a
-      ${LLVM_DIR}/lib/libLLVMDWP.a
-      ${LLVM_DIR}/lib/libLLVMExecutionEngine.a
-      ${LLVM_DIR}/lib/libLLVMExegesis.a
-      ${LLVM_DIR}/lib/libLLVMExegesisX86.a
-      ${LLVM_DIR}/lib/libLLVMExtensions.a
-      ${LLVM_DIR}/lib/libLLVMFileCheck.a
-      ${LLVM_DIR}/lib/libLLVMFrontendOpenACC.a
-      ${LLVM_DIR}/lib/libLLVMFrontendOpenMP.a
-      ${LLVM_DIR}/lib/libLLVMFuzzerCLI.a
-      ${LLVM_DIR}/lib/libLLVMFuzzMutate.a
-      ${LLVM_DIR}/lib/libLLVMGlobalISel.a
-      ${LLVM_DIR}/lib/libLLVMInstCombine.a
-      ${LLVM_DIR}/lib/libLLVMInstrumentation.a
-      ${LLVM_DIR}/lib/libLLVMInterfaceStub.a
-      ${LLVM_DIR}/lib/libLLVMInterpreter.a
-      ${LLVM_DIR}/lib/libLLVMipo.a
-      ${LLVM_DIR}/lib/libLLVMIRReader.a
-      ${LLVM_DIR}/lib/libLLVMJITLink.a
-      ${LLVM_DIR}/lib/libLLVMLibDriver.a
-      ${LLVM_DIR}/lib/libLLVMLineEditor.a
-      ${LLVM_DIR}/lib/libLLVMLinker.a
-      ${LLVM_DIR}/lib/libLLVMLTO.a
-      ${LLVM_DIR}/lib/libLLVMMC.a
-      ${LLVM_DIR}/lib/libLLVMMCA.a
-      ${LLVM_DIR}/lib/libLLVMMCDisassembler.a
-      ${LLVM_DIR}/lib/libLLVMMCJIT.a
-      ${LLVM_DIR}/lib/libLLVMMCParser.a
-      ${LLVM_DIR}/lib/libLLVMMIRParser.a
-      ${LLVM_DIR}/lib/libLLVMObjCARCOpts.a
-      ${LLVM_DIR}/lib/libLLVMObjCopy.a
-      ${LLVM_DIR}/lib/libLLVMObject.a
-      ${LLVM_DIR}/lib/libLLVMObjectYAML.a
-      ${LLVM_DIR}/lib/libLLVMOffloadArch.a
-      ${LLVM_DIR}/lib/libLLVMOption.a
-      ${LLVM_DIR}/lib/libLLVMOrcJIT.a
-      ${LLVM_DIR}/lib/libLLVMOrcShared.a
-      ${LLVM_DIR}/lib/libLLVMOrcTargetProcess.a
-      ${LLVM_DIR}/lib/libLLVMPasses.a
-      ${LLVM_DIR}/lib/libLLVMProfileData.a
-      ${LLVM_DIR}/lib/libLLVMRemarks.a
-      ${LLVM_DIR}/lib/libLLVMRuntimeDyld.a
-      ${LLVM_DIR}/lib/libLLVMScalarOpts.a
-      ${LLVM_DIR}/lib/libLLVMSelectionDAG.a
-      ${LLVM_DIR}/lib/libLLVMSupport.a
-      ${LLVM_DIR}/lib/libLLVMSymbolize.a
-      ${LLVM_DIR}/lib/libLLVMTableGen.a
-      ${LLVM_DIR}/lib/libLLVMTableGenGlobalISel.a
-      ${LLVM_DIR}/lib/libLLVMTarget.a
-      ${LLVM_DIR}/lib/libLLVMTextAPI.a
-      ${LLVM_DIR}/lib/libLLVMTransformUtils.a
-      ${LLVM_DIR}/lib/libLLVMVectorize.a
-      ${LLVM_DIR}/lib/libLLVMWindowsDriver.a
-      ${LLVM_DIR}/lib/libLLVMWindowsManifest.a
-      ${LLVM_DIR}/lib/libLLVMX86AsmParser.a
-      ${LLVM_DIR}/lib/libLLVMX86CodeGen.a
-      ${LLVM_DIR}/lib/libLLVMX86Desc.a
-      ${LLVM_DIR}/lib/libLLVMX86Disassembler.a
-      ${LLVM_DIR}/lib/libLLVMX86Info.a
-      ${LLVM_DIR}/lib/libLLVMX86TargetMCA.a
-      ${LLVM_DIR}/lib/libLLVMXRay.a
-      ${LLVM_DIR}/lib/libclangAnalysis.a
-      ${LLVM_DIR}/lib/libclangAnalysisFlowSensitive.a
-      ${LLVM_DIR}/lib/libclangAnalysisFlowSensitiveModels.a
-      ${LLVM_DIR}/lib/libclangAPINotes.a
-      ${LLVM_DIR}/lib/libclangApplyReplacements.a
-      ${LLVM_DIR}/lib/libclangARCMigrate.a
-      ${LLVM_DIR}/lib/libclangAST.a
-      ${LLVM_DIR}/lib/libclangASTMatchers.a
-      ${LLVM_DIR}/lib/libclangBasic.a
-      ${LLVM_DIR}/lib/libclangChangeNamespace.a
-      ${LLVM_DIR}/lib/libclangCodeGen.a
-      ${LLVM_DIR}/lib/libclangCrossTU.a
-      ${LLVM_DIR}/lib/libclangDaemon.a
-      ${LLVM_DIR}/lib/libclangDaemonTweaks.a
-      ${LLVM_DIR}/lib/libclangDependencyScanning.a
-      ${LLVM_DIR}/lib/libclangDirectoryWatcher.a
-      ${LLVM_DIR}/lib/libclangDoc.a
-      ${LLVM_DIR}/lib/libclangdRemoteIndex.a
-      ${LLVM_DIR}/lib/libclangDriver.a
-      ${LLVM_DIR}/lib/libclangdSupport.a
-      ${LLVM_DIR}/lib/libclangDynamicASTMatchers.a
-      ${LLVM_DIR}/lib/libclangEdit.a
-      ${LLVM_DIR}/lib/libclangExtractAPI.a
-      ${LLVM_DIR}/lib/libclangFormat.a
-      ${LLVM_DIR}/lib/libclangFrontend.a
-      ${LLVM_DIR}/lib/libclangFrontendTool.a
-      ${LLVM_DIR}/lib/libclangHandleCXX.a
-      ${LLVM_DIR}/lib/libclangHandleLLVM.a
-      ${LLVM_DIR}/lib/libclangIncludeCleaner.a
-      ${LLVM_DIR}/lib/libclangIncludeFixer.a
-      ${LLVM_DIR}/lib/libclangIncludeFixerPlugin.a
-      ${LLVM_DIR}/lib/libclangIndex.a
-      ${LLVM_DIR}/lib/libclangIndexSerialization.a
-      ${LLVM_DIR}/lib/libclangInterpreter.a
-      ${LLVM_DIR}/lib/libclangLex.a
-      ${LLVM_DIR}/lib/libclangMove.a
-      ${LLVM_DIR}/lib/libclangParse.a
-      ${LLVM_DIR}/lib/libclangPseudo.a
-      ${LLVM_DIR}/lib/libclangPseudoCLI.a
-      ${LLVM_DIR}/lib/libclangPseudoCXX.a
-      ${LLVM_DIR}/lib/libclangPseudoGrammar.a
-      ${LLVM_DIR}/lib/libclangQuery.a
-      ${LLVM_DIR}/lib/libclangReorderFields.a
-      ${LLVM_DIR}/lib/libclangRewrite.a
-      ${LLVM_DIR}/lib/libclangRewriteFrontend.a
-      ${LLVM_DIR}/lib/libclangSema.a
-      ${LLVM_DIR}/lib/libclangSerialization.a
-      ${LLVM_DIR}/lib/libclangStaticAnalyzerCheckers.a
-      ${LLVM_DIR}/lib/libclangStaticAnalyzerCore.a
-      ${LLVM_DIR}/lib/libclangStaticAnalyzerFrontend.a
-      ${LLVM_DIR}/lib/libclangSupport.a
-      ${LLVM_DIR}/lib/libclangTidy.a
-      ${LLVM_DIR}/lib/libclangTidyAbseilModule.a
-      ${LLVM_DIR}/lib/libclangTidyAlteraModule.a
-      ${LLVM_DIR}/lib/libclangTidyAndroidModule.a
-      ${LLVM_DIR}/lib/libclangTidyBoostModule.a
-      ${LLVM_DIR}/lib/libclangTidyBugproneModule.a
-      ${LLVM_DIR}/lib/libclangTidyCERTModule.a
-      ${LLVM_DIR}/lib/libclangTidyConcurrencyModule.a
-      ${LLVM_DIR}/lib/libclangTidyCppCoreGuidelinesModule.a
-      ${LLVM_DIR}/lib/libclangTidyDarwinModule.a
-      ${LLVM_DIR}/lib/libclangTidyFuchsiaModule.a
-      ${LLVM_DIR}/lib/libclangTidyGoogleModule.a
-      ${LLVM_DIR}/lib/libclangTidyHICPPModule.a
-      ${LLVM_DIR}/lib/libclangTidyLinuxKernelModule.a
-      ${LLVM_DIR}/lib/libclangTidyLLVMLibcModule.a
-      ${LLVM_DIR}/lib/libclangTidyLLVMModule.a
-      ${LLVM_DIR}/lib/libclangTidyMain.a
-      ${LLVM_DIR}/lib/libclangTidyMiscModule.a
-      ${LLVM_DIR}/lib/libclangTidyModernizeModule.a
-      ${LLVM_DIR}/lib/libclangTidyMPIModule.a
-      ${LLVM_DIR}/lib/libclangTidyObjCModule.a
-      ${LLVM_DIR}/lib/libclangTidyOpenMPModule.a
-      ${LLVM_DIR}/lib/libclangTidyPerformanceModule.a
-      ${LLVM_DIR}/lib/libclangTidyPlugin.a
-      ${LLVM_DIR}/lib/libclangTidyPortabilityModule.a
-      ${LLVM_DIR}/lib/libclangTidyReadabilityModule.a
-      ${LLVM_DIR}/lib/libclangTidyUtils.a
-      ${LLVM_DIR}/lib/libclangTidyZirconModule.a
-      ${LLVM_DIR}/lib/libclangTooling.a
-      ${LLVM_DIR}/lib/libclangToolingASTDiff.a
-      ${LLVM_DIR}/lib/libclangToolingCore.a
-      ${LLVM_DIR}/lib/libclangToolingInclusions.a
-      ${LLVM_DIR}/lib/libclangToolingRefactoring.a
-      ${LLVM_DIR}/lib/libclangToolingSyntax.a
-      ${LLVM_DIR}/lib/libclangTransformer.a
+      ${LLVM_DIR}/${_LLVM_LIBDIR}/libLLVMAggressiveInstCombine.a
+      ${LLVM_DIR}/${_LLVM_LIBDIR}/libLLVMAMDGPUAsmParser.a
+      ${LLVM_DIR}/${_LLVM_LIBDIR}/libLLVMAMDGPUCodeGen.a
+      ${LLVM_DIR}/${_LLVM_LIBDIR}/libLLVMAMDGPUDesc.a
+      ${LLVM_DIR}/${_LLVM_LIBDIR}/libLLVMAMDGPUDisassembler.a
+      ${LLVM_DIR}/${_LLVM_LIBDIR}/libLLVMAMDGPUInfo.a
+      ${LLVM_DIR}/${_LLVM_LIBDIR}/libLLVMAMDGPUTargetMCA.a
+      ${LLVM_DIR}/${_LLVM_LIBDIR}/libLLVMAMDGPUUtils.a
+      ${LLVM_DIR}/${_LLVM_LIBDIR}/libLLVMAnalysis.a
+      ${LLVM_DIR}/${_LLVM_LIBDIR}/libLLVMAsmParser.a
+      ${LLVM_DIR}/${_LLVM_LIBDIR}/libLLVMAsmPrinter.a
+      ${LLVM_DIR}/${_LLVM_LIBDIR}/libLLVMBinaryFormat.a
+      ${LLVM_DIR}/${_LLVM_LIBDIR}/libLLVMBitReader.a
+      ${LLVM_DIR}/${_LLVM_LIBDIR}/libLLVMBitstreamReader.a
+      ${LLVM_DIR}/${_LLVM_LIBDIR}/libLLVMBitWriter.a
+      ${LLVM_DIR}/${_LLVM_LIBDIR}/libLLVMCFGuard.a
+      ${LLVM_DIR}/${_LLVM_LIBDIR}/libLLVMCFIVerify.a
+      ${LLVM_DIR}/${_LLVM_LIBDIR}/libLLVMCodeGen.a
+      ${LLVM_DIR}/${_LLVM_LIBDIR}/libLLVMCore.a
+      ${LLVM_DIR}/${_LLVM_LIBDIR}/libLLVMCoroutines.a
+      ${LLVM_DIR}/${_LLVM_LIBDIR}/libLLVMCoverage.a
+      ${LLVM_DIR}/${_LLVM_LIBDIR}/libLLVMDebugInfoCodeView.a
+      ${LLVM_DIR}/${_LLVM_LIBDIR}/libLLVMDebuginfod.a
+      ${LLVM_DIR}/${_LLVM_LIBDIR}/libLLVMDebugInfoDWARF.a
+      ${LLVM_DIR}/${_LLVM_LIBDIR}/libLLVMDebugInfoGSYM.a
+      ${LLVM_DIR}/${_LLVM_LIBDIR}/libLLVMDebugInfoMSF.a
+      ${LLVM_DIR}/${_LLVM_LIBDIR}/libLLVMDebugInfoPDB.a
+      ${LLVM_DIR}/${_LLVM_LIBDIR}/libLLVMDemangle.a
+      ${LLVM_DIR}/${_LLVM_LIBDIR}/libLLVMDiff.a
+      ${LLVM_DIR}/${_LLVM_LIBDIR}/libLLVMDlltoolDriver.a
+      ${LLVM_DIR}/${_LLVM_LIBDIR}/libLLVMDWARFLinker.a
+      ${LLVM_DIR}/${_LLVM_LIBDIR}/libLLVMDWP.a
+      ${LLVM_DIR}/${_LLVM_LIBDIR}/libLLVMExecutionEngine.a
+      ${LLVM_DIR}/${_LLVM_LIBDIR}/libLLVMExegesis.a
+      ${LLVM_DIR}/${_LLVM_LIBDIR}/libLLVMExegesisX86.a
+      ${LLVM_DIR}/${_LLVM_LIBDIR}/libLLVMExtensions.a
+      ${LLVM_DIR}/${_LLVM_LIBDIR}/libLLVMFileCheck.a
+      ${LLVM_DIR}/${_LLVM_LIBDIR}/libLLVMFrontendOpenACC.a
+      ${LLVM_DIR}/${_LLVM_LIBDIR}/libLLVMFrontendOpenMP.a
+      ${LLVM_DIR}/${_LLVM_LIBDIR}/libLLVMFuzzerCLI.a
+      ${LLVM_DIR}/${_LLVM_LIBDIR}/libLLVMFuzzMutate.a
+      ${LLVM_DIR}/${_LLVM_LIBDIR}/libLLVMGlobalISel.a
+      ${LLVM_DIR}/${_LLVM_LIBDIR}/libLLVMInstCombine.a
+      ${LLVM_DIR}/${_LLVM_LIBDIR}/libLLVMInstrumentation.a
+      ${LLVM_DIR}/${_LLVM_LIBDIR}/libLLVMInterfaceStub.a
+      ${LLVM_DIR}/${_LLVM_LIBDIR}/libLLVMInterpreter.a
+      ${LLVM_DIR}/${_LLVM_LIBDIR}/libLLVMipo.a
+      ${LLVM_DIR}/${_LLVM_LIBDIR}/libLLVMIRReader.a
+      ${LLVM_DIR}/${_LLVM_LIBDIR}/libLLVMJITLink.a
+      ${LLVM_DIR}/${_LLVM_LIBDIR}/libLLVMLibDriver.a
+      ${LLVM_DIR}/${_LLVM_LIBDIR}/libLLVMLineEditor.a
+      ${LLVM_DIR}/${_LLVM_LIBDIR}/libLLVMLinker.a
+      ${LLVM_DIR}/${_LLVM_LIBDIR}/libLLVMLTO.a
+      ${LLVM_DIR}/${_LLVM_LIBDIR}/libLLVMMC.a
+      ${LLVM_DIR}/${_LLVM_LIBDIR}/libLLVMMCA.a
+      ${LLVM_DIR}/${_LLVM_LIBDIR}/libLLVMMCDisassembler.a
+      ${LLVM_DIR}/${_LLVM_LIBDIR}/libLLVMMCJIT.a
+      ${LLVM_DIR}/${_LLVM_LIBDIR}/libLLVMMCParser.a
+      ${LLVM_DIR}/${_LLVM_LIBDIR}/libLLVMMIRParser.a
+      ${LLVM_DIR}/${_LLVM_LIBDIR}/libLLVMObjCARCOpts.a
+      ${LLVM_DIR}/${_LLVM_LIBDIR}/libLLVMObjCopy.a
+      ${LLVM_DIR}/${_LLVM_LIBDIR}/libLLVMObject.a
+      ${LLVM_DIR}/${_LLVM_LIBDIR}/libLLVMObjectYAML.a
+      ${LLVM_DIR}/${_LLVM_LIBDIR}/libLLVMOffloadArch.a
+      ${LLVM_DIR}/${_LLVM_LIBDIR}/libLLVMOption.a
+      ${LLVM_DIR}/${_LLVM_LIBDIR}/libLLVMOrcJIT.a
+      ${LLVM_DIR}/${_LLVM_LIBDIR}/libLLVMOrcShared.a
+      ${LLVM_DIR}/${_LLVM_LIBDIR}/libLLVMOrcTargetProcess.a
+      ${LLVM_DIR}/${_LLVM_LIBDIR}/libLLVMPasses.a
+      ${LLVM_DIR}/${_LLVM_LIBDIR}/libLLVMProfileData.a
+      ${LLVM_DIR}/${_LLVM_LIBDIR}/libLLVMRemarks.a
+      ${LLVM_DIR}/${_LLVM_LIBDIR}/libLLVMRuntimeDyld.a
+      ${LLVM_DIR}/${_LLVM_LIBDIR}/libLLVMScalarOpts.a
+      ${LLVM_DIR}/${_LLVM_LIBDIR}/libLLVMSelectionDAG.a
+      ${LLVM_DIR}/${_LLVM_LIBDIR}/libLLVMSupport.a
+      ${LLVM_DIR}/${_LLVM_LIBDIR}/libLLVMSymbolize.a
+      ${LLVM_DIR}/${_LLVM_LIBDIR}/libLLVMTableGen.a
+      ${LLVM_DIR}/${_LLVM_LIBDIR}/libLLVMTableGenGlobalISel.a
+      ${LLVM_DIR}/${_LLVM_LIBDIR}/libLLVMTarget.a
+      ${LLVM_DIR}/${_LLVM_LIBDIR}/libLLVMTextAPI.a
+      ${LLVM_DIR}/${_LLVM_LIBDIR}/libLLVMTransformUtils.a
+      ${LLVM_DIR}/${_LLVM_LIBDIR}/libLLVMVectorize.a
+      ${LLVM_DIR}/${_LLVM_LIBDIR}/libLLVMWindowsDriver.a
+      ${LLVM_DIR}/${_LLVM_LIBDIR}/libLLVMWindowsManifest.a
+      ${LLVM_DIR}/${_LLVM_LIBDIR}/libLLVMX86AsmParser.a
+      ${LLVM_DIR}/${_LLVM_LIBDIR}/libLLVMX86CodeGen.a
+      ${LLVM_DIR}/${_LLVM_LIBDIR}/libLLVMX86Desc.a
+      ${LLVM_DIR}/${_LLVM_LIBDIR}/libLLVMX86Disassembler.a
+      ${LLVM_DIR}/${_LLVM_LIBDIR}/libLLVMX86Info.a
+      ${LLVM_DIR}/${_LLVM_LIBDIR}/libLLVMX86TargetMCA.a
+      ${LLVM_DIR}/${_LLVM_LIBDIR}/libLLVMXRay.a
+      ${LLVM_DIR}/${_LLVM_LIBDIR}/libclangAnalysis.a
+      ${LLVM_DIR}/${_LLVM_LIBDIR}/libclangAnalysisFlowSensitive.a
+      ${LLVM_DIR}/${_LLVM_LIBDIR}/libclangAnalysisFlowSensitiveModels.a
+      ${LLVM_DIR}/${_LLVM_LIBDIR}/libclangAPINotes.a
+      ${LLVM_DIR}/${_LLVM_LIBDIR}/libclangApplyReplacements.a
+      ${LLVM_DIR}/${_LLVM_LIBDIR}/libclangARCMigrate.a
+      ${LLVM_DIR}/${_LLVM_LIBDIR}/libclangAST.a
+      ${LLVM_DIR}/${_LLVM_LIBDIR}/libclangASTMatchers.a
+      ${LLVM_DIR}/${_LLVM_LIBDIR}/libclangBasic.a
+      ${LLVM_DIR}/${_LLVM_LIBDIR}/libclangChangeNamespace.a
+      ${LLVM_DIR}/${_LLVM_LIBDIR}/libclangCodeGen.a
+      ${LLVM_DIR}/${_LLVM_LIBDIR}/libclangCrossTU.a
+      ${LLVM_DIR}/${_LLVM_LIBDIR}/libclangDaemon.a
+      ${LLVM_DIR}/${_LLVM_LIBDIR}/libclangDaemonTweaks.a
+      ${LLVM_DIR}/${_LLVM_LIBDIR}/libclangDependencyScanning.a
+      ${LLVM_DIR}/${_LLVM_LIBDIR}/libclangDirectoryWatcher.a
+      ${LLVM_DIR}/${_LLVM_LIBDIR}/libclangDoc.a
+      ${LLVM_DIR}/${_LLVM_LIBDIR}/libclangdRemoteIndex.a
+      ${LLVM_DIR}/${_LLVM_LIBDIR}/libclangDriver.a
+      ${LLVM_DIR}/${_LLVM_LIBDIR}/libclangdSupport.a
+      ${LLVM_DIR}/${_LLVM_LIBDIR}/libclangDynamicASTMatchers.a
+      ${LLVM_DIR}/${_LLVM_LIBDIR}/libclangEdit.a
+      ${LLVM_DIR}/${_LLVM_LIBDIR}/libclangExtractAPI.a
+      ${LLVM_DIR}/${_LLVM_LIBDIR}/libclangFormat.a
+      ${LLVM_DIR}/${_LLVM_LIBDIR}/libclangFrontend.a
+      ${LLVM_DIR}/${_LLVM_LIBDIR}/libclangFrontendTool.a
+      ${LLVM_DIR}/${_LLVM_LIBDIR}/libclangHandleCXX.a
+      ${LLVM_DIR}/${_LLVM_LIBDIR}/libclangHandleLLVM.a
+      ${LLVM_DIR}/${_LLVM_LIBDIR}/libclangIncludeCleaner.a
+      ${LLVM_DIR}/${_LLVM_LIBDIR}/libclangIncludeFixer.a
+      ${LLVM_DIR}/${_LLVM_LIBDIR}/libclangIncludeFixerPlugin.a
+      ${LLVM_DIR}/${_LLVM_LIBDIR}/libclangIndex.a
+      ${LLVM_DIR}/${_LLVM_LIBDIR}/libclangIndexSerialization.a
+      ${LLVM_DIR}/${_LLVM_LIBDIR}/libclangInterpreter.a
+      ${LLVM_DIR}/${_LLVM_LIBDIR}/libclangLex.a
+      ${LLVM_DIR}/${_LLVM_LIBDIR}/libclangMove.a
+      ${LLVM_DIR}/${_LLVM_LIBDIR}/libclangParse.a
+      ${LLVM_DIR}/${_LLVM_LIBDIR}/libclangPseudo.a
+      ${LLVM_DIR}/${_LLVM_LIBDIR}/libclangPseudoCLI.a
+      ${LLVM_DIR}/${_LLVM_LIBDIR}/libclangPseudoCXX.a
+      ${LLVM_DIR}/${_LLVM_LIBDIR}/libclangPseudoGrammar.a
+      ${LLVM_DIR}/${_LLVM_LIBDIR}/libclangQuery.a
+      ${LLVM_DIR}/${_LLVM_LIBDIR}/libclangReorderFields.a
+      ${LLVM_DIR}/${_LLVM_LIBDIR}/libclangRewrite.a
+      ${LLVM_DIR}/${_LLVM_LIBDIR}/libclangRewriteFrontend.a
+      ${LLVM_DIR}/${_LLVM_LIBDIR}/libclangSema.a
+      ${LLVM_DIR}/${_LLVM_LIBDIR}/libclangSerialization.a
+      ${LLVM_DIR}/${_LLVM_LIBDIR}/libclangStaticAnalyzerCheckers.a
+      ${LLVM_DIR}/${_LLVM_LIBDIR}/libclangStaticAnalyzerCore.a
+      ${LLVM_DIR}/${_LLVM_LIBDIR}/libclangStaticAnalyzerFrontend.a
+      ${LLVM_DIR}/${_LLVM_LIBDIR}/libclangSupport.a
+      ${LLVM_DIR}/${_LLVM_LIBDIR}/libclangTidy.a
+      ${LLVM_DIR}/${_LLVM_LIBDIR}/libclangTidyAbseilModule.a
+      ${LLVM_DIR}/${_LLVM_LIBDIR}/libclangTidyAlteraModule.a
+      ${LLVM_DIR}/${_LLVM_LIBDIR}/libclangTidyAndroidModule.a
+      ${LLVM_DIR}/${_LLVM_LIBDIR}/libclangTidyBoostModule.a
+      ${LLVM_DIR}/${_LLVM_LIBDIR}/libclangTidyBugproneModule.a
+      ${LLVM_DIR}/${_LLVM_LIBDIR}/libclangTidyCERTModule.a
+      ${LLVM_DIR}/${_LLVM_LIBDIR}/libclangTidyConcurrencyModule.a
+      ${LLVM_DIR}/${_LLVM_LIBDIR}/libclangTidyCppCoreGuidelinesModule.a
+      ${LLVM_DIR}/${_LLVM_LIBDIR}/libclangTidyDarwinModule.a
+      ${LLVM_DIR}/${_LLVM_LIBDIR}/libclangTidyFuchsiaModule.a
+      ${LLVM_DIR}/${_LLVM_LIBDIR}/libclangTidyGoogleModule.a
+      ${LLVM_DIR}/${_LLVM_LIBDIR}/libclangTidyHICPPModule.a
+      ${LLVM_DIR}/${_LLVM_LIBDIR}/libclangTidyLinuxKernelModule.a
+      ${LLVM_DIR}/${_LLVM_LIBDIR}/libclangTidyLLVMLibcModule.a
+      ${LLVM_DIR}/${_LLVM_LIBDIR}/libclangTidyLLVMModule.a
+      ${LLVM_DIR}/${_LLVM_LIBDIR}/libclangTidyMain.a
+      ${LLVM_DIR}/${_LLVM_LIBDIR}/libclangTidyMiscModule.a
+      ${LLVM_DIR}/${_LLVM_LIBDIR}/libclangTidyModernizeModule.a
+      ${LLVM_DIR}/${_LLVM_LIBDIR}/libclangTidyMPIModule.a
+      ${LLVM_DIR}/${_LLVM_LIBDIR}/libclangTidyObjCModule.a
+      ${LLVM_DIR}/${_LLVM_LIBDIR}/libclangTidyOpenMPModule.a
+      ${LLVM_DIR}/${_LLVM_LIBDIR}/libclangTidyPerformanceModule.a
+      ${LLVM_DIR}/${_LLVM_LIBDIR}/libclangTidyPlugin.a
+      ${LLVM_DIR}/${_LLVM_LIBDIR}/libclangTidyPortabilityModule.a
+      ${LLVM_DIR}/${_LLVM_LIBDIR}/libclangTidyReadabilityModule.a
+      ${LLVM_DIR}/${_LLVM_LIBDIR}/libclangTidyUtils.a
+      ${LLVM_DIR}/${_LLVM_LIBDIR}/libclangTidyZirconModule.a
+      ${LLVM_DIR}/${_LLVM_LIBDIR}/libclangTooling.a
+      ${LLVM_DIR}/${_LLVM_LIBDIR}/libclangToolingASTDiff.a
+      ${LLVM_DIR}/${_LLVM_LIBDIR}/libclangToolingCore.a
+      ${LLVM_DIR}/${_LLVM_LIBDIR}/libclangToolingInclusions.a
+      ${LLVM_DIR}/${_LLVM_LIBDIR}/libclangToolingRefactoring.a
+      ${LLVM_DIR}/${_LLVM_LIBDIR}/libclangToolingSyntax.a
+      ${LLVM_DIR}/${_LLVM_LIBDIR}/libclangTransformer.a
   pthread
   dl
   tinfo
diff -urp flang-rocm-5.7.1.orig/runtime/flang/CMakeLists.txt flang-rocm-5.7.1/runtime/flang/CMakeLists.txt
--- flang-rocm-5.7.1.orig/runtime/flang/CMakeLists.txt	2023-11-11 20:39:14.556662523 -0800
+++ flang-rocm-5.7.1/runtime/flang/CMakeLists.txt	2023-11-11 20:39:31.928662323 -0800
@@ -563,7 +563,7 @@ set_property(TARGET flang_shared PROPERT
 #
 add_dependencies(flang_shared flang_static)
 
-target_link_libraries(flang_shared ${CMAKE_BINARY_DIR}/${CMAKE_CFG_INTDIR}/lib/libflangrti.so)
+target_link_libraries(flang_shared ${CMAKE_BINARY_DIR}/${CMAKE_CFG_INTDIR}/@LIBDIR@/libflangrti.so)
 # Resolve symbols against libm and librt
 target_link_libraries(flang_shared m rt)
 
diff -urp flang-rocm-5.7.1.orig/runtime/flangrti/CMakeLists.txt flang-rocm-5.7.1/runtime/flangrti/CMakeLists.txt
--- flang-rocm-5.7.1.orig/runtime/flangrti/CMakeLists.txt	2023-07-01 07:37:45.000000000 -0700
+++ flang-rocm-5.7.1/runtime/flangrti/CMakeLists.txt	2023-11-11 20:39:31.928662323 -0800
@@ -97,7 +97,7 @@ if (NOT DEFINED LIBOMP_EXPORT_DIR)
     FLANG_LIBOMP
     libomp.so
     HINTS
-    ${CMAKE_BINARY_DIR}/lib
+    ${CMAKE_BINARY_DIR}/@LIBDIR@
     ${OPENMP_BUILD_DIR}
     NO_DEFAULT_PATH)
     message (STATUS "FLANGRTI ${FLANG_LIBOMP}")
@@ -107,7 +107,7 @@ endif()
 find_library( 
   LIBPGMATH
   libpgmath.so
-  HINTS ${CMAKE_BINARY_DIR}/lib)
+  HINTS ${CMAKE_BINARY_DIR}/@LIBDIR@)
 target_link_libraries(flangrti_shared ${LIBPGMATH} -Wl,-rpath,\$ORIGIN)
 target_link_libraries(flangrti_shared ${LIBQUADMATH_LOC})
 
diff -urp flang-rocm-5.7.1.orig/runtime/libpgmath/CMakeLists.txt flang-rocm-5.7.1/runtime/libpgmath/CMakeLists.txt
--- flang-rocm-5.7.1.orig/runtime/libpgmath/CMakeLists.txt	2023-07-01 07:37:45.000000000 -0700
+++ flang-rocm-5.7.1/runtime/libpgmath/CMakeLists.txt	2023-11-11 20:40:40.408661536 -0800
@@ -20,8 +20,8 @@ if(POLICY CMP0022)
   cmake_policy(SET CMP0022 NEW) # Required when interacting with LLVM and Clang
 endif()
 
-# Set default libdir to be "lib" for ROCm, distros will override this anyway:
-set(CMAKE_INSTALL_LIBDIR "lib" CACHE STRING "Library install directory")
+# Set default libdir to be "@LIBDIR@" for ROCm, distros will override this anyway:
+set(CMAKE_INSTALL_LIBDIR "@LIBDIR@" CACHE STRING "Library install directory")
 include(GNUInstallDirs)
 
 # Add path for custom modules
@@ -113,7 +113,7 @@ set(LIBPGMATH_BASE_DIR ${CMAKE_CURRENT_S
 set(LIBPGMATH_SRC_DIR ${LIBPGMATH_BASE_DIR}/lib)
 set(LIBPGMATH_TOOLS_DIR ${LIBPGMATH_BASE_DIR}/tools)
 set(LIBPGMATH_BINARY_DIR ${CMAKE_CURRENT_BINARY_DIR})
-set(LIBPGMATH_RUNTIME_PATH ${CMAKE_BINARY_DIR}/lib)
+set(LIBPGMATH_RUNTIME_PATH ${CMAKE_BINARY_DIR}/@LIBDIR@)
 set(LIBPGMATH_LIBRARY_NAME pgmath)
 set(LIBPGMATH_RTL ${CMAKE_SHARED_LIBRARY_PREFIX}${LIBPGMATH_LIBRARY_NAME}${CMAKE_SHARED_LIBRARY_SUFFIX})
 set(CMAKE_POSITION_INDEPENDENT_CODE ON)
