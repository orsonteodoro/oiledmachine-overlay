#!/sbin/openrc-run
# We run the server to below root but a bit privileged (write access)
# but not root.  Must create a user called gdevelop that to not be used
# by normal users but only the server.

PROJECT_ROOT="/usr/$(get_libdir)/node/${PN}/${SLOT_MAJOR}"
SERVER_PID_FILE="/var/run/server.pid"
LOGFILE="/var/log/gdevelop-server.log"
ENABLE_LOGGING=${ENABLE_LOGGING:="1"} # can set this in /etc/conf.d/gdevelop-server

logmsg() {
	local msg="${1}"
	if [[ "${ENABLE_LOGGING}" == "1" ]] ; then
		echo -e "${msg}" >> "${LOGFILE}"
	fi
}

check_prereqs() {
	if ! which netstat ; then
		logmsg "You need netstat in order to keep loading sequence in sync."
		exit 1
	fi
	if ! which npm ; then
		local msg="You need npm to start the server."
		logmsg "${msg}"
		exit 1
	fi
	if ! which node ; then
		local msg="You need node/nodejs to start the server."
		logmsg "${msg}"
		exit 1
	fi
}

start_server() {
	rm -rf "${SERVER_PID_FILE}" 2>/dev/null 1>/dev/null

	cd "${PROJECT_ROOT}/newIDE/app"
	trap 'kill_server' EXIT
	npm start 2>/dev/null 1>/dev/null &
}

kill_server() {
	logmsg "Killing server"
	if [[ -f "${SERVER_PID_FILE}" ]] ; then
		kill -9 $(cat "${SERVER_PID_FILE}") 1>/dev/null 2>/dev/null
	fi
	rm -rf "${SERVER_PID_FILE}" 2>/dev/null 1>/dev/null
}

start()
{
	ebegin "Starting GDevelop server"
	start_server
}

stop() {
	ebegin "Stopping GDevelop server"
	kill_server
}
