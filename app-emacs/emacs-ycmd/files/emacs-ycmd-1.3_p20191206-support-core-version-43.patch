diff -urp emacs-ycmd-bc81b992f79100c98f56b7b83caf64cb8ea60477.orig/ycmd.el emacs-ycmd-bc81b992f79100c98f56b7b83caf64cb8ea60477/ycmd.el
--- emacs-ycmd-bc81b992f79100c98f56b7b83caf64cb8ea60477.orig/ycmd.el	2019-12-06 04:23:09.000000000 -0800
+++ emacs-ycmd-bc81b992f79100c98f56b7b83caf64cb8ea60477/ycmd.el	2020-05-21 02:28:39.182694710 -0700
@@ -135,6 +135,22 @@
 Whitelisted configs are loaded without confirmation."
   :type '(repeat string))
 
+(defcustom ycmd-clangd-args nil
+  "List of arguments to pass to clangd"
+  :type '(repeat string))
+
+(defcustom ycmd-filepath-blacklist nil
+  "List of glob expressions containing extensions to blacklist."
+  :type '(repeat string))
+
+(defcustom ycmd-language-server nil
+  "List of json objects containing name, command line, filetype extension.  See README.md in the ycmd repo."
+  :type '(repeat string))
+
+(defcustom ycmd-java-jdtls-extension-path nil
+  "List of json objects containing name, command line, filetype extension.  See README.md in the ycmd repo."
+  :type '(repeat string))
+
 (defcustom ycmd-extra-conf-handler 'ask
   "What to do when an un-whitelisted extra config is encountered.
 
@@ -176,6 +192,10 @@ Example value:
   "The ycmd server port.  If nil, use random port."
   :type '(number))
 
+(defcustom ycmd-core-version 43
+  "The ycmd server port.  If nil, use random port."
+  :type '(number))
+
 (defcustom ycmd-file-parse-result-hook nil
   "Functions to run with file-parse results.
 
@@ -344,6 +364,10 @@ engine."
   "Function to get keywords for current mode."
   :type 'symbol)
 
+(defcustom ycmd-clangd-binary-path nil
+  "Clangd binary path."
+  :type 'string)
+
 (defcustom ycmd-gocode-binary-path nil
   "Gocode binary path."
   :type 'string)
@@ -352,20 +376,48 @@ engine."
   "Godef binary path."
   :type 'string)
 
-(defcustom ycmd-rust-src-path nil
-  "Rust source path."
+(defcustom ycmd-gopls-binary-path nil
+  "Gopls binary path."
   :type 'string)
 
-(defcustom ycmd-swift-src-path nil
-  "Swift source path."
+(defcustom ycmd-java-jdtls-workspace-root-path nil
+  "Java workspace root path."
+  :type 'string)
+
+(defcustom ycmd-python-binary-path nil
+  "Python binary path."
   :type 'string)
 
 (defcustom ycmd-racerd-binary-path nil
   "Racerd binary path."
   :type 'string)
 
-(defcustom ycmd-python-binary-path nil
-  "Python binary path."
+(defcustom ycmd-rust-src-path nil
+  "Rust source path."
+  :type 'string)
+
+(defcustom ycmd-rls-binary-path nil
+  "Rls binary path."
+  :type 'string)
+
+(defcustom ycmd-roslyn-binary-path nil
+  "OmniSharp Roslyn binary path."
+  :type 'string)
+
+(defcustom ycmd-rust-src-path nil
+  "Rust source path."
+  :type 'string)
+
+(defcustom ycmd-rustc-binary-path nil
+  "Rustc binary path."
+  :type 'string)
+
+(defcustom ycmd-swift-src-path nil
+  "Swift source path."
+  :type 'string)
+
+(defcustom ycmd-tsserver-binary-path nil
+  "Tsserver binary path."
   :type 'string)
 
 (defcustom ycmd-global-modes t
@@ -2107,9 +2159,12 @@ file."
       (filetype_specific_completion_to_disable (gitcommit . 1))
       (collect_identifiers_from_comments_and_strings . 0)
       (max_num_identifier_candidates . ,ycmd-max-num-identifier-candidates)
+      (max_num_candidates . 50)
       (extra_conf_globlist . ,extra-conf-whitelist)
       (global_ycm_extra_conf . ,global-config)
       (confirm_extra_conf . ,confirm-extra-conf)
+      (if (>= ycmd-core-version 39) (filepath_blacklist . ,filepath-blacklist) '())
+      (if (>= ycmd-core-version 42) (language_server . ,language-server) '())
       (max_diagnostics_to_display . 30)
       (auto_start_csharp_server . 1)
       (auto_stop_csharp_server . 1)
@@ -2117,11 +2172,23 @@ file."
       (csharp_server_port . 0)
       (hmac_secret . ,hmac-secret)
       (server_keep_logfiles . 1)
-      (gocode_binary_path . ,gocode-binary-path)
-      (godef_binary_path . ,godef-binary-path)
-      (rust_src_path . ,rust-src-path)
-      (swift_src_path . ,swift-src-path)
-      (racerd_binary_path . ,racerd-binary-path)
+      (if (= (length swift_src_path) 0) (swift_src_path . ,swift-src-path) '())
+      (if (>= ycmd-core-version 31) (java_jdtls_use_clean_workspace . 1) '())
+      (if (>= ycmd-core-version 42) (java_jdtls_workspace_root_path . ,java-jdtls-workspace-root-path '())
+      (if (>= ycmd-core-version 42) (java_jdtls_extension_path . ,java-jdtls-extension-path) '())
+      (if (> ycmd-core-version 41) (clangd_binary_path . ,clangd-binary-path) '())
+      (if (> ycmd-core-version 41) (clangd_args . ,clangd-args) '())
+      (if (>= ycmd-core-version 42) (clangd_uses_ycmd_caching . 1) '())
+      (if (>= ycmd-core-version 42) (disable_signature_help . 0) '())
+      (if (< ycmd-core-version 42) (gocode_binary_path . ,gocode-binary-path) '())
+      (if (< ycmd-core-version 42) (godef_binary_path . ,godef-binary-path) '())
+      (if (>= ycmd-core-version 42) (gopls_binary_path . ,gopls-binary-path) '())
+      (if (>= ycmd-core-version 42) (rls_binary_path . ,rls-binary-path) '())
+      (if (< ycmd-core-version 42) (rust_src_path . ,rust-src-path) '())
+      (if (>= ycmd-core-version 42) (rustc_binary_path . ,rustc-binary-path) '())
+      (if (< ycmd-core-version 42) (racerd_binary_path . ,racerd-binary-path) '())
+      (if (>= ycmd-core-version 42) (roslyn_binary_path . ,roslyn-binary-path) '())
+      (if (>= ycmd-core-version 42) (tsserver_binary_path . ,tsserver-binary-path) '())
       (python_binary_path . ,python-binary-path))))
 
 (defun ycmd--create-options-file (hmac-secret)
Only in emacs-ycmd-bc81b992f79100c98f56b7b83caf64cb8ea60477: ycmd.el.orig
Only in emacs-ycmd-bc81b992f79100c98f56b7b83caf64cb8ea60477: ycmd.el.rej
