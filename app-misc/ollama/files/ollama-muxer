#!/bin/bash
# Copyright 2024 Orson Teodoro <orsonteodoro@hotmail.com>
# License:  MIT

# Wrapper script for ollama

ARGS=( ${@} )
BACKEND=${BACKEND:-"@BACKEND@"}

declare -A backends=(
	"cpu"
	"cpu_avx2"
	"cpu_avx"
	"rocm"
	"cuda_v12"
	"cuda_v11"
)

declare -A llm_use_cases=(
	["alfred"]="chat comprehensive-response i-dont-know"
	["all-minilm"]="embedding"
	["aya"]="multilingual arabic chinese czech dutch english french german greek hebrew hindi indonesian italian japanese korean persian polish portuguese romanian russian spanish turkish ukrainian vietnamese"
	["bakllava"]="image-deconstruction image-describe image-to-text image-summary"
	["bespoke-minicheck"]="fact-checking"
	["bge-large"]="embedding vector-database"
	["bge-m3"]="embedding multilingual low-memory-footprint"
	["codebooga"]="coding python"
	["codegeex4"]="coding code-generation code-completion"
	["codegemma"]="coding autocomplete coding-assistant fim fill-in-the-middle"
	["codellama"]="coding code-generation code-completion code-review unit-test-generator python fim fill-in-the-middle"
	["codeqwen"]="coding code-generation fixing-bugs"
	["codestral"]="coding code-generation solving-basic-programming-problems fim fill-in-the-middle unit-test-generator python"
	["codeup"]="coding code-generation"
	["command-r"]="rag tool-use english french spanish italian german brazilian portuguese japanese korean chinese arabic"
	["command-r-plus"]="rag tool-use enterprise english french spanish italian german brazilian portuguese japanese korean chinese arabic"
	["dbrx"]="coding code-generation math-word-problems general-purpose common-sense"
	["deepseek-coder"]="coding english chinese code-completion fim fill-in-the-middle python"
	["deepseek-coder-v2"]="coding code-completion code-insertion code-generator"
	["deepseek-llm"]="bilingual common-sense trivia chinese english general-knowledge"
	["deepseek-v2"]=""
	["deepseek-v2.5"]=""
	["dolphin-llama3"]="uncensored coding function-calling chat fine-tunable-alignment"
	["dolphin-mistral"]="uncensored coding function-calling chat fine-tunable-alignment"
	["dolphin-mixtral"]="uncensored coding chat function-calling fine-tunable-alignment game-design humor prank-suggestions confessions"
	["dolphin-phi"]="uncensored coding fine-tunable-alignment"
	["dolphincoder"]="uncensored coding coding-assistant"
	["duckdb-nsql"]="coding sql"
	["everythinglm"]=""
	["falcon"]="llm-research"
	["falcon2"]="llm-research"
	["firefunction-v2"]="chat instruction-following function-calling parsing"
	["goliath"]=""
	["granite-code"]="coding code-generation fixing-bugs documentation"
	["hermes3"]=""
	["internlm2"]=""
	["llama-guard3"]="content-moderation"
	["llama-pro"]="coding math common-sense"
	["llama2"]="multilingual chat"
	["llama2-chinese"]="chinese chat chinese-alignment chinese-bias"
	["llama2-uncensored"]="chat llm-criticism llm-testing creative-writing humor research"
	["llama3"]="chat math-word-problems"
	["llama3:text"]="abstract-reasoning"
	["llama3:70b-text"]="abstract-reasoning general-knowledge"
	["llama3:70b-instruct"]="chat math-word-problems coding code-completion python general-knowledge typescript"
	["llama3-chatqa"]="chat rag qa answering-questions"
	["llama3-gradient"]=""
	["llama3-groq-tool-use"]="function-calling tool-use"
	["llama3.1"]="multilingual chat translation summaries coding coding-assistant general-knowledge"
	["llama3.2"]="multilingual chat instruction-following summaries"
	["llava"]="ocr optical-character-recognition image-to-text chat chatbot"
	["llava-llama3"]="image-to-text"
	["llava-phi3"]="image-to-text"
	["gemma"]="text-generation qa summaries common-sense programming-tutor answering-questions"
	["gemma2"]="chat content-generation summaries grammar-correction language-tutor trivia multilingual"
	["glm4"]="math-word-problems coding multilingual"
	["glm4:-chat"]="math-word-problems coding chat function-calling comprehensive-response multilingual"
	["magicoder"]="coding code-generation open-source-coding"
	["mathstral"]="math-word-problems"
	["meditron"]="medical diseases health-information medical-exam qa"
	["medllama2"]="medical qa"
	["megadolphin"]=""
	["minicpm-v"]=""
	["mistral"]="multilingual function-calling fine-tuneable"
	["mistral-large"]=""
	["mistral-nemo"]="multilingual english french german spanish italian portuguese chinese korean arabic hindi common-sense trivia function-calling"
	["mistral-openorca"]=""
	["mistral-small"]="translation summaries"
	["mistrallite"]="answering-long-questions qa common-sense"
	["mixtral"]="multilingual english french italian german spanish coding code-generation common-sense solving-basic-programming-problems math-word-problems trivia fine-tuneable"
	["moondream"]="picture-to-text qa image-deconstruction whats-that identify-in-picture"
	["mxbai-embed-large"]="embeddings"
	["nemotron"]=""
	["nemotron-mini"]="roleplay rag qa function-calling"
	["neural-chat"]="chat chatbot common-sense"
	["nexusraven"]="coding documentation python functional-programming"
	["nomic-embed-text"]=""
	["notus"]=""
	["notux"]=""
	["nous-hermes"]=""
	["nous-hermes2"]=""
	["nous-hermes2-mixtral"]=""
	["nuextract"]=""
	["open-orca-platypus2"]="chat coding code-generation text-generation common-sense"
	["openchat"]="math-word-problems"
	["openhermes"]="chat cooking-recipes coding-by-example college-level-response"
	["orca-mini"]="general-purpose writing-letters"
	["orca2"]="assistant summaries abstract-reasoning"
	["paraphrase-multilingual"]=""
	["phi"]="chat street-directions coding code-generator code-competion text-completion qa answering-questions"
	["phi3"]="common-sense trivia english math logic math-word-problems solving-basic-programming-problems"
	["phi3.5"]="coding math logic teacher fact-check chat multilingual arabic chinese czech danish dutch english finnish french german hebrew hungarian italian japanese korean norwegian polish portuguese russian spanish swedish thai turkish ukrainian"
	["phind-codellama"]=""
	["qwen"]="china-alignment china-bias multilingual chat chinese english coding solving-basic-programming-problems"
	["qwen2"]="china-alignment china-bias multilingual german french spanish portuguese italian dutch russian czech polish arabic persian hebrew turkish japanese korean vietnamese thai indonesian malay lao burmese cebuano khmer tagalog hindi bengali urdu coding code-generation math-word-problems coding solving-basic-programming-problems math-word-problems stem science technology engineering mathematics"
	["qwen2-math"]="china-alignment china-bias math-word-problems stem science technology engineering mathematics"
	["qwen2.5"]="china-alignment china-bias multilingual chat roleplay coding parsing json math instruction-following chinese english french spanish portuguese german italian russian japanese korean vietnamese thai arabic"
	["qwen2.5-coder"]="china-alignment china-bias coding code-generation documentation fixing-bugs"
	["reader-lm"]=""
	["reflection"]=""
	["samantha-mistral"]="philosopher psychologist dating-coach"
	["shieldgemma"]="content-moderator"
	["smollm"]="common-sense qa low-memory-footprint"
	["snowflake-arctic-embed"]="embeddings"
	["solar"]="chat rag fine-tuneable"
	["solar-pro"]="common-sense math-word-problems fine-tuneable"
	["sqlcoder"]="coding code-generation sql"
	["stable-beluga"]=""
	["stable-code"]=""
	["stablelm-zephyr"]=""
	["stablelm2"]=""
	["starcoder"]="coding code-generation"
	["starcoder2"]="coding code-generation"
	["starling-lm"]=""
	["tinydolphin"]=""
	["tinyllama"]="game-dialog-generator low-memory-footprint"
	["vicuna"]="american-alignment american-bias chat assistant"
	["wizard-math"]="math logic"
	["wizard-vicuna"]="american-alignment american-bias"
	["wizard-vicuna-uncensored"]="removed-alignment removed-morals"
	["wizardcoder"]="coding code-generation"
	["wizardcoder:python"]="coding code-generation python"
	["wizardlm"]="general-use"
	["wizardlm-uncensored"]=""
	["wizardlm2"]=""
	["xwinlm"]="common-sense detailed-response"
	["xwinlm:70b-v0.1"]="common-sense abstract-reasoning wrinkled detailed-response"
	["yarn-llama2"]="text-generation"
	["yarn-mistral"]="common-sense"
	["yi"]="multilingual english chinese"
	["yi-coder"]="coding"
	["zephyr"]=""

)

declare -A llm_licenses=(
	["alfred"]="Apache-2.0"
	["all-minilm"]="Apache-2.0"
	["aya"]="CC-BY-NC-4.0 C4AI-Acceptable-Use-Policy"
	["bakllava"]="Apache-2.0"
	["bespoke-minicheck"]=""
	["bge-large"]="MIT"
	["bge-m3"]="MIT"
	["codebooga"]="llama2-USE_POLICY.md"
	["codegeex4"]="glm-4-9b-LICENSE"
	["codegemma"]="Gemma-Terms-of-Use-20240221"
	["codellama"]="llama2-LICENSE codellama-USE_POLICY.md"
	["codeqwen"]="Tongyi-Qianwen-LICENSE-AGREEMENT"
	["codestral"]="Mistral-AI-Non-Production-License"
	["codeup"]="CreativeML-Open-RAIL++-M-License-20230726"
	["command-r"]="CC-BY-NC-4.0"
	["command-r-plus"]="CC-BY-NC-4.0"
	["dbrx"]="Databricks-Open-Model-License Databricks-Open-Model-Acceptable-Use-Policy"
	["deepseek-coder"]="DEEPSEEK-LICENSE-AGREEMENT-1.0"
	["deepseek-coder-v2"]="MIT DEEPSEEK-LICENSE-AGREEMENT-1.0"
	["deepseek-llm"]="DEEPSEEK-LICENSE-AGREEMENT-1.0"
	["deepseek-v2"]="DEEPSEEK-LICENSE-AGREEMENT-1.0"
	["deepseek-v2.5"]="DEEPSEEK-LICENSE-AGREEMENT-1.0"
	["dolphin-llama3"]="llama3-USE_POLICY.md"
	["dolphin-mistral"]="Apache-2.0"
	["dolphin-mixtral"]="Apache-2.0"
	["dolphin-phi"]="MICROSOFT-RESEARCH-LICENSE-TERMS"
	["dolphincoder"]="BigCode-Open-RAIL-M-v1-License-Agreement"
	["duckdb-nsql"]="llama2-USE_POLICY.md"
	["everythinglm"]="llama2-USE_POLICY.md"
	["falcon"]="Apache-2.0"
	["falcon2"]="Falcon-2-11B-TII-License-1.0"
	["firefunction-v2"]="llama3-USE_POLICY.md"
	["goliath"]="llama2-USE_POLICY.md"
	["granite-code"]="Apache-2.0"
	["hermes3"]="llama3-USE_POLICY.md"
	["internlm2"]="Apache-2.0"
	["llama-guard3"]="llama3_1-USE_POLICY.md"
	["llama-pro"]="llama2-USE_POLICY.md"
	["llama2"]="llama2-LICENSE llama2-USE_POLICY.md"
	["llama2-chinese"]="Apache-2.0"
	["llama2-uncensored"]="llama2-LICENSE llama2-USE_POLICY.md"
	["llama3"]="llama3-LICENSE llama3-USE_POLICY.md"
	["llama3-chatqa"]="llama3-USE_POLICY.md"
	["llama3-gradient"]="llama3-USE_POLICY.md"
	["llama3-groq-tool-use"]="llama3-USE_POLICY.md"
	["llama3.1"]="llama3_1-LICENSE llama3_1-USE_POLICY.md"
	["llama3.2"]="llama3_2-LICENSE llama3_2-USE_POLICY.md"
	["llava"]="Apache-2.0"
	["llava-llama3"]=""
	["llava-phi3"]=""
	["gemma"]="Gemma-Terms-of-Use-20240221 Gemma-Prohibited-Use-Policy-20240221"
	["gemma2"]="Gemma-Terms-of-Use-20240221 Gemma-Prohibited-Use-Policy-20240221"
	["glm4"]="glm-4-9b-LICENSE"
	["magicoder"]="llama2-USE_POLICY.md"
	["mathstral"]="Apache-2.0"
	["meditron"]="llama2-USE_POLICY.md"
	["medllama2"]="MIT"
	["megadolphin"]="llama2-USE_POLICY.md"
	["minicpm-v"]="Apache-2.0"
	["mistral"]="Apache-2.0"
	["mistral-large"]="MRL-0.1.md"
	["mistral-nemo"]="Apache-2.0"
	["mistral-openorca"]="Apache-2.0"
	["mistral-small"]="MRL-0.1.md"
	["mistrallite"]="Apache-2.0"
	["mixtral"]="Apache-2.0"
	["moondream"]="Apache-2.0"
	["mxbai-embed-large"]="Apache-2.0"
	["nemotron"]="llama3_1-LICENSE llama3_1-USE_POLICY.md Meta-Privacy-Policy"
	["nemotron-mini"]="NVIDIA-AI-Foundation-Models-Community-License-Agreement"
	["neural-chat"]="Apache-2.0"
	["nexusraven"]="NexusRaven-V2-13B-LICENSE"
	["nomic-embed-text"]="Apache-2.0"
	["notus"]="MIT"
	["notux"]="MIT"
	["nous-hermes"]="MIT GPL-2+"
	["nous-hermes:7b"]="MIT"
	["nous-hermes:13b"]="GPL-2+"
	["nous-hermes:13b-llama2"]="MIT"
	["nous-hermes2"]="Apache-2.0"
	["nous-hermes2-mixtral"]="Apache-2.0"
	["nuextract"]="MIT" # Ollama site says Apache-2.0.  HuggingFace site says MIT.
	["open-orca-platypus2"]="CC-BY-NC-4.0"
	["openchat"]="Apache-2.0"
	["openhermes"]="Apache-2.0"
	["orca-mini"]="CC-BY-NC-SA-4.0"
	["orca2"]="MICROSOFT-RESEARCH-LICENSE-TERMS"
	["paraphrase-multilingual"]="Apache-2.0"
	["phi"]="MIT"
	["phi3"]="MIT"
	["phi3.5"]="MIT"
	["phind-codellama"]="llama2-USE_POLICY.md"
	["qwen:0.5b"]="Tongyi-Qianwen-RESEARCH-LICENSE-AGREEMENT"
	["qwen:1.8b"]="Tongyi-Qianwen-RESEARCH-LICENSE-AGREEMENT"
	["qwen:4b"]="Tongyi-Qianwen-RESEARCH-LICENSE-AGREEMENT"
	["qwen:7b"]="Tongyi-Qianwen-LICENSE-AGREEMENT"
	["qwen:14b"]="Tongyi-Qianwen-LICENSE-AGREEMENT"
	["qwen:32b"]="Tongyi-Qianwen-LICENSE-AGREEMENT"
	["qwen:72b"]="Tongyi-Qianwen-LICENSE-AGREEMENT"
	["qwen:110b"]="Tongyi-Qianwen-LICENSE-AGREEMENT"
	["qwen2"]="Apache-2.0"
	["qwen2:72b"]="Tongyi-Qianwen-LICENSE-AGREEMENT"
	["qwen2-math"]="Apache-2.0"
	["qwen2.5"]="Apache-2.0"
	["qwen2.5-coder"]="Apache-2.0"
	["reader-lm"]="CC-BY-NC-4.0"
	["reflection"]="llama3_1-USE_POLICY.md"
	["samantha-mistral"]="Apache-2.0"
	["shieldgemma"]="Gemma-Terms-of-Use-20240401"
	["smollm"]="Apache-2.0"
	["snowflake-arctic-embed"]="Apache-2.0"
	["solar"]="Apache-2.0"
	["solar:instruct"]="CC-BY-NC-4.0"
	["solar-pro"]="MIT"
	["sqlcoder"]="CC-BY-SA-4.0"
	["stable-beluga"]="STABLE-BELUGA-NON-COMMERCIAL-COMMUNITY-LICENSE-AGREEMENT"
	["stable-code"]="STABILITY-AI-NON-COMMERCIAL-RESEARCH-COMMUNITY-LICENSE-AGREEMENT"
	["stablelm-zephyr"]="STABILITY-AI-NON-COMMERCIAL-RESEARCH-COMMUNITY-LICENSE-AGREEMENT"
	["stablelm2"]="STABILITY-AI-NON-COMMERCIAL-RESEARCH-COMMUNITY-LICENSE-AGREEMENT"
	["starcoder"]="BigCode-Open-RAIL-M-v1-License-Agreement"
	["starcoder2"]="BigCode-Open-RAIL-M-v1-License-Agreement"
	["starling-lm"]="Apache-2.0"
	["tinydolphin"]="Apache-2.0"
	["tinyllama"]="Apache-2.0"
	["vicuna"]="llama2-USE_POLICY.md"
	["wizard-math"]="MICROSOFT-RESEARCH-LICENSE-TERMS"
	["wizard-vicuna"]=""
	["wizard-vicuna-uncensored"]=""
	["wizardcoder:33b"]="MICROSOFT-RESEARCH-LICENSE-TERMS"
	["wizardcoder:python"]="llama2-USE_POLICY.md"
	["wizardlm"]="llama2-USE_POLICY.md"
	["wizardlm-uncensored"]=""
	["wizardlm-uncensored:13b-llama2"]="llama2-USE_POLICY.md"
	["wizardlm2"]="Apache-2.0"
	["xwinlm"]="llama2-USE_POLICY.md"
	["yarn-llama2"]=""
	["yarn-mistral"]="Apache-2.0"
	["yi"]="Apache-2.0"
	["yi-coder"]="Apache-2.0"
	["zephyr"]="MIT"
)

declare -A llm_whitelist=(
	["alfred"]=1
	["all-minilm"]=1
	["aya"]=1
	["bakllava"]=1
	["bespoke-minicheck"]=1
	["bge-large"]="MIT"
	["bge-m3"]="MIT"
	["codebooga"]=1
	["codegeex4"]=1
	["codegemma"]=1
	["codellama"]=1
	["codeqwen"]=1
	["codestral"]=1
	["codeup"]=1
	["command-r"]=1
	["command-r-plus"]=1
	["dbrx"]=1
	["deepseek-coder"]=1
	["deepseek-coder-v2"]=1
	["deepseek-llm"]=1
	["deepseek-v2"]=1
	["deepseek-v2.5"]=1
	["dolphin-llama3"]=1
	["dolphin-mistral"]=1
	["dolphin-mixtral"]=1
	["dolphin-phi"]=1
	["dolphincoder"]=1
	["duckdb-nsql"]=1
	["everythinglm"]=1
	["falcon"]=1
	["falcon2"]=1
	["firefunction-v2"]=1
	["goliath"]=1
	["granite-code"]=1
	["hermes3"]=1
	["internlm2"]=1
	["llama-guard3"]=1
	["llama-pro"]=1
	["llama2"]=1
	["llama2-chinese"]=1
	["llama2-uncensored"]=1
	["llama3"]=1
	["llama3-chatqa"]=1
	["llama3-gradient"]=1
	["llama3-groq-tool-use"]=1
	["llama3.1"]=1
	["llama3.2"]=1
	["llava"]=1
	["llava-llama3"]=1
	["llava-phi3"]=1
	["gemma"]=1
	["gemma2"]=1
	["glm4"]=1
	["magicoder"]=1
	["mathstral"]=1
	["meditron"]=1
	["medllama2"]=1
	["megadolphin"]=1
	["minicpm-v"]=1
	["mistral"]=1
	["mistral-large"]=1
	["mistral-nemo"]=1
	["mistral-openorca"]=1
	["mistral-small"]=1
	["mistrallite"]=1
	["mixtral"]=1
	["moondream"]=1
	["mxbai-embed-large"]=1
	["nemotron"]=1
	["nemotron-mini"]=1
	["neural-chat"]=1
	["nexusraven"]=1
	["nomic-embed-text"]=1
	["notus"]=1
	["notux"]=1
	["nous-hermes"]=1
	["nous-hermes2"]=1
	["nous-hermes2-mixtral"]=1
	["nuextract"]=1
	["open-orca-platypus2"]=1
	["openchat"]=1
	["openhermes"]=1
	["orca-mini"]=1
	["orca2"]=1
	["paraphrase-multilingual"]=1
	["phi"]="MIT"
	["phi3"]="MIT"
	["phi3.5"]="MIT"
	["phind-codellama"]=1
	["qwen"]=1
	["qwen2"]=1
	["qwen2-math"]=1
	["qwen2.5"]=1
	["qwen2.5-coder"]=1
	["reader-lm"]=1
	["reflection"]=1
	["samantha-mistral"]=1
	["shieldgemma"]=1
	["smollm"]=1
	["snowflake-arctic-embed"]=1
	["solar"]=1
	["solar-pro"]=1
	["sqlcoder"]=1
	["stable-beluga"]=1
	["stable-code"]=1
	["stablelm-zephyr"]=1
	["stablelm2"]=1
	["starcoder"]=1
	["starcoder2"]=1
	["starling-lm"]=1
	["tinydolphin"]=1
	["tinyllama"]=1
	["vicuna"]=1
	["wizard-math"]=1
	["wizard-vicuna"]=1
	["wizard-vicuna-uncensored"]=1
	["wizardcoder"]=1
	["wizardlm"]=1
	["wizardlm-uncensored"]=1
	["wizardlm2"]=1
	["xwinlm"]=1
	["yarn-llama2"]=1
	["yarn-mistral"]=1
	["yi"]=1
	["yi-coder"]=1
	["zephyr"]=1
)

# Allow if the license is approved or llm is enabled
is_llm_whitelisted() {
	local arg="${1}"
	local name="${arg%:*}"
	local variant="${arg#*:}"
	if [[ "${llm_whitelist[${name}]}" == "1" ]] ; then
		return 0
	fi
	return 1
}

# START USE_DESC_GENERATOR
gen_use_desc() {
	local x
	for x in ${!llm_whitelist[@]} ; do
		echo "ollama_llms_${x} - Whitelist ${x}"
	done | sort
}
#gen_use_desc
# END USE_DESC_GENERATOR

# START IUSE_GENERATOR
gen_iuse() {
	local x
	for x in ${!llm_whitelist[@]} ; do
		echo "${x}"
	done | sort | fold -s -w 80
}
#gen_iuse
# END IUSE_GENERATOR


# START LICENSE_ARRAY_GENERATOR
gen_licenses() {
	local x
	for x in ${!llm_licenses[@]} ; do
		if [[ -z "${llm_licenses[${x}]}" ]] ; then
			# Placeholder
echo "
	ollama_llms_${x}? (
		all-rights-reserved
	)
"
		else
			local t=$(echo ${llm_licenses[${x}]} | tr " " "\n")
echo "
	ollama_llms_${x}? (
		${t}
	)
"
		fi
	done
}
#gen_licenses
# END LICENSE_ARRAY_GENERATOR

main() {
	cd "/usr/lib64/ollama/${BACKEND}" || exit 1
	if [[ "${ARGS[0]}" == "run" ]] ; then
		if is_llm_whitelisted "${ARGS[1]}" ; then
			ollama run ${ARGS[1]}
		else
			echo "[Error] ${ARGS[1]} is a blacklisted LLM."
		fi
	elif [[ "${ARGS[0]}" == "model-tags" || "${ARGS[0]}" == "model-use-cases" ]] ; then
		local model="${ARGS[1]}"
		local tags="${llm_use_cases[${model}]}"
		echo "Model:  ${model}"
		echo "Tagged use cases:  ${tags}"
	elif [[ "${ARGS[0]}" == "model-license" ]] ; then
		local model="${ARGS[1]}"
		local licenses="${llm_licenses[${model}]}"
		echo "Model:  ${model}"
		echo "License(s):  ${licenses}"
	elif [[ "${ARGS[0]}" == "website" ]] ; then
		xdg-open "https://ollama.com/library/${ARGS[2]}"
	else
		ollama ${ARGS[@]}
	fi
}

main
