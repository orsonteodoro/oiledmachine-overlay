--- a/aom/aom_integer.h.orig	2020-06-09 01:58:26.000000000 -0700
+++ b/aom/aom_integer.h	2021-09-01 11:10:26.318534325 -0700
@@ -81,6 +81,7 @@ size_t aom_uleb_size_in_bytes(uint64_t v
 // Returns 0 on success, -1 on decode failure.
 // On success, 'value' stores the decoded LEB128 value and 'length' stores
 // the number of bytes decoded.
+__attribute__ ((visibility ("default")))
 int aom_uleb_decode(const uint8_t *buffer, size_t available, uint64_t *value,
                     size_t *length);
 
--- a/aom/aom_codec.h.orig	2021-09-01 11:14:52.042785190 -0700
+++ b/aom/aom_codec.h	2021-09-01 11:09:18.271909879 -0700
@@ -469,6 +469,7 @@ typedef enum {
  *
  * \param[in]     type            The OBU_TYPE to convert to string.
  */
+__attribute__ ((visibility ("default")))
 const char *aom_obu_type_to_string(OBU_TYPE type);
 
 /*!@} - end defgroup codec*/
--- a/av1/common/obu_util.h.orig	2020-06-09 01:58:26.000000000 -0700
+++ b/av1/common/obu_util.h	2021-09-01 11:12:25.052114282 -0700
@@ -29,6 +29,7 @@ typedef struct {
   int spatial_layer_id;
 } ObuHeader;
 
+__attribute__ ((visibility ("default")))
 aom_codec_err_t aom_read_obu_header(uint8_t *buffer, size_t buffer_length,
                                     size_t *consumed, ObuHeader *header,
                                     int is_annexb);
