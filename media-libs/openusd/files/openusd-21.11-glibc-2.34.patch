Subject: GLIBC 2.34 compat patch

Copyright notice for pxr/base/arch/mallocHook.cpp:

//
// Copyright 2016 Pixar
//
// Licensed under the Apache License, Version 2.0 (the "Apache License")
// with the following modification; you may not use this file except in
// compliance with the Apache License and the following modification to it:
// Section 6. Trademarks. is deleted and replaced with:
//
// 6. Trademarks. This License does not grant permission to use the trade
//    names, trademarks, service marks, or product names of the Licensor
//    and its affiliates, except as required to comply with Section 4(c) of
//    the License and to reproduce the content of the NOTICE file.
//
// You may obtain a copy of the Apache License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the Apache License with the above modification is
// distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied. See the Apache License for the specific
// language governing permissions and limitations under the Apache License.
//

Suggested by hradec in
https://github.com/PixarAnimationStudios/USD/issues/1592

--- a/pxr/base/arch/mallocHook.cpp.orig	2021-11-01 10:10:51.000000000 -0700
+++ b/pxr/base/arch/mallocHook.cpp	2022-01-28 11:49:35.871491409 -0800
@@ -28,7 +28,7 @@
 #include "pxr/base/arch/defines.h"
 #include "pxr/base/arch/env.h"
 
-#if !defined(ARCH_OS_WINDOWS)
+#if !defined(ARCH_OS_WINDOWS) && HAVE_MEM_ALLOC_HOOKS						// oteodoro: Changed.  Allow only for < GLIBC 2.34
 #   include <dlfcn.h>
 #endif
 #include <cstring>
@@ -88,7 +88,7 @@ static bool
 _MallocProvidedBySameLibraryAs(const char* functionName,
                                bool skipMallocCheck)
 {
-#if !defined(ARCH_OS_WINDOWS)
+#if !defined(ARCH_OS_WINDOWS) && HAVE_MEM_ALLOC_HOOKS						// oteodoro: Changed.  Allow only for < GLIBC 2.34
     const void* function = dlsym(RTLD_DEFAULT, functionName);
     if (!function) {
         return false;
@@ -151,8 +151,8 @@ ArchIsJemallocActive()
 bool
 ArchIsStlAllocatorOff()
 {
-#if defined(ARCH_COMPILER_GCC) || defined(ARCH_COMPILER_ICC) || \
-    defined(ARCH_COMPILER_CLANG)
+#if (defined(ARCH_COMPILER_GCC) || defined(ARCH_COMPILER_ICC) || \
+    defined(ARCH_COMPILER_CLANG)) && HAVE_MEM_ALLOC_HOOKS					// oteodoro: Changed conditional with ( and ... && HAVE_MEM_ALLOC_HOOKS ).  Allow only for < GLIBC 2.34
     // I'm assuming that ICC compiles will use the gcc STL library.
 
     /*
@@ -177,7 +178,7 @@ ArchMallocHook::IsInitialized()
        _underlyingMemalignFunc || _underlyingFreeFunc;
 }
 
-#if defined(ARCH_OS_LINUX)
+#if defined(ARCH_OS_LINUX) && HAVE_MEM_ALLOC_HOOKS						// oteodoro: Changed.  Allow only for < GLIBC 2.34
 template <typename T>
 static bool _GetSymbol(T* addr, const char* name, string* errMsg) {
     if (void* symbol = dlsym(RTLD_DEFAULT, name)) {
@@ -241,7 +242,7 @@ ArchMallocHook::Initialize(
     ARCH_UNUSED_ARG void  (*freeWrapper)(void*, const void*),
     string* errMsg)
 {
-#if !defined(ARCH_OS_LINUX)
+#if !defined(ARCH_OS_LINUX) || !HAVE_MEM_ALLOC_HOOKS						// oteodoro: Changed.  Allow only for < GLIBC 2.34
     *errMsg = "ArchMallocHook functionality not implemented for non-linux systems";
     return false;
 #else
--- a/pxr/base/arch/CMakeLists.txt.orig	2021-11-01 10:10:51.000000000 -0700
+++ b/pxr/base/arch/CMakeLists.txt	2022-01-28 12:03:18.268923552 -0800
@@ -9,6 +9,9 @@ if(WIN32)
     set(PLATFORM_LIBS Ws2_32.lib Dbghelp.lib ${PLATFORM_LIBS})
 endif()
 
+include(CheckSymbolExists)									# oteodoro: Added line
+check_symbol_exists(__malloc_hook "malloc.h" HAVE_MEM_ALLOC_HOOKS)				# oteodoro: Added check
+												# oteodoro: Added line
 pxr_library(arch
     LIBRARIES
         ${CMAKE_DL_LIBS}
