<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE pkgmetadata SYSTEM "https://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
  <maintainer type="person" proxied="yes">
    <!-- Ebuild originators -->
    <email>negril.nx+gentoo@gmail.com</email>
    <name>Paul Zander</name>
  </maintainer>
  <maintainer type="project" proxied="proxy">
    <!-- Ebuild originators -->
    <email>proxy-maint@gentoo.org</email>
    <name>Proxy Maintainers</name>
  </maintainer>
  <longdescription>
    OpenCV (Open Source Computer Vision) is a library of programming functions
    mainly aimed at real time computer vision.  Example applications of the
    OpenCV library are Human-Computer Interaction (HCI); Object Identification,
    Segmentation and Recognition; Face Recognition; Gesture Recognition; Motion
    Tracking, Ego Motion, Motion Understanding; Structure From Motion (SFM); and
    Mobile Robotics.
  </longdescription>
  <!--

    oiledmachine-overlay notes:

    This fork sets rpath for TBB.

  -->
  <upstream>
    <changelog>https://github.com/opencv/opencv/wiki/ChangeLog</changelog>
    <remote-id type="cpe">cpe:/a:opencv:opencv</remote-id>
    <remote-id type="github">opencv/opencv</remote-id>
    <remote-id type="github">opencv/opencv_contrib</remote-id>
    <remote-id type="github">opencv/opencv_3rdparty</remote-id>
    <remote-id type="sourceforge">opencvlibrary</remote-id>
  </upstream>
  <use>
    <flag name="atlas">
      Use <pkg>sci-libs/atlas</pkg> for blas, lapack and sparse blas routines
    </flag>
    <flag name="carotene">
      Use the vendored carotene computer vision accelerator library for
      arm/arm64 with NVIDIA® Tegra®.
    </flag>
    <flag name="contrib">
      Install user contributed scripts from opencv_contrib (Experimental!)
    </flag>
    <flag name="contribcvv">
      Enable CVV in contrib (requires Qt5)
    </flag>
    <flag name="contribdnn">
      Enable DNN module contrib (requires tinydnn)
    </flag>
    <flag name="contribfreetype">
      Enable Drawing UTF-8 strings with <pkg>media-libs/freetype</pkg> &amp;
      <pkg>media-libs/harfbuzz</pkg>
    </flag>
    <flag name="contribhdf">
      Enable HDF module (requires <pkg>sci-libs/hdf5</pkg>)
    </flag>
    <flag name="contribovis">
      Enable OGRE vision module support (<pkg>dev-games/ogre</pkg>)
    </flag>
    <flag name="contribsfm">
      Enable SFM module (requires USE="eigen gflags glog")
    </flag>
    <flag name="contribxfeatures2d" restrict="&gt;media-libs/opencv-4.8.1-r1">
      Enable xfeatures2d in contrib
    </flag>
    <flag name="contribxfeatures2d" restrict="&lt;=media-libs/opencv-4.8.1">
      Enables xfeatures2d and autodownload of samples in contrib
    </flag>
    <flag name="cpu_flags_arm_fp16">
      Support fp16 (arm32 only)
    </flag>
    <flag name="cpu_flags_arm_neon">
      Support neon (arm32 only)
    </flag>
    <flag name="cpu_flags_arm_neon_bf16">
      Support bf16 with neon (arm64 only)
    </flag>
    <flag name="cpu_flags_arm_neon_fp16">
      Support fp16 with neon (arm64 only)
    </flag>
    <flag name="cpu_flags_arm_neon_dotprod">
      Support dotprod with neon (arm64 only)
    </flag>
    <flag name="cpu_flags_arm_vfpv3">
      Support vfpv3 (arm32 only)
    </flag>
    <flag name="cuda">
      Enable NVIDIA® CUDA® computations support (Experimental!)
    </flag>
    <flag name="cudnn">
      Enable support for NVIDIA® cuDNN library
    </flag>
    <flag name="dnnsamples">
      Enable dnn caffeemodel samples
    </flag>
    <flag name="eigen">
      Enable usage of <pkg>dev-cpp/eigen</pkg> for computations
    </flag>
    <flag name="features2d">
      Enable features2d module
    </flag>
    <flag name="gdal">
      Enable support for <pkg>sci-libs/gdal</pkg> library
    </flag>
    <flag name="gflags">
      Use the C++ argument parsing library form <pkg>dev-cpp/gflags</pkg>
    </flag>
    <flag name="glog">
      Use the C++ logging library from <pkg>dev-cpp/glog</pkg>
    </flag>
    <flag name="gtk3">
      Enable <pkg>x11-libs/gtk+</pkg>:3 support
    </flag>
    <flag name="jasper">
      Use <pkg>media-libs/jasper</pkg> for jpeg2k support
    </flag>
    <flag name="kleidicv">
      Enable optimized algorithms for ARMv8, ARMv9 CPUs.
    </flag>
    <flag name="mkl">
      Use <pkg>sci-libs/mkl</pkg> for blas, lapack and sparse blas routines
    </flag>
    <flag name="non-free">
      Enable non-free components
    </flag>
    <flag name="ndsrvp">
      Enable optimized algorithms for RISC-V processors with P-extension (RVP)
      using Andes (nds) compiler intrinsics.
      (IN DEVELOPMENT UPSTREAM)

      For progress, see https://github.com/opencv/opencv/pull/25167
      For toolchain setup, see https://github.com/opencv/opencv/pull/25167#issuecomment-1981196359
    </flag>
    <flag name="opencvapps">
      Enable compilation with opencvapps
    </flag>
    <flag name="openvx">
      Enable hardware acceleration of computer vision via OpenVX.
    </flag>
    <flag name="quirc">
      Enable qrcode decoding via <pkg>media-libs/quirc</pkg>
    </flag>
    <flag name="tbb">
      Enable multithreading with the Intel® Threading Building Blocks
      (<pkg>dev-cpp/tbb</pkg>)
    </flag>
    <flag name="tesseract">
      Use Google's OCR Engine
    </flag>
    <flag name="testprograms">
      Build and install programs for testing OpenCV (performance)
    </flag>
    <flag name="video_cards_intel">
      Enable Video Acceleration API for hardware decoding for Intel® cards
    </flag>
    <flag name="vtk">
      Build new 3D visualization module viz based on <pkg>sci-libs/vtk</pkg>
    </flag>
    <flag name="zlib-ng">
      Build the vendored copy of zlib-ng to speed up decode/encode of compressed
      images using zlib compression.
    </flag>
  </use>
</pkgmetadata>
