Subject:      Allow for TBB_LIBRARY_DIR to specify custom lib directory in a multiple TBB installation
Path Author:  Orson Teodoro <orsonteodoro@hotmail.com>
Date:         Tue Jun 29 11:24:10 AM PDT 2021 (Unix timestamp: 1624991050)

Copyright notice for cmake/FindTBB.cmake:

## Copyright 2009-2021 Intel Corporation
## SPDX-License-Identifier: Apache-2.0

diff -urp oidn-1.4.1.orig/cmake/FindTBB.cmake oidn-1.4.1/cmake/FindTBB.cmake
--- oidn-1.4.1.orig/cmake/FindTBB.cmake	2021-06-30 03:39:07.558205607 -0700
+++ oidn-1.4.1/cmake/FindTBB.cmake	2021-06-30 03:43:15.923842683 -0700
@@ -22,6 +22,8 @@
 # The user may specify the following variables to help the search process:
 # - TBB_ROOT
 # - TBB_INCLUDE_DIR
+# - TBB_LIBRARY_DIR									# oteodoro - added line
+# - TBB_SOVER										# oteodoro - added line
 #
 # After the script has run successfully, there is a target TBB, as well as
 # component targets TBB::<COMPONENT>, e.g. TBB::tbbmalloc.
@@ -37,10 +39,14 @@
 #===============================================================================
 
 # oteodoro - print out tbb paths to show preference towards legacy TBB or oneTBB
+# oteodoro - add alternative library path in Linux
 
 # We use INTERFACE libraries, which are only supported in 3.x
 cmake_minimum_required(VERSION 3.1)
 
+if (TBB_INCLUDE_DIR)									# oteodoro added line
+  set(FIND_PATH_OPTS_ NO_DEFAULT_PATH)							# oteodoro added line
+endif()											# oteodoro added line
 
 # CMake before 3.12 used to ignore <PKGNAME>_ROOT, but we always use this 
 # variable. Avoid warning by setting the policy to new behaviour, which means
@@ -205,6 +211,7 @@ macro(rk_tbb_reuse_existing_target_compo
     endif()
 
     find_path(TBB_INCLUDE_DIR
+      ${FIND_PATH_OPTS_}												# oteodoro - added line
       NAMES "${_TBB_HEADER}"
       PATHS "${TBB_INCLUDE_DIRS}")
 
@@ -284,6 +291,7 @@ endfunction()
 
 function(rk_tbb_find_include_directory)
   find_path(TBB_INCLUDE_DIR
+    ${FIND_PATH_OPTS_}													# oteodoro - added line
     NAMES "${_TBB_HEADER}"
     HINTS "${TBB_ROOT}/${_TBB_INCLUDE_SUBDIR}"
     NO_PACKAGE_ROOT_PATH)
@@ -356,6 +364,7 @@ function(rk_tbb_find_library COMPONENT_N
     file(GLOB LIB_PATHS PATHS ${TBB_ROOT}/lib/intel64/gcc*)
     list(REVERSE LIB_PATHS)
     list(APPEND LIB_PATHS
+      ${TBB_LIBRARY_DIR}								# oteodoro - added line
       ${TBB_ROOT}/lib
       ${TBB_ROOT}/lib/x86_64-linux-gnu
       ${TBB_ROOT}/lib64
@@ -366,7 +375,7 @@ function(rk_tbb_find_library COMPONENT_N
   # variable will not point to a symlink. This makes installing TBB as a
   # dependency easier.
   if (UNIX)
-    set(LIB_NAME lib${LIB_NAME}.so.2 ${LIB_NAME})
+    set(LIB_NAME lib${LIB_NAME}.so.${TBB_SOVER} ${LIB_NAME})	# oteodoro - added a particular sover to match
   endif()
 
   find_library(${LIB_VAR}
@@ -465,11 +474,13 @@ endfunction()
 rk_tbb_list_components()
 rk_tbb_reuse_existing_target_components()
 
-rk_tbb_find_root()
-if (NOT EXISTS "${TBB_ROOT}")
-  rk_tbb_error("Unable to find root directory ${TBB_ROOT}")
-endif()
-mark_as_advanced(TBB_ROOT) # Hide, we found something.
+if (NOT TBB_LIBRARY_DIR)									# oteodoro - added line
+  rk_tbb_find_root()									# oteodoro - indent
+  if (NOT EXISTS "${TBB_ROOT}")								# oteodoro - indent
+    rk_tbb_error("Unable to find root directory ${TBB_ROOT}")				# oteodoro - indent
+  endif()										# oteodoro - indent
+  mark_as_advanced(TBB_ROOT) # Hide, we found something.				# oteodoro - indent
+endif()											# oteodoro - added line
 
 rk_tbb_find_include_directory()
 if (NOT EXISTS "${TBB_INCLUDE_DIR}")
