diff -urp tizonia-openmax-il-0.22.0.orig/3rdparty/meson.build tizonia-openmax-il-0.22.0/3rdparty/meson.build
--- tizonia-openmax-il-0.22.0.orig/3rdparty/meson.build	2020-05-22 15:33:08.000000000 -0700
+++ tizonia-openmax-il-0.22.0/3rdparty/meson.build	2020-09-06 20:15:57.442124634 -0700
@@ -1 +1,3 @@
+if enable_dbus
 subdir('dbus-cplusplus')
+endif
diff -urp tizonia-openmax-il-0.22.0.orig/clients/meson.build tizonia-openmax-il-0.22.0/clients/meson.build
--- tizonia-openmax-il-0.22.0.orig/clients/meson.build	2020-05-22 15:33:08.000000000 -0700
+++ tizonia-openmax-il-0.22.0/clients/meson.build	2020-09-06 20:18:36.308152054 -0700
@@ -1,13 +1,29 @@
-subdir('gmusic')
+if enable_clients and enable_python
+if enabled_client_services.contains('gmusic')
+   subdir('gmusic')
+endif
+if enabled_client_services.contains('soundcloud')
 subdir('soundcloud')
+endif
+if enabled_client_services.contains('youtube')
 subdir('youtube')
+endif
+if enabled_client_services.contains('plex')
 subdir('plex')
+endif
+if enabled_client_services.contains('chromecast')
 subdir('chromecast')
-if enable_libspotify
+endif
+if enabled_client_services.contains('spotify')
    subdir('spotify')
 endif
+if enabled_client_services.contains('tunein')
 subdir('tunein')
+endif
+if enabled_client_services.contains('iheart')
 subdir('iheart')
+endif
 
 meson.add_install_script('meson_post_install.py', python3.get_install_dir())
+endif
 
diff -urp tizonia-openmax-il-0.22.0.orig/meson.build tizonia-openmax-il-0.22.0/meson.build
--- tizonia-openmax-il-0.22.0.orig/meson.build	2020-05-22 15:33:08.000000000 -0700
+++ tizonia-openmax-il-0.22.0/meson.build	2020-09-06 20:23:32.069590236 -0700
@@ -22,22 +22,35 @@ cxx = meson.get_compiler('cpp')
 enable_blocking_etb_ftb = get_option('blocking-etb-ftb') #false
 enable_blocking_sendcommand = get_option('blocking-sendcommand') #false
 enable_player = get_option('player') #true
-enable_libspotify = get_option('libspotify') #true
 enable_alsa = get_option('alsa') #true
 enable_aac = get_option('aac') #true
+enable_dbus = get_option('dbus') #true
+enable_icecast_client = get_option('icecast-client') #true
+enable_icecast_server = get_option('icecast-server') #true
 enable_gcc_warnings = get_option('gcc-warnings') #false
 enable_test = get_option('test') #false
 # not present in the original
 enable_docs = get_option('docs') #false
 enable_clients = get_option('clients') #true
-# disabling plugins implies disabling libspotify
-if not enable_clients
-   enable_libspotify = false
-endif
+
+enabled_client_services = []
+foreach p: get_option('client-services')
+   enabled_client_services += p
+endforeach
 
 enabled_plugins = []
 foreach p: get_option('plugins')
-   if (p == 'spotify' and enable_libspotify) or p != 'spotify'
+   if (enable_clients and p == 'http_source' and enabled_client_services.length() > 0 and enable_clients)
+      enabled_plugins += p
+   elif (p == 'aac_decoder' and enable_aac)
+      enabled_plugins += p
+   elif (enable_clients and enable_python and p == 'chromecast_renderer' and enabled_client_services.contains('chromecast'))
+      enabled_plugins += p
+   elif (enable_clients and enable_python and p == 'spotify' and enabled_client_services.contains('spotify'))
+      enabled_plugins += p
+   elif (p == 'pcm_renderer_alsa' and enabled_client_services.contains('alsa'))
+      enabled_plugins += p
+   else
       enabled_plugins += p
    endif
 endforeach
@@ -173,8 +186,88 @@ add_project_arguments('-I'+meson.current
 # this is an abomination, but player/src doesn't include config.h
 add_project_arguments('-include'+join_paths(meson.build_root(), 'config.h'), language: ['c', 'cpp'])
 
-if enable_libspotify
-   add_project_arguments('-DHAVE_LIBSPOTIFY', language: ['c', 'cpp'])
+if enable_dbus
+   add_project_arguments('-DHAVE_DBUS', language: ['c', 'cpp'])
+endif
+
+if enable_clients and enable_icecast_client
+   add_project_arguments('-DHAVE_ICECAST_CLIENT', language: ['c', 'cpp'])
+endif
+
+if enable_icecast_server
+   add_project_arguments('-DHAVE_ICECAST_SERVER', language: ['c', 'cpp'])
+endif
+
+if enabled_plugins.contains('aac_decoder')
+   add_project_arguments('-DHAVE_AAC', language: ['c', 'cpp'])
+endif
+
+if enabled_plugins.contains('flac_decoder')
+   add_project_arguments('-DHAVE_FLAC', language: ['c', 'cpp'])
+endif
+
+if enabled_plugins.contains('http_source')
+   add_project_arguments('-DHAVE_CURL', language: ['c', 'cpp'])
+endif
+
+if enabled_plugins.contains('ogg_demuxer') or enabled_plugins.contains('ogg_muxer')
+   add_project_arguments('-DHAVE_OGG', language: ['c', 'cpp'])
+endif
+
+if enabled_plugins.contains('mpeg_audio_decoder')
+   add_project_arguments('-DHAVE_MP2', language: ['c', 'cpp'])
+endif
+
+if enabled_plugins.contains('mp3_decoder') or enabled_plugins.contains('mp3_encoder')
+   add_project_arguments('-DHAVE_MP3', language: ['c', 'cpp'])
+endif
+
+if enabled_plugins.contains('opus_decoder') or enabled_plugins.contains('opusfile_decoder')
+   add_project_arguments('-DHAVE_OPUS', language: ['c', 'cpp'])
+endif
+
+if enabled_plugins.contains('pcm_decoder')
+   add_project_arguments('-DHAVE_PCM', language: ['c', 'cpp'])
+endif
+
+if enabled_plugins.contains('vorbis_decoder')
+   add_project_arguments('-DHAVE_VORBIS', language: ['c', 'cpp'])
+endif
+
+if enabled_plugins.contains('yuv_renderer')
+   add_project_arguments('-DHAVE_SDL', language: ['c', 'cpp'])
+endif
+
+if enable_clients and enable_python and enabled_client_services.contains('chromecast')
+   add_project_arguments('-DHAVE_CHROMECAST', language: ['c', 'cpp'])
+endif
+
+if enable_clients and enable_python and enabled_client_services.contains('gmusic')
+   add_project_arguments('-DHAVE_GMUSIC', language: ['c', 'cpp'])
+endif
+
+if enable_clients and enable_python and enabled_client_services.contains('iheart')
+   add_project_arguments('-DHAVE_IHEART', language: ['c', 'cpp'])
+endif
+
+if enable_clients and enable_python and enabled_client_services.contains('plex')
+   add_project_arguments('-DHAVE_PLEX', language: ['c', 'cpp'])
+endif
+
+if enable_clients and enable_python and enabled_client_services.contains('soundcloud')
+   add_project_arguments('-DHAVE_SOUNDCLOUD', language: ['c', 'cpp'])
+endif
+
+if enable_clients and enable_python and enabled_client_services.contains('spotify')
+   add_project_arguments('-DHAVE_SPOTIFY -DHAVE_LIBSPOTIFY', language: ['c', 'cpp'])
+endif
+
+if enable_clients and enable_python and enabled_client_services.contains('tunein')
+   add_project_arguments('-DHAVE_TUNEIN', language: ['c', 'cpp'])
+endif
+
+if enable_clients and enable_python and enabled_client_services.contains('youtube')
+   add_project_arguments('-DHAVE_YOUTUBE', language: ['c', 'cpp'])
 endif
 
 if enable_gcc_warnings
@@ -194,12 +287,16 @@ endif
 subdir('3rdparty')
 subdir('include')
 subdir('libtizplatform')
+if enable_dbus
 subdir('rm')
+endif
 subdir('libtizcore')
 subdir('libtizonia')
 if enable_clients
    subdir('clients')
-   subdir('cast')
+   if enable_python and enabled_client_services.contains('chromecast')
+      subdir('cast')
+   endif
 endif
 subdir('plugins')
 subdir('config')
@@ -214,21 +311,31 @@ if enable_test
    subdir('libtizplatform/tests')
    subdir('rm/libtizrmproxy/tests')
    if enable_clients
-   # "too many arguments to function"
-   #   subdir('clients/chromecast/libtizchromecast/tests')
-      subdir('clients/gmusic/libtizgmusic/tests')
-   # "too many arguments to function"
-   #   subdir('clients/soundcloud/libtizsoundcloud/tests')
-   # "too few arguments to function"
-   #   subdir('clients/tunein/libtiztunein/tests')
-      subdir('clients/youtube/libtizyoutube/tests')
+   #  if enabled_client_services.contains('chromecast')
+   #     "too many arguments to function"
+   #     subdir('clients/chromecast/libtizchromecast/tests')
+   #  endif
+      if enabled_client_services.contains('gmusic')
+         subdir('clients/gmusic/libtizgmusic/tests')
+      endif
+   #  if enabled_client_services.contains('soundcloud')
+   #     "too many arguments to function"
+   #     subdir('clients/soundcloud/libtizsoundcloud/tests')
+   #  endif
+   #  if enabled_client_services.contains('tunein')
+   #     "too few arguments to function"
+   #     subdir('clients/tunein/libtiztunein/tests')
+   #  endif
+      if enabled_client_services.contains('youtube')
+         subdir('clients/youtube/libtizyoutube/tests')
+      endif
    endif
 endif
 
 # printing a list of the enabled plugins doesn't look right,
 # plus https://github.com/mesonbuild/meson/issues/6557
 summary({'Tizonia player': enable_player,
-         'libspotify plugin': enable_libspotify,
+         'libspotify plugin': enabled_client_services.contains('spotify'),
          'clients': enable_clients,
          'number of enabled plugins': enabled_plugins.length(),
          'ALSA plugin': enable_alsa,
diff -urp tizonia-openmax-il-0.22.0.orig/meson_options.txt tizonia-openmax-il-0.22.0/meson_options.txt
--- tizonia-openmax-il-0.22.0.orig/meson_options.txt	2020-05-22 15:33:08.000000000 -0700
+++ tizonia-openmax-il-0.22.0/meson_options.txt	2020-09-06 19:39:41.559562538 -0700
@@ -1,9 +1,11 @@
 option('blocking-etb-ftb', type: 'boolean', value: 'false', description: 'Enable fully conformant blocking behaviour of ETB and FTB APIs')
 option('blocking-sendcommand', type: 'boolean', value: 'false', description: 'Enable fully conformant blocking behaviour of SendCommand API')
 option('player', type: 'boolean', value: 'true', description: 'build the command-line player program (default: enabled)')
-option('libspotify', type: 'boolean', value: 'true', description: 'build the libspotify-based OpenMAX IL plugin (default: yes)')
 option('alsa', type: 'boolean', value: 'true', description: 'build the ALSA-based OpenMAX IL plugin (default: yes)')
 option('aac', type: 'boolean', value: 'true', description: 'build the AAC-based OpenMAX IL plugin (default: yes)')
+option('dbus', type: 'boolean', value: 'true', description: 'build D-BUS support (default: yes)')
+option('icecast-client', type: 'boolean', value: 'true', description: 'build Icecast client support (default: yes)')
+option('icecast-server', type: 'boolean', value: 'true', description: 'build Icecast server support (default: yes)')
 option('gcc-warnings', type: 'boolean', value: 'false', description: 'turn on lots of GCC warnings (for developers)')
 option('test', type: 'boolean', value: 'false', description: 'build the test programs (default: disabled)')
 option('bashcompletiondir', type: 'string', value: '', description: 'Bash completions directory')
@@ -94,3 +96,25 @@ option('plugins', type: 'array', descrip
    'webm_demuxer',
    'yuv_renderer' 
    ])
+
+option('client-services', type: 'array', description: 'which clients to build',
+   choices: [
+   'chromecast',
+   'gmusic',
+   'iheart',
+   'plex',
+   'soundcloud',
+   'spotify',
+   'tunein',
+   'youtube'
+   ],
+   value: [
+   'chromecast',
+   'gmusic',
+   'iheart',
+   'plex',
+   'soundcloud',
+   'spotify',
+   'tunein',
+   'youtube'
+   ])
diff -urp tizonia-openmax-il-0.22.0.orig/player/meson.build tizonia-openmax-il-0.22.0/player/meson.build
--- tizonia-openmax-il-0.22.0.orig/player/meson.build	2020-05-22 15:33:08.000000000 -0700
+++ tizonia-openmax-il-0.22.0/player/meson.build	2020-09-06 19:39:41.569562919 -0700
@@ -2,7 +2,9 @@ taglib_dep = dependency('taglib', requir
 libmediainfo_dep = dependency('libmediainfo', required: true, version: '>=0.7.65')
 
 subdir('tools')
+if enable_dbus
 subdir('dbus')
+endif
 subdir('man')
 subdir('src')
 
diff -urp tizonia-openmax-il-0.22.0.orig/player/src/meson.build tizonia-openmax-il-0.22.0/player/src/meson.build
--- tizonia-openmax-il-0.22.0.orig/player/src/meson.build	2020-05-22 15:33:08.000000000 -0700
+++ tizonia-openmax-il-0.22.0/player/src/meson.build	2020-09-06 20:09:58.078491524 -0700
@@ -1,4 +1,4 @@
-if enable_libspotify
+if enabled_client_services.contains('spotify')
    install_headers(
       'services/spotify/tizspotifygraph.hpp',
       'services/spotify/tizspotifygraphfsm.hpp',
@@ -7,9 +7,6 @@ if enable_libspotify
       'services/spotify/tizspotifymgr.hpp',
       install_dir: tizincludedir
    )
-endif
-
-if enable_libspotify
    spotify_sources = [
       'services/spotify/tizspotifygraph.cpp',
       'services/spotify/tizspotifygraphfsm.cpp',
@@ -40,52 +37,108 @@ tizonia_sources = [
    'tizgraphcmd.cpp',
    'tizgraph.cpp',
    'decoders/tizdecgraphmgr.cpp',
-   'decoders/tizdecgraph.cpp',
-   'decoders/tizmp3graph.cpp',
-   'decoders/tizaacgraph.cpp',
-   'decoders/tizopusgraph.cpp',
-   'decoders/tizoggopusgraph.cpp',
-   'decoders/tizvorbisgraph.cpp',
-   'decoders/tizflacgraph.cpp',
-   'decoders/tizoggflacgraph.cpp',
-   'decoders/tizpcmgraph.cpp',
-   'decoders/tizmpeggraph.cpp',
-   'httpserv/tizhttpservmgr.cpp',
+   'decoders/tizdecgraph.cpp' ]
+
+if enabled_plugins.contains('mp3_decoder') and enabled_plugins.contains('mp3_encoder') and enabled_plugins.contains('mp3_metadata')
+tizonia_sources += [ 'decoders/tizmp3graph.cpp' ]
+endif
+
+if enabled_plugins.contains('opus_decoder') and enabled_plugins.contains('opusfile_decoder')
+tizonia_sources += [ 'decoders/tizopusgraph.cpp' ]
+endif
+
+if enabled_plugins.contains('ogg_demuxer') and enabled_plugins.contains('ogg_muxer') and enabled_plugins.contains('opus_decoder') and enabled_plugins.contains('opusfile_decoder')
+tizonia_sources += [ 'decoders/tizoggopusgraph.cpp' ]
+endif
+
+if enabled_plugins.contains('vorbis_decoder')
+tizonia_sources += [ 'decoders/tizvorbisgraph.cpp' ]
+endif
+
+if enabled_plugins.contains('flac_decoder')
+tizonia_sources += [ 'decoders/tizflacgraph.cpp' ]
+endif
+
+if enabled_plugins.contains('ogg_demuxer') and enabled_plugins.contains('ogg_muxer') and enabled_plugins.contains('flac_decoder')
+tizonia_sources += [ 'decoders/tizoggflacgraph.cpp' ]
+endif
+
+if enabled_plugins.contains('pcm_decoder')
+tizonia_sources += [ 'decoders/tizpcmgraph.cpp' ]
+endif
+
+if enabled_plugins.contains('mp3_decoder') and enabled_plugins.contains('mp3_encoder') and enabled_plugins.contains('mp3_metadata')
+tizonia_sources += [ 'decoders/tizmpeggraph.cpp' ]
+endif
+
+if enable_icecast_server
+tizonia_sources += [ 'httpserv/tizhttpservmgr.cpp',
    'httpserv/tizhttpservgraph.cpp',
    'httpserv/tizhttpservgraphfsm.cpp',
-   'httpserv/tizhttpservgraphops.cpp',
-   'httpclnt/tizhttpclntmgr.cpp',
+   'httpserv/tizhttpservgraphops.cpp' ]
+endif
+
+if enable_clients and enable_icecast_client
+tizonia_sources += [ 'httpclnt/tizhttpclntmgr.cpp',
    'httpclnt/tizhttpclntgraph.cpp',
    'httpclnt/tizhttpclntgraphfsm.cpp',
-   'httpclnt/tizhttpclntgraphops.cpp',
-   'services/tizservicegraph.cpp',
+   'httpclnt/tizhttpclntgraphops.cpp' ]
+endif
+
+tizonia_sources += [ 'services/tizservicegraph.cpp',
    'services/tizservicegraphfsm.cpp',
    'services/tizradiograph.cpp',
-   'services/tizradiographfsm.cpp',
-   spotify_sources,
-   'services/googlemusic/tizgmusicgraph.cpp',
+   'services/tizradiographfsm.cpp' ]
+
+if enable_clients and enable_python and enabled_client_services.contains('spotify')
+tizonia_sources += [ spotify_sources ]
+endif
+
+if enable_clients and enable_python and enabled_client_services.contains('gmusic')
+tizonia_sources += [ 'services/googlemusic/tizgmusicgraph.cpp',
    'services/googlemusic/tizgmusicgraphops.cpp',
-   'services/googlemusic/tizgmusicmgr.cpp',
-   'services/soundcloud/tizscloudgraph.cpp',
+   'services/googlemusic/tizgmusicmgr.cpp' ]
+endif
+
+if enable_clients and enable_python and enabled_client_services.contains('soundcloud')
+tizonia_sources += [ 'services/soundcloud/tizscloudgraph.cpp',
    'services/soundcloud/tizscloudgraphops.cpp',
-   'services/soundcloud/tizscloudmgr.cpp',
-   'services/youtube/tizyoutubegraph.cpp',
+   'services/soundcloud/tizscloudmgr.cpp' ]
+endif
+
+if enable_clients and enable_python and enabled_client_services.contains('youtube')
+tizonia_sources += [ 'services/youtube/tizyoutubegraph.cpp',
    'services/youtube/tizyoutubegraphfsm.cpp',
    'services/youtube/tizyoutubegraphops.cpp',
-   'services/youtube/tizyoutubemgr.cpp',
-   'services/plex/tizplexgraph.cpp',
+   'services/youtube/tizyoutubemgr.cpp' ]
+endif
+
+if enable_clients and enable_python and enabled_client_services.contains('plex')
+tizonia_sources += [ 'services/plex/tizplexgraph.cpp',
    'services/plex/tizplexgraphops.cpp',
-   'services/plex/tizplexmgr.cpp',
-   'services/tunein/tiztuneingraph.cpp',
+   'services/plex/tizplexmgr.cpp' ]
+endif
+
+if enable_clients and enable_python and enabled_client_services.contains('tunein')
+tizonia_sources += [ 'services/tunein/tiztuneingraph.cpp',
    'services/tunein/tiztuneingraphops.cpp',
-   'services/tunein/tiztuneinmgr.cpp',
-   'services/chromecast/tizchromecastgraph.cpp',
+   'services/tunein/tiztuneinmgr.cpp' ]
+endif
+
+if enable_clients and enable_python and enabled_client_services.contains('chromecast')
+tizonia_sources += [ 'services/chromecast/tizchromecastgraph.cpp',
    'services/chromecast/tizchromecastgraphfsm.cpp',
    'services/chromecast/tizchromecastgraphops.cpp',
-   'services/chromecast/tizchromecastmgr.cpp',
-   'services/iheart/tiziheartgraph.cpp',
+   'services/chromecast/tizchromecastmgr.cpp' ]
+endif
+
+if enable_clients and enable_python and enabled_client_services.contains('iheart')
+tizonia_sources += [ 'services/iheart/tiziheartgraph.cpp',
    'services/iheart/tiziheartgraphops.cpp',
-   'services/iheart/tiziheartmgr.cpp',
+   'services/iheart/tiziheartmgr.cpp' ]
+endif
+
+tizonia_sources += [
    'tizplaybackevents.cpp',
    'tizprogressdisplay.cpp',
    'mpris/tizmprismgr.cpp',
@@ -96,14 +149,32 @@ tizonia_sources = [
 
 tizonia_inc = [
    include_directories('services'),
-   include_directories('services/googlemusic'),
-   include_directories('services/soundcloud'),
-   include_directories('services/youtube'),
-   include_directories('services/plex'),
-   include_directories('services/tunein'),
-   include_directories('services/iheart')
 ]
 
+if enable_clients and enable_python and enabled_client_services.contains('googlemusic')
+tizonia_inc += [ include_directories('services/googlemusic') ]
+endif
+
+if enable_clients and enable_python and enabled_client_services.contains('soundcloud')
+tizonia_inc += [ include_directories('services/soundcloud') ]
+endif
+
+if enable_clients and enable_python and enabled_client_services.contains('youtube')
+tizonia_inc += [ include_directories('services/youtube') ]
+endif
+
+if enable_clients and enable_python and enabled_client_services.contains('plex')
+tizonia_inc += [ include_directories('services/plex') ]
+endif
+
+if enable_clients and enable_python and enabled_client_services.contains('tunein')
+tizonia_inc += [ include_directories('services/tunein') ]
+endif
+
+if enable_clients and enable_python and enabled_client_services.contains('iheart')
+tizonia_inc += [ include_directories('services/iheart') ]
+endif
+
 tizonia = executable(
    'tizonia',
    sources: [tizonia_sources, mpris_dbus_hpp],
diff -urp tizonia-openmax-il-0.22.0.orig/plugins/http_source/src/meson.build tizonia-openmax-il-0.22.0/plugins/http_source/src/meson.build
--- tizonia-openmax-il-0.22.0.orig/plugins/http_source/src/meson.build	2020-05-22 15:33:08.000000000 -0700
+++ tizonia-openmax-il-0.22.0/plugins/http_source/src/meson.build	2020-09-06 20:21:36.125095721 -0700
@@ -1,34 +1,73 @@
 libtizhttpsrc_sources = [
-   'httpsrc.c',
+   'httpsrc.c' ]
+
+if enable_clients and enable_icecast_client
+libtizhttpsrc_sources = [
    'httpsrcport.c',
    'httpsrcprc.c',
+]
+endif
+
+libtizhttpsrc_dependencies = [
+      libtizonia_dep,
+]
+
+if enable_clients and enable_python
+if enabled_client_services.contains('gmusic')
+libtizhttpsrc_sources += [
    'gmusicprc.c',
-   'gmusiccfgport.c',
+   'gmusiccfgport.c'
+]
+libtizhttpsrc_dependencies += [ libtizgmusic_dep ]
+endif
+
+if enabled_client_services.contains('soundcloud')
+libtizhttpsrc_sources += [
    'scloudprc.c',
-   'scloudcfgport.c',
+   'scloudcfgport.c'
+]
+libtizhttpsrc_dependencies += [ libtizsoundcloud_dep ]
+endif
+
+if enabled_client_services.contains('youtube')
+libtizhttpsrc_sources += [
    'youtubeprc.c',
-   'youtubecfgport.c',
+   'youtubecfgport.c'
+]
+libtizhttpsrc_dependencies += [ libtizyoutube_dep ]
+endif
+
+if enabled_client_services.contains('plex')
+libtizhttpsrc_sources += [
    'plexprc.c',
-   'plexcfgport.c',
+   'plexcfgport.c'
+]
+libtizhttpsrc_dependencies += [ libtizplex_dep ]
+endif
+
+if enabled_client_services.contains('tunein')
+libtizhttpsrc_sources += [
    'tuneinprc.c',
    'tuneincfgport.c',
+]
+libtizhttpsrc_dependencies += [ libtiztunein_dep ]
+endif
+
+if enabled_client_services.contains('iheart')
+libtizhttpsrc_sources += [
    'iheartprc.c',
    'iheartcfgport.c'
 ]
+libtizhttpsrc_dependencies += [ libtiziheart_dep ]
+endif
+endif
+
 
 libtizhttpsrc = library(
    'tizhttpsrc',
    version: tizversion,
    sources: libtizhttpsrc_sources,
-   dependencies: [
-      libtizonia_dep,
-      libtizgmusic_dep,
-      libtizsoundcloud_dep,
-      libtizyoutube_dep,
-      libtizplex_dep,
-      libtiztunein_dep,
-      libtiziheart_dep
-   ],
+   dependencies: libtizhttpsrc_dependencies,
    install: true,
    install_dir: tizplugindir
 )
diff -urp tizonia-openmax-il-0.22.0.orig/plugins/meson.build tizonia-openmax-il-0.22.0/plugins/meson.build
--- tizonia-openmax-il-0.22.0.orig/plugins/meson.build	2020-05-22 15:33:08.000000000 -0700
+++ tizonia-openmax-il-0.22.0/plugins/meson.build	2020-09-06 20:23:40.199905343 -0700
@@ -6,7 +6,7 @@ if enabled_plugins.contains('ogg_demuxer
    oggz_dep = dependency('oggz', required: true, version: '>=1.1.1')
 endif
 
-if enable_clients and enabled_plugins.contains('chromecast_renderer')
+if enable_clients and enable_python and enabled_plugins.contains('chromecast_renderer')
    subdir('chromecast_renderer')
 endif
 
@@ -86,7 +86,7 @@ if enabled_plugins.contains('yuv_rendere
    subdir('yuv_renderer')
 endif
 
-if enable_libspotify
+if enable_clients and enable_python and enabled_client_services.contains('spotify')
    subdir('spotify_source')
 endif
 
