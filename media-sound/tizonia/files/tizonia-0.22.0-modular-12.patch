diff -urp tizonia-openmax-il-0.22.0.orig/libtizcore/src/tizcore.c tizonia-openmax-il-0.22.0/libtizcore/src/tizcore.c
--- tizonia-openmax-il-0.22.0.orig/libtizcore/src/tizcore.c	2020-05-22 15:33:08.000000000 -0700
+++ tizonia-openmax-il-0.22.0/libtizcore/src/tizcore.c	2020-09-07 11:09:04.283362807 -0700
@@ -47,7 +47,9 @@
 #include <OMX_Component.h>
 #include <OMX_Types.h>
 
+#ifdef HAVE_DBUS
 #include <tizrmproxy_c.h>
+#endif
 #include <tizplatform.h>
 
 #ifdef TIZ_LOG_CATEGORY_NAME
@@ -238,9 +240,11 @@ struct tizcore
   OMX_ERRORTYPE error;
   tiz_core_state_t state;
   tiz_core_registry_t p_registry;
+#ifdef HAVE_DBUS
   tiz_rm_t rm;
   tiz_rm_proxy_callbacks_t rmcbacks;
   bool rm_inited;
+#endif
   OMX_UUIDTYPE uuid;
 };
 
@@ -271,6 +275,7 @@ preemption_complete (OMX_U32 rid, OMX_PT
   TIZ_LOG (TIZ_PRIORITY_TRACE, "preemption_complete : rid [%u]", rid);
 }
 
+#ifdef HAVE_DBUS
 static OMX_ERRORTYPE
 init_rm (tiz_core_t * ap_core)
 {
@@ -330,6 +335,7 @@ deinit_rm (tiz_core_t * ap_core)
     }
   return omx_rc;
 }
+#endif
 
 static void
 free_roles (role_list_item_t * ap_role_lst)
@@ -1071,11 +1077,13 @@ do_init (tiz_core_state_t * ap_state, ti
       return OMX_ErrorNone;
     }
 
+#ifdef HAVE_DBUS
   /* Init here the RM handle */
   if (OMX_ErrorNone != (rc = init_rm (p_core)))
     {
       return rc;
     }
+#endif
 
   (void) tiz_thread_setname (&(p_core->thread),
                              (const OMX_STRING) TIZ_IL_CORE_THREAD_NAME);
@@ -1098,11 +1106,13 @@ do_deinit (tiz_core_state_t * ap_state,
 
   *ap_state = ETIZCoreStateStopped;
 
+#ifdef HAVE_DBUS
   /* Deinit the RM handle */
   if (OMX_ErrorNone != (rc = deinit_rm (p_core)))
     {
       return rc;
     }
+#endif
 
   delete_registry ();
   return OMX_ErrorNone;
