diff -urp tizonia-openmax-il-0.22.0.orig/plugins/http_source/src/httpsrc.c tizonia-openmax-il-0.22.0/plugins/http_source/src/httpsrc.c
--- tizonia-openmax-il-0.22.0.orig/plugins/http_source/src/httpsrc.c	2020-05-22 15:33:08.000000000 -0700
+++ tizonia-openmax-il-0.22.0/plugins/http_source/src/httpsrc.c	2020-09-06 20:50:22.132178301 -0700
@@ -43,21 +43,35 @@
 #include <tizport.h>
 #include <tizscheduler.h>
 
+#ifdef HAVE_ICECAST_CLIENT
 #include "httpsrcprc.h"
 #include "httpsrcport.h"
+#endif
 #include "httpsrc.h"
+#ifdef HAVE_GMUSIC
 #include "gmusicprc.h"
 #include "gmusiccfgport.h"
+#endif
+#ifdef HAVE_SOUNDCLOUD
 #include "scloudprc.h"
 #include "scloudcfgport.h"
+#endif
+#ifdef HAVE_TUNEIN
 #include "tuneinprc.h"
 #include "tuneincfgport.h"
+#endif
+#ifdef HAVE_YOUTUBE
 #include "youtubeprc.h"
 #include "youtubecfgport.h"
+#endif
+#ifdef HAVE_PLEX
 #include "plexprc.h"
 #include "plexcfgport.h"
+#endif
+#ifdef HAVE_IHEART
 #include "iheartprc.h"
 #include "iheartcfgport.h"
+#endif
 
 #ifdef TIZ_LOG_CATEGORY_NAME
 #undef TIZ_LOG_CATEGORY_NAME
@@ -81,14 +95,37 @@
 
 static OMX_VERSIONTYPE http_source_version = {{1, 0, 0, 0}};
 
+#if defined(HAVE_ICECAST_CLIENT) || defined (HAVE_GMUSIC) || defined (HAVE_SOUNDCLOUD) || defined(HAVE_TUNEIN) || defined (HAVE_YOUTUBE) || defined (HAVE_PLEX) || defined (HAVE_IHEART)
 static OMX_PTR
 instantiate_output_port (OMX_HANDLETYPE ap_hdl)
 {
   OMX_AUDIO_CODINGTYPE encodings[] = {
-    OMX_AUDIO_CodingUnused, OMX_AUDIO_CodingAutoDetect, OMX_AUDIO_CodingMP3,
-    OMX_AUDIO_CodingAAC,    OMX_AUDIO_CodingFLAC,       OMX_AUDIO_CodingVORBIS,
-    OMX_AUDIO_CodingOPUS,   OMX_AUDIO_CodingOGA,        OMX_AUDIO_CodingWEBM,
-    OMX_AUDIO_CodingMP4,    OMX_AUDIO_CodingMax};
+    OMX_AUDIO_CodingUnused, OMX_AUDIO_CodingAutoDetect,
+#ifdef HAVE_MP3
+    OMX_AUDIO_CodingMP3,
+#endif
+#ifdef HAVE_AAC
+    OMX_AUDIO_CodingAAC,
+#endif
+#ifdef HAVE_FLAC
+    OMX_AUDIO_CodingFLAC,
+#endif
+#ifdef HAVE_VORBIS
+    OMX_AUDIO_CodingVORBIS,
+#endif
+#ifdef HAVE_OPUS
+    OMX_AUDIO_CodingOPUS,
+#endif
+#ifdef HAVE_OGG
+    OMX_AUDIO_CodingOGA,
+#endif
+#ifdef HAVE_WEBM
+    OMX_AUDIO_CodingWEBM,
+#endif
+#ifdef HAVE_MP4
+    OMX_AUDIO_CodingMP4,
+#endif
+    OMX_AUDIO_CodingMax};
   tiz_port_options_t port_opts = {
     OMX_PortDomainAudio,
     OMX_DirOutput,
@@ -104,7 +141,9 @@ instantiate_output_port (OMX_HANDLETYPE
   return factory_new (tiz_get_type (ap_hdl, "httpsrcport"), &port_opts,
                       &encodings);
 }
+#endif
 
+#ifdef HAVE_ICECAST_CLIENT
 static OMX_PTR
 instantiate_config_port (OMX_HANDLETYPE ap_hdl)
 {
@@ -118,7 +157,9 @@ instantiate_processor (OMX_HANDLETYPE ap
 {
   return factory_new (tiz_get_type (ap_hdl, "httpsrcprc"));
 }
+#endif
 
+#ifdef HAVE_GMUSIC
 static OMX_PTR
 instantiate_gmusic_config_port (OMX_HANDLETYPE ap_hdl)
 {
@@ -132,7 +173,9 @@ instantiate_gmusic_processor (OMX_HANDLE
 {
   return factory_new (tiz_get_type (ap_hdl, "gmusicprc"));
 }
+#endif
 
+#ifdef HAVE_SOUNDCLOUD
 static OMX_PTR
 instantiate_scloud_config_port (OMX_HANDLETYPE ap_hdl)
 {
@@ -146,7 +189,9 @@ instantiate_scloud_processor (OMX_HANDLE
 {
   return factory_new (tiz_get_type (ap_hdl, "scloudprc"));
 }
+#endif
 
+#ifdef HAVE_TUNEIN
 static OMX_PTR
 instantiate_tunein_config_port (OMX_HANDLETYPE ap_hdl)
 {
@@ -160,7 +205,9 @@ instantiate_tunein_processor (OMX_HANDLE
 {
   return factory_new (tiz_get_type (ap_hdl, "tuneinprc"));
 }
+#endif
 
+#ifdef HAVE_YOUTUBE
 static OMX_PTR
 instantiate_youtube_config_port (OMX_HANDLETYPE ap_hdl)
 {
@@ -174,7 +221,9 @@ instantiate_youtube_processor (OMX_HANDL
 {
   return factory_new (tiz_get_type (ap_hdl, "youtubeprc"));
 }
+#endif
 
+#ifdef HAVE_PLEX
 static OMX_PTR
 instantiate_plex_config_port (OMX_HANDLETYPE ap_hdl)
 {
@@ -188,7 +237,9 @@ instantiate_plex_processor (OMX_HANDLETY
 {
   return factory_new (tiz_get_type (ap_hdl, "plexprc"));
 }
+#endif
 
+#ifdef HAVE_IHEART
 static OMX_PTR
 instantiate_iheart_config_port (OMX_HANDLETYPE ap_hdl)
 {
@@ -202,91 +253,181 @@ instantiate_iheart_processor (OMX_HANDLE
 {
   return factory_new (tiz_get_type (ap_hdl, "iheartprc"));
 }
+#endif
 
 OMX_ERRORTYPE
 OMX_ComponentInit (OMX_HANDLETYPE ap_hdl)
 {
+#ifdef HAVE_ICECAST_CLIENT
   tiz_role_factory_t http_client_role;
+#endif
+#ifdef HAVE_GMUSIC
   tiz_role_factory_t gmusic_client_role;
+#endif
+#ifdef HAVE_SOUNDCLOUD
   tiz_role_factory_t scloud_client_role;
+#endif
+#ifdef HAVE_TUNEIN
   tiz_role_factory_t tunein_client_role;
+#endif
+#ifdef HAVE_YOUTUBE
   tiz_role_factory_t youtube_client_role;
+#endif
+#ifdef HAVE_PLEX
   tiz_role_factory_t plex_client_role;
+#endif
+#ifdef HAVE_IHEART
   tiz_role_factory_t iheart_client_role;
+#endif
   const tiz_role_factory_t * rf_list[]
-    = {&http_client_role,   &gmusic_client_role,  &scloud_client_role,
-       &tunein_client_role, &youtube_client_role, &plex_client_role,
-       &iheart_client_role};
+    = {
+#ifdef HAVE_ICECAST_CLIENT
+       &http_client_role,
+#endif
+#ifdef HAVE_GMUSIC
+       &gmusic_client_role,
+#endif
+#ifdef HAVE_SOUNDCLOUD
+       &scloud_client_role,
+#endif
+#ifdef HAVE_TUNEIN
+       &tunein_client_role,
+#endif
+#ifdef HAVE_YOUTUBE
+       &youtube_client_role,
+#endif
+#ifdef HAVE_PLEX
+       &plex_client_role,
+#endif
+#ifdef HAVE_IHEART
+       &iheart_client_role
+#endif
+      };
+#ifdef HAVE_ICECAST_CLIENT
   tiz_type_factory_t httpsrcprc_type;
   tiz_type_factory_t httpsrcport_type;
+#endif
+
+#ifdef HAVE_GMUSIC
   tiz_type_factory_t gmusicprc_type;
   tiz_type_factory_t gmusiccfgport_type;
+#endif
+#ifdef HAVE_SOUNDCLOUD
   tiz_type_factory_t scloudprc_type;
   tiz_type_factory_t scloudcfgport_type;
+#endif
+#ifdef HAVE_TUNEIN
   tiz_type_factory_t tuneinprc_type;
   tiz_type_factory_t tuneincfgport_type;
+#endif
+#ifdef HAVE_YOUTUBE
   tiz_type_factory_t youtubeprc_type;
   tiz_type_factory_t youtubecfgport_type;
+#endif
+#ifdef HAVE_PLEX
   tiz_type_factory_t plexprc_type;
   tiz_type_factory_t plexcfgport_type;
+#endif
+#ifdef HAVE_IHEART
   tiz_type_factory_t iheartprc_type;
   tiz_type_factory_t iheartcfgport_type;
+#endif
   const tiz_type_factory_t * tf_list[]
-    = {&httpsrcprc_type,     &httpsrcport_type,   &gmusicprc_type,
-       &gmusiccfgport_type,  &scloudprc_type,     &scloudcfgport_type,
-       &tuneinprc_type,      &tuneincfgport_type, &youtubeprc_type,
-       &youtubecfgport_type, &plexprc_type,       &plexcfgport_type,
-       &iheartprc_type,      &iheartcfgport_type};
+    = {
+#ifdef HAVE_ICECAST_CLIENT
+       &httpsrcprc_type,
+       &httpsrcport_type,
+#endif
+#ifdef HAVE_GMUSIC
+       &gmusicprc_type,
+       &gmusiccfgport_type,
+#endif
+#ifdef HAVE_SOUNDCLOUD
+       &scloudprc_type,
+       &scloudcfgport_type,
+#endif
+#ifdef HAVE_TUNEIN
+       &tuneinprc_type,
+       &tuneincfgport_type,
+#endif
+#ifdef HAVE_YOUTUBE
+       &youtubeprc_type,
+       &youtubecfgport_type,
+#endif
+#ifdef HAVE_PLEX
+       &plexprc_type,
+       &plexcfgport_type,
+#endif
+#ifdef HAVE_IHEART
+       &iheartprc_type,
+       &iheartcfgport_type
+#endif
+      };
 
+#ifdef HAVE_ICECAST_CLIENT
   strcpy ((OMX_STRING) http_client_role.role,
           ARATELIA_HTTP_SOURCE_DEFAULT_ROLE);
   http_client_role.pf_cport = instantiate_config_port;
   http_client_role.pf_port[0] = instantiate_output_port;
   http_client_role.nports = 1;
   http_client_role.pf_proc = instantiate_processor;
+#endif
 
+#ifdef HAVE_GMUSIC
   strcpy ((OMX_STRING) gmusic_client_role.role,
           ARATELIA_GMUSIC_SOURCE_DEFAULT_ROLE);
   gmusic_client_role.pf_cport = instantiate_gmusic_config_port;
   gmusic_client_role.pf_port[0] = instantiate_output_port;
   gmusic_client_role.nports = 1;
   gmusic_client_role.pf_proc = instantiate_gmusic_processor;
+#endif
 
+#ifdef HAVE_SOUNDCLOUD
   strcpy ((OMX_STRING) scloud_client_role.role,
           ARATELIA_SCLOUD_SOURCE_DEFAULT_ROLE);
   scloud_client_role.pf_cport = instantiate_scloud_config_port;
   scloud_client_role.pf_port[0] = instantiate_output_port;
   scloud_client_role.nports = 1;
   scloud_client_role.pf_proc = instantiate_scloud_processor;
+#endif
 
+#ifdef HAVE_TUNEIN
   strcpy ((OMX_STRING) tunein_client_role.role,
           ARATELIA_TUNEIN_SOURCE_DEFAULT_ROLE);
   tunein_client_role.pf_cport = instantiate_tunein_config_port;
   tunein_client_role.pf_port[0] = instantiate_output_port;
   tunein_client_role.nports = 1;
   tunein_client_role.pf_proc = instantiate_tunein_processor;
+#endif
 
+#ifdef HAVE_YOUTUBE
   strcpy ((OMX_STRING) youtube_client_role.role,
           ARATELIA_YOUTUBE_SOURCE_DEFAULT_ROLE);
   youtube_client_role.pf_cport = instantiate_youtube_config_port;
   youtube_client_role.pf_port[0] = instantiate_output_port;
   youtube_client_role.nports = 1;
   youtube_client_role.pf_proc = instantiate_youtube_processor;
+#endif
 
+#ifdef HAVE_PLEX
   strcpy ((OMX_STRING) plex_client_role.role,
           ARATELIA_PLEX_SOURCE_DEFAULT_ROLE);
   plex_client_role.pf_cport = instantiate_plex_config_port;
   plex_client_role.pf_port[0] = instantiate_output_port;
   plex_client_role.nports = 1;
   plex_client_role.pf_proc = instantiate_plex_processor;
+#endif
 
+#ifdef HAVE_IHEART
   strcpy ((OMX_STRING) iheart_client_role.role,
           ARATELIA_IHEART_SOURCE_DEFAULT_ROLE);
   iheart_client_role.pf_cport = instantiate_iheart_config_port;
   iheart_client_role.pf_port[0] = instantiate_output_port;
   iheart_client_role.nports = 1;
   iheart_client_role.pf_proc = instantiate_iheart_processor;
+#endif
 
+#ifdef HAVE_ICECAST_CLIENT
   strcpy ((OMX_STRING) httpsrcprc_type.class_name, "httpsrcprc_class");
   httpsrcprc_type.pf_class_init = httpsrc_prc_class_init;
   strcpy ((OMX_STRING) httpsrcprc_type.object_name, "httpsrcprc");
@@ -296,7 +437,9 @@ OMX_ComponentInit (OMX_HANDLETYPE ap_hdl
   httpsrcport_type.pf_class_init = httpsrc_port_class_init;
   strcpy ((OMX_STRING) httpsrcport_type.object_name, "httpsrcport");
   httpsrcport_type.pf_object_init = httpsrc_port_init;
+#endif
 
+#ifdef HAVE_GMUSIC
   strcpy ((OMX_STRING) gmusicprc_type.class_name, "gmusicprc_class");
   gmusicprc_type.pf_class_init = gmusic_prc_class_init;
   strcpy ((OMX_STRING) gmusicprc_type.object_name, "gmusicprc");
@@ -306,7 +449,9 @@ OMX_ComponentInit (OMX_HANDLETYPE ap_hdl
   gmusiccfgport_type.pf_class_init = gmusic_cfgport_class_init;
   strcpy ((OMX_STRING) gmusiccfgport_type.object_name, "gmusiccfgport");
   gmusiccfgport_type.pf_object_init = gmusic_cfgport_init;
+#endif
 
+#ifdef HAVE_SOUNDCLOUD
   strcpy ((OMX_STRING) scloudprc_type.class_name, "scloudprc_class");
   scloudprc_type.pf_class_init = scloud_prc_class_init;
   strcpy ((OMX_STRING) scloudprc_type.object_name, "scloudprc");
@@ -316,7 +461,9 @@ OMX_ComponentInit (OMX_HANDLETYPE ap_hdl
   scloudcfgport_type.pf_class_init = scloud_cfgport_class_init;
   strcpy ((OMX_STRING) scloudcfgport_type.object_name, "scloudcfgport");
   scloudcfgport_type.pf_object_init = scloud_cfgport_init;
+#endif
 
+#ifdef HAVE_TUNEIN
   strcpy ((OMX_STRING) tuneinprc_type.class_name, "tuneinprc_class");
   tuneinprc_type.pf_class_init = tunein_prc_class_init;
   strcpy ((OMX_STRING) tuneinprc_type.object_name, "tuneinprc");
@@ -326,7 +473,9 @@ OMX_ComponentInit (OMX_HANDLETYPE ap_hdl
   tuneincfgport_type.pf_class_init = tunein_cfgport_class_init;
   strcpy ((OMX_STRING) tuneincfgport_type.object_name, "tuneincfgport");
   tuneincfgport_type.pf_object_init = tunein_cfgport_init;
+#endif
 
+#ifdef HAVE_YOUTUBE
   strcpy ((OMX_STRING) youtubeprc_type.class_name, "youtubeprc_class");
   youtubeprc_type.pf_class_init = youtube_prc_class_init;
   strcpy ((OMX_STRING) youtubeprc_type.object_name, "youtubeprc");
@@ -336,7 +485,9 @@ OMX_ComponentInit (OMX_HANDLETYPE ap_hdl
   youtubecfgport_type.pf_class_init = youtube_cfgport_class_init;
   strcpy ((OMX_STRING) youtubecfgport_type.object_name, "youtubecfgport");
   youtubecfgport_type.pf_object_init = youtube_cfgport_init;
+#endif
 
+#ifdef HAVE_PLEX
   strcpy ((OMX_STRING) plexprc_type.class_name, "plexprc_class");
   plexprc_type.pf_class_init = plex_prc_class_init;
   strcpy ((OMX_STRING) plexprc_type.object_name, "plexprc");
@@ -346,7 +497,9 @@ OMX_ComponentInit (OMX_HANDLETYPE ap_hdl
   plexcfgport_type.pf_class_init = plex_cfgport_class_init;
   strcpy ((OMX_STRING) plexcfgport_type.object_name, "plexcfgport");
   plexcfgport_type.pf_object_init = plex_cfgport_init;
+#endif
 
+#ifdef HAVE_IHEART
   strcpy ((OMX_STRING) iheartprc_type.class_name, "iheartprc_class");
   iheartprc_type.pf_class_init = iheart_prc_class_init;
   strcpy ((OMX_STRING) iheartprc_type.object_name, "iheartprc");
@@ -356,6 +509,7 @@ OMX_ComponentInit (OMX_HANDLETYPE ap_hdl
   iheartcfgport_type.pf_class_init = iheart_cfgport_class_init;
   strcpy ((OMX_STRING) iheartcfgport_type.object_name, "iheartcfgport");
   iheartcfgport_type.pf_object_init = iheart_cfgport_init;
+#endif
 
   /* Initialize the component infrastructure */
   tiz_check_omx (
