diff -urp tizonia-openmax-il-0.22.0.orig/meson.build tizonia-openmax-il-0.22.0/meson.build
--- tizonia-openmax-il-0.22.0.orig/meson.build	2020-09-06 23:16:34.586626471 -0700
+++ tizonia-openmax-il-0.22.0/meson.build	2020-09-06 23:18:12.950206606 -0700
@@ -22,6 +22,7 @@ cxx = meson.get_compiler('cpp')
 enable_blocking_etb_ftb = get_option('blocking-etb-ftb') #false
 enable_blocking_sendcommand = get_option('blocking-sendcommand') #false
 enable_player = get_option('player') #true
+enable_python = get_option('python') #true
 enable_alsa = get_option('alsa') #true
 enable_aac = get_option('aac') #true
 enable_dbus = get_option('dbus') #true
@@ -102,28 +103,36 @@ rt_dep = cc.find_library('rt', required:
 pthread_dep = dependency('threads', required: true)
 uuid_dep = dependency('uuid', required: true, version: '>=2.19.0')
 
+
 # clients and cast do not actually require all of them, see if this can be optimised further
+boost_modules = ['chrono', 'filesystem', 'system', 'thread', 'program_options']
+if enable_python
+boost_modules += [get_option('boost_python_version')]
+endif
+
 if enable_clients
    boost_dep = dependency(
-      'boost', modules: ['chrono', 'filesystem', 'system', 'thread', 'program_options', 'python3'],
-      required: true, version: '>=1.54'
+      'boost', modules: boost_modules,
+      required: true, version: '>=1.54', static: false
    )
 else
    if enable_player
       boost_dep = dependency(
-         'boost', modules: ['chrono', 'filesystem', 'system', 'thread', 'program_options', 'python3'],
-         required: true, version: '>=1.54'
+         'boost', modules: boost_modules,
+         required: true, version: '>=1.54', static: false
       )
    endif
 endif
 
 sqlite3_dep = dependency('sqlite3', required: true, version: '>=3.7.1')
 
+if enable_python
+
 pymod = import('python')
 python3_dep = dependency('python3-embed', required: false, version: '>=3.5')
 if not python3_dep.found()
-		python3_dep = dependency('python3', version: '>=3.5.0')
-	endif
+   python3_dep = dependency('python3', version: '>=3.5.0')
+endif
 
 if enable_docs
    python3 = pymod.find_installation(
@@ -135,6 +144,8 @@ else
    python3 = pymod.find_installation('python3', required: true)
 endif
 
+endif
+
 libev_dep = dependency('libev', required: false)
 have_system_libev = libev_dep.found()
 
@@ -292,7 +303,7 @@ subdir('rm')
 endif
 subdir('libtizcore')
 subdir('libtizonia')
-if enable_clients
+if enable_clients and enable_python
    subdir('clients')
    if enable_python and enabled_client_services.contains('chromecast')
       subdir('cast')
diff -urp tizonia-openmax-il-0.22.0.orig/meson_options.txt tizonia-openmax-il-0.22.0/meson_options.txt
--- tizonia-openmax-il-0.22.0.orig/meson_options.txt	2020-09-06 23:16:34.586626471 -0700
+++ tizonia-openmax-il-0.22.0/meson_options.txt	2020-09-06 23:16:59.667540930 -0700
@@ -1,6 +1,8 @@
 option('blocking-etb-ftb', type: 'boolean', value: 'false', description: 'Enable fully conformant blocking behaviour of ETB and FTB APIs')
 option('blocking-sendcommand', type: 'boolean', value: 'false', description: 'Enable fully conformant blocking behaviour of SendCommand API')
 option('player', type: 'boolean', value: 'true', description: 'build the command-line player program (default: enabled)')
+option('python', type: 'boolean', value: 'true', description: 'build with python support (default: true)')
+option('boost_python_version', type: 'string', value: 'python36', description: 'build with boost python version (default: python36)')
 option('alsa', type: 'boolean', value: 'true', description: 'build the ALSA-based OpenMAX IL plugin (default: yes)')
 option('aac', type: 'boolean', value: 'true', description: 'build the AAC-based OpenMAX IL plugin (default: yes)')
 option('dbus', type: 'boolean', value: 'true', description: 'build D-BUS support (default: yes)')
