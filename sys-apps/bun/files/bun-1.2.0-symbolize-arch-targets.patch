diff '--color=auto' -urp bun-bun-v1.2.0.orig/Makefile bun-bun-v1.2.0/Makefile
--- bun-bun-v1.2.0.orig/Makefile	2025-01-21 22:09:23.000000000 -0800
+++ bun-bun-v1.2.0/Makefile	2025-01-25 13:25:48.409558969 -0800
@@ -44,7 +44,7 @@ DOCKER_BUILDARCH = amd64
 BREW_PREFIX_PATH = /usr/local
 DEFAULT_MIN_MACOS_VERSION = 10.14
 MARCH_NATIVE = -march=$(CPU_TARGET) -mtune=$(CPU_TARGET)
-NATIVE_OR_OLD_MARCH = -march=nehalem
+NATIVE_OR_OLD_MARCH = -march=@MARCH_TARGET@
 endif
 
 MIN_MACOS_VERSION ?= $(DEFAULT_MIN_MACOS_VERSION)
diff '--color=auto' -urp bun-bun-v1.2.0.orig/build.zig bun-bun-v1.2.0/build.zig
--- bun-bun-v1.2.0.orig/build.zig	2025-01-21 22:09:23.000000000 -0800
+++ bun-bun-v1.2.0/build.zig	2025-01-25 13:28:18.364735078 -0800
@@ -136,12 +136,12 @@ pub fn getOSGlibCVersion(os: OperatingSy
 pub fn getCpuModel(os: OperatingSystem, arch: Arch) ?Target.Query.CpuModel {
     // https://github.com/oven-sh/bun/issues/12076
     if (os == .linux and arch == .aarch64) {
-        return .{ .explicit = &Target.aarch64.cpu.cortex_a35 };
+        return .{ .explicit = &Target.aarch64.cpu.@ZIG_TARGET_AARCH64@ };
     }
 
     // Be explicit and ensure we do not accidentally target a newer M-series chip
     if (os == .mac and arch == .aarch64) {
-        return .{ .explicit = &Target.aarch64.cpu.apple_m1 };
+        return .{ .explicit = &Target.aarch64.cpu.@ZIG_TARGET_AARCH64@ };
     }
 
     // note: x86_64 is dealt with in the CMake config and passed in.
@@ -592,7 +592,7 @@ const WindowsShim = struct {
 
     fn create(b: *Build) WindowsShim {
         const target = b.resolveTargetQuery(.{
-            .cpu_model = .{ .explicit = &std.Target.x86.cpu.nehalem },
+            .cpu_model = .{ .explicit = &std.Target.x86.cpu.@ZIG_TARGET_X86@ },
             .cpu_arch = .x86_64,
             .os_tag = .windows,
             .os_version_min = getOSVersionMin(.windows),
diff '--color=auto' -urp bun-bun-v1.2.0.orig/cmake/CompilerFlags.cmake bun-bun-v1.2.0/cmake/CompilerFlags.cmake
--- bun-bun-v1.2.0.orig/cmake/CompilerFlags.cmake	2025-01-21 22:09:23.000000000 -0800
+++ bun-bun-v1.2.0/cmake/CompilerFlags.cmake	2025-01-25 13:24:37.401946814 -0800
@@ -18,21 +18,7 @@ foreach(target ${targets})
 endforeach()
 
 # --- CPU target ---
-if(CMAKE_SYSTEM_PROCESSOR MATCHES "arm|ARM|arm64|ARM64|aarch64|AARCH64")
-  if(APPLE)
-    register_compiler_flags(-mcpu=apple-m1)
-  else()
-    register_compiler_flags(-march=armv8-a+crc -mtune=ampere1)
-  endif()
-elseif(CMAKE_SYSTEM_PROCESSOR MATCHES "x86_64|X86_64|x64|X64|amd64|AMD64")
-  if(ENABLE_BASELINE)
-    register_compiler_flags(-march=nehalem)
-  else()
-    register_compiler_flags(-march=haswell)
-  endif()
-else()
-  unsupported(CMAKE_SYSTEM_PROCESSOR)
-endif()
+register_compiler_flags(@COMPILER_FLAGS@)
 
 # --- MSVC runtime ---
 if(WIN32)
diff '--color=auto' -urp bun-bun-v1.2.0.orig/cmake/targets/BuildBun.cmake bun-bun-v1.2.0/cmake/targets/BuildBun.cmake
--- bun-bun-v1.2.0.orig/cmake/targets/BuildBun.cmake	2025-01-21 22:09:23.000000000 -0800
+++ bun-bun-v1.2.0/cmake/targets/BuildBun.cmake	2025-01-25 13:25:10.905764002 -0800
@@ -515,21 +515,7 @@ endif()
 
 set(BUN_ZIG_OUTPUT ${BUILD_PATH}/bun-zig.o)
 
-if(CMAKE_SYSTEM_PROCESSOR MATCHES "arm|ARM|arm64|ARM64|aarch64|AARCH64")
-  if(APPLE)
-    set(ZIG_CPU "apple_m1")
-  else()
-    set(ZIG_CPU "native")
-  endif()
-elseif(CMAKE_SYSTEM_PROCESSOR MATCHES "x86_64|X86_64|x64|X64|amd64|AMD64")
-  if(ENABLE_BASELINE)
-    set(ZIG_CPU "nehalem")
-  else()
-    set(ZIG_CPU "haswell")
-  endif()
-else()
-  unsupported(CMAKE_SYSTEM_PROCESSOR)
-endif()
+set(ZIG_CPU "@ZIG_CPU_TARGET@")
 
 set(ZIG_FLAGS_BUN)
 if(NOT "${REVISION}" STREQUAL "")
