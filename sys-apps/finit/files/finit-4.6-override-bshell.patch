diff -urp finit-4.6.orig/src/conf.c finit-4.6/src/conf.c
--- finit-4.6.orig/src/conf.c	2023-11-12 22:03:30.000000000 -0800
+++ finit-4.6/src/conf.c	2024-01-03 12:18:09.227443508 -0800
@@ -386,7 +386,7 @@ void conf_reset_env(void)
 	if (shell)
 		setenv("SHELL", shell, 1);
 	else
-		setenv("SHELL", _PATH_BSHELL, 1);
+		setenv("SHELL", _DISTRO_PATH_BSHELL, 1);
 	setenv("LOGNAME", "root", 1);
 	setenv("USER", "root", 1);
 }
diff -urp finit-4.6.orig/src/exec.c finit-4.6/src/exec.c
--- finit-4.6.orig/src/exec.c	2023-11-12 22:03:30.000000000 -0800
+++ finit-4.6/src/exec.c	2024-01-03 12:26:35.765393189 -0800
@@ -274,10 +274,10 @@ int exec_runtask(char *cmd, char *args[]
 		strlcat(buf, " ", sizeof(buf));
 		strlcat(buf, args[i], sizeof(buf));
 	}
-	logit(LOG_DEBUG, "Calling %s %s", _PATH_BSHELL, buf);
-	dbg("Calling %s %s", _PATH_BSHELL, buf);
+	logit(LOG_DEBUG, "Calling %s %s", _DISTRO_PATH_BSHELL, buf);
+	dbg("Calling %s %s", _DISTRO_PATH_BSHELL, buf);
 
-	return execvp(_PATH_BSHELL, argv);
+	return execvp(_DISTRO_PATH_BSHELL, argv);
 }
 
 static void prepare_tty(char *tty, speed_t speed, char *procname, struct rlimit rlimit[])
@@ -415,19 +415,19 @@ int sh(char *tty)
 	utmp_set_login(tty, NULL);
 
 	/* Start /bin/sh as a login shell, i.e. with a prefix '-' */
-	len = strlen(_PATH_BSHELL) + 2;
+	len = strlen(_DISTRO_PATH_BSHELL) + 2;
 	arg0 = malloc(len);
 	if (!arg0) {
 		err(1, "Failed allocating memory");
 		return 1;
 	}
-	snprintf(arg0, len, "-%s", _PATH_BSHELL);
+	snprintf(arg0, len, "-%s", _DISTRO_PATH_BSHELL);
 	args[0] = arg0;
 
 	/* Unblock signals inherited from parent */
 	sig_unblock();
 
-	return execv(_PATH_BSHELL, args);
+	return execv(_DISTRO_PATH_BSHELL, args);
 }
 
 pid_t run_sh(char *tty, int noclear, int nowait, struct rlimit rlimit[])
diff -urp finit-4.6.orig/src/finit.h finit-4.6/src/finit.h
--- finit-4.6.orig/src/finit.h	2023-11-12 22:03:30.000000000 -0800
+++ finit-4.6/src/finit.h	2024-01-03 12:27:15.043926525 -0800
@@ -59,6 +59,7 @@
 #define _PATH_RUNPARTS          FINIT_EXECPATH_ "/runparts"
 #define _PATH_SULOGIN           FINIT_EXECPATH_ "/sulogin"
 #define _PATH_GETTY             FINIT_EXECPATH_ "/getty"
+#define _DISTRO_PATH_BSHELL     "__DISTRO_BSHELL__"
 
 #define CMD_SIZE                1024
 #define LINE_SIZE               1024
diff -urp finit-4.6.orig/src/getty.c finit-4.6/src/getty.c
--- finit-4.6.orig/src/getty.c	2023-11-12 22:03:30.000000000 -0800
+++ finit-4.6/src/getty.c	2024-01-03 12:18:09.224443544 -0800
@@ -321,8 +321,8 @@ static int exec_login(char *name)
 		warnx("Failed exec %s, attempting fallback to %s ...", _PATH_LOGIN, _PATH_SULOGIN);
 		execl(_PATH_SULOGIN, _PATH_SULOGIN, NULL);
 
-		warnx("Failed exec %s, attempting fallback to %s ...", _PATH_SULOGIN, _PATH_BSHELL);
-		execl(_PATH_BSHELL, _PATH_BSHELL, NULL);
+		warnx("Failed exec %s, attempting fallback to %s ...", _PATH_SULOGIN, _DISTRO_PATH_BSHELL);
+		execl(_DISTRO_PATH_BSHELL, _DISTRO_PATH_BSHELL, NULL);
 	}
 
 	return 1;	/* We shouldn't get here ... */
diff -urp finit-4.6.orig/src/runparts.c finit-4.6/src/runparts.c
--- finit-4.6.orig/src/runparts.c	2023-11-12 22:03:30.000000000 -0800
+++ finit-4.6/src/runparts.c	2024-01-03 12:23:50.647351452 -0800
@@ -17,6 +17,7 @@
 # include <lite/lite.h>
 #endif
 
+#include "finit.h"
 #include "log.h"
 #include "sig.h"
 #include "util.h"
@@ -152,7 +153,7 @@ int run_parts(char *dir, char *cmd, cons
 			sig_unblock();
 			run_env(env);
 
-			_exit(execvp(_PATH_BSHELL, argv));
+			_exit(execvp(_DISTRO_PATH_BSHELL, argv));
 		}
 
 		if (waitpid(pid, &status, 0) == -1) {
diff -urp finit-4.6.orig/src/service.c finit-4.6/src/service.c
--- finit-4.6.orig/src/service.c	2023-11-12 22:03:30.000000000 -0800
+++ finit-4.6/src/service.c	2024-01-03 12:18:09.230443472 -0800
@@ -2083,7 +2083,7 @@ static void service_pre_script(svc_t *sv
 			strlcpy(buf, svc->pre_script, sizeof(buf));
 
 		set_pre_post_envs(svc, "pre");
-		execvp(_PATH_BSHELL, argv);
+		execvp(_DISTRO_PATH_BSHELL, argv);
 		_exit(EX_OSERR);
 	}
 
@@ -2136,7 +2136,7 @@ static void service_post_script(svc_t *s
 		if (svc_is_crashing(svc))
 			setenv("EXIT_CODE", "crashed", 1);
 
-		execvp(_PATH_BSHELL, argv);
+		execvp(_DISTRO_PATH_BSHELL, argv);
 		_exit(EX_OSERR);
 	}
 
@@ -2176,7 +2176,7 @@ void service_ready_script(svc_t *svc)
 			strlcpy(buf, svc->ready_script, sizeof(buf));
 
 		set_pre_post_envs(svc, "ready");
-		execvp(_PATH_BSHELL, argv);
+		execvp(_DISTRO_PATH_BSHELL, argv);
 		_exit(EX_OSERR);
 	}
 
diff -urp finit-4.6.orig/src/sulogin.c finit-4.6/src/sulogin.c
--- finit-4.6.orig/src/sulogin.c	2023-11-12 22:03:30.000000000 -0800
+++ finit-4.6/src/sulogin.c	2024-01-03 12:23:47.750385758 -0800
@@ -34,6 +34,8 @@
 #include <unistd.h>
 #include <sys/ioctl.h>
 
+#include "finit.h"
+
 #ifndef SULOGIN_USER
 #define SULOGIN_USER "root"
 #endif
@@ -127,7 +129,7 @@ static int sh(void)
 	ioctl(STDIN_FILENO, TIOCSCTTY, 1);
 	setenv("PS1", "# ", 1);
 
-	return execl(_PATH_BSHELL, "-sh", NULL);
+	return execl(_DISTRO_PATH_BSHELL, "-sh", NULL);
 }
 
 int main(void)
diff -urp finit-4.6.orig/src/tty.c finit-4.6/src/tty.c
--- finit-4.6.orig/src/tty.c	2023-11-12 22:03:30.000000000 -0800
+++ finit-4.6/src/tty.c	2024-01-03 12:26:58.693120825 -0800
@@ -288,7 +288,7 @@ int tty_exec(svc_t *svc)
 		ioctl(STDIN_FILENO, TIOCSCTTY, 1);
 
 		prctl(PR_SET_NAME, "finitsh", 0, 0, 0);
-		return execl(_PATH_BSHELL, "-sh", NULL);
+		return execl(_DISTRO_PATH_BSHELL, "-sh", NULL);
 	}
 
 	dev = tty_canonicalize(svc->dev);
