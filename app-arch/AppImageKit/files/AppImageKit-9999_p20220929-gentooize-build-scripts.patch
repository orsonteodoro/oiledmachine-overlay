diff -urp AppImageKit-9999.orig/ci/build-appdir.sh AppImageKit-9999/ci/build-appdir.sh
--- AppImageKit-9999.orig/ci/build-appdir.sh	2023-01-11 20:36:41.955649147 -0800
+++ AppImageKit-9999/ci/build-appdir.sh	2023-01-11 21:01:53.755448914 -0800
@@ -42,9 +42,10 @@ cp "$repo_root"/resources/AppRun "$appim
 cp "$install_prefix"/usr/lib/appimagekit/mksquashfs "$appimagetool_appdir"/usr/lib/appimagekit/
 
 # prefer binaries from /deps, if available
-export PATH=/deps/bin:"$PATH"
+export PATH="${WORKDIR}/deps/bin:$PATH"
 cp "$(which desktop-file-validate)" "$appimagetool_appdir"/usr/bin/
-cp "$(which zsyncmake)" "$appimagetool_appdir"/usr/bin/
+cp "$(which zsyncmake2)" "$appimagetool_appdir"/usr/bin/
+cp "$(which appstreamcli)" "$appimagetool_appdir"/usr/bin/
 
 cp "$repo_root"/resources/appimagetool.desktop "$appimagetool_appdir"
 cp "$repo_root"/resources/appimagetool.png "$appimagetool_appdir"/appimagetool.png
@@ -54,12 +55,13 @@ cp "$appimagetool_appdir"/appimagetool.p
 # https://github.com/AppImage/AppImageKit/issues/1171
 install -D "$(which desktop-file-validate)" "$appimagetool_appdir"/usr/bin/
 
-if [ -d /deps/ ]; then
+if [ -d "${WORKDIR}/deps/" ]; then
     # deploy GLib, gpgme and gcrypt
     mkdir -p "$appimagetool_appdir"/usr/lib/
-    cp /deps/lib/lib*.so* "$appimagetool_appdir"/usr/lib/
+    cp "${WORKDIR}/deps/lib/"lib*.so* "$appimagetool_appdir"/usr/lib/
 
 
+    false && \
     case "$ARCH" in
         x86_64)
             libarch=x86-64
@@ -81,6 +83,7 @@ if [ -d /deps/ ]; then
     # see this thread for more information on the topic:
     # https://mail.gnome.org/archives/gtk-devel-list/2012-July/msg00062.html
     # libpcre is used by desktop-file-validate
+    false && \
     for pattern in libffi libpcre; do
         # even though it is likely not necessary, we deploy every viable version of the libraries just to make sure...
         ldconfig -p | grep "$pattern" | grep "$libarch" | while read -r line; do
@@ -88,4 +91,6 @@ if [ -d /deps/ ]; then
             cp "$lib" "$appimagetool_appdir"/usr/lib/
         done
     done
+    cp "${WORKDIR}/deps/lib/libffi.so.${LIBFFI_SUFFIX}" "$appimagetool_appdir"/usr/lib/
+    cp "${WORKDIR}/deps/lib/libpcre.so" "$appimagetool_appdir"/usr/lib/
 fi
diff -urp AppImageKit-9999.orig/ci/build-binaries-and-appimage.sh AppImageKit-9999/ci/build-binaries-and-appimage.sh
--- AppImageKit-9999.orig/ci/build-binaries-and-appimage.sh	2023-01-11 20:36:41.955649147 -0800
+++ AppImageKit-9999/ci/build-binaries-and-appimage.sh	2023-01-11 21:07:56.293766309 -0800
@@ -6,9 +6,9 @@ set -o functrace
 
 # make sure the prebuilt libraries in the container will be found
 # (in case we're building in an AppImageBuild container)
-export LD_LIBRARY_PATH=/deps/lib:"$LD_LIBRARY_PATH"
-export PKG_CONFIG_PATH=/deps/lib/pkgconfig/
-export PATH=/deps/bin:"$PATH"
+export LD_LIBRARY_PATH="${WORKDIR}/deps/lib:$LD_LIBRARY_PATH"
+export PKG_CONFIG_PATH="${WORKDIR}/deps/lib/pkgconfig/"
+export PATH="${WORKDIR}/deps/bin:$PATH"
 
 # note: signing is not working at the moment
 # see ci-build.sh for more information
@@ -52,7 +52,8 @@ cmake "$REPO_ROOT" \
     -DCMAKE_INSTALL_PREFIX=/usr \
     -DCMAKE_BUILD_TYPE=RelWithDebInfo \
     -DBUILD_TESTING=ON \
-    -DAPPIMAGEKIT_PACKAGE_DEBS=ON
+    -DAPPIMAGEKIT_PACKAGE_DEBS=ON \
+    -DUSE_SYSTEM_MKSQUASHFS=ON
 
 # run build
 if [[ "$CI" != "" ]]; then
diff -urp AppImageKit-9999.orig/ci/build.sh AppImageKit-9999/ci/build.sh
--- AppImageKit-9999.orig/ci/build.sh	2023-01-11 20:36:41.955649147 -0800
+++ AppImageKit-9999/ci/build.sh	2023-01-11 21:32:07.871133458 -0800
@@ -53,10 +53,11 @@ repo_root="$this_dir"/..
 # docker image name
 docker_image=quay.io/appimage/appimagebuild:"$docker_dist"-"${docker_arch:-$ARCH}"
 # make sure it's up to date
+false && \
 docker pull "$docker_image"
 
 # prepare output directory
-mkdir -p out/
+mkdir -p "${WORKDIR}/build/out/"
 
 # we run all builds with non-privileged user accounts to make sure the build doesn't depend on such features
 uid="$(id -u)"
@@ -75,7 +76,7 @@ common_docker_opts=(
     -e ARCH="$ARCH"
     -i
     -v "$repo_root":/ws
-    -v "$(readlink -f out/)":/out
+    -v $(readlink -f "${WORKDIR}/build/out/"):"${WORKDIR}/build/out"
 )
 
 # make ctrl-c work
@@ -87,12 +88,14 @@ fi
 # TODO: make gnupg home available, e.g., through "-v" "$HOME"/.gnupg:/root/.gnupg
 # TODO: this ^ won't work since we don't build as root any more
 # note: we enforce using the same UID in the container as outside, so that the created files are owned by the caller
+false && \
 docker run --rm \
     --user "$uid" \
     "${common_docker_opts[@]}" \
     "-v" "$HOME"/.gnupg:/root/.gnupg \
     "$docker_image" \
     /bin/bash -xc "cd /out && /ws/ci/build-binaries-and-appimage.sh --run-tests"
+cd "${WORKDIR}/build/out" && "${S}/ci/build-binaries-and-appimage.sh" --run-tests
 
 # test appimagetool-"$ARCH".AppImage
 # note: if we're in a CI system, we allow the use of FUSE in the container, to make sure that this functionality works as intended
@@ -119,22 +122,24 @@ if [[ "$ARCH" != "arm"* ]] && [[ "$ARCH"
 
     # to make fuse happy, we need to use a "real" user
     # as we don't want to use root, we use the user "build" we created in AppImageBuild
+    false && \
     docker run --rm \
         --user build \
         "${docker_test_opts[@]}" \
         "$docker_image" \
         /bin/bash -xc "cd /out && bash /ws/ci/test-appimage.sh ./appimagetool-\"$ARCH\".AppImage"
+    cd "${WORKDIR}/build/out" && "${S}/ci/test-appimage.sh" "./appimagetool-$ARCH.AppImage"
 fi
 
 # remove binaries from output directory
-ls -al out/
-rm out/appimagetool
-rm out/{validate,digest}
+ls -al "${WORKDIR}/build/out/"
+rm "${WORKDIR}/build/out/appimagetool"
+rm "${WORKDIR}/build/out/"{validate,digest}
 
 # make sure the runtime contains the magic bytes
-hexdump -Cv out/runtime | head -n 1 | grep "41 49 02 00"
+hexdump -Cv "${WORKDIR}/build/out/runtime" | head -n 1 | grep "41 49 02 00"
 # fix filename for upload
-mv out/runtime out/runtime-"$ARCH"
+mv "${WORKDIR}/build/out/runtime" "${WORKDIR}/build/out/runtime-$ARCH"
 
 # fix filename for upload
-mv out/AppRun out/AppRun-"$ARCH"
+mv "${WORKDIR}/build/out/AppRun" "${WORKDIR}/build/out/AppRun-$ARCH"
diff -urp AppImageKit-9999.orig/ci/test-appimage.sh AppImageKit-9999/ci/test-appimage.sh
--- AppImageKit-9999.orig/ci/test-appimage.sh	2023-01-11 20:36:41.955649147 -0800
+++ AppImageKit-9999/ci/test-appimage.sh	2023-01-11 21:31:07.392744472 -0800
@@ -20,7 +20,7 @@ fi
 appimagetool="$1"
 
 if [[ "$PATCH_OUT_MAGIC_BYTES" != "" ]]; then
-    tmpdir="$(mktemp -d /tmp/appimage-test-XXXXX)"
+    tmpdir=$(mktemp -d "${T}/appimage-test-XXXXX")
     cleanup() {
         [[ -d "$tmpdir" ]] && rm -r "$tmpdir"
     }
