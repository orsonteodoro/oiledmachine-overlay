diff '--color=auto' -urp triton-2.1.0.orig/python/setup.py triton-2.1.0/python/setup.py
--- triton-2.1.0.orig/python/setup.py	2024-08-06 22:22:20.191238514 -0700
+++ triton-2.1.0/python/setup.py	2024-08-06 22:23:35.490030031 -0700
@@ -208,7 +208,8 @@ class CMakeBuild(build_ext):
             raise RuntimeError("Could not find user home directory")
         triton_cache_path = os.path.join(user_home, ".triton")
         # lit is used by the test suite
-        thirdparty_cmake_args = get_thirdparty_packages(triton_cache_path)
+        if not os.environ['OFFLINE_INSTALL']:
+            thirdparty_cmake_args = get_thirdparty_packages(triton_cache_path)
         extdir = os.path.abspath(os.path.dirname(self.get_ext_fullpath(ext.path)))
         # create build directories
         if not os.path.exists(self.build_temp):
@@ -268,8 +269,18 @@ class CMakeBuild(build_ext):
         
         if lit_dir is not None:
             cmake_args.append("-DLLVM_EXTERNAL_LIT=" + lit_dir)
-        cmake_args.extend(thirdparty_cmake_args)
 
+        if os.environ['OFFLINE_INSTALL']:
+            cmake_args += [
+                "-DPYBIND11_INCLUDE_DIR=" + os.environ['PYBIND11_INCLUDE_DIR'],
+                "-DPYBIND11_SYSPATH=" + os.environ['PYBIND11_SYSPATH'],
+                "-DLLVM_INCLUDE_DIRS=" + os.environ['LLVM_INCLUDE_DIRS'],
+                "-DLLVM_LIBRARY_DIR=" + os.environ['LLVM_LIBRARY_DIR'],
+                "-DLLVM_SYSPATH=" + os.environ['LLVM_SYSPATH'],
+            ]
+        else:
+            cmake_args.extend(thirdparty_cmake_args)
+        
         # configuration
         cfg = get_build_type()
         build_args = ["--config", cfg]
@@ -303,7 +314,8 @@ class CMakeBuild(build_ext):
         subprocess.check_call(["cmake", "--build", "."] + build_args, cwd=cmake_dir)
 
 
-download_and_copy_ptxas()
+if not os.environ['OFFLINE_INSTALL']:
+    download_and_copy_ptxas()
 
 
 setup(
