diff '--color=auto' -urp triton-b51402436b71989f14218f70a955c65dd45aee7f.orig/python/setup.py triton-b51402436b71989f14218f70a955c65dd45aee7f/python/setup.py
--- triton-b51402436b71989f14218f70a955c65dd45aee7f.orig/python/setup.py	2024-08-07 16:12:17.924387773 -0700
+++ triton-b51402436b71989f14218f70a955c65dd45aee7f/python/setup.py	2024-08-07 16:14:00.194630702 -0700
@@ -412,8 +412,18 @@ class CMakeBuild(build_ext):
         ]
         if lit_dir is not None:
             cmake_args.append("-DLLVM_EXTERNAL_LIT=" + lit_dir)
-        cmake_args.extend(thirdparty_cmake_args)
 
+        if os.environ['OFFLINE_INSTALL']:
+            cmake_args += [
+                "-DPYBIND11_INCLUDE_DIR=" + os.environ['PYBIND11_INCLUDE_DIR'],
+                "-DPYBIND11_SYSPATH=" + os.environ['PYBIND11_SYSPATH'],
+                "-DLLVM_INCLUDE_DIRS=" + os.environ['LLVM_INCLUDE_DIRS'],
+                "-DLLVM_LIBRARY_DIR=" + os.environ['LLVM_LIBRARY_DIR'],
+                "-DLLVM_SYSPATH=" + os.environ['LLVM_SYSPATH'],
+            ]
+        else:
+            cmake_args.extend(thirdparty_cmake_args)
+        
         # configuration
         cfg = get_build_type()
         build_args = ["--config", cfg]
@@ -472,54 +482,55 @@ nvidia_version_path = os.path.join(get_b
 with open(nvidia_version_path, "r") as nvidia_version_file:
     NVIDIA_TOOLCHAIN_VERSION = nvidia_version_file.read().strip()
 
-download_and_copy(
-    name="ptxas",
-    src_path="bin/ptxas",
-    variable="TRITON_PTXAS_PATH",
-    version=NVIDIA_TOOLCHAIN_VERSION,
-    url_func=lambda arch, version:
-    f"https://anaconda.org/nvidia/cuda-nvcc/{version}/download/linux-{arch}/cuda-nvcc-{version}-0.tar.bz2",
-)
-download_and_copy(
-    name="cuobjdump",
-    src_path="bin/cuobjdump",
-    variable="TRITON_CUOBJDUMP_PATH",
-    version=NVIDIA_TOOLCHAIN_VERSION,
-    url_func=lambda arch, version:
-    f"https://anaconda.org/nvidia/cuda-cuobjdump/{version}/download/linux-{arch}/cuda-cuobjdump-{version}-0.tar.bz2",
-)
-download_and_copy(
-    name="nvdisasm",
-    src_path="bin/nvdisasm",
-    variable="TRITON_NVDISASM_PATH",
-    version=NVIDIA_TOOLCHAIN_VERSION,
-    url_func=lambda arch, version:
-    f"https://anaconda.org/nvidia/cuda-nvdisasm/{version}/download/linux-{arch}/cuda-nvdisasm-{version}-0.tar.bz2",
-)
-download_and_copy(
-    name="cudacrt",
-    src_path="include",
-    variable="TRITON_CUDACRT_PATH",
-    version=NVIDIA_TOOLCHAIN_VERSION,
-    url_func=lambda arch, version:
-    f"https://anaconda.org/nvidia/cuda-nvcc/{version}/download/linux-{arch}/cuda-nvcc-{version}-0.tar.bz2",
-)
-download_and_copy(
-    name="cudart",
-    src_path="include",
-    variable="TRITON_CUDART_PATH",
-    version=NVIDIA_TOOLCHAIN_VERSION,
-    url_func=lambda arch, version:
-    f"https://anaconda.org/nvidia/cuda-cudart-dev/{version}/download/linux-{arch}/cuda-cudart-dev-{version}-0.tar.bz2",
-)
-download_and_copy(
-    name="cupti",
-    src_path="include",
-    variable="TRITON_CUPTI_PATH",
-    version=NVIDIA_TOOLCHAIN_VERSION,
-    url_func=lambda arch, version:
-    f"https://anaconda.org/nvidia/cuda-cupti/{version}/download/linux-{arch}/cuda-cupti-{version}-0.tar.bz2",
-)
+if not os.environ['OFFLINE_INSTALL']:
+    download_and_copy(
+        name="ptxas",
+        src_path="bin/ptxas",
+        variable="TRITON_PTXAS_PATH",
+        version=NVIDIA_TOOLCHAIN_VERSION,
+        url_func=lambda arch, version:
+        f"https://anaconda.org/nvidia/cuda-nvcc/{version}/download/linux-{arch}/cuda-nvcc-{version}-0.tar.bz2",
+    )
+    download_and_copy(
+        name="cuobjdump",
+        src_path="bin/cuobjdump",
+        variable="TRITON_CUOBJDUMP_PATH",
+        version=NVIDIA_TOOLCHAIN_VERSION,
+        url_func=lambda arch, version:
+        f"https://anaconda.org/nvidia/cuda-cuobjdump/{version}/download/linux-{arch}/cuda-cuobjdump-{version}-0.tar.bz2",
+    )
+    download_and_copy(
+        name="nvdisasm",
+        src_path="bin/nvdisasm",
+        variable="TRITON_NVDISASM_PATH",
+        version=NVIDIA_TOOLCHAIN_VERSION,
+        url_func=lambda arch, version:
+        f"https://anaconda.org/nvidia/cuda-nvdisasm/{version}/download/linux-{arch}/cuda-nvdisasm-{version}-0.tar.bz2",
+    )
+    download_and_copy(
+        name="cudacrt",
+        src_path="include",
+        variable="TRITON_CUDACRT_PATH",
+        version=NVIDIA_TOOLCHAIN_VERSION,
+        url_func=lambda arch, version:
+        f"https://anaconda.org/nvidia/cuda-nvcc/{version}/download/linux-{arch}/cuda-nvcc-{version}-0.tar.bz2",
+    )
+    download_and_copy(
+        name="cudart",
+        src_path="include",
+        variable="TRITON_CUDART_PATH",
+        version=NVIDIA_TOOLCHAIN_VERSION,
+        url_func=lambda arch, version:
+        f"https://anaconda.org/nvidia/cuda-cudart-dev/{version}/download/linux-{arch}/cuda-cudart-dev-{version}-0.tar.bz2",
+    )
+    download_and_copy(
+        name="cupti",
+        src_path="include",
+        variable="TRITON_CUPTI_PATH",
+        version=NVIDIA_TOOLCHAIN_VERSION,
+        url_func=lambda arch, version:
+        f"https://anaconda.org/nvidia/cuda-cupti/{version}/download/linux-{arch}/cuda-cupti-{version}-0.tar.bz2",
+    )
 
 backends = [*BackendInstaller.copy(["nvidia", "amd"]), *BackendInstaller.copy_externals()]
 
Only in triton-b51402436b71989f14218f70a955c65dd45aee7f/python: setup.py.orig
Only in triton-b51402436b71989f14218f70a955c65dd45aee7f/python: setup.py.rej
