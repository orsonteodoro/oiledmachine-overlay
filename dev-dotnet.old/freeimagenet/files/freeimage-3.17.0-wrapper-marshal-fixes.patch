diff -urp FreeImage.orig/Wrapper/FreeImage.NET/cs/Library/FreeImageStaticImports.cs FreeImage/Wrapper/FreeImage.NET/cs/Library/FreeImageStaticImports.cs
--- FreeImage.orig/Wrapper/FreeImage.NET/cs/Library/FreeImageStaticImports.cs	2009-09-29 14:15:36.000000000 -0700
+++ FreeImage/Wrapper/FreeImage.NET/cs/Library/FreeImageStaticImports.cs	2017-01-12 18:20:56.773310556 -0800
@@ -302,7 +302,7 @@ namespace FreeImageAPI
 		/// <param name="filename">Name of the file to decode.</param>
 		/// <param name="flags">Flags to enable or disable plugin-features.</param>
 		/// <returns>Handle to a FreeImage bitmap.</returns>
-		[DllImport(FreeImageLibrary, CharSet = CharSet.Unicode, EntryPoint = "FreeImage_LoadU")]
+		[DllImport(FreeImageLibrary, CharSet = CharSet.Auto, EntryPoint = "FreeImage_Load")]
 		public static extern FIBITMAP Load(FREE_IMAGE_FORMAT fif, string filename, FREE_IMAGE_LOAD_FLAGS flags);
 
 		/// <summary>
@@ -785,7 +785,7 @@ namespace FreeImageAPI
 		/// <param name="filename">Name of the file to analyze.</param>
 		/// <param name="size">Reserved parameter - use 0.</param>
 		/// <returns>Type of the bitmap.</returns>
-		[DllImport(FreeImageLibrary, CharSet = CharSet.Unicode, EntryPoint = "FreeImage_GetFileTypeU")]
+		[DllImport(FreeImageLibrary, CharSet = CharSet.Auto, EntryPoint = "FreeImage_GetFileType")]
 		public static extern FREE_IMAGE_FORMAT GetFileType(string filename, int size);
 
 
@@ -2366,4 +2366,4 @@ namespace FreeImageAPI
 
 		#endregion
 	}
-}
\ No newline at end of file
+}
diff -urp FreeImage.orig/Wrapper/FreeImage.NET/cs/UnitTest/FreeImage.cs FreeImage/Wrapper/FreeImage.NET/cs/UnitTest/FreeImage.cs
--- FreeImage.orig/Wrapper/FreeImage.NET/cs/UnitTest/FreeImage.cs	2011-12-29 08:49:30.000000000 -0800
+++ FreeImage/Wrapper/FreeImage.NET/cs/UnitTest/FreeImage.cs	2017-01-12 18:21:04.622603871 -0800
@@ -4434,7 +4434,7 @@ namespace FreeImageAPI
 		/// <param name="filename">Name of the file to decode.</param>
 		/// <param name="flags">Flags to enable or disable plugin-features.</param>
 		/// <returns>Handle to a FreeImage bitmap.</returns>
-		[DllImport(FreeImageLibrary, CharSet = CharSet.Unicode, EntryPoint = "FreeImage_LoadU")]
+		[DllImport(FreeImageLibrary, CharSet = CharSet.Auto, EntryPoint = "FreeImage_Load")]
 		public static extern FIBITMAP Load(FREE_IMAGE_FORMAT fif, string filename, FREE_IMAGE_LOAD_FLAGS flags);
 
 		/// <summary>
@@ -4917,7 +4917,7 @@ namespace FreeImageAPI
 		/// <param name="filename">Name of the file to analyze.</param>
 		/// <param name="size">Reserved parameter - use 0.</param>
 		/// <returns>Type of the bitmap.</returns>
-		[DllImport(FreeImageLibrary, CharSet = CharSet.Unicode, EntryPoint = "FreeImage_GetFileTypeU")]
+		[DllImport(FreeImageLibrary, CharSet = CharSet.Auto, EntryPoint = "FreeImage_GetFileType")]
 		public static extern FREE_IMAGE_FORMAT GetFileType(string filename, int size);
 
 
