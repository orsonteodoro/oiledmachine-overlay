diff -urp -x '*.rej' -x '*.orig' MonoGame-3.5.1.orig/default.build MonoGame-3.5.1/default.build
--- MonoGame-3.5.1.orig/default.build	2016-03-29 23:30:30.000000000 -0700
+++ MonoGame-3.5.1/default.build	2017-01-07 02:59:43.190607425 -0800
@@ -141,11 +141,11 @@
     <if test="${os == 'MacOS'}">
       <if test="${file::exists('/Developer/MonoAndroid/usr/bin/mandroid')}">
         <exec program="mono" commandline="Protobuild.exe -generate Android" />
-        <exec program="mdtool" basedir="${mdtooldir}" commandline="build -t:Clean -c:Release MonoGame.Framework.Android.sln" />
-        <exec program="mdtool" basedir="${mdtooldir}" commandline="build -t:Build -c:Release MonoGame.Framework.Android.sln" />
+	<exec program="xbuild" commandline="MonoGame.Framework.Android.sln /t:Clean /p:Configuration=Release" />
+	<exec program="xbuild" commandline="MonoGame.Framework.Android.sln /t:Build /p:Configuration=Release" />
         <exec program="mono" commandline="Protobuild.exe -generate Ouya" />
-        <exec program="mdtool" basedir="${mdtooldir}" commandline="build -t:Clean -c:Release MonoGame.Framework.Ouya.sln" />
-        <exec program="mdtool" basedir="${mdtooldir}" commandline="build -t:Build -c:Release MonoGame.Framework.Ouya.sln" />
+	<exec program="xbuild" commandline="MonoGame.Framework.Ouya.sln /t:Clean /p:Configuration=Release" />
+	<exec program="xbuild" commandline="MonoGame.Framework.Ouya.sln /t:Build /p:Configuration=Release" />        
       </if>
     </if>
   </target>
diff -urp -x '*.rej' -x '*.orig' MonoGame-3.5.1.orig/IDE/MonoDevelop/MonoDevelop.MonoGame/ContentItemTemplate.cs MonoGame-3.5.1/IDE/MonoDevelop/MonoDevelop.MonoGame/ContentItemTemplate.cs
--- MonoGame-3.5.1.orig/IDE/MonoDevelop/MonoDevelop.MonoGame/ContentItemTemplate.cs	2016-03-29 23:30:30.000000000 -0700
+++ MonoGame-3.5.1/IDE/MonoDevelop/MonoDevelop.MonoGame/ContentItemTemplate.cs	2017-01-07 02:59:43.188607349 -0800
@@ -31,10 +31,11 @@ namespace MonoDevelop.MonoGame
 			}
 		}
 
-		public override bool AddToProject (SolutionItem policyParent, Project project, string language, string directory, string name)
+		public override bool AddToProject(SolutionFolderItem policyParent, Project project, string language, string directory, string name)
 		{
-			ProjectFile file = template.AddFileToProject (policyParent, project, language, directory, name);
-			if (file != null) {
+			ProjectFile file = template.AddFileToProject(policyParent, project, language, directory, name);
+			if (file != null)
+			{
 				file.BuildAction = BuildAction.Content;
 				file.CopyToOutputDirectory = mode;
 				return true;
diff -urp -x '*.rej' -x '*.orig' MonoGame-3.5.1.orig/IDE/MonoDevelop/MonoDevelop.MonoGame/MonoDevelop.MonoGame.addin.xml MonoGame-3.5.1/IDE/MonoDevelop/MonoDevelop.MonoGame/MonoDevelop.MonoGame.addin.xml
--- MonoGame-3.5.1.orig/IDE/MonoDevelop/MonoDevelop.MonoGame/MonoDevelop.MonoGame.addin.xml	2016-03-29 23:30:30.000000000 -0700
+++ MonoGame-3.5.1/IDE/MonoDevelop/MonoDevelop.MonoGame/MonoDevelop.MonoGame.addin.xml	2017-01-07 02:59:43.188607349 -0800
@@ -77,8 +77,8 @@
     <Import file="exclude.addins" />
   </Runtime>
   <Dependencies>
-    <Addin id="Core" version="5.0" />
-    <Addin id="Ide" version="5.0" />
+    <Addin id="Core" version="6.0" />
+    <Addin id="Ide" version="6.0" />
     <Addin id="DesignerSupport" version="4.0" />
   </Dependencies>
   <ConditionType id="IsWindows" type="MonoDevelop.MonoGame.MonoGameIsWindowsCondition" />
@@ -87,14 +87,15 @@
   <Extension path="/MonoDevelop/Core/StockIcons">
     <StockIcon stockid="monogame-project" file="icons/monogame-project-32.png" />
   </Extension>
-  <Extension path="/MonoDevelop/ProjectModel/MSBuildExtensions">
+  <Extension path="/MonoDevelop/ProjectModel/ProjectModelExtensions">
     <Class class="MonoDevelop.MonoGame.MonoGameMSBuildImports" />
   </Extension>
+  <!--
   <Extension path="/MonoDevelop/ProjectModel/MSBuildItemTypes">
     <DotNetProjectSubtype id="MonoGame" guid="{9b831fef-f496-498f-9fe8-180da5cb4258}" type="MonoDevelop.MonoGame.MonoGameProject">
-      <!-- Add MonoGame Specific Imports  -->
     </DotNetProjectSubtype>
   </Extension>
+	-->
   <Extension path="/MonoDevelop/Ide/ProjectTemplateCategories">
     <Category id="monogame" name="MonoGame" icon="monogame-project" insertbefore="other">
       <Category id="app" name="App">
@@ -109,9 +110,11 @@
   <Extension path="/MonoDevelop/Ide/FileTemplateTypes">
     <FileTemplateType name="ContentFile" class="MonoDevelop.MonoGame.ContentItemTemplate" />
   </Extension>
+  <!--
   <Extension path="/MonoDevelop/ProjectModel/ProjectBindings">
     <ProjectBinding id="MonoGame" class="MonoDevelop.MonoGame.MonoGameProjectBinding" />
   </Extension>
+	-->
   <Extension path="/MonoDevelop/Ide/ProjectTemplates">
     <ProjectTemplate id="MonoGameSharedProject" file="templates/MonoGameSharedProject.xpt.xml" />
     <ProjectTemplate id="MonoGamePCLProject" file="templates/MonoGamePCLProject.xpt.xml" />
@@ -151,9 +154,11 @@
     <DisplayBinding id="MonoGamePipeline" insertbefore="DefaultDisplayBinding" class="MonoDevelop.MonoGame.PipelineDisplayBinding" />
   </Extension>
   <!-- We still need this for MonoMac and Xamarin Mac Classic support -->
+  <!--
   <Extension path="/MonoDevelop/ProjectModel/ProjectServiceExtensions">
     <Class class="MonoDevelop.MonoGame.MonoGameBuildExtension" />
   </Extension>
+  -->
   <Module>
     <Runtime>
       <Import assembly="MonoDevelop.MonoGame.Android.dll" />
diff -urp -x '*.rej' -x '*.orig' MonoGame-3.5.1.orig/IDE/MonoDevelop/MonoDevelop.MonoGame/MonoDevelop.MonoGame.csproj MonoGame-3.5.1/IDE/MonoDevelop/MonoDevelop.MonoGame/MonoDevelop.MonoGame.csproj
--- MonoGame-3.5.1.orig/IDE/MonoDevelop/MonoDevelop.MonoGame/MonoDevelop.MonoGame.csproj	2016-03-29 23:30:30.000000000 -0700
+++ MonoGame-3.5.1/IDE/MonoDevelop/MonoDevelop.MonoGame/MonoDevelop.MonoGame.csproj	2017-01-07 02:59:43.188607349 -0800
@@ -71,10 +71,8 @@
   </ItemGroup>
   <ItemGroup>
     <Compile Include="Properties\AssemblyInfo.cs" />
-    <Compile Include="MonoGameProject.cs" />
     <Compile Include="PipelineDisplayBinding.cs" />
     <Compile Include="MonoGameContentEditorViewContent.cs" />
-    <Compile Include="MonoGameBuildExtension.cs" />
     <Compile Include="MonoGameConditions.cs" />
     <Compile Include="ContentItemTemplate.cs" />
     <Compile Include="MonoGameMSBuildImports.cs" />
@@ -194,4 +192,8 @@
   <ItemGroup>
     <EmbeddedResource Include="MonoDevelop.MonoGame.addin.xml" />
   </ItemGroup>
+  <ItemGroup>
+    <None Include="MonoGameProject.cs" />
+    <None Include="MonoGameBuildExtension.cs" />
+  </ItemGroup>
 </Project>
diff -urp -x '*.rej' -x '*.orig' MonoGame-3.5.1.orig/IDE/MonoDevelop/MonoDevelop.MonoGame/MonoGameMSBuildImports.cs MonoGame-3.5.1/IDE/MonoDevelop/MonoDevelop.MonoGame/MonoGameMSBuildImports.cs
--- MonoGame-3.5.1.orig/IDE/MonoDevelop/MonoDevelop.MonoGame/MonoGameMSBuildImports.cs	2016-03-29 23:30:30.000000000 -0700
+++ MonoGame-3.5.1/IDE/MonoDevelop/MonoDevelop.MonoGame/MonoGameMSBuildImports.cs	2017-01-07 03:06:51.482831112 -0800
@@ -2,56 +2,60 @@
 using System.Xml;
 using System.Xml.XPath;
 using System.Linq;
-using MonoDevelop.Projects.Formats.MSBuild;
 using System.Collections.Generic;
+using MonoDevelop.Projects.MSBuild;
 using MonoDevelop.Projects;
 
 namespace MonoDevelop.MonoGame
 {
-	public class MonoGameMSBuildImports : MSBuildExtension
+	public class MonoGameMSBuildImports : DotNetProjectExtension
 	{
 		const string MonoGameContentBuildTargets = "$(MSBuildExtensionsPath)\\MonoGame\\v3.0\\MonoGame.Content.Builder.targets";
 		const string MonoGameCommonProps = "$(MSBuildExtensionsPath)\\MonoGame\\v3.0\\MonoGame.Common.props";
 		const string MonoGameExtensionsPath = @"$(MonoGameInstallDirectory)\MonoGame\v3.0\Assemblies\{0}\{1}";
 		const string MonoGameExtensionsAbsolutePath = @"/Library/Frameworks/MonoGame.framework/v3.0/Assemblies/{0}/{1}";
 
-		static bool UpgradeMonoGameProject (MonoDevelop.Core.IProgressMonitor monitor, MonoDevelop.Projects.SolutionEntityItem item, MSBuildProject project)
+		static bool UpgradeMonoGameProject (MonoDevelop.Core.ProgressMonitor monitor, DotNetProjectExtension extension, MSBuildProject project)
 		{
 			bool needsSave = false;
 			bool containsMGCB = project.ItemGroups.Any (x => x.Items.Any (i => System.IO.Path.GetExtension (i.Include) == ".mgcb"));
-			bool isMonoGame = project.PropertyGroups.Any (x => x.Properties.Any (p => p.Name == "MonoGamePlatform")) ||
+			bool isMonoGame = project.PropertyGroups.Any (x => x.GetProperties().Any (p => p.Name == "MonoGamePlatform")) ||
 				project.ItemGroups.Any (x => x.Items.Any (i => i.Name == "Reference" && i.Include == "MonoGame.Framework")) ||
 				containsMGCB;
-			bool isApplication = project.PropertyGroups.Any (x => x.Properties.Any (p => p.Name == "OutputType" && p.GetValue () == "Exe")) ||
-				project.PropertyGroups.Any (x => x.Properties.Any (p => p.Name == "AndroidApplication" && string.Compare (p.GetValue (), bool.TrueString, true)==0));
-			bool isShared = project.PropertyGroups.Any (x => x.Properties.Any (p => p.Name == "HasSharedItems" && p.GetValue () == "true"));
-			var type = item.GetType ().Name;
+			bool isDesktopGL = project.ItemGroups.Any (x => x.Items.Any (i => i.Include.EndsWith ("SDL2.dll")));
+			bool isApplication = project.PropertyGroups.Any (x => x.GetProperties().Any (p => p.Name == "OutputType" && p.Value == "Exe"))
+			                            | project.PropertyGroups.Any (x => x.GetProperties().Any (p => p.Name == "AndroidApplication" && string.Compare (p.Value, bool.TrueString, true)==0));
+			bool isShared = project.PropertyGroups.Any (x => x.GetProperties().Any (p => p.Name == "HasSharedItems" && p.Value == "true"));
+			bool absoluteReferenes = false;
+			var type = extension.Project.GetType ().Name;
+
 			monitor.Log.WriteLine ("Found {0}", type);
-			var platform = Environment.OSVersion.Platform == PlatformID.Win32NT ? "Windows" : "DesktopGL";
+			monitor.Log.WriteLine ("Found {0}", project.GetType ().Name);
+			var platform = isDesktopGL ? "DesktopGL" : "Windows";
 			var path = MonoGameExtensionsPath;
-			switch (type) {
-			case "XamarinIOSProject":
+			if (extension.Project.FlavorGuids.Contains ("{FEACFBD2-3405-455C-9665-78FE426C6842}")) {
 				platform = "iOS";
-				break;
-			case "MonoDroidProject":
+			}
+			if (extension.Project.FlavorGuids.Contains ("{06FA79CB-D6CD-4721-BB4B-1BD202089C55}")) {
+				platform = "tvOS";
+			}
+			if (extension.Project.FlavorGuids.Contains ("{EFBA0AD7-5A72-4C68-AF49-83D382785DCF}")) {
 				platform = "Android";
-				break;
-			case "XamMac2Project":
-			case "MonoGameProject":
-				platform = "DesktopGL";
-				break;
-			case "XamMac":
-			case "XamMacProject":
-				platform = "DesktopGL";
-				// Xamarin.Mac Classic does not use MSBuild so we need to absolute path.
-				path = MonoGameExtensionsAbsolutePath;
-				break;
-			case "MonoMac":
-			case "MonoMacProject":
+			}
+			if (extension.Project.FlavorGuids.Contains ("{948B3504-5B70-4649-8FE4-BDE1FB46EC69}")) {
 				platform = "MacOSX";
+				// MonoMac Classic does not use MSBuild so we need to absolute path.
+				path = MonoGameExtensionsAbsolutePath;
+				absoluteReferenes = true;
+			}
+			if (extension.Project.FlavorGuids.Contains ("{42C0BBD9-55CE-4FC1-8D90-A7348ABAFB23}")) {
+				platform = "DesktopGL";
 				// Xamarin.Mac Classic does not use MSBuild so we need to absolute path.
 				path = MonoGameExtensionsAbsolutePath;
-				break;
+				absoluteReferenes = true;
+			}
+			if (extension.Project.FlavorGuids.Contains ("{A3F8F2AB-B479-4A4A-A458-A89E7DC349F1}")) {
+				platform = "DesktopGL";
 			}
 			monitor.Log.WriteLine ("Platform = {0}", platform);
 			monitor.Log.WriteLine ("Path = {0}", path);
@@ -60,40 +64,36 @@ namespace MonoDevelop.MonoGame
 				var ritems = new List<MSBuildItem> ();
 				foreach (var ig in project.ItemGroups) {
 					foreach (var i in ig.Items.Where (x => x.Name == "Reference" && x.Include == "MonoGame.Framework")) {
-						if (!i.HasMetadata ("HintPath")) {
+						var metaData = i.Metadata;
+						if (!metaData.HasProperty("HintPath")) {
 							monitor.Log.WriteLine ("Fixing {0} to be MonoGameContentReference", i.Include);
-							var a = ig.AddNewItem ("Reference", i.Include);
-							a.SetMetadata ("HintPath", string.Format (path, platform, "MonoGame.Framework.dll"));
-							ritems.Add (i);
+							metaData.SetValue ("HintPath", string.Format (path, platform, "MonoGame.Framework.dll"));
 							needsSave = true;
 						}
 					}
 					foreach (var i in ig.Items.Where (x => x.Name == "Reference" && x.Include == "Tao.Sdl")) {
-						if (!i.HasMetadata ("HintPath")) {
+						var metaData = i.Metadata;
+						if (!metaData.HasProperty("HintPath")) {
 							monitor.Log.WriteLine ("Fixing {0} to be Tao.Sdl", i.Include);
-							var a = ig.AddNewItem ("Reference", i.Include);
-							a.SetMetadata ("HintPath", string.Format (path, platform, "Tao.Sdl.dll"));
-							ritems.Add (i);
+							metaData.SetValue ("HintPath", string.Format (path, platform, "Tao.Sdl.dll"));
 							needsSave = true;
 						}
 					}
 					foreach (var i in ig.Items.Where (x => x.Name == "Reference" && x.Include.StartsWith ("OpenTK") &&
 							(platform != "iOS" && platform != "Android"))) {
-						if (!i.HasMetadata ("HintPath")) {
-							monitor.Log.WriteLine ("Fixing {0} to be OpenTK", i.Include);
-							var a = ig.AddNewItem ("Reference", i.Include);
-							a.SetMetadata ("HintPath", string.Format (path, platform, "OpenTK.dll"));
-							a.SetMetadata ("SpecificVersion", "true");
-							ritems.Add (i);
+						var metaData = i.Metadata;
+						if (!metaData.HasProperty ("HintPath")) {
+							monitor.Log.WriteLine("Fixing {0} to be OpenTK", i.Include);
+							metaData.SetValue ("HintPath", string.Format (path, platform, "OpenTK.dll"));
+							metaData.SetValue ("SpecificVersion", "true");
 							needsSave = true;
 						}
 					}
 					foreach (var i in ig.Items.Where (x => x.Name == "Reference" && x.Include == "NVorbis")) {
-						if (!i.HasMetadata ("HintPath")) {
+						var metaData = i.Metadata;
+						if (!metaData.HasProperty ("HintPath")) {
 							monitor.Log.WriteLine ("Fixing {0} to be NVorbis", i.Include);
-							var a = ig.AddNewItem ("Reference", i.Include);
-							a.SetMetadata ("HintPath", string.Format (path, platform, "NVorbis.dll"));
-							ritems.Add (i);
+							metaData.SetValue ("HintPath", string.Format (path, platform, "NVorbis.dll"));
 							needsSave = true;
 						}
 					}
@@ -101,26 +101,26 @@ namespace MonoDevelop.MonoGame
 				foreach (var a in ritems) {
 					project.RemoveItem (a);
 				}
-				var dotNetProject = item as DotNetProject;
-				if (dotNetProject != null && (type == "MonoMacProject" || type == "XamMacProject" )) {
+				var dotNetProject = extension.Project;
+				if (dotNetProject != null && absoluteReferenes) {
 					var items = new List<ProjectReference> ();
 					var newitems = new List<ProjectReference> ();
 					foreach (var reference in dotNetProject.References) {
 						if (reference.Reference == "MonoGame.Framework" && string.IsNullOrEmpty (reference.HintPath)) {
 							items.Add (reference);
-							newitems.Add (new ProjectReference (ReferenceType.Assembly, reference.Reference, string.Format (path, platform, "MonoGame.Framework.dll")));
+							newitems.Add (ProjectReference.CreateCustomReference  (ReferenceType.Assembly, reference.Reference, string.Format(path, platform, "MonoGame.Framework.dll")));
 						}
-						if (reference.Reference.StartsWith ("OpenTK") && string.IsNullOrEmpty (reference.HintPath)) {
+						if (reference.Reference.StartsWith ("OpenTK", StringComparison.OrdinalIgnoreCase) && string.IsNullOrEmpty (reference.HintPath)) {
 							items.Add (reference);
-							newitems.Add (new ProjectReference (ReferenceType.Assembly, reference.Reference, string.Format (path, platform, "OpenTK.dll")));
+							newitems.Add (ProjectReference.CreateCustomReference (ReferenceType.Assembly, reference.Reference, string.Format (path, platform, "OpenTK.dll")));
 						}
 						if (reference.Reference == "NVorbis" && string.IsNullOrEmpty (reference.HintPath)) {
 							items.Add (reference);
-							newitems.Add (new ProjectReference (ReferenceType.Assembly, reference.Reference, string.Format (path, platform, "NVorbis.dll")));
+							newitems.Add (ProjectReference.CreateCustomReference (ReferenceType.Assembly, reference.Reference, string.Format (path, platform, "NVorbis.dll")));
 						}
 						if (reference.Reference == "Tao.Sdl" && string.IsNullOrEmpty (reference.HintPath)) {
 							items.Add (reference);
-							newitems.Add (new ProjectReference (ReferenceType.Assembly, reference.Reference, string.Format (path, platform, "Tao.Sdl.dll")));
+							newitems.Add (ProjectReference.CreateCustomReference (ReferenceType.Assembly, reference.Reference, string.Format (path, platform, "Tao.Sdl.dll")));
 						}
 					}
 					dotNetProject.References.RemoveRange (items);
@@ -128,21 +128,14 @@ namespace MonoDevelop.MonoGame
 				}
 			}
 			if (isMonoGame && containsMGCB && (isApplication || isShared)) {
-				if (!project.PropertyGroups.Any (x => x.Properties.Any (p => p.Name == "MonoGamePlatform")) && !isShared) {
-					monitor.Log.WriteLine ("Adding MonoGamePlatform", platform);
-					project.PropertyGroups.First ().SetPropertyValue ("MonoGamePlatform", platform, true);
+				if (!project.PropertyGroups.Any (x => x.GetProperties().Any (p => p.Name == "MonoGamePlatform")) && !isShared) {
+					monitor.Log.WriteLine ("Adding MonoGamePlatform {0}", platform == "tvOS" ? "iOS" : platform);
+					project.PropertyGroups.First ().SetValue ("MonoGamePlatform", platform == "tvOS" ? "iOS" : platform, true);
 					needsSave = true;
 				}
 				if (!project.Imports.Any (x => x.Project.StartsWith (MonoGameCommonProps, StringComparison.OrdinalIgnoreCase))&& !isShared) {
 					monitor.Log.WriteLine ("Adding MonoGame.Common.props Import");
-					var e = project.Document.DocumentElement;
-					var manager = new XmlNamespaceManager (new NameTable ());
-					var schema = "http://schemas.microsoft.com/developer/msbuild/2003";
-					manager.AddNamespace ("tns", schema);
-					var import = project.Document.CreateElement ("Import", schema);
-					import.SetAttribute ("Project", MonoGameCommonProps);
-					import.SetAttribute ("Condition", string.Format ("Exists('{0}')", MonoGameCommonProps));
-					project.Document.DocumentElement.InsertBefore (import, project.Document.DocumentElement.FirstChild);
+					project.AddNewImport(MonoGameCommonProps, string.Format ("Exists('{0}')", MonoGameCommonProps), project.PropertyGroups.First());
 					needsSave = true;
 				}
 				if (containsMGCB) {
@@ -170,21 +163,25 @@ namespace MonoDevelop.MonoGame
 			return needsSave;
 		}
 
-		public override void LoadProject (MonoDevelop.Core.IProgressMonitor monitor, MonoDevelop.Projects.SolutionEntityItem item, MSBuildProject project)
+		protected override void OnWriteProject(MonoDevelop.Core.ProgressMonitor monitor, MSBuildProject msproject)
 		{
-			var changed = (UpgradeMonoGameProject (monitor, item, project));
-			base.LoadProject (monitor, item, project);
-			if (changed) {
-				project.Save (project.FileName);
+			base.OnWriteProject(monitor, msproject);
+			var changed = UpgradeMonoGameProject (monitor, this, msproject);
+			if (changed)
+			{
+				msproject.Save(msproject.FileName);
+				this.Project.NeedsReload = true;
 			}
 		}
 
-		public override void SaveProject (MonoDevelop.Core.IProgressMonitor monitor, MonoDevelop.Projects.SolutionEntityItem item, MSBuildProject project)
+		protected override void OnReadProject(MonoDevelop.Core.ProgressMonitor monitor, MSBuildProject msproject)
 		{
-			var changed = UpgradeMonoGameProject (monitor, item, project);
-			base.SaveProject (monitor, item, project);
-			if (changed) {
-				this.LoadProject (monitor, item, project);
+			base.OnReadProject (monitor, msproject);
+			var changed = (UpgradeMonoGameProject(monitor, this, msproject));
+			if (changed)
+			{
+				msproject.Save (msproject.FileName);
+				this.Project.NeedsReload = true;
 			}
 		}
 	}
diff -urp -x '*.rej' -x '*.orig' MonoGame-3.5.1.orig/IDE/MonoDevelop/MonoDevelop.MonoGame/MonoGameProject.cs MonoGame-3.5.1/IDE/MonoDevelop/MonoDevelop.MonoGame/MonoGameProject.cs
--- MonoGame-3.5.1.orig/IDE/MonoDevelop/MonoDevelop.MonoGame/MonoGameProject.cs	2016-03-29 23:30:30.000000000 -0700
+++ MonoGame-3.5.1/IDE/MonoDevelop/MonoDevelop.MonoGame/MonoGameProject.cs	2017-01-07 02:59:43.190607425 -0800
@@ -1,7 +1,8 @@
 ﻿using System;
-using MonoDevelop.Projects;
+using MonoDevelop.Projects.MSBuild;
 using MonoDevelop.Core.Assemblies;
 using System.Xml;
+using MonoDevelop.Projects;
 
 namespace MonoDevelop.MonoGame
 {
diff -urp -x '*.rej' -x '*.orig' MonoGame-3.5.1.orig/IDE/MonoDevelop/MonoDevelop.MonoGame/templates/MonoGamePipelineProject.xpt.xml MonoGame-3.5.1/IDE/MonoDevelop/MonoDevelop.MonoGame/templates/MonoGamePipelineProject.xpt.xml
--- MonoGame-3.5.1.orig/IDE/MonoDevelop/MonoDevelop.MonoGame/templates/MonoGamePipelineProject.xpt.xml	2016-03-29 23:30:30.000000000 -0700
+++ MonoGame-3.5.1/IDE/MonoDevelop/MonoDevelop.MonoGame/templates/MonoGamePipelineProject.xpt.xml	2017-01-07 02:59:43.190607425 -0800
@@ -13,7 +13,7 @@
 			<Open filename = "Importer1.cs"/>
 		</Actions>
 		
-		<Project name = "${ProjectName}" directory = "." type = "DotNet">
+		<Project name = "${ProjectName}" directory = ".">
 			<Options Target = "Library"/>
 			<Packages>
 				<Package id="MonoGame.Framework.Portable" version="3.2.99.1-Beta" targetFramework="portable-net45+sl50+win+wp80+MonoAndroid10+xamarinios10+MonoTouch10"/>
diff -urp -x '*.rej' -x '*.orig' MonoGame-3.5.1.orig/IDE/MonoDevelop/MonoDevelop.MonoGame.Android/MonoDevelop.MonoGame.Android.csproj MonoGame-3.5.1/IDE/MonoDevelop/MonoDevelop.MonoGame.Android/MonoDevelop.MonoGame.Android.csproj
--- MonoGame-3.5.1.orig/IDE/MonoDevelop/MonoDevelop.MonoGame.Android/MonoDevelop.MonoGame.Android.csproj	2016-03-29 23:30:30.000000000 -0700
+++ MonoGame-3.5.1/IDE/MonoDevelop/MonoDevelop.MonoGame.Android/MonoDevelop.MonoGame.Android.csproj	2017-01-07 02:59:43.187607311 -0800
@@ -62,7 +62,6 @@
   </ItemGroup>
   <ItemGroup>
     <Compile Include="Properties\AssemblyInfo.cs" />
-    <Compile Include="MonoGameAndroidProject.cs" />
   </ItemGroup>
   <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
   <ItemGroup>
@@ -108,4 +107,7 @@
       <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
     </Content>
   </ItemGroup>
+  <ItemGroup>
+    <None Include="MonoGameAndroidProject.cs" />
+  </ItemGroup>
 </Project>
diff -urp -x '*.rej' -x '*.orig' MonoGame-3.5.1.orig/IDE/MonoDevelop/MonoDevelop.MonoGame.Mac/MonoDevelop.MonoGame.Mac.csproj MonoGame-3.5.1/IDE/MonoDevelop/MonoDevelop.MonoGame.Mac/MonoDevelop.MonoGame.Mac.csproj
--- MonoGame-3.5.1.orig/IDE/MonoDevelop/MonoDevelop.MonoGame.Mac/MonoDevelop.MonoGame.Mac.csproj	2016-03-29 23:30:30.000000000 -0700
+++ MonoGame-3.5.1/IDE/MonoDevelop/MonoDevelop.MonoGame.Mac/MonoDevelop.MonoGame.Mac.csproj	2017-01-07 02:59:43.187607311 -0800
@@ -39,18 +39,10 @@
       <HintPath>/Applications/Xamarin Studio.app/Contents/Resources/lib/monodevelop/bin/MonoDevelop.Core.dll</HintPath>
       <Private>False</Private>
     </Reference>
-    <Reference Include="MonoDevelop.MonoMac">
-      <HintPath>/Applications/Xamarin Studio.app/Contents/Resources/lib/monodevelop/AddIns/MonoDevelop.MonoMac/MonoDevelop.MonoMac.dll</HintPath>
-      <Private>False</Private>
-    </Reference>
     <Reference Include="MonoDevelop.DesignerSupport">
       <HintPath>/Applications/Xamarin Studio.app/Contents/Resources/lib/monodevelop/AddIns/MonoDevelop.DesignerSupport/MonoDevelop.DesignerSupport.dll</HintPath>
       <Private>False</Private>
     </Reference>
-    <Reference Include="MonoDevelop.MacDev">
-      <HintPath>/Applications/Xamarin Studio.app/Contents/Resources/lib/monodevelop/AddIns/MonoDevelop.MacDev/MonoDevelop.MacDev.dll</HintPath>
-      <Private>False</Private>
-    </Reference>
   </ItemGroup>
   <ItemGroup>
     <Compile Include="Properties\AssemblyInfo.cs" />
diff -urp -x '*.rej' -x '*.orig' MonoGame-3.5.1.orig/IDE/MonoDevelop/MonoDevelop.MonoGame.Mac/templates/MonoGameOSXProject.xpt.xml MonoGame-3.5.1/IDE/MonoDevelop/MonoDevelop.MonoGame.Mac/templates/MonoGameOSXProject.xpt.xml
--- MonoGame-3.5.1.orig/IDE/MonoDevelop/MonoDevelop.MonoGame.Mac/templates/MonoGameOSXProject.xpt.xml	2016-03-29 23:30:30.000000000 -0700
+++ MonoGame-3.5.1/IDE/MonoDevelop/MonoDevelop.MonoGame.Mac/templates/MonoGameOSXProject.xpt.xml	2017-01-07 02:59:43.187607311 -0800
@@ -27,8 +27,6 @@
 				<Reference type="Gac" refto="System.Drawing" />
 				<Reference type="Gac" refto="Xamarin.Mac"/>
 				<Reference type="Package" refto="MonoGame.Framework" />
-				<Reference type="Package" refto="OpenTK, Version=1.1.0.0, Culture=neutral, PublicKeyToken=bad199fe84eb3df4" SpecificVersion="true" />
-				<Reference type="Package" refto="NVorbis" />
 			</References>
 			<Files>
 				<File name="Game1.cs" AddStandardHeader="True" src="Common/Game1.cs" />
@@ -41,6 +39,11 @@
 				<Directory name="Properties">
 					<File name="AssemblyInfo.cs" AddStandardHeader="True" src="Common/AssemblyInfo.cs" />
 				</Directory>
+				<ContentFile>
+					<File name="MonoGame.Framework.dll.config" src="Common/MonoGame.Framework.dll.config" CopyToOutputDirectory="PreserveNewest" />
+				</ContentFile>
+				<RawFile name="libopenal.1.dylib" src="libs/libopenal.1.dylib" BuildAction="NativeReference" />
+				<RawFile name="libSDL2-2.0.0.dylib" src="libs/libSDL2-2.0.0.dylib" BuildAction="NativeReference" />
 			</Files>
 		</Project>
 	</Combine>
diff -urp -x '*.rej' -x '*.orig' MonoGame-3.5.1.orig/IDE/MonoDevelop/MonoDevelop.MonoGame.Mac/templates/MonoGameXamMacProject.xpt.xml MonoGame-3.5.1/IDE/MonoDevelop/MonoDevelop.MonoGame.Mac/templates/MonoGameXamMacProject.xpt.xml
--- MonoGame-3.5.1.orig/IDE/MonoDevelop/MonoDevelop.MonoGame.Mac/templates/MonoGameXamMacProject.xpt.xml	2016-03-29 23:30:30.000000000 -0700
+++ MonoGame-3.5.1/IDE/MonoDevelop/MonoDevelop.MonoGame.Mac/templates/MonoGameXamMacProject.xpt.xml	2017-01-07 02:59:43.187607311 -0800
@@ -27,8 +27,6 @@
 				<Reference type="Gac" refto="System.Drawing" />
 				<Reference type="Gac" refto="XamMac" SpecificVersion="false"/>
 				<Reference type="Package" refto="MonoGame.Framework" />
-				<Reference type="Package" refto="OpenTK, Version=1.1.0.0, Culture=neutral, PublicKeyToken=bad199fe84eb3df4" SpecificVersion="true" />
-				<Reference type="Package" refto="NVorbis" />
 			</References>
 			<Files>
 				<File name="Game1.cs" AddStandardHeader="True" src="Common/Game1.cs" />
@@ -42,6 +40,15 @@
 				<Directory name="Properties">
 					<File name="AssemblyInfo.cs" AddStandardHeader="True" src="Common/AssemblyInfo.cs" />
 				</Directory>
+				<ContentFile>
+					<File name="MonoGame.Framework.dll.config" src="Common/MonoGame.Framework.dll.config" CopyToOutputDirectory="PreserveNewest" />
+				</ContentFile>
+				<ContentFile>
+					<RawFile name="libopenal.1.dylib" src="libs/libopenal.1.dylib" CopyToOutputDirectory="PreserveNewest" />
+				</ContentFile>
+				<ContentFile>
+					<RawFile name="libSDL2-2.0.0.dylib" src="libs/libSDL2-2.0.0.dylib" CopyToOutputDirectory="PreserveNewest" />
+				</ContentFile>
 			</Files>
 		</Project>
 	</Combine>
