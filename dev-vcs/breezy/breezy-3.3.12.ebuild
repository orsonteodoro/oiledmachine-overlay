# Copyright 2022-2025 Orson Teodoro <orsonteodoro@hotmail.com>
# Copyright 1999-2025 Gentoo Authors
# Distributed under the terms of the GNU General Public License v2

EAPI=8

# U 22.04

# See also:  https://github.com/breezy-team/breezy/blob/upstream-3.3.12/setup.py#L60

# TODO package:
# launchpadlib
# setuptools-gettext

# The lockfile should be updated once a week for security reasons.

# Generated by "convert-cargo-lock.sh 3.3.12 3.3.12"
CRATES="
aho-corasick-1.1.3
autocfg-1.5.0
cfg-if-1.0.1
heck-0.5.0
indoc-2.0.6
lazy_static-1.5.0
libc-0.2.174
memchr-2.7.5
memoffset-0.9.1
once_cell-1.21.3
portable-atomic-1.11.1
proc-macro2-1.0.95
pyo3-0.23.5
pyo3-build-config-0.23.5
pyo3-ffi-0.23.5
pyo3-macros-0.23.5
pyo3-macros-backend-0.23.5
quote-1.0.40
regex-1.11.1
regex-automata-0.4.9
regex-syntax-0.8.5
syn-2.0.104
target-lexicon-0.12.16
unicode-ident-1.0.18
unindent-0.2.4
"
DISTUTILS_EXT=1
DISTUTILS_USE_PEP517="setuptools"
DULWICH_PV="0.21.6"
FLAKE8_PV="4.0.1"
GENERATE_LOCKFILE=${GENERATE_LOCKFILE:-0}
PARAMIKO_PV="2.9.3"
PYTHON_COMPAT=( "python3_"{10..12} )
RUST_MAX_VER="1.75.0" # Inclusive
RUST_MIN_VER="1.75.0" # llvm-17.0
RUST_PV="${RUST_MIN_VER}"

# Cargo must go after distutils-r1
inherit autotools distutils-r1 cargo lcnr sandbox-changes

KEYWORDS="~amd64 ~arm64"
S="${WORKDIR}/${PN}-brz-${PV}"
SRC_URI="
$(cargo_crate_uris ${CRATES})
https://github.com/breezy-team/breezy/archive/refs/tags/brz-${PV}.tar.gz
"

_breezy_ebuild_set_globals() {
einfo "Called _breezy_ebuild_set_globals"
	if [[ "${USE}" =~ "developer-docs" ]] ; then
einfo "Building with developer-docs"
		distutils_enable_sphinx "doc/developers"
	elif [[ "${USE}" =~ "user-docs" ]] ; then
einfo "Building with user-docs"
		distutils_enable_sphinx "doc/en"
	fi
}
_breezy_ebuild_set_globals
unset -f _breezy_ebuild_set_globals

DESCRIPTION="Breezy is a friendly powerful distributed version control system."
HOMEPAGE="https://launchpad.net/brz"
LICENSE="
	Apache-2.0
	GPL-2+
"
# tools/rst2pdf.py is Apache-2.0
LICENSE+="
	Apache-2.0
	Apache-2.0-with-LLVM-exceptions
	BSD
	BSD-4
	custom
	GPL-2
	MIT
	PSF-2.4
	openssl
	tcltk
	Unicode-DFS-2016
	Unlicense
" # Third party cargo licenses
# homedir/.cargo/registry/src/github.com-1ecc6299db9ec823/pyo3-0.15.2 - custom
# homedir/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.6.0 - custom
# homedir/.cargo/registry/src/github.com-1ecc6299db9ec823/pkg-version-1.0.0 - custom
# homedir/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/unicode_tables/LICENSE-UNICODE - Unicode-DFS-2016
# homedir/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-ident-1.0.5/LICENSE-UNICODE - Unicode-DFS-2016
RESTRICT="mirror test" # Tester broken
SLOT="0"
IUSE+="
cext dev developer-docs doc fastimport git github gpg launchpad sftp subunit
test user-docs workspace
ebuild_revision_2
"
REQUIRED_USE+="
	${PYTHON_REQUIRED_USE}
	dev? (
		cext
	)
	developer-docs? (
		doc
	)
	doc? (
		^^ (
			developer-docs
			user-docs
		)
	)
	test? (
		sftp
	)
	user-docs? (
		doc
	)
"
CARGO_BINDINGS_DEPEND="
	elibc_glibc? (
		>=sys-libs/glibc-2.35
	)
	elibc_musl? (
		>=sys-libs/musl-1.1.24
	)
"
DEPEND="
	${CARGO_BINDINGS_DEPEND}
	${PYTHON_DEPS}
	>=dev-python/configobj-5.0.6[${PYTHON_USEDEP}]
	>=dev-python/cryptography-3.4.8[${PYTHON_USEDEP}]
	>=dev-python/dulwich-${DULWICH_PV}[${PYTHON_USEDEP}]
	>=dev-python/fastbencode-0.0.5[${PYTHON_USEDEP}]
	>=dev-python/merge3-0.0.8[${PYTHON_USEDEP}]
	>=dev-python/patiencediff-0.2.13[${PYTHON_USEDEP}]
	>=dev-python/pyyaml-5.4.1[${PYTHON_USEDEP}]
	>=dev-python/urllib3-1.24.1[${PYTHON_USEDEP}]
	>=dev-python/tzlocal-2.1[${PYTHON_USEDEP}]
	fastimport? (
		>=dev-python/fastimport-0.9.8[${PYTHON_USEDEP}]
	)
	github? (
		>=dev-python/PyGithub-1.55[${PYTHON_USEDEP}]
	)
	gpg? (
		>=app-crypt/gpgme-1.13.1[${PYTHON_USEDEP}]
	)
	launchpad? (
		>=dev-python/launchpadlib-1.6.3[${PYTHON_USEDEP}]
	)
	sftp? (
		>=dev-python/paramiko-${PARAMIKO_PV}[${PYTHON_USEDEP}]
	)
	workspace? (
		>=dev-python/pyinotify-0.9.6[${PYTHON_USEDEP}]
		$(python_gen_cond_dep "
			dev-python/pyasyncore[${PYTHON_USEDEP}]
		" python3_12)

	)
"
RDEPEND+="
	${DEPEND}
"
BDEPEND+="
	${PYTHON_DEPS}
	>=dev-python/flake8-${FLAKE8_PV}[${PYTHON_USEDEP}]
	>=dev-python/setuptools-60[${PYTHON_USEDEP}]
	>=dev-python/setuptools-gettext-0.1.4[${PYTHON_USEDEP}]
	>=dev-python/setuptools-rust-1.2.0[${PYTHON_USEDEP}]
	>=dev-python/mypy-0.942[${PYTHON_USEDEP}]
	>=dev-python/packaging-21.3[${PYTHON_USEDEP}]
	cext? (
		>=dev-python/cython-0.29[${PYTHON_USEDEP}]
	)
	doc? (
		>=dev-python/docutils-0.17.1[${PYTHON_USEDEP}]
		>=dev-python/sphinx-4.3.2[${PYTHON_USEDEP}]
		>=dev-python/sphinx-epytext-0.0.4[${PYTHON_USEDEP}]
	)
	subunit? (
		>=dev-python/python-subunit-1.4.0[${PYTHON_USEDEP}]
	)
	dev? (
		>=dev-python/dulwich-${DULWICH_PV}[${PYTHON_USEDEP}]
		>=dev-python/flake8-${FLAKE8_PV}[${PYTHON_USEDEP}]
		>=dev-python/testscenarios-0.5.0[${PYTHON_USEDEP}]
		>=dev-python/testtools-2.5.0[${PYTHON_USEDEP}]
		dev-util/ruff
		sftp? (
			>=dev-python/paramiko-${PARAMIKO_PV}[${PYTHON_USEDEP},server]
		)
	)
	|| (
		dev-lang/rust:${RUST_PV}
		dev-lang/rust-bin:${RUST_PV}
	)
	|| (
		dev-lang/rust:=
		dev-lang/rust-bin:=
	)
"
PATCHES=(
	"${FILESDIR}/breezy-3.3.3-fix-compile-test.patch" # Added by oiledmachine-overlay
)

pkg_setup() {
	[[ "${GENERATE_LOCKFILE}" == "1" ]] && check_network_sandbox
	python_setup
	if use test ; then
#
# The error message:
#
# * /var/tmp/portage/sys-apps/sandbox-2.29/work/sandbox-2.29/libsandbox/libsandbox.c:resolve_path():240: failure (Cannot allocate memory):
# * malloc(8192)
#
		sandbox-changes_no_usersandbox "To run tests with USE=sftp"
	fi
	rust_pkg_setup
}

_lockfile_gen_unpack() {
	unpack "brz-${PV}.tar.gz"
	cd "${S}" || die
einfo "Generating lockfile"
	rm "Cargo.lock"
	cargo generate-lockfile || die "Failed to update Cargo.lock"
	die
}

_production_unpack() {
	unpack "brz-${PV}.tar.gz"
	die # For manual lockfile updates
	if [[ -e "${FILESDIR}/${PV}/Cargo.lock" ]] ; then
einfo "Adding Cargo.lock"
		cp -a \
			"${FILESDIR}/${PV}/Cargo.lock" \
			"${S}" \
			|| die
	fi
	cargo_src_unpack
}

src_unpack() {
	default
	if [[ "${GENERATE_LOCKFILE}" == "1" ]] ; then
		_lockfile_gen_unpack
	else
		_production_unpack
	fi
}

src_prepare() {
	distutils-r1_src_prepare
}

python_configure() {
	cargo_src_configure
}

src_configure() {
	distutils-r1_src_configure
}

python_compile() {
	cargo_src_compile
	distutils-r1_python_compile
}

src_compile() {
	distutils-r1_src_compile
}

src_test() {
	local d="${WORKDIR}/${PN}-${PV}-${EPYTHON/./_}"
	cd "${S}" || die
	PYTHONHASHSEED=random \
	BRZ_PLUGIN_PATH="-site:-user" \
	PYTHONPATH="${d}/install/usr/lib/${EPYTHON}/site-packages:${PYTHONPATH}" \
	"${d}/install/usr/bin/brz" selftest || die
}

src_install() {
	LCNR_SOURCE="${WORKDIR}/cargo_home/gentoo"
	LCNR_TAG="third_party"
	lcnr_install_files

	distutils-r1_src_install
}

# OILEDMACHINE-OVERLAY-META:  CREATED-EBUILD
# OILEDMACHINE-OVERLAY-TEST:  PASSED (test suite) 3.3.3 (20230617)
# USE="sftp test -cext (-debug) -developer-docs -doc -fastimport -git -github
# -gpg -launchpad -r1 -user-docs -workspace" PYTHON_TARGETS="python3_10
# -python3_11"
#
# Ran 33728 tests in 2411.236s
#
# OK (known_failures=46)
# 2136 tests skipped
#
