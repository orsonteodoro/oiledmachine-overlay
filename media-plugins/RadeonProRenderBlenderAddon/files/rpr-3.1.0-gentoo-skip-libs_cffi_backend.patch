#**********************************************************************
# Copyright 2020 Advanced Micro Devices, Inc
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# 
#     http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#********************************************************************

# oteodoro -- The .libs_cffi_backend folder is not included in the Gentoo installation.
----
--- RadeonProRenderBlenderAddon-3.1.0/src/bindings/pyrpr/rpr.py.orig	2021-03-25 09:39:53.000000000 -0700
+++ RadeonProRenderBlenderAddon-3.1.0/src/bindings/pyrpr/rpr.py	2021-04-03 04:24:53.659860333 -0700
@@ -15,9 +15,12 @@
 # limitations under the License.
 #********************************************************************
 
+# oteodoro made changes for compatibility with Gentoo Linux
+
 import platform
 import sys
 import os
+import distro               # oteodoro added
 
 from pathlib import Path
 
@@ -89,18 +92,19 @@ def export(json_file_name, dependencies,
     shutil.copy(_cffi_backend.__file__, str(build_dir))
 
     if 'Linux' == platform.system():
-        for path in (Path(_cffi_backend.__file__).parent / '.libs_cffi_backend').iterdir():
-            if '.so' in path.suffixes:
-                # copy library needed for cffi backend
-                ffi_lib = str(path)
-                shutil.copy(ffi_lib, str(build_dir))
-
-        # change RPATH for cffi backend to find libffi in the same directory
-        cffi_backend_path = (Path(build_dir) / Path(_cffi_backend.__file__).name).absolute()
-        assert cffi_backend_path.is_file()
-        cmd = ['patchelf', '--set-rpath', "$ORIGIN", str(cffi_backend_path)]
-        print(' '.join(cmd))
-        subprocess.check_call(cmd)
+        if distro.id() != 'gentoo':                                                                     # oteodoro added line
+            for path in (Path(_cffi_backend.__file__).parent / '.libs_cffi_backend').iterdir():         # oteodoro changed indent
+                if '.so' in path.suffixes:                                                              # oteodoro changed indent
+                    # copy library needed for cffi backend                                              # oteodoro changed indent
+                    ffi_lib = str(path)                                                                 # oteodoro changed indent
+                    shutil.copy(ffi_lib, str(build_dir))                                                # oteodoro changed indent
+
+            # change RPATH for cffi backend to find libffi in the same directory                        # oteodoro changed indent
+            cffi_backend_path = (Path(build_dir) / Path(_cffi_backend.__file__).name).absolute()        # oteodoro changed indent
+            assert cffi_backend_path.is_file()                                                          # oteodoro changed indent
+            cmd = ['patchelf', '--set-rpath', "$ORIGIN", str(cffi_backend_path)]                        # oteodoro changed indent
+            print(' '.join(cmd))                                                                        # oteodoro changed indent
+            subprocess.check_call(cmd)                                                                  # oteodoro changed indent
 
     if 'Darwin' == platform.system():
         for path in (Path(_cffi_backend.__file__).parent).iterdir():
