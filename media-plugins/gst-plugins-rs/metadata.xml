<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
  <maintainer type="person">
    <!-- Ebuild on the oiledmachine-overlay -->
    <email>orsonteodoro@hotmail.com</email>
    <name>Orson Teodoro</name>
  </maintainer>
  <longdescription>
    This monolithic package provides Rust based gst-plugin support.

    Each USE flag corresponds to the gst-plugins-[USE flag] plugin.
  </longdescription>
  <upstream>
    <bugs-to>
      https://gitlab.freedesktop.org/gstreamer/gst-plugins-rs/-/issues
    </bugs-to>
  </upstream>
  <use>
    <flag name="ahead">
      Build a plugin to display text buffers ahead of time
    </flag>
    <flag name="audiofx">
      Build the Rust AudioFx Plugin to apply audio effects (echo, reverb, noise
      removal, normalization)
    </flag>
    <flag name="aws">
      Build support for Amazon AWS
    </flag>
    <flag name="cdg">
      Build the CD+G Plugin for parsing and rendering karakoe data
    </flag>
    <flag name="claxon">
      Build the Claxon FLAC Decoder Plugin
    </flag>
    <flag name="closedcaption">
      Build the Rust Closed Caption Plugin supporting MCC, SCC, EIA-608, CEA-608
    </flag>
    <flag name="csound">
      Build the audio effects plugin using Csound
    </flag>
    <flag name="dav1d">
      Build the Dav1d Plugin for decoding AV1 video
    </flag>
    <flag name="fallback-commit">
      Fallback to the commit snapshot with same dependencies and tested applied
      patches
    </flag>
    <flag name="fallbackswitch">
      Build the Fallback Switcher Plugin for falling back to sync pad after
      timeout
    </flag>
    <flag name="file">
      Build the Rust File Plugin for filesink and filesrc
    </flag>
    <flag name="ffv1">
      Build the FFV1 decoder for lossless video produced by FFmpeg
    </flag>
    <flag name="flavors">
      Build the FLV demuxer plugin
    </flag>
    <flag name="fmp4">
      Build a MP4/ISOBMFF/CMAF muxer to generate DASH/HLS media fragments
    </flag>
    <flag name="gif"> 
      Build a GIF encoder plugin
    </flag>
    <flag name="gopbuffer"> 
      Build a plugin to store Groups of Pictures (GOP)
    </flag>
    <flag name="gtk4">
      Build the GTK 4 plugin to render video and pictures
    </flag>
    <flag name="hlssink3">
      Build the MPEG-TS HLS stream generator plugin
    </flag>
    <flag name="hsv">
      Build a plugin for HSV (hue, saturation, value) video manipulation
    </flag>
    <flag name="inter">
      Build a plugin with a virtual audio/subtitle/video sink or source for
      internal process communication
    </flag>
    <flag name="json">
      Build the Rust JSON to ND-JSON Plugin
    </flag>
    <flag name="livesync">
      Build the gap frame inserter on lag event for livestreaming plugin
    </flag>
    <flag name="lewton">
      Build the lewton Vorbis decoder plugin
    </flag>
    <flag name="mp4">
      Build a non-fragmented MP4 plugin
    </flag>
    <flag name="mpegtslive">
      Build a plugin to playback content at the same rate and timestamps as the
      remote provider using an existing mpeg-ts source
    </flag>
    <flag name="ndi">
      Build support for NewTek NDI
    </flag>
    <flag name="onvif">
      Build support for ONVIF timed metadata
    </flag>
    <flag name="originalbuffer">
      Build support for saving or restoring the original buffer after machine
      learning analysis
    </flag>
    <flag name="png">
      Build the PNG encoder/decoder written in pure Rust
    </flag>
    <flag name="rav1e">
      Build the rav1e AV1 encoder plugin based on Rust, a memory safe language
      (i.e. more secure) or use it as a CPU based encoder for WebRTC.
    </flag>
    <flag name="regex">
      Build the Rust regular expression plugin
    </flag>
    <flag name="relationmeta">
      Build support for converting between ONVIF metadata and relation metadata
    </flag>
    <flag name="rtp">
      Build support for the RTP protocol
    </flag>
    <flag name="rtsp">
      Build support using a rewrite of the RTSP protocol plugin
    </flag>
    <flag name="reqwest">
      Build the HTTP source element plugin
    </flag>
    <flag name="quinn">
      Build support for the QUIC protocol
    </flag>
    <flag name="raptorq">
      Build support for Forward Error Correction (FEC) using the RaptorQ codes
      to protect against packet loss.
    </flag>
    <flag name="rusoto">
      Build the Amazon Web Services source and sink plugin
    </flag>
    <flag name="sodium">
      Build the libsodium-based file encryption and decryption
    </flag>
    <flag name="speechmatics">
      Build the speech to text filter
    </flag>
    <flag name="spotify">
      Build a plugin to read content from Spotify
    </flag>
    <flag name="streamgrouper">
      Build a plugin to assign several streams together by group-id
    </flag>
    <flag name="test">
      Build and run tests
    </flag>
    <flag name="textahead">
      Build a plugin to display text buffers at the start of the segment
    </flag>
    <flag name="textwrap">
      Build the text hypenation wrap plugin
    </flag>
    <flag name="threadshare">
      Build the Threadshare plugin for reimplemented popular thread elements
      using common thread sharing infrastructure
    </flag>
    <flag name="togglerecord">
      Build the toggle record plugin to stop and start multiple streams together
    </flag>
    <flag name="tracers">
      Build a plugin to record and measure latency, queues, pipelines, data
    </flag>
    <flag name="tutorial">
      Build the Rust tutorial plugin
    </flag>
    <flag name="uriplaylistbin">
      Build a gapless URI playlist plugin
    </flag>
    <flag name="videofx">
      Build a plugin to round edges, find dominant color, compare similarity
    </flag>
    <flag name="version-helper">
      Build the build.rs helper function for GStreamer plugin metadata
    </flag>
    <flag name="webp">
      Build the WebP decoder plugin
    </flag>
    <flag name="webrtc">
      Build support for WebRTC
    </flag>
    <flag name="webrtchttp">
      Build a plugin that uses simple HTTP (WHIP/WHEP) elements
    </flag>

    <!-- WebRTC dependencies -->
    <flag name="aom">
      Fallback to the slower CPU based reference AV1 codec for WebRTC.
    </flag>
    <flag name="dav1d">
      Fallback to an optimized CPU based AV1 decoder for WebRTC.
    </flag>
    <flag name="nvcodec">
      Enable hardware accelerated AV1, H.264, H.265, JPEG, VP8, VP9, resize for
      NVIDIA® GPUs for WebRTC.
    </flag>
    <flag name="openh264">
      Fallback to a CPU based H.264 codec for WebRTC.
    </flag>
    <flag name="qsv">
      Enable hardware accelerated AV1, H.264, H.265, JPEG, VP9 for Intel®
      supported CPUs or GPUs for WebRTC.
    </flag>
    <flag name="va">
      Hardware acceleration support for codecs, images, and image/video
      processing for WebRTC.

      Support AV1, H.264, H.265, JPEG, MPEG2, VC-1, VP8, VP9 if hardware
      support available with the newer stateless plugin.

      For the older VA-API plugin, use the vaapi USE flag.
    </flag>
    <flag name="vaapi">
      Hardware acceleration support for codecs, images, and image/video
      processing for WebRTC.

      Support AV1, H.264, H.265, JPEG, MPEG2, VC-1, VP9 if hardware support 
      available with the older stateful plugin.

      For the newer VA-API plugin, use the va USE flag.
    </flag>
    <flag name="vpx">
      Fallback to CPU based VP8/VP9 support.
    </flag>
    <flag name="vulkan">
      Fallback to GPU or multicore based H.264 or H.265 decoding for WebRTC.
    </flag>
    <flag name="x264">
      Fallback to CPU based H.264 support for WebRTC.
    </flag>
    <flag name="x265">
      Fallback to CPU based H.265 support for WebRTC.
    </flag>
  </use>
  <upstream>
    <remote-id type="gitlab">gstreamer/gst-plugins-rs</remote-id>
  </upstream>
</pkgmetadata>
