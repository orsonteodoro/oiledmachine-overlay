Forward port for 0.1.105
Original patch:  https://github.com/AppImageCommunity/libappimage/tree/master/src/patches

diff -urp squashfuse-0.1.105.orig/Makefile.am squashfuse-0.1.105/Makefile.am
--- squashfuse-0.1.105.orig/Makefile.am	2022-06-14 17:34:42.000000000 -0700
+++ squashfuse-0.1.105/Makefile.am	2023-01-13 17:09:07.097249179 -0800
@@ -71,19 +71,12 @@ libsquashfuse_ll_convenience_la_CPPFLAGS
 libsquashfuse_ll_convenience_la_LIBADD = libsquashfuse_convenience.la libfuseprivate.la
 
 # squashfuse_ll library we will install
-lib_LTLIBRARIES += libsquashfuse_ll.la
-libsquashfuse_ll_la_SOURCES =
+lib_LTLIBRARIES += libsquashfuse_ll.la
+libsquashfuse_ll_la_SOURCES = ll_main.c
 libsquashfuse_ll_la_CPPFLAGS = $(ZLIB_CPPFLAGS) $(XZ_CPPFLAGS) $(LZO_CPPFLAGS) \
 	$(LZ4_CPPFLAGS) $(ZSTD_CPPFLAGS) $(FUSE_CPPFLAGS)
 libsquashfuse_ll_la_LIBADD = libsquashfuse_ll_convenience.la $(COMPRESSION_LIBS) $(FUSE_LIBS)
 
-# squashfuse_ll binary that's statically linked against internal libs
-bin_PROGRAMS += squashfuse_ll
-squashfuse_ll_SOURCES = ll_main.c
-squashfuse_ll_CPPFLAGS = $(ZLIB_CPPFLAGS) $(XZ_CPPFLAGS) $(LZO_CPPFLAGS) \
-	$(LZ4_CPPFLAGS) $(ZSTD_CPPFLAGS) $(FUSE_CPPFLAGS)
-squashfuse_ll_LDADD = libsquashfuse_ll_convenience.la $(COMPRESSION_LIBS) $(FUSE_LIBS)
-
 pkgconfig_DATA += squashfuse_ll.pc
 pkginclude_HEADERS += ll.h
 endif
diff -urp squashfuse-0.1.105.orig/ll_main.c squashfuse-0.1.105/ll_main.c
--- squashfuse-0.1.105.orig/ll_main.c	2022-06-14 17:34:42.000000000 -0700
+++ squashfuse-0.1.105/ll_main.c	2023-01-13 17:06:53.891915949 -0800
@@ -37,7 +37,7 @@
 #include <signal.h>
 #include <unistd.h>
 
-int main(int argc, char *argv[]) {
+int fusefs_main(int argc, char *argv[], void (*mounted) (void)) {
 	struct fuse_args args;
 	sqfs_opts opts;
 
@@ -142,6 +142,8 @@ int main(int argc, char *argv[]) {
 					if (opts.idle_timeout_secs) {
 						setup_idle_timeout(ch.session, opts.idle_timeout_secs);
 					}
+					if (mounted)
+						mounted ();
 					/* FIXME: multithreading */
 					err = fuse_session_loop(ch.session);
 					teardown_idle_timeout();
@@ -154,7 +156,9 @@ int main(int argc, char *argv[]) {
 	}
 	fuse_opt_free_args(&args);
 	free(ll);
+	if (mounted)
+		rmdir (fuse_cmdline_opts.mountpoint);
 	free(fuse_cmdline_opts.mountpoint);
 	
 	return -err;
-}
\ No newline at end of file
+}
