diff '--color=auto' -urp llvm-project-rocm-6.1.2.orig/amd/comgr/comgr-backward-compat.cmake llvm-project-rocm-6.1.2/amd/comgr/comgr-backward-compat.cmake
--- llvm-project-rocm-6.1.2.orig/amd/comgr/comgr-backward-compat.cmake	2024-05-15 13:31:12.000000000 -0700
+++ llvm-project-rocm-6.1.2/amd/comgr/comgr-backward-compat.cmake	2024-07-02 14:46:32.466437804 -0700
@@ -54,12 +54,12 @@ function(create_header_template)
 #define ROCM_HEADER_WRAPPER_WERROR @deprecated_error@
 #endif
 #if ROCM_HEADER_WRAPPER_WERROR  /* ROCM_HEADER_WRAPPER_WERROR 1 */
-#error \"This file is deprecated. Use file from include path /opt/rocm-ver/include/ and prefix with amd_comgr\"
+#error \"This file is deprecated. Use file from include path @ESYSROOT_ROCM_PATH@/include/ and prefix with amd_comgr\"
 #else   /* ROCM_HEADER_WRAPPER_WERROR 0 */
 #if defined(__GNUC__)
-#warning \"This file is deprecated. Use file from include path /opt/rocm-ver/include/ and prefix with amd_comgr\"
+#warning \"This file is deprecated. Use file from include path @ESYSROOT_ROCM_PATH@/include/ and prefix with amd_comgr\"
 #else
-#pragma message(\"This file is deprecated. Use file from include path /opt/rocm-ver/include/ and prefix with amd_comgr\")
+#pragma message(\"This file is deprecated. Use file from include path @ESYSROOT_ROCM_PATH@/include/ and prefix with amd_comgr\")
 #endif
 #endif /* ROCM_HEADER_WRAPPER_WERROR */
 
diff '--color=auto' -urp llvm-project-rocm-6.1.2.orig/amd/hipcc/bin/hipconfig.pl llvm-project-rocm-6.1.2/amd/hipcc/bin/hipconfig.pl
--- llvm-project-rocm-6.1.2.orig/amd/hipcc/bin/hipconfig.pl	2024-05-15 13:31:12.000000000 -0700
+++ llvm-project-rocm-6.1.2/amd/hipcc/bin/hipconfig.pl	2024-07-02 14:45:46.971133648 -0700
@@ -87,7 +87,7 @@ if ($HIP_PLATFORM eq "nvidia") {
 if ($p_help) {
     print "usage: hipconfig [OPTIONS]\n";
     print "  --path,  -p        : print HIP_PATH (use env var if set, else determine from hipconfig path)\n";
-    print "  --rocmpath,  -R    : print ROCM_PATH (use env var if set, else determine from hip path or /opt/rocm)\n";
+    print "  --rocmpath,  -R    : print ROCM_PATH (use env var if set, else determine from hip path or @ESYSROOT_ROCM_PATH@)\n";
     print "  --cpp_config, -C   : print C++ compiler options\n";
     print "  --compiler, -c     : print compiler (clang or nvcc)\n";
     print "  --platform, -P     : print platform (amd or nvidia)\n";
diff '--color=auto' -urp llvm-project-rocm-6.1.2.orig/amd/hipcc/bin/hipvars.pm llvm-project-rocm-6.1.2/amd/hipcc/bin/hipvars.pm
--- llvm-project-rocm-6.1.2.orig/amd/hipcc/bin/hipvars.pm	2024-05-15 13:31:12.000000000 -0700
+++ llvm-project-rocm-6.1.2/amd/hipcc/bin/hipvars.pm	2024-07-02 14:44:22.036434187 -0700
@@ -84,7 +84,7 @@ if (-e "$HIP_PATH/bin/rocm_agent_enumera
 }elsif (-e "$HIP_PATH/../bin/rocm_agent_enumerator") { # case for backward compatibility
     $ROCM_PATH=$ENV{'ROCM_PATH'} // dirname("$HIP_PATH"); # use parent directory of HIP_PATH
 } else {
-    $ROCM_PATH=$ENV{'ROCM_PATH'} // "/opt/rocm";
+    $ROCM_PATH=$ENV{'ROCM_PATH'} // "@ESYSROOT_ROCM_PATH@";
 }
 $CUDA_PATH=$ENV{'CUDA_PATH'} // '/usr/local/cuda';
 if ($isWindows and defined $ENV{'CUDA_PATH'}) {
diff '--color=auto' -urp llvm-project-rocm-6.1.2.orig/amd/hipcc/src/hipBin_base.h llvm-project-rocm-6.1.2/amd/hipcc/src/hipBin_base.h
--- llvm-project-rocm-6.1.2.orig/amd/hipcc/src/hipBin_base.h	2024-05-15 13:31:12.000000000 -0700
+++ llvm-project-rocm-6.1.2/amd/hipcc/src/hipBin_base.h	2024-07-02 14:45:19.195558742 -0700
@@ -344,7 +344,7 @@ void HipBinBase::constructRoccmPath() {
     fs::path rocm_agent_enumerator_file(roccm_path);
     rocm_agent_enumerator_file /= "bin/rocm_agent_enumerator";
     if (!fs::exists(rocm_agent_enumerator_file)) {
-      roccm_path = "/opt/rocm";
+      roccm_path = "@ESYSROOT_ROCM_PATH@";
     }
   } else {
     variables_.roccmPathEnv_ = envVariables_.roccmPathEnv_;}
diff '--color=auto' -urp llvm-project-rocm-6.1.2.orig/clang/lib/Driver/ToolChains/AMDGPU.cpp llvm-project-rocm-6.1.2/clang/lib/Driver/ToolChains/AMDGPU.cpp
--- llvm-project-rocm-6.1.2.orig/clang/lib/Driver/ToolChains/AMDGPU.cpp	2024-05-15 13:31:12.000000000 -0700
+++ llvm-project-rocm-6.1.2/clang/lib/Driver/ToolChains/AMDGPU.cpp	2024-07-02 14:50:43.494607978 -0700
@@ -241,11 +241,11 @@ RocmInstallationDetector::getInstallatio
       }
     }
 
-    // Some versions of the rocm llvm package install to /opt/rocm/llvm/bin
-    // Some versions of the aomp package install to /opt/rocm/aomp/bin
+    // Some versions of the rocm llvm package install to @EPREFIX_LLVM_PATH@/bin
+    // Some versions of the aomp package install to @EPREFIX_ROCM_PATH@/aomp/bin
     if (ParentName == "llvm" || ParentName.startswith("aomp"))
       ParentDir = llvm::sys::path::parent_path(ParentDir);
-    // Some versions of the aomp package install to /opt/rocm/aomp/bin
+    // Some versions of the aomp package install to @EPREFIX_ROCM_PATH@/aomp/bin
     // and it seems ParentDir is already pointing to correct place.
     return Candidate(ParentDir.str(), /*StrictChecking=*/true);
   };
@@ -271,7 +271,7 @@ RocmInstallationDetector::getInstallatio
   ROCmSearchDirs.emplace_back(D.ResourceDir,
                               /*StrictChecking=*/true);
 
-  ROCmSearchDirs.emplace_back(D.SysRoot + "/opt/rocm",
+  ROCmSearchDirs.emplace_back("@ROCM_PATH@",
                               /*StrictChecking=*/true);
 
   // Find the latest /opt/rocm-{release} directory.
@@ -434,11 +434,11 @@ void RocmInstallationDetector::detectDev
     return;
 
   // Find device libraries in a legacy ROCm directory structure
-  // ${ROCM_ROOT}/amdgcn/bitcode/*
+  // ${ROCM_ROOT}/@LIBDIR@/amdgcn/bitcode/*
   auto &ROCmDirs = getInstallationPathCandidates();
   for (const auto &Candidate : ROCmDirs) {
     LibDevicePath = Candidate.Path;
-    llvm::sys::path::append(LibDevicePath, "amdgcn", "bitcode");
+    llvm::sys::path::append(LibDevicePath, "@LIBDIR@", "amdgcn", "bitcode");
     HasDeviceLibrary = CheckDeviceLib(LibDevicePath, Candidate.StrictChecking);
     if (HasDeviceLibrary)
       return;
Only in llvm-project-rocm-6.1.2/clang/lib/Driver/ToolChains: AMDGPU.cpp.orig
diff '--color=auto' -urp llvm-project-rocm-6.1.2.orig/clang/tools/amdgpu-arch/CMakeLists.txt llvm-project-rocm-6.1.2/clang/tools/amdgpu-arch/CMakeLists.txt
--- llvm-project-rocm-6.1.2.orig/clang/tools/amdgpu-arch/CMakeLists.txt	2024-05-15 13:31:12.000000000 -0700
+++ llvm-project-rocm-6.1.2/clang/tools/amdgpu-arch/CMakeLists.txt	2024-07-02 08:08:53.215297065 -0700
@@ -8,7 +8,7 @@
 
 set(LLVM_LINK_COMPONENTS Support)
 
-find_package(hsa-runtime64 QUIET 1.2.0 HINTS ${CMAKE_INSTALL_PREFIX} PATHS /opt/rocm)
+find_package(hsa-runtime64 QUIET 1.2.0 HINTS ${CMAKE_INSTALL_PREFIX} PATHS @ESYSROOT_ROCM_PATH@)
 
 add_clang_tool(amdgpu-arch AMDGPUArch.cpp AMDGPUArchByHSA.cpp AMDGPUArchByHIP.cpp)
 
Only in llvm-project-rocm-6.1.2/clang/tools/amdgpu-arch: CMakeLists.txt.orig
Only in llvm-project-rocm-6.1.2/clang/tools/amdgpu-arch: CMakeLists.txt.rej
diff '--color=auto' -urp llvm-project-rocm-6.1.2.orig/compiler-rt/CMakeLists.txt llvm-project-rocm-6.1.2/compiler-rt/CMakeLists.txt
--- llvm-project-rocm-6.1.2.orig/compiler-rt/CMakeLists.txt	2024-05-15 13:31:12.000000000 -0700
+++ llvm-project-rocm-6.1.2/compiler-rt/CMakeLists.txt	2024-07-02 08:08:22.431732681 -0700
@@ -465,12 +465,12 @@ endif()
 
 if(SANITIZER_AMDGPU)
   list(APPEND SANITIZER_COMMON_CFLAGS -DSANITIZER_AMDGPU=1)
-  find_path(HSA_INCLUDE hsa.h HINTS ${SANITIZER_HSA_INCLUDE_PATH} ${CMAKE_INSTALL_PREFIX}/include/hsa ${CMAKE_INSTALL_PREFIX}/../include/hsa /opt/rocm/include/hsa PATH_SUFFIXES hsa)
+  find_path(HSA_INCLUDE hsa.h HINTS ${SANITIZER_HSA_INCLUDE_PATH} ${CMAKE_INSTALL_PREFIX}/include/hsa ${CMAKE_INSTALL_PREFIX}/../include/hsa @ESYSROOT_ROCM_PATH@/include/hsa PATH_SUFFIXES hsa)
   include_directories(${HSA_INCLUDE})
   find_path(COMgr_INCLUDE amd_comgr.h.in HINTS ${SANITIZER_COMGR_INCLUDE_PATH} ${CMAKE_INSTALL_PREFIX}/../include ${CMAKE_INSTALL_PREFIX}/include)
   if (NOT COMgr_INCLUDE)
     add_compile_definitions(AMD_COMGR)
-    find_path(COMgr_INCLUDE amd_comgr.h HINTS ${CMAKE_INSTALL_PREFIX}/../include ${CMAKE_INSTALL_PREFIX}/include /opt/rocm/include)
+    find_path(COMgr_INCLUDE amd_comgr.h HINTS ${CMAKE_INSTALL_PREFIX}/../include ${CMAKE_INSTALL_PREFIX}/include @ESYSROOT_ROCM_PATH@/include)
   endif()
   include_directories(${COMgr_INCLUDE})
 endif()
Only in llvm-project-rocm-6.1.2/compiler-rt: CMakeLists.txt.orig
diff '--color=auto' -urp llvm-project-rocm-6.1.2.orig/compiler-rt/test/asan/lit.cfg.py llvm-project-rocm-6.1.2/compiler-rt/test/asan/lit.cfg.py
--- llvm-project-rocm-6.1.2.orig/compiler-rt/test/asan/lit.cfg.py	2024-05-15 13:31:12.000000000 -0700
+++ llvm-project-rocm-6.1.2/compiler-rt/test/asan/lit.cfg.py	2024-07-02 08:08:22.443732513 -0700
@@ -287,13 +287,13 @@ if config.host_os == "NetBSD":
 def configure_rocm(config, test_rocm_path):
     if (not os.path.isdir(test_rocm_path)):
         print("no directory found")
-        test_rocm_path = os.path.join('/opt','rocm')
+        test_rocm_path = "@EPREFIX_ROCM_PATH@"
         if (not os.path.isdir(test_rocm_path)):
             test_rocm_path = os.path.abspath(os.path.join(config.llvm_install_dir, os.pardir))
             if (not os.path.isdir(test_rocm_path)):
                 sys.exit("ROCM installation not found, try exporting ASAN_TEST_ROCM variable")
 
-    test_device_libs  = os.path.join(test_rocm_path, 'amdgcn', 'bitcode')
+    test_device_libs  = os.path.join(test_rocm_path, '@LIBDIR@', 'amdgcn', 'bitcode')
     test_hip_path     = os.path.join(test_rocm_path, 'hip')
     hipcc             = os.path.join(test_hip_path, 'bin', 'hipcc')
 
Only in llvm-project-rocm-6.1.2/compiler-rt/test/asan: lit.cfg.py.orig
diff '--color=auto' -urp llvm-project-rocm-6.1.2.orig/libc/cmake/modules/prepare_libc_gpu_build.cmake llvm-project-rocm-6.1.2/libc/cmake/modules/prepare_libc_gpu_build.cmake
--- llvm-project-rocm-6.1.2.orig/libc/cmake/modules/prepare_libc_gpu_build.cmake	2024-05-15 13:31:12.000000000 -0700
+++ llvm-project-rocm-6.1.2/libc/cmake/modules/prepare_libc_gpu_build.cmake	2024-07-02 08:08:22.443732513 -0700
@@ -31,7 +31,7 @@ endif()
 # Identify any locally installed AMD GPUs on the system using 'amdgpu-arch'.
 find_program(LIBC_AMDGPU_ARCH
              NAMES amdgpu-arch
-             PATHS ${LLVM_BINARY_DIR}/bin /opt/rocm/llvm/bin/)
+             PATHS ${LLVM_BINARY_DIR}/bin @ESYSROOT_LLVM_PATH@/bin/)
 
 # Identify any locally installed NVIDIA GPUs on the system using 'nvptx-arch'.
 find_program(LIBC_NVPTX_ARCH
diff '--color=auto' -urp llvm-project-rocm-6.1.2.orig/libc/src/math/gpu/vendor/CMakeLists.txt llvm-project-rocm-6.1.2/libc/src/math/gpu/vendor/CMakeLists.txt
--- llvm-project-rocm-6.1.2.orig/libc/src/math/gpu/vendor/CMakeLists.txt	2024-05-15 13:31:12.000000000 -0700
+++ llvm-project-rocm-6.1.2/libc/src/math/gpu/vendor/CMakeLists.txt	2024-07-02 08:20:40.013302262 -0700
@@ -1,4 +1,4 @@
-find_package(AMDDeviceLibs QUIET HINTS ${CMAKE_INSTALL_PREFIX} PATHS /opt/rocm)
+find_package(AMDDeviceLibs QUIET HINTS ${CMAKE_INSTALL_PREFIX} PATHS @ESYSROOT_ROCM_PATH@)
 if(AMDDeviceLibs_FOUND)
   message(STATUS "Found the ROCm device library. Implementations falling back "
                  "to the vendor libraries will be resolved statically.")
diff '--color=auto' -urp llvm-project-rocm-6.1.2.orig/libc/utils/gpu/loader/CMakeLists.txt llvm-project-rocm-6.1.2/libc/utils/gpu/loader/CMakeLists.txt
--- llvm-project-rocm-6.1.2.orig/libc/utils/gpu/loader/CMakeLists.txt	2024-05-15 13:31:12.000000000 -0700
+++ llvm-project-rocm-6.1.2/libc/utils/gpu/loader/CMakeLists.txt	2024-07-02 08:08:22.443732513 -0700
@@ -5,7 +5,7 @@ target_include_directories(gpu_loader PU
   ${LIBC_SOURCE_DIR}
 )
 
-find_package(hsa-runtime64 QUIET 1.2.0 HINTS ${CMAKE_INSTALL_PREFIX} PATHS /opt/rocm)
+find_package(hsa-runtime64 QUIET 1.2.0 HINTS ${CMAKE_INSTALL_PREFIX} PATHS @ESYSROOT_ROCM_PATH@)
 if(hsa-runtime64_FOUND)
   add_subdirectory(amdgpu)
 else()
Only in llvm-project-rocm-6.1.2/libc/utils/gpu/loader: CMakeLists.txt.orig
diff '--color=auto' -urp llvm-project-rocm-6.1.2.orig/mlir/lib/Dialect/GPU/CMakeLists.txt llvm-project-rocm-6.1.2/mlir/lib/Dialect/GPU/CMakeLists.txt
--- llvm-project-rocm-6.1.2.orig/mlir/lib/Dialect/GPU/CMakeLists.txt	2024-05-15 13:31:12.000000000 -0700
+++ llvm-project-rocm-6.1.2/mlir/lib/Dialect/GPU/CMakeLists.txt	2024-07-02 08:08:22.455732342 -0700
@@ -136,7 +136,7 @@ if(MLIR_ENABLE_ROCM_CONVERSIONS)
       "Building mlir with ROCm support requires the AMDGPU backend")
   endif()
 
-  set(DEFAULT_ROCM_PATH "/opt/rocm" CACHE PATH "Fallback path to search for ROCm installs")
+  set(DEFAULT_ROCM_PATH "@EPREFIX_ROCM_PATH@" CACHE PATH "Fallback path to search for ROCm installs")
   target_compile_definitions(obj.MLIRGPUTransforms
     PRIVATE
     __DEFAULT_ROCM_PATH__="${DEFAULT_ROCM_PATH}"
Only in llvm-project-rocm-6.1.2/mlir/lib/Dialect/GPU: CMakeLists.txt.orig
diff '--color=auto' -urp llvm-project-rocm-6.1.2.orig/mlir/lib/Dialect/GPU/Transforms/SerializeToHsaco.cpp llvm-project-rocm-6.1.2/mlir/lib/Dialect/GPU/Transforms/SerializeToHsaco.cpp
--- llvm-project-rocm-6.1.2.orig/mlir/lib/Dialect/GPU/Transforms/SerializeToHsaco.cpp	2024-05-15 13:31:12.000000000 -0700
+++ llvm-project-rocm-6.1.2/mlir/lib/Dialect/GPU/Transforms/SerializeToHsaco.cpp	2024-07-02 08:08:22.459732286 -0700
@@ -286,7 +286,7 @@ SerializeToHsacoPass::translateToLLVMIR(
   std::optional<SmallVector<std::unique_ptr<llvm::Module>, 3>> mbModules;
   std::string theRocmPath = getRocmPath();
   llvm::SmallString<32> bitcodePath(theRocmPath);
-  llvm::sys::path::append(bitcodePath, "amdgcn", "bitcode");
+  llvm::sys::path::append(bitcodePath, "@LIBDIR@", "amdgcn", "bitcode");
   mbModules = loadLibraries(bitcodePath, libraries, llvmContext);
 
   if (!mbModules) {
Only in llvm-project-rocm-6.1.2/mlir/lib/Dialect/GPU/Transforms: SerializeToHsaco.cpp.orig
diff '--color=auto' -urp llvm-project-rocm-6.1.2.orig/mlir/lib/ExecutionEngine/CMakeLists.txt llvm-project-rocm-6.1.2/mlir/lib/ExecutionEngine/CMakeLists.txt
--- llvm-project-rocm-6.1.2.orig/mlir/lib/ExecutionEngine/CMakeLists.txt	2024-05-15 13:31:12.000000000 -0700
+++ llvm-project-rocm-6.1.2/mlir/lib/ExecutionEngine/CMakeLists.txt	2024-07-02 08:08:22.471732116 -0700
@@ -247,7 +247,7 @@ if(LLVM_ENABLE_PIC)
     # Configure ROCm support.
     if (NOT DEFINED ROCM_PATH)
       if (NOT DEFINED ENV{ROCM_PATH})
-        set(ROCM_PATH "/opt/rocm" CACHE PATH "Path to which ROCm has been installed")
+        set(ROCM_PATH "@ESYSROOT_ROCM_PATH@" CACHE PATH "Path to which ROCm has been installed")
       else()
         set(ROCM_PATH $ENV{ROCM_PATH} CACHE PATH "Path to which ROCm has been installed")
       endif()
Only in llvm-project-rocm-6.1.2/mlir/lib/ExecutionEngine: CMakeLists.txt.orig
diff '--color=auto' -urp llvm-project-rocm-6.1.2.orig/openmp/libomptarget/DeviceRTL/CMakeLists.txt llvm-project-rocm-6.1.2/openmp/libomptarget/DeviceRTL/CMakeLists.txt
--- llvm-project-rocm-6.1.2.orig/openmp/libomptarget/DeviceRTL/CMakeLists.txt	2024-05-15 13:31:12.000000000 -0700
+++ llvm-project-rocm-6.1.2/openmp/libomptarget/DeviceRTL/CMakeLists.txt	2024-07-02 08:11:16.801265527 -0700
@@ -338,7 +338,7 @@ function(buildAMDAllInclusiveBcLib gfxna
       HINTS
       ${CMAKE_INSTALL_PREFIX}
       PATHS
-      /opt/rocm)
+      @ESYSROOT_ROCM_PATH@)
     if(AMDDeviceLibs_DIR)
       set(amd_device_libs_found ON)
       libomptarget_say("DeviceRTLs ${gfxname}: Getting ROCm device libs from ${AMDDeviceLibs_DIR}")
@@ -384,7 +384,7 @@ function(buildAMDAllInclusiveBcLib gfxna
   # Add amdgcn-specific bc files to link command including libm and hostexec
   list(APPEND bc_files
     ${CMAKE_BINARY_DIR}/libm-${abi_num}-${gfxname}.bc
-    ${CMAKE_BINARY_DIR}/libomptarget/hostexec/libhostexec-${abi_num}-${gfxname}.bc
+    ${CMAKE_BINARY_DIR}/projects/openmp/libomptarget/hostexec/libhostexec-${abi_num}-${gfxname}.bc # TODO:  oteodoro: verify
     ${ocml_bc_file}
     ${ockl_bc_file}
     ${oclc_wf_bc_file}
Only in llvm-project-rocm-6.1.2/openmp/libomptarget/DeviceRTL: CMakeLists.txt.orig
Only in llvm-project-rocm-6.1.2/openmp/libomptarget/DeviceRTL: CMakeLists.txt.rej
diff '--color=auto' -urp llvm-project-rocm-6.1.2.orig/openmp/libomptarget/deviceRTLs/amdgcn/CMakeLists.txt llvm-project-rocm-6.1.2/openmp/libomptarget/deviceRTLs/amdgcn/CMakeLists.txt
--- llvm-project-rocm-6.1.2.orig/openmp/libomptarget/deviceRTLs/amdgcn/CMakeLists.txt	2024-05-15 13:31:12.000000000 -0700
+++ llvm-project-rocm-6.1.2/openmp/libomptarget/deviceRTLs/amdgcn/CMakeLists.txt	2024-07-02 08:08:22.487731889 -0700
@@ -17,7 +17,7 @@ endif()
 find_package(AMDDeviceLibs REQUIRED CONFIG PATHS
 	${CMAKE_BINARY_DIR}/../../tools/ROCMDEVLIBS
 	${CMAKE_INSTALL_PREFIX}
-	/opt/rocm)
+	@ESYSROOT_ROCM_PATH@)
 if(AMDDeviceLibs_DIR)
   libomptarget_say("Getting ROCm device libs from ${AMDDeviceLibs_DIR}")
 else()
diff '--color=auto' -urp llvm-project-rocm-6.1.2.orig/openmp/libomptarget/hostexec/CMakeLists.txt llvm-project-rocm-6.1.2/openmp/libomptarget/hostexec/CMakeLists.txt
--- llvm-project-rocm-6.1.2.orig/openmp/libomptarget/hostexec/CMakeLists.txt	2024-05-15 13:31:12.000000000 -0700
+++ llvm-project-rocm-6.1.2/openmp/libomptarget/hostexec/CMakeLists.txt	2024-07-02 08:08:22.491731834 -0700
@@ -16,7 +16,7 @@ if("${CMAKE_SOURCE_DIR}" STREQUAL "${CMA
   message(FATAL_ERROR "Direct configuration not supported, please use parent directory!")
 endif()
 
-find_package(hsa-runtime64 1.2.0 QUIET HINTS ${CMAKE_INSTALL_PREFIX} PATHS /opt/rocm/hsa)
+find_package(hsa-runtime64 1.2.0 QUIET HINTS ${CMAKE_INSTALL_PREFIX} PATHS @ESYSROOT_ROCM_PATH@/hsa)
 if (hsa-runtime64_FOUND)
    list(APPEND HOSTRPC_ARCHS "amdgcn")
    add_library(amdgcn_hostexec_services STATIC 
diff '--color=auto' -urp llvm-project-rocm-6.1.2.orig/openmp/libomptarget/hostexec/CMakeLists.txt.with400files llvm-project-rocm-6.1.2/openmp/libomptarget/hostexec/CMakeLists.txt.with400files
--- llvm-project-rocm-6.1.2.orig/openmp/libomptarget/hostexec/CMakeLists.txt.with400files	2024-05-15 13:31:12.000000000 -0700
+++ llvm-project-rocm-6.1.2/openmp/libomptarget/hostexec/CMakeLists.txt.with400files	2024-07-02 08:08:22.495731776 -0700
@@ -16,7 +16,7 @@ if("${CMAKE_SOURCE_DIR}" STREQUAL "${CMA
   message(FATAL_ERROR "Direct configuration not supported, please use parent directory!")
 endif()
 
-find_package(hsa-runtime64 1.2.0 QUIET HINTS ${CMAKE_INSTALL_PREFIX} PATHS /opt/rocm/hsa)
+find_package(hsa-runtime64 1.2.0 QUIET HINTS ${CMAKE_INSTALL_PREFIX} PATHS @ESYSROOT_ROCM_PATH@/hsa)
 if (hsa-runtime64_FOUND)
    list(APPEND HOSTRPC_ARCHS "amdgcn")
    add_library(amdgcn_hostexec_services STATIC 
diff '--color=auto' -urp llvm-project-rocm-6.1.2.orig/openmp/libomptarget/hostrpc/services/CMakeLists.txt llvm-project-rocm-6.1.2/openmp/libomptarget/hostrpc/services/CMakeLists.txt
--- llvm-project-rocm-6.1.2.orig/openmp/libomptarget/hostrpc/services/CMakeLists.txt	2024-05-15 13:31:12.000000000 -0700
+++ llvm-project-rocm-6.1.2/openmp/libomptarget/hostrpc/services/CMakeLists.txt	2024-07-02 08:08:22.499731719 -0700
@@ -1,5 +1,5 @@
 
-find_package(hsa-runtime64 1.2.0 REQUIRED HINTS ${CMAKE_INSTALL_PREFIX} PATHS /opt/rocm)
+find_package(hsa-runtime64 1.2.0 REQUIRED HINTS ${CMAKE_INSTALL_PREFIX} PATHS @ESYSROOT_ROCM_PATH@)
 add_library(hostrpc_services STATIC hostcall.cpp hostrpc_execute_service.c hostrpc_externs.c urilocator.cpp devsanitizer.cpp)
 set_property(TARGET hostrpc_services PROPERTY POSITION_INDEPENDENT_CODE ON)
 if(SANITIZER_AMDGPU)
diff '--color=auto' -urp llvm-project-rocm-6.1.2.orig/openmp/libomptarget/plugins/amdgpu/CMakeLists.txt llvm-project-rocm-6.1.2/openmp/libomptarget/plugins/amdgpu/CMakeLists.txt
--- llvm-project-rocm-6.1.2.orig/openmp/libomptarget/plugins/amdgpu/CMakeLists.txt	2024-05-15 13:31:12.000000000 -0700
+++ llvm-project-rocm-6.1.2/openmp/libomptarget/plugins/amdgpu/CMakeLists.txt	2024-07-02 08:15:23.985769614 -0700
@@ -22,7 +22,7 @@ endif()
 
 # as of rocm-3.7, hsa is installed with cmake packages and kmt is found via hsa
 find_package(hsa-runtime64 QUIET 1.2.0 HINTS ${CMAKE_INSTALL_PREFIX} PATHS
-${CMAKE_INSTALL_PREFIX} /opt/rocm)
+${CMAKE_INSTALL_PREFIX} @ESYSROOT_ROCM_PATH@)
 
 if(hsa-runtime64_DIR)
 message("FOUND hsa-runtime64 at ${hsa-runtime64_DIR}")
@@ -34,7 +34,7 @@ return()
 endif()
 
 # libhsakmt.a
-find_library (HSAKMT_LIB libhsakmt.a REQURIED HINTS ${CMAKE_INSTALL_PREFIX} PATHS /opt/rocm)
+find_library (HSAKMT_LIB libhsakmt.so REQURIED HINTS ${CMAKE_INSTALL_PREFIX} PATHS @ESYSROOT_ROCM_PATH@ @ESYSROOT_ROCM_PATH@/@LIBDIR@)
 get_filename_component(HSAKMT_LIB_PATH ${HSAKMT_LIB} DIRECTORY)
 link_directories (${HSAKMT_LIB_PATH})
 
Only in llvm-project-rocm-6.1.2/openmp/libomptarget/plugins/amdgpu: CMakeLists.txt.orig
Only in llvm-project-rocm-6.1.2/openmp/libomptarget/plugins/amdgpu: CMakeLists.txt.rej
diff '--color=auto' -urp llvm-project-rocm-6.1.2.orig/openmp/libomptarget/plugins/amdgpu/rtl_test/buildrun.sh llvm-project-rocm-6.1.2/openmp/libomptarget/plugins/amdgpu/rtl_test/buildrun.sh
--- llvm-project-rocm-6.1.2.orig/openmp/libomptarget/plugins/amdgpu/rtl_test/buildrun.sh	2024-05-15 13:31:12.000000000 -0700
+++ llvm-project-rocm-6.1.2/openmp/libomptarget/plugins/amdgpu/rtl_test/buildrun.sh	2024-07-02 08:08:22.499731719 -0700
@@ -1,11 +1,11 @@
 CLOC_PATH=/usr/bin
-AOMP=${AOMP:-/opt/rocm/aomp}
+AOMP=${AOMP:-@EPREFIX_ROCM_PATH@/aomp}
 AOMPRT_REPOS=${AOMPRT_REPOS:-$HOME/git/aomp}
 RT_REPO_NAME=${RT_REPO_NAME:-openmp}
 
 $CLOC_PATH/cloc.sh -ll -vv -opt 2  hw.cl
 
-g++ rtl_test.cpp -lelf -L/usr/lib/x86_64-linux-gnu -lomptarget -lpthread -L${AOMP}/lib -I$AOMPRT_REPOS/$RT_REPO_NAME/libamdgcn}/src -L/opt/rocm/lib -lhsa-runtime64 -g -o rtl_test
+g++ rtl_test.cpp -lelf -L/usr/lib/x86_64-linux-gnu -lomptarget -lpthread -L${AOMP}/@LIBDIR@ -I$AOMPRT_REPOS/$RT_REPO_NAME/libamdgcn}/src -L@EPREFIX_ROCM_PATH@/@LIBDIR@ -lhsa-runtime64 -g -o rtl_test
 
-LD_LIBRARY_PATH=/opt/rocm/lib:$AOMP/lib:$LD_LIBRARY_PATH ./rtl_test hw.hsaco
+LD_LIBRARY_PATH=@EPREFIX_ROCM_PATH@/@LIBDIR@:$AOMP/@LIBDIR@:$LD_LIBRARY_PATH ./rtl_test hw.hsaco
 
diff '--color=auto' -urp llvm-project-rocm-6.1.2.orig/openmp/libomptarget/plugins-nextgen/amdgpu/CMakeLists.txt llvm-project-rocm-6.1.2/openmp/libomptarget/plugins-nextgen/amdgpu/CMakeLists.txt
--- llvm-project-rocm-6.1.2.orig/openmp/libomptarget/plugins-nextgen/amdgpu/CMakeLists.txt	2024-05-15 13:31:12.000000000 -0700
+++ llvm-project-rocm-6.1.2/openmp/libomptarget/plugins-nextgen/amdgpu/CMakeLists.txt	2024-07-02 08:08:22.515731493 -0700
@@ -20,12 +20,12 @@ if (NOT LIBOMPTARGET_BUILD_AMDGPU_PLUGIN
 endif()
 
 # as of rocm-3.7, hsa is installed with cmake packages and kmt is found via hsa
-find_package(hsa-runtime64 QUIET 1.2.0 HINTS ${CMAKE_INSTALL_PREFIX} PATHS /opt/rocm)
+find_package(hsa-runtime64 QUIET 1.2.0 HINTS ${CMAKE_INSTALL_PREFIX} PATHS @ESYSROOT_ROCM_PATH@)
 
 # Check for COMGr package , ASan requires COMGr with minimum version 2.4
 if(SANITIZER_AMDGPU)
   add_definitions(-DSANITIZER_AMDGPU=1)
-  find_package(amd_comgr QUIET 2.4.0 HINTS ${CMAKE_INSTALL_PREFIX} PATHS /opt/rocm)
+  find_package(amd_comgr QUIET 2.4.0 HINTS ${CMAKE_INSTALL_PREFIX} PATHS @ESYSROOT_ROCM_PATH@)
 endif()
 
 if(NOT (CMAKE_SYSTEM_PROCESSOR MATCHES "(x86_64)|(ppc64le)|(aarch64)$" AND CMAKE_SYSTEM_NAME MATCHES "Linux"))
Only in llvm-project-rocm-6.1.2/openmp/libomptarget/plugins-nextgen/amdgpu: CMakeLists.txt.orig
Only in llvm-project-rocm-6.1.2/openmp/libomptarget/plugins-nextgen/amdgpu: CMakeLists.txt.rej
diff '--color=auto' -urp llvm-project-rocm-6.1.2.orig/openmp/libomptarget/src/CMakeLists.txt llvm-project-rocm-6.1.2/openmp/libomptarget/src/CMakeLists.txt
--- llvm-project-rocm-6.1.2.orig/openmp/libomptarget/src/CMakeLists.txt	2024-05-15 13:31:12.000000000 -0700
+++ llvm-project-rocm-6.1.2/openmp/libomptarget/src/CMakeLists.txt	2024-07-02 08:22:28.699766404 -0700
@@ -10,7 +10,7 @@
 #
 ##===----------------------------------------------------------------------===##
 # libhsakmt.a
-find_library ( HSAKMT_LIB libhsakmt.a REQURIED HINTS ${CMAKE_INSTALL_PREFIX} PATHS /opt/rocm)
+find_library ( HSAKMT_LIB libhsakmt.so REQURIED HINTS ${CMAKE_INSTALL_PREFIX} PATHS @ESYSROOT_ROCM_PATH@ @ESYSROOT_ROCM_PATH@/@LIBDIR@)
 get_filename_component ( HSAKMT_LIB_PATH ${HSAKMT_LIB} DIRECTORY )
 link_directories (${HSAKMT_LIB_PATH})
 
