diff '--color=auto' -urp llvm-project-rocm-6.1.2.orig/amd/hipcc/bin/hipcc.pl llvm-project-rocm-6.1.2/amd/hipcc/bin/hipcc.pl
--- llvm-project-rocm-6.1.2.orig/amd/hipcc/bin/hipcc.pl	2024-05-15 13:31:12.000000000 -0700
+++ llvm-project-rocm-6.1.2/amd/hipcc/bin/hipcc.pl	2024-08-21 15:18:03.224876837 -0700
@@ -200,7 +200,7 @@ if ($HIP_PLATFORM eq "amd") {
         $HIPCXXFLAGS .= " -Xclang -fallow-half-arguments-and-returns -D__HIP_HCC_COMPAT_MODE__=1";
     }
 } elsif ($HIP_PLATFORM eq "nvidia") {
-    $CUDA_PATH=$ENV{'CUDA_PATH'} // '/usr/local/cuda';
+    $CUDA_PATH=$ENV{'CUDA_PATH'} // '/opt/cuda';
     $HIP_INCLUDE_PATH = "$HIP_PATH/include";
     if ($verbose & 0x2) {
         print ("CUDA_PATH=$CUDA_PATH\n");
diff '--color=auto' -urp llvm-project-rocm-6.1.2.orig/amd/hipcc/bin/hipvars.pm llvm-project-rocm-6.1.2/amd/hipcc/bin/hipvars.pm
--- llvm-project-rocm-6.1.2.orig/amd/hipcc/bin/hipvars.pm	2024-05-15 13:31:12.000000000 -0700
+++ llvm-project-rocm-6.1.2/amd/hipcc/bin/hipvars.pm	2024-08-21 15:18:11.160743008 -0700
@@ -86,7 +86,7 @@ if (-e "$HIP_PATH/bin/rocm_agent_enumera
 } else {
     $ROCM_PATH=$ENV{'ROCM_PATH'} // "/opt/rocm";
 }
-$CUDA_PATH=$ENV{'CUDA_PATH'} // '/usr/local/cuda';
+$CUDA_PATH=$ENV{'CUDA_PATH'} // '/opt/cuda';
 if ($isWindows and defined $ENV{'CUDA_PATH'}) {
   $CUDA_PATH =~ s/^"(.*)"$/$1/;
   $CUDA_PATH =~ s/\\/\//g;
diff '--color=auto' -urp llvm-project-rocm-6.1.2.orig/amd/hipcc/src/hipBin_nvidia.h llvm-project-rocm-6.1.2/amd/hipcc/src/hipBin_nvidia.h
--- llvm-project-rocm-6.1.2.orig/amd/hipcc/src/hipBin_nvidia.h	2024-05-15 13:31:12.000000000 -0700
+++ llvm-project-rocm-6.1.2/amd/hipcc/src/hipBin_nvidia.h	2024-08-21 15:18:24.408519603 -0700
@@ -233,7 +233,7 @@ void HipBinNvidia::constructCompilerPath
   const EnvVariables& envVariables = getEnvVariables();
   if (envVariables.cudaPathEnv_.empty()) {
     fs::path cudaPathfs;
-    cudaPathfs = "/usr/local/cuda";
+    cudaPathfs = "/opt/cuda";
     complierPath = cudaPathfs.string();
   } else {
     complierPath = envVariables.cudaPathEnv_;
diff '--color=auto' -urp llvm-project-rocm-6.1.2.orig/clang/lib/Driver/ToolChains/AMDGPU.cpp llvm-project-rocm-6.1.2/clang/lib/Driver/ToolChains/AMDGPU.cpp
--- llvm-project-rocm-6.1.2.orig/clang/lib/Driver/ToolChains/AMDGPU.cpp	2024-05-15 13:31:12.000000000 -0700
+++ llvm-project-rocm-6.1.2/clang/lib/Driver/ToolChains/AMDGPU.cpp	2024-08-21 15:16:37.662319899 -0700
@@ -271,7 +271,7 @@ RocmInstallationDetector::getInstallatio
   ROCmSearchDirs.emplace_back(D.ResourceDir,
                               /*StrictChecking=*/true);
 
-  ROCmSearchDirs.emplace_back(D.SysRoot + "/opt/rocm",
+  ROCmSearchDirs.emplace_back(D.SysRoot + "/opt/rocm-@ROCM_VERSION@",
                               /*StrictChecking=*/true);
 
   // Find the latest /opt/rocm-{release} directory.
Only in llvm-project-rocm-6.1.2/clang/lib/Driver/ToolChains: AMDGPU.cpp.orig
diff '--color=auto' -urp llvm-project-rocm-6.1.2.orig/clang/lib/Driver/ToolChains/Cuda.cpp llvm-project-rocm-6.1.2/clang/lib/Driver/ToolChains/Cuda.cpp
--- llvm-project-rocm-6.1.2.orig/clang/lib/Driver/ToolChains/Cuda.cpp	2024-05-15 13:31:12.000000000 -0700
+++ llvm-project-rocm-6.1.2/clang/lib/Driver/ToolChains/Cuda.cpp	2024-08-21 15:17:46.297162311 -0700
@@ -182,6 +182,8 @@ CudaInstallationDetector::CudaInstallati
       // Special case for Debian to have nvidia-cuda-toolkit work
       // out of the box. More info on http://bugs.debian.org/882505
       Candidates.emplace_back(D.SysRoot + "/usr/lib/cuda");
+    if (Dist.IsGentoo())
+      Candidates.emplace_back(D.SysRoot + "/opt/cuda");
   }
 
   bool NoCudaLib = Args.hasArg(options::OPT_nogpulib);
diff '--color=auto' -urp llvm-project-rocm-6.1.2.orig/clang/tools/amdgpu-arch/CMakeLists.txt llvm-project-rocm-6.1.2/clang/tools/amdgpu-arch/CMakeLists.txt
--- llvm-project-rocm-6.1.2.orig/clang/tools/amdgpu-arch/CMakeLists.txt	2024-05-15 13:31:12.000000000 -0700
+++ llvm-project-rocm-6.1.2/clang/tools/amdgpu-arch/CMakeLists.txt	2024-08-21 15:16:37.662319899 -0700
@@ -8,7 +8,7 @@
 
 set(LLVM_LINK_COMPONENTS Support)
 
-find_package(hsa-runtime64 QUIET 1.2.0 HINTS ${CMAKE_INSTALL_PREFIX} PATHS /opt/rocm)
+find_package(hsa-runtime64 QUIET 1.2.0 HINTS ${CMAKE_INSTALL_PREFIX} PATHS /opt/rocm-@ROCM_VERSION@)
 
 add_clang_tool(amdgpu-arch AMDGPUArch.cpp AMDGPUArchByHSA.cpp AMDGPUArchByHIP.cpp)
 
diff '--color=auto' -urp llvm-project-rocm-6.1.2.orig/compiler-rt/CMakeLists.txt llvm-project-rocm-6.1.2/compiler-rt/CMakeLists.txt
--- llvm-project-rocm-6.1.2.orig/compiler-rt/CMakeLists.txt	2024-05-15 13:31:12.000000000 -0700
+++ llvm-project-rocm-6.1.2/compiler-rt/CMakeLists.txt	2024-08-21 15:16:37.670319764 -0700
@@ -465,12 +465,12 @@ endif()
 
 if(SANITIZER_AMDGPU)
   list(APPEND SANITIZER_COMMON_CFLAGS -DSANITIZER_AMDGPU=1)
-  find_path(HSA_INCLUDE hsa.h HINTS ${SANITIZER_HSA_INCLUDE_PATH} ${CMAKE_INSTALL_PREFIX}/include/hsa ${CMAKE_INSTALL_PREFIX}/../include/hsa /opt/rocm/include/hsa PATH_SUFFIXES hsa)
+  find_path(HSA_INCLUDE hsa.h HINTS ${SANITIZER_HSA_INCLUDE_PATH} ${CMAKE_INSTALL_PREFIX}/include/hsa ${CMAKE_INSTALL_PREFIX}/../include/hsa /opt/rocm-@ROCM_VERSION@/include/hsa PATH_SUFFIXES hsa)
   include_directories(${HSA_INCLUDE})
   find_path(COMgr_INCLUDE amd_comgr.h.in HINTS ${SANITIZER_COMGR_INCLUDE_PATH} ${CMAKE_INSTALL_PREFIX}/../include ${CMAKE_INSTALL_PREFIX}/include)
   if (NOT COMgr_INCLUDE)
     add_compile_definitions(AMD_COMGR)
-    find_path(COMgr_INCLUDE amd_comgr.h HINTS ${CMAKE_INSTALL_PREFIX}/../include ${CMAKE_INSTALL_PREFIX}/include /opt/rocm/include)
+    find_path(COMgr_INCLUDE amd_comgr.h HINTS ${CMAKE_INSTALL_PREFIX}/../include ${CMAKE_INSTALL_PREFIX}/include /opt/rocm-@ROCM_VERSION@/include)
   endif()
   include_directories(${COMgr_INCLUDE})
 endif()
diff '--color=auto' -urp llvm-project-rocm-6.1.2.orig/libc/cmake/modules/prepare_libc_gpu_build.cmake llvm-project-rocm-6.1.2/libc/cmake/modules/prepare_libc_gpu_build.cmake
--- llvm-project-rocm-6.1.2.orig/libc/cmake/modules/prepare_libc_gpu_build.cmake	2024-05-15 13:31:12.000000000 -0700
+++ llvm-project-rocm-6.1.2/libc/cmake/modules/prepare_libc_gpu_build.cmake	2024-08-21 15:16:37.722318887 -0700
@@ -31,7 +31,7 @@ endif()
 # Identify any locally installed AMD GPUs on the system using 'amdgpu-arch'.
 find_program(LIBC_AMDGPU_ARCH
              NAMES amdgpu-arch
-             PATHS ${LLVM_BINARY_DIR}/bin /opt/rocm/llvm/bin/)
+             PATHS ${LLVM_BINARY_DIR}/bin /opt/rocm-@ROCM_VERSION@/llvm/bin/)
 
 # Identify any locally installed NVIDIA GPUs on the system using 'nvptx-arch'.
 find_program(LIBC_NVPTX_ARCH
diff '--color=auto' -urp llvm-project-rocm-6.1.2.orig/libc/src/math/gpu/vendor/CMakeLists.txt llvm-project-rocm-6.1.2/libc/src/math/gpu/vendor/CMakeLists.txt
--- llvm-project-rocm-6.1.2.orig/libc/src/math/gpu/vendor/CMakeLists.txt	2024-05-15 13:31:12.000000000 -0700
+++ llvm-project-rocm-6.1.2/libc/src/math/gpu/vendor/CMakeLists.txt	2024-08-21 15:16:37.722318887 -0700
@@ -1,4 +1,4 @@
-find_package(AMDDeviceLibs QUIET HINTS ${CMAKE_INSTALL_PREFIX} PATHS /opt/rocm)
+find_package(AMDDeviceLibs QUIET HINTS ${CMAKE_INSTALL_PREFIX} PATHS /opt/rocm-@ROCM_VERSION@)
 if(AMDDeviceLibs_FOUND)
   message(STATUS "Found the ROCm device library. Implementations falling back "
                  "to the vendor libraries will be resolved statically.")
diff '--color=auto' -urp llvm-project-rocm-6.1.2.orig/libc/utils/gpu/loader/CMakeLists.txt llvm-project-rocm-6.1.2/libc/utils/gpu/loader/CMakeLists.txt
--- llvm-project-rocm-6.1.2.orig/libc/utils/gpu/loader/CMakeLists.txt	2024-05-15 13:31:12.000000000 -0700
+++ llvm-project-rocm-6.1.2/libc/utils/gpu/loader/CMakeLists.txt	2024-08-21 15:16:37.722318887 -0700
@@ -5,7 +5,7 @@ target_include_directories(gpu_loader PU
   ${LIBC_SOURCE_DIR}
 )
 
-find_package(hsa-runtime64 QUIET 1.2.0 HINTS ${CMAKE_INSTALL_PREFIX} PATHS /opt/rocm)
+find_package(hsa-runtime64 QUIET 1.2.0 HINTS ${CMAKE_INSTALL_PREFIX} PATHS /opt/rocm-@ROCM_VERSION@)
 if(hsa-runtime64_FOUND)
   add_subdirectory(amdgpu)
 else()
diff '--color=auto' -urp llvm-project-rocm-6.1.2.orig/mlir/lib/Dialect/GPU/CMakeLists.txt llvm-project-rocm-6.1.2/mlir/lib/Dialect/GPU/CMakeLists.txt
--- llvm-project-rocm-6.1.2.orig/mlir/lib/Dialect/GPU/CMakeLists.txt	2024-05-15 13:31:12.000000000 -0700
+++ llvm-project-rocm-6.1.2/mlir/lib/Dialect/GPU/CMakeLists.txt	2024-08-21 15:16:37.738318616 -0700
@@ -136,7 +136,7 @@ if(MLIR_ENABLE_ROCM_CONVERSIONS)
       "Building mlir with ROCm support requires the AMDGPU backend")
   endif()
 
-  set(DEFAULT_ROCM_PATH "/opt/rocm" CACHE PATH "Fallback path to search for ROCm installs")
+  set(DEFAULT_ROCM_PATH "/opt/rocm-@ROCM_VERSION@" CACHE PATH "Fallback path to search for ROCm installs")
   target_compile_definitions(obj.MLIRGPUTransforms
     PRIVATE
     __DEFAULT_ROCM_PATH__="${DEFAULT_ROCM_PATH}"
diff '--color=auto' -urp llvm-project-rocm-6.1.2.orig/mlir/lib/ExecutionEngine/CMakeLists.txt llvm-project-rocm-6.1.2/mlir/lib/ExecutionEngine/CMakeLists.txt
--- llvm-project-rocm-6.1.2.orig/mlir/lib/ExecutionEngine/CMakeLists.txt	2024-05-15 13:31:12.000000000 -0700
+++ llvm-project-rocm-6.1.2/mlir/lib/ExecutionEngine/CMakeLists.txt	2024-08-21 15:16:37.806317470 -0700
@@ -247,7 +247,7 @@ if(LLVM_ENABLE_PIC)
     # Configure ROCm support.
     if (NOT DEFINED ROCM_PATH)
       if (NOT DEFINED ENV{ROCM_PATH})
-        set(ROCM_PATH "/opt/rocm" CACHE PATH "Path to which ROCm has been installed")
+        set(ROCM_PATH "/opt/rocm-@ROCM_VERSION@" CACHE PATH "Path to which ROCm has been installed")
       else()
         set(ROCM_PATH $ENV{ROCM_PATH} CACHE PATH "Path to which ROCm has been installed")
       endif()
diff '--color=auto' -urp llvm-project-rocm-6.1.2.orig/openmp/libomptarget/DeviceRTL/CMakeLists.txt llvm-project-rocm-6.1.2/openmp/libomptarget/DeviceRTL/CMakeLists.txt
--- llvm-project-rocm-6.1.2.orig/openmp/libomptarget/DeviceRTL/CMakeLists.txt	2024-05-15 13:31:12.000000000 -0700
+++ llvm-project-rocm-6.1.2/openmp/libomptarget/DeviceRTL/CMakeLists.txt	2024-08-21 15:16:37.870316390 -0700
@@ -338,7 +338,7 @@ function(buildAMDAllInclusiveBcLib gfxna
       HINTS
       ${CMAKE_INSTALL_PREFIX}
       PATHS
-      /opt/rocm)
+      /opt/rocm-@ROCM_VERSION@)
     if(AMDDeviceLibs_DIR)
       set(amd_device_libs_found ON)
       libomptarget_say("DeviceRTLs ${gfxname}: Getting ROCm device libs from ${AMDDeviceLibs_DIR}")
diff '--color=auto' -urp llvm-project-rocm-6.1.2.orig/openmp/libomptarget/deviceRTLs/amdgcn/CMakeLists.txt llvm-project-rocm-6.1.2/openmp/libomptarget/deviceRTLs/amdgcn/CMakeLists.txt
--- llvm-project-rocm-6.1.2.orig/openmp/libomptarget/deviceRTLs/amdgcn/CMakeLists.txt	2024-05-15 13:31:12.000000000 -0700
+++ llvm-project-rocm-6.1.2/openmp/libomptarget/deviceRTLs/amdgcn/CMakeLists.txt	2024-08-21 15:16:37.870316390 -0700
@@ -17,7 +17,7 @@ endif()
 find_package(AMDDeviceLibs REQUIRED CONFIG PATHS
 	${CMAKE_BINARY_DIR}/../../tools/ROCMDEVLIBS
 	${CMAKE_INSTALL_PREFIX}
-	/opt/rocm)
+	/opt/rocm-@ROCM_VERSION@)
 if(AMDDeviceLibs_DIR)
   libomptarget_say("Getting ROCm device libs from ${AMDDeviceLibs_DIR}")
 else()
diff '--color=auto' -urp llvm-project-rocm-6.1.2.orig/openmp/libomptarget/hostexec/CMakeLists.txt llvm-project-rocm-6.1.2/openmp/libomptarget/hostexec/CMakeLists.txt
--- llvm-project-rocm-6.1.2.orig/openmp/libomptarget/hostexec/CMakeLists.txt	2024-05-15 13:31:12.000000000 -0700
+++ llvm-project-rocm-6.1.2/openmp/libomptarget/hostexec/CMakeLists.txt	2024-08-21 15:16:37.870316390 -0700
@@ -16,7 +16,7 @@ if("${CMAKE_SOURCE_DIR}" STREQUAL "${CMA
   message(FATAL_ERROR "Direct configuration not supported, please use parent directory!")
 endif()
 
-find_package(hsa-runtime64 1.2.0 QUIET HINTS ${CMAKE_INSTALL_PREFIX} PATHS /opt/rocm/hsa)
+find_package(hsa-runtime64 1.2.0 QUIET HINTS ${CMAKE_INSTALL_PREFIX} PATHS /opt/rocm-@ROCM_VERSION@/hsa)
 if (hsa-runtime64_FOUND)
    list(APPEND HOSTRPC_ARCHS "amdgcn")
    add_library(amdgcn_hostexec_services STATIC 
diff '--color=auto' -urp llvm-project-rocm-6.1.2.orig/openmp/libomptarget/hostrpc/services/CMakeLists.txt llvm-project-rocm-6.1.2/openmp/libomptarget/hostrpc/services/CMakeLists.txt
--- llvm-project-rocm-6.1.2.orig/openmp/libomptarget/hostrpc/services/CMakeLists.txt	2024-05-15 13:31:12.000000000 -0700
+++ llvm-project-rocm-6.1.2/openmp/libomptarget/hostrpc/services/CMakeLists.txt	2024-08-21 15:16:37.870316390 -0700
@@ -1,5 +1,5 @@
 
-find_package(hsa-runtime64 1.2.0 REQUIRED HINTS ${CMAKE_INSTALL_PREFIX} PATHS /opt/rocm)
+find_package(hsa-runtime64 1.2.0 REQUIRED HINTS ${CMAKE_INSTALL_PREFIX} PATHS /opt/rocm-@ROCM_VERSION@)
 add_library(hostrpc_services STATIC hostcall.cpp hostrpc_execute_service.c hostrpc_externs.c urilocator.cpp devsanitizer.cpp)
 set_property(TARGET hostrpc_services PROPERTY POSITION_INDEPENDENT_CODE ON)
 if(SANITIZER_AMDGPU)
diff '--color=auto' -urp llvm-project-rocm-6.1.2.orig/openmp/libomptarget/plugins/amdgpu/CMakeLists.txt llvm-project-rocm-6.1.2/openmp/libomptarget/plugins/amdgpu/CMakeLists.txt
--- llvm-project-rocm-6.1.2.orig/openmp/libomptarget/plugins/amdgpu/CMakeLists.txt	2024-05-15 13:31:12.000000000 -0700
+++ llvm-project-rocm-6.1.2/openmp/libomptarget/plugins/amdgpu/CMakeLists.txt	2024-08-21 15:16:37.870316390 -0700
@@ -22,7 +22,7 @@ endif()
 
 # as of rocm-3.7, hsa is installed with cmake packages and kmt is found via hsa
 find_package(hsa-runtime64 QUIET 1.2.0 HINTS ${CMAKE_INSTALL_PREFIX} PATHS
-${CMAKE_INSTALL_PREFIX} /opt/rocm)
+${CMAKE_INSTALL_PREFIX} /opt/rocm-@ROCM_VERSION@)
 
 if(hsa-runtime64_DIR)
 message("FOUND hsa-runtime64 at ${hsa-runtime64_DIR}")
@@ -34,7 +34,7 @@ return()
 endif()
 
 # libhsakmt.a
-find_library (HSAKMT_LIB libhsakmt.a REQURIED HINTS ${CMAKE_INSTALL_PREFIX} PATHS /opt/rocm)
+find_library (HSAKMT_LIB libhsakmt.a REQURIED HINTS ${CMAKE_INSTALL_PREFIX} PATHS /opt/rocm-@ROCM_VERSION@)
 get_filename_component(HSAKMT_LIB_PATH ${HSAKMT_LIB} DIRECTORY)
 link_directories (${HSAKMT_LIB_PATH})
 
diff '--color=auto' -urp llvm-project-rocm-6.1.2.orig/openmp/libomptarget/plugins-nextgen/amdgpu/CMakeLists.txt llvm-project-rocm-6.1.2/openmp/libomptarget/plugins-nextgen/amdgpu/CMakeLists.txt
--- llvm-project-rocm-6.1.2.orig/openmp/libomptarget/plugins-nextgen/amdgpu/CMakeLists.txt	2024-05-15 13:31:12.000000000 -0700
+++ llvm-project-rocm-6.1.2/openmp/libomptarget/plugins-nextgen/amdgpu/CMakeLists.txt	2024-08-21 15:16:37.870316390 -0700
@@ -20,12 +20,12 @@ if (NOT LIBOMPTARGET_BUILD_AMDGPU_PLUGIN
 endif()
 
 # as of rocm-3.7, hsa is installed with cmake packages and kmt is found via hsa
-find_package(hsa-runtime64 QUIET 1.2.0 HINTS ${CMAKE_INSTALL_PREFIX} PATHS /opt/rocm)
+find_package(hsa-runtime64 QUIET 1.2.0 HINTS ${CMAKE_INSTALL_PREFIX} PATHS /opt/rocm-@ROCM_VERSION@)
 
 # Check for COMGr package , ASan requires COMGr with minimum version 2.4
 if(SANITIZER_AMDGPU)
   add_definitions(-DSANITIZER_AMDGPU=1)
-  find_package(amd_comgr QUIET 2.4.0 HINTS ${CMAKE_INSTALL_PREFIX} PATHS /opt/rocm)
+  find_package(amd_comgr QUIET 2.4.0 HINTS ${CMAKE_INSTALL_PREFIX} PATHS /opt/rocm-@ROCM_VERSION@)
 endif()
 
 if(NOT (CMAKE_SYSTEM_PROCESSOR MATCHES "(x86_64)|(ppc64le)|(aarch64)$" AND CMAKE_SYSTEM_NAME MATCHES "Linux"))
diff '--color=auto' -urp llvm-project-rocm-6.1.2.orig/openmp/libomptarget/src/CMakeLists.txt llvm-project-rocm-6.1.2/openmp/libomptarget/src/CMakeLists.txt
--- llvm-project-rocm-6.1.2.orig/openmp/libomptarget/src/CMakeLists.txt	2024-05-15 13:31:12.000000000 -0700
+++ llvm-project-rocm-6.1.2/openmp/libomptarget/src/CMakeLists.txt	2024-08-21 15:16:37.870316390 -0700
@@ -10,7 +10,7 @@
 #
 ##===----------------------------------------------------------------------===##
 # libhsakmt.a
-find_library ( HSAKMT_LIB libhsakmt.a REQURIED HINTS ${CMAKE_INSTALL_PREFIX} PATHS /opt/rocm)
+find_library ( HSAKMT_LIB libhsakmt.a REQURIED HINTS ${CMAKE_INSTALL_PREFIX} PATHS /opt/rocm-@ROCM_VERSION@)
 get_filename_component ( HSAKMT_LIB_PATH ${HSAKMT_LIB} DIRECTORY )
 link_directories (${HSAKMT_LIB_PATH})
 
