diff '--color=auto' -urp llvm-project-rocm-5.7.1.orig/clang/tools/amdgpu-arch/CMakeLists.txt llvm-project-rocm-5.7.1/clang/tools/amdgpu-arch/CMakeLists.txt
--- llvm-project-rocm-5.7.1.orig/clang/tools/amdgpu-arch/CMakeLists.txt	2023-09-19 10:39:23.000000000 -0700
+++ llvm-project-rocm-5.7.1/clang/tools/amdgpu-arch/CMakeLists.txt	2024-07-10 15:34:03.961304914 -0700
@@ -8,12 +8,12 @@
 
 set(LLVM_LINK_COMPONENTS Support)
 
-find_package(hsa-runtime64 QUIET 1.2.0 HINTS ${CMAKE_INSTALL_PREFIX} PATHS /opt/rocm)
+find_package(hsa-runtime64 QUIET 1.2.0 HINTS ${CMAKE_INSTALL_PREFIX} PATHS /opt/rocm-@ROCM_VERSION@)
 
 add_clang_tool(amdgpu-arch AMDGPUArch.cpp)
 
 # If we find the HSA runtime we link with it directly.
-find_package(hsa-runtime64 QUIET 1.2.0 HINTS ${CMAKE_INSTALL_PREFIX} PATHS /opt/rocm)
+find_package(hsa-runtime64 QUIET 1.2.0 HINTS ${CMAKE_INSTALL_PREFIX} PATHS /opt/rocm-@ROCM_VERSION@)
 if(hsa-runtime64_FOUND AND NOT (LLVM_BUILD_32_BITS OR CMAKE_SIZEOF_VOID_P EQUAL 4))
   message(STATUS "Building amdgpu-arch linked against libhsa")
   set_target_properties(amdgpu-arch PROPERTIES INSTALL_RPATH_USE_LINK_PATH ON)
Only in llvm-project-rocm-5.7.1/clang/tools/amdgpu-arch: CMakeLists.txt.orig
diff '--color=auto' -urp llvm-project-rocm-5.7.1.orig/compiler-rt/CMakeLists.txt llvm-project-rocm-5.7.1/compiler-rt/CMakeLists.txt
--- llvm-project-rocm-5.7.1.orig/compiler-rt/CMakeLists.txt	2023-09-19 10:39:23.000000000 -0700
+++ llvm-project-rocm-5.7.1/compiler-rt/CMakeLists.txt	2024-07-10 15:32:50.286434872 -0700
@@ -486,12 +486,12 @@ endif()
 
 if(SANITIZER_AMDGPU)
   list(APPEND SANITIZER_COMMON_CFLAGS -DSANITIZER_AMDGPU=1)
-  find_path(HSA_INCLUDE hsa.h HINTS ${SANITIZER_HSA_INCLUDE_PATH} ${CMAKE_INSTALL_PREFIX}/include/hsa ${CMAKE_INSTALL_PREFIX}/../include/hsa /opt/rocm/include/hsa PATH_SUFFIXES hsa)
+  find_path(HSA_INCLUDE hsa.h HINTS ${SANITIZER_HSA_INCLUDE_PATH} ${CMAKE_INSTALL_PREFIX}/include/hsa ${CMAKE_INSTALL_PREFIX}/../include/hsa /opt/rocm-@ROCM_VERSION@/include/hsa PATH_SUFFIXES hsa)
   include_directories(${HSA_INCLUDE})
   find_path(COMgr_INCLUDE amd_comgr.h.in HINTS ${SANITIZER_COMGR_INCLUDE_PATH} ${CMAKE_INSTALL_PREFIX}/../include ${CMAKE_INSTALL_PREFIX}/include)
   if (NOT COMgr_INCLUDE)
     add_compile_definitions(AMD_COMGR)
-    find_path(COMgr_INCLUDE amd_comgr.h HINTS ${CMAKE_INSTALL_PREFIX}/../include ${CMAKE_INSTALL_PREFIX}/include /opt/rocm/include)
+    find_path(COMgr_INCLUDE amd_comgr.h HINTS ${CMAKE_INSTALL_PREFIX}/../include ${CMAKE_INSTALL_PREFIX}/include /opt/rocm-@ROCM_VERSION@/include)
   endif()
   include_directories(${COMgr_INCLUDE})
 endif()
diff '--color=auto' -urp llvm-project-rocm-5.7.1.orig/libc/cmake/modules/prepare_libc_gpu_build.cmake llvm-project-rocm-5.7.1/libc/cmake/modules/prepare_libc_gpu_build.cmake
--- llvm-project-rocm-5.7.1.orig/libc/cmake/modules/prepare_libc_gpu_build.cmake	2023-09-19 10:39:23.000000000 -0700
+++ llvm-project-rocm-5.7.1/libc/cmake/modules/prepare_libc_gpu_build.cmake	2024-07-10 15:33:19.929980110 -0700
@@ -31,7 +31,7 @@ endif()
 # Identify any locally installed AMD GPUs on the system using 'amdgpu-arch'.
 find_program(LIBC_AMDGPU_ARCH
              NAMES amdgpu-arch
-             PATHS ${LLVM_BINARY_DIR}/bin /opt/rocm/llvm/bin/)
+             PATHS ${LLVM_BINARY_DIR}/bin /opt/rocm-@ROCM_VERSION@/llvm/bin/)
 
 # Identify any locally installed NVIDIA GPUs on the system using 'nvptx-arch'.
 find_program(LIBC_NVPTX_ARCH
Only in llvm-project-rocm-5.7.1/libc/cmake/modules: prepare_libc_gpu_build.cmake.orig
Only in llvm-project-rocm-5.7.1/libc/cmake/modules: prepare_libc_gpu_build.cmake.rej
diff '--color=auto' -urp llvm-project-rocm-5.7.1.orig/libc/utils/gpu/loader/CMakeLists.txt llvm-project-rocm-5.7.1/libc/utils/gpu/loader/CMakeLists.txt
--- llvm-project-rocm-5.7.1.orig/libc/utils/gpu/loader/CMakeLists.txt	2023-09-19 10:39:23.000000000 -0700
+++ llvm-project-rocm-5.7.1/libc/utils/gpu/loader/CMakeLists.txt	2024-07-10 15:33:23.929918760 -0700
@@ -1,7 +1,7 @@
 add_library(gpu_loader OBJECT Main.cpp)
 target_include_directories(gpu_loader PUBLIC ${CMAKE_CURRENT_SOURCE_DIR})
 
-find_package(hsa-runtime64 QUIET 1.2.0 HINTS ${CMAKE_INSTALL_PREFIX} PATHS /opt/rocm)
+find_package(hsa-runtime64 QUIET 1.2.0 HINTS ${CMAKE_INSTALL_PREFIX} PATHS /opt/rocm-@ROCM_VERSION@)
 if(hsa-runtime64_FOUND)
   add_subdirectory(amdgpu)
 else()
diff '--color=auto' -urp llvm-project-rocm-5.7.1.orig/mlir/lib/Dialect/GPU/CMakeLists.txt llvm-project-rocm-5.7.1/mlir/lib/Dialect/GPU/CMakeLists.txt
--- llvm-project-rocm-5.7.1.orig/mlir/lib/Dialect/GPU/CMakeLists.txt	2023-09-19 10:39:23.000000000 -0700
+++ llvm-project-rocm-5.7.1/mlir/lib/Dialect/GPU/CMakeLists.txt	2024-07-10 15:32:50.362433704 -0700
@@ -133,7 +133,7 @@ if(MLIR_ENABLE_ROCM_CONVERSIONS)
       "Building mlir with ROCm support requires the AMDGPU backend")
   endif()
 
-  set(DEFAULT_ROCM_PATH "/opt/rocm" CACHE PATH "Fallback path to search for ROCm installs")
+  set(DEFAULT_ROCM_PATH "/opt/rocm-@ROCM_VERSION@" CACHE PATH "Fallback path to search for ROCm installs")
   target_compile_definitions(obj.MLIRGPUTransforms
     PRIVATE
     __DEFAULT_ROCM_PATH__="${DEFAULT_ROCM_PATH}"
Only in llvm-project-rocm-5.7.1/mlir/lib/Dialect/GPU: CMakeLists.txt.orig
diff '--color=auto' -urp llvm-project-rocm-5.7.1.orig/mlir/lib/ExecutionEngine/CMakeLists.txt llvm-project-rocm-5.7.1/mlir/lib/ExecutionEngine/CMakeLists.txt
--- llvm-project-rocm-5.7.1.orig/mlir/lib/ExecutionEngine/CMakeLists.txt	2023-09-19 10:39:23.000000000 -0700
+++ llvm-project-rocm-5.7.1/mlir/lib/ExecutionEngine/CMakeLists.txt	2024-07-10 15:33:13.694075762 -0700
@@ -205,7 +205,7 @@ if(LLVM_ENABLE_PIC)
     # Configure ROCm support.
     if (NOT DEFINED ROCM_PATH)
       if (NOT DEFINED ENV{ROCM_PATH})
-        set(ROCM_PATH "/opt/rocm" CACHE PATH "Path to which ROCm has been installed")
+        set(ROCM_PATH "/opt/rocm-@ROCM_VERSION@" CACHE PATH "Path to which ROCm has been installed")
       else()
         set(ROCM_PATH $ENV{ROCM_PATH} CACHE PATH "Path to which ROCm has been installed")
       endif()
Only in llvm-project-rocm-5.7.1/mlir/lib/ExecutionEngine: CMakeLists.txt.orig
Only in llvm-project-rocm-5.7.1/mlir/lib/ExecutionEngine: CMakeLists.txt.rej
diff '--color=auto' -urp llvm-project-rocm-5.7.1.orig/openmp/libomptarget/DeviceRTL/CMakeLists.txt llvm-project-rocm-5.7.1/openmp/libomptarget/DeviceRTL/CMakeLists.txt
--- llvm-project-rocm-5.7.1.orig/openmp/libomptarget/DeviceRTL/CMakeLists.txt	2023-09-19 10:39:23.000000000 -0700
+++ llvm-project-rocm-5.7.1/openmp/libomptarget/DeviceRTL/CMakeLists.txt	2024-07-10 15:32:50.362433704 -0700
@@ -196,7 +196,7 @@ function(compileDeviceRTLLibrary target_
         HINTS
         ${CMAKE_INSTALL_PREFIX}
         PATHS
-        /opt/rocm)
+        /opt/rocm-@ROCM_VERSION@)
       if(AMDDeviceLibs_DIR)
 	      set(amd_device_libs_found ON)
         libomptarget_say("DeviceRTLs ${target_cpu}: Getting ROCm device libs from ${AMDDeviceLibs_DIR}")
Only in llvm-project-rocm-5.7.1/openmp/libomptarget/DeviceRTL: CMakeLists.txt.orig
diff '--color=auto' -urp llvm-project-rocm-5.7.1.orig/openmp/libomptarget/deviceRTLs/amdgcn/CMakeLists.txt llvm-project-rocm-5.7.1/openmp/libomptarget/deviceRTLs/amdgcn/CMakeLists.txt
--- llvm-project-rocm-5.7.1.orig/openmp/libomptarget/deviceRTLs/amdgcn/CMakeLists.txt	2023-09-19 10:39:23.000000000 -0700
+++ llvm-project-rocm-5.7.1/openmp/libomptarget/deviceRTLs/amdgcn/CMakeLists.txt	2024-07-10 15:32:50.362433704 -0700
@@ -17,7 +17,7 @@ endif()
 find_package(AMDDeviceLibs REQUIRED CONFIG PATHS
 	${CMAKE_BINARY_DIR}/../../tools/ROCMDEVLIBS
 	${CMAKE_INSTALL_PREFIX}
-	/opt/rocm)
+	/opt/rocm-@ROCM_VERSION@)
 if(AMDDeviceLibs_DIR)
   libomptarget_say("Getting ROCm device libs from ${AMDDeviceLibs_DIR}")
 else()
diff '--color=auto' -urp llvm-project-rocm-5.7.1.orig/openmp/libomptarget/hostexec/CMakeLists.txt llvm-project-rocm-5.7.1/openmp/libomptarget/hostexec/CMakeLists.txt
--- llvm-project-rocm-5.7.1.orig/openmp/libomptarget/hostexec/CMakeLists.txt	2023-09-19 10:39:23.000000000 -0700
+++ llvm-project-rocm-5.7.1/openmp/libomptarget/hostexec/CMakeLists.txt	2024-07-10 15:33:32.569786251 -0700
@@ -16,7 +16,7 @@ if("${CMAKE_SOURCE_DIR}" STREQUAL "${CMA
   message(FATAL_ERROR "Direct configuration not supported, please use parent directory!")
 endif()
 
-find_package(hsa-runtime64 1.2.0 QUIET HINTS ${CMAKE_INSTALL_PREFIX} PATHS /opt/rocm/hsa)
+find_package(hsa-runtime64 1.2.0 QUIET HINTS ${CMAKE_INSTALL_PREFIX} PATHS /opt/rocm-@ROCM_VERSION@/hsa)
 if (hsa-runtime64_FOUND)
    list(APPEND HOSTRPC_ARCHS "amdgcn")
    add_library(amdgcn_hostexec_services STATIC 
diff '--color=auto' -urp llvm-project-rocm-5.7.1.orig/openmp/libomptarget/hostrpc/services/CMakeLists.txt llvm-project-rocm-5.7.1/openmp/libomptarget/hostrpc/services/CMakeLists.txt
--- llvm-project-rocm-5.7.1.orig/openmp/libomptarget/hostrpc/services/CMakeLists.txt	2023-09-19 10:39:23.000000000 -0700
+++ llvm-project-rocm-5.7.1/openmp/libomptarget/hostrpc/services/CMakeLists.txt	2024-07-10 15:32:50.366433644 -0700
@@ -1,5 +1,5 @@
 
-find_package(hsa-runtime64 1.2.0 REQUIRED HINTS ${CMAKE_INSTALL_PREFIX} PATHS /opt/rocm)
+find_package(hsa-runtime64 1.2.0 REQUIRED HINTS ${CMAKE_INSTALL_PREFIX} PATHS /opt/rocm-@ROCM_VERSION@)
 add_library(hostrpc_services STATIC hostcall.cpp hostrpc_execute_service.c hostrpc_externs.c urilocator.cpp devsanitizer.cpp)
 set_property(TARGET hostrpc_services PROPERTY POSITION_INDEPENDENT_CODE ON)
 if(SANITIZER_AMDGPU)
diff '--color=auto' -urp llvm-project-rocm-5.7.1.orig/openmp/libomptarget/plugins/amdgpu/CMakeLists.txt llvm-project-rocm-5.7.1/openmp/libomptarget/plugins/amdgpu/CMakeLists.txt
--- llvm-project-rocm-5.7.1.orig/openmp/libomptarget/plugins/amdgpu/CMakeLists.txt	2023-09-19 10:39:23.000000000 -0700
+++ llvm-project-rocm-5.7.1/openmp/libomptarget/plugins/amdgpu/CMakeLists.txt	2024-07-10 15:33:48.217546298 -0700
@@ -22,7 +22,7 @@ endif()
 
 # as of rocm-3.7, hsa is installed with cmake packages and kmt is found via hsa
 find_package(hsa-runtime64 QUIET 1.2.0 HINTS ${CMAKE_INSTALL_PREFIX} PATHS
-${CMAKE_INSTALL_PREFIX} /opt/rocm)
+${CMAKE_INSTALL_PREFIX} /opt/rocm-@ROCM_VERSION@)
 
 if(hsa-runtime64_DIR)
 message("FOUND hsa-runtime64 at ${hsa-runtime64_DIR}")
@@ -34,7 +34,7 @@ return()
 endif()
 
 # libhsakmt.a
-find_library ( HSAKMT_LIB libhsakmt.a REQURIED HINTS ${CMAKE_INSTALL_PREFIX} PATHS /opt/rocm)
+find_library ( HSAKMT_LIB libhsakmt.a REQURIED HINTS ${CMAKE_INSTALL_PREFIX} PATHS /opt/rocm-@ROCM_VERSION@)
 get_filename_component ( HSAKMT_LIB_PATH ${HSAKMT_LIB} DIRECTORY )
 link_directories (${HSAKMT_LIB_PATH})
 
Only in llvm-project-rocm-5.7.1/openmp/libomptarget/plugins/amdgpu: CMakeLists.txt.orig
Only in llvm-project-rocm-5.7.1/openmp/libomptarget/plugins/amdgpu: CMakeLists.txt.rej
diff '--color=auto' -urp llvm-project-rocm-5.7.1.orig/openmp/libomptarget/plugins-nextgen/amdgpu/CMakeLists.txt llvm-project-rocm-5.7.1/openmp/libomptarget/plugins-nextgen/amdgpu/CMakeLists.txt
--- llvm-project-rocm-5.7.1.orig/openmp/libomptarget/plugins-nextgen/amdgpu/CMakeLists.txt	2023-09-19 10:39:23.000000000 -0700
+++ llvm-project-rocm-5.7.1/openmp/libomptarget/plugins-nextgen/amdgpu/CMakeLists.txt	2024-07-10 15:33:54.857444489 -0700
@@ -20,7 +20,7 @@ if (NOT LIBOMPTARGET_BUILD_AMDGPU_PLUGIN
 endif()
 
 # libhsakmt.a
-find_library ( HSAKMT_LIB libhsakmt.a REQURIED HINTS ${CMAKE_INSTALL_PREFIX} PATHS /opt/rocm)
+find_library ( HSAKMT_LIB libhsakmt.a REQURIED HINTS ${CMAKE_INSTALL_PREFIX} PATHS /opt/rocm-@ROCM_VERSION@)
 get_filename_component ( HSAKMT_LIB_PATH ${HSAKMT_LIB} DIRECTORY )
 link_directories (${HSAKMT_LIB_PATH})
 
@@ -34,12 +34,12 @@ pkg_check_modules(drm REQUIRED IMPORTED_
 find_library(numa libnuma.so REQUIRED HINTS /usr/lib/x86_64-linux-gnu/)
 
 # as of rocm-3.7, hsa is installed with cmake packages and kmt is found via hsa
-find_package(hsa-runtime64 QUIET 1.2.0 HINTS ${CMAKE_INSTALL_PREFIX} PATHS /opt/rocm)
+find_package(hsa-runtime64 QUIET 1.2.0 HINTS ${CMAKE_INSTALL_PREFIX} PATHS /opt/rocm-@ROCM_VERSION@)
 
 # Check for COMGr package , ASan requires COMGr with minimum version 2.4
 if(SANITIZER_AMDGPU)
   add_definitions(-DSANITIZER_AMDGPU=1)
-  find_package(amd_comgr QUIET 2.4.0 HINTS ${CMAKE_INSTALL_PREFIX} PATHS /opt/rocm)
+  find_package(amd_comgr QUIET 2.4.0 HINTS ${CMAKE_INSTALL_PREFIX} PATHS /opt/rocm-@ROCM_VERSION@)
 endif()
 
 if(NOT (CMAKE_SYSTEM_PROCESSOR MATCHES "(x86_64)|(ppc64le)|(aarch64)$" AND CMAKE_SYSTEM_NAME MATCHES "Linux"))
Only in llvm-project-rocm-5.7.1/openmp/libomptarget/plugins-nextgen/amdgpu: CMakeLists.txt.orig
