diff '--color=auto' -urp llvm-project-rocm-6.2.0.orig/amd/hipcc/bin/hipvars.pm llvm-project-rocm-6.2.0/amd/hipcc/bin/hipvars.pm
--- llvm-project-rocm-6.2.0.orig/amd/hipcc/bin/hipvars.pm	2024-07-23 09:19:13.000000000 -0700
+++ llvm-project-rocm-6.2.0/amd/hipcc/bin/hipvars.pm	2024-08-02 18:45:38.030037702 -0700
@@ -84,7 +84,7 @@ if (-e "$HIP_PATH/bin/rocm_agent_enumera
 }elsif (-e "$HIP_PATH/../bin/rocm_agent_enumerator") { # case for backward compatibility
     $ROCM_PATH=$ENV{'ROCM_PATH'} // dirname("$HIP_PATH"); # use parent directory of HIP_PATH
 } else {
-    $ROCM_PATH=$ENV{'ROCM_PATH'} // "/opt/rocm";
+    $ROCM_PATH=$ENV{'ROCM_PATH'} // "/opt/rocm-@ROCM_VERSION@";
 }
 $CUDA_PATH=$ENV{'CUDA_PATH'} // '/usr/local/cuda';
 if ($isWindows and defined $ENV{'CUDA_PATH'}) {
diff '--color=auto' -urp llvm-project-rocm-6.2.0.orig/amd/hipcc/src/hipBin_base.h llvm-project-rocm-6.2.0/amd/hipcc/src/hipBin_base.h
--- llvm-project-rocm-6.2.0.orig/amd/hipcc/src/hipBin_base.h	2024-07-23 09:19:13.000000000 -0700
+++ llvm-project-rocm-6.2.0/amd/hipcc/src/hipBin_base.h	2024-08-02 18:45:30.962152525 -0700
@@ -342,7 +342,7 @@ void HipBinBase::constructRoccmPath() {
     fs::path rocm_agent_enumerator_file(roccm_path);
     rocm_agent_enumerator_file /= "bin/rocm_agent_enumerator";
     if (!fs::exists(rocm_agent_enumerator_file)) {
-      roccm_path = "/opt/rocm";
+      roccm_path = "/opt/rocm-@ROCM_VERSION@";
     }
     variables_.roccmPathEnv_ = roccm_path.string();
   } else {
@@ -446,7 +446,7 @@ void HipBinBase::printUsage() const {
   " print HIP_PATH (use env var if set, else determine from hipconfig path)\n";
   cout << "  --rocmpath,  -R    :"
   " print ROCM_PATH (use env var if set,"
-  " else determine from hip path or /opt/rocm)\n";
+  " else determine from hip path or /opt/rocm-@ROCM_VERSION@)\n";
   cout << "  --cpp_config, -C   : print C++ compiler options\n";
   cout << "  --compiler, -c     : print compiler (clang or nvcc)\n";
   cout << "  --platform, -P     : print platform (amd or nvidia)\n";
diff '--color=auto' -urp llvm-project-rocm-6.2.0.orig/clang/lib/Driver/ToolChains/AMDGPU.cpp llvm-project-rocm-6.2.0/clang/lib/Driver/ToolChains/AMDGPU.cpp
--- llvm-project-rocm-6.2.0.orig/clang/lib/Driver/ToolChains/AMDGPU.cpp	2024-07-23 09:19:13.000000000 -0700
+++ llvm-project-rocm-6.2.0/clang/lib/Driver/ToolChains/AMDGPU.cpp	2024-08-02 18:36:57.058279941 -0700
@@ -271,7 +271,7 @@ RocmInstallationDetector::getInstallatio
   ROCmSearchDirs.emplace_back(D.ResourceDir,
                               /*StrictChecking=*/true);
 
-  ROCmSearchDirs.emplace_back(D.SysRoot + "/opt/rocm",
+  ROCmSearchDirs.emplace_back(D.SysRoot + "/opt/rocm-@ROCM_VERSION@",
                               /*StrictChecking=*/true);
 
   // Find the latest /opt/rocm-{release} directory.
Only in llvm-project-rocm-6.2.0/clang/lib/Driver/ToolChains: AMDGPU.cpp.orig
diff '--color=auto' -urp llvm-project-rocm-6.2.0.orig/clang/tools/amdgpu-arch/CMakeLists.txt llvm-project-rocm-6.2.0/clang/tools/amdgpu-arch/CMakeLists.txt
--- llvm-project-rocm-6.2.0.orig/clang/tools/amdgpu-arch/CMakeLists.txt	2024-07-23 09:19:13.000000000 -0700
+++ llvm-project-rocm-6.2.0/clang/tools/amdgpu-arch/CMakeLists.txt	2024-08-02 18:36:57.062279880 -0700
@@ -8,7 +8,7 @@
 
 set(LLVM_LINK_COMPONENTS Support)
 
-find_package(hsa-runtime64 QUIET 1.2.0 HINTS ${CMAKE_INSTALL_PREFIX} PATHS /opt/rocm)
+find_package(hsa-runtime64 QUIET 1.2.0 HINTS ${CMAKE_INSTALL_PREFIX} PATHS /opt/rocm-@ROCM_VERSION@)
 
 add_clang_tool(amdgpu-arch AMDGPUArch.cpp AMDGPUArchByHSA.cpp AMDGPUArchByHIP.cpp)
 
diff '--color=auto' -urp llvm-project-rocm-6.2.0.orig/compiler-rt/CMakeLists.txt llvm-project-rocm-6.2.0/compiler-rt/CMakeLists.txt
--- llvm-project-rocm-6.2.0.orig/compiler-rt/CMakeLists.txt	2024-07-23 09:19:13.000000000 -0700
+++ llvm-project-rocm-6.2.0/compiler-rt/CMakeLists.txt	2024-08-02 18:36:57.062279880 -0700
@@ -472,12 +472,12 @@ endif()
 
 if(SANITIZER_AMDGPU)
   list(APPEND SANITIZER_COMMON_CFLAGS -DSANITIZER_AMDGPU=1)
-  find_path(HSA_INCLUDE hsa.h HINTS ${SANITIZER_HSA_INCLUDE_PATH} ${CMAKE_INSTALL_PREFIX}/include/hsa ${CMAKE_INSTALL_PREFIX}/../include/hsa /opt/rocm/include/hsa PATH_SUFFIXES hsa)
+  find_path(HSA_INCLUDE hsa.h HINTS ${SANITIZER_HSA_INCLUDE_PATH} ${CMAKE_INSTALL_PREFIX}/include/hsa ${CMAKE_INSTALL_PREFIX}/../include/hsa /opt/rocm-@ROCM_VERSION@/include/hsa PATH_SUFFIXES hsa)
   include_directories(${HSA_INCLUDE})
   find_path(COMgr_INCLUDE amd_comgr.h.in HINTS ${SANITIZER_COMGR_INCLUDE_PATH} ${CMAKE_INSTALL_PREFIX}/../include ${CMAKE_INSTALL_PREFIX}/include)
   if (NOT COMgr_INCLUDE)
     add_compile_definitions(AMD_COMGR)
-    find_path(COMgr_INCLUDE amd_comgr.h HINTS ${CMAKE_INSTALL_PREFIX}/../include ${CMAKE_INSTALL_PREFIX}/include /opt/rocm/include)
+    find_path(COMgr_INCLUDE amd_comgr.h HINTS ${CMAKE_INSTALL_PREFIX}/../include ${CMAKE_INSTALL_PREFIX}/include /opt/rocm-@ROCM_VERSION@/include)
   endif()
   include_directories(${COMgr_INCLUDE})
 endif()
Only in llvm-project-rocm-6.2.0/compiler-rt: CMakeLists.txt.orig
diff '--color=auto' -urp llvm-project-rocm-6.2.0.orig/libc/cmake/modules/prepare_libc_gpu_build.cmake llvm-project-rocm-6.2.0/libc/cmake/modules/prepare_libc_gpu_build.cmake
--- llvm-project-rocm-6.2.0.orig/libc/cmake/modules/prepare_libc_gpu_build.cmake	2024-07-23 09:19:13.000000000 -0700
+++ llvm-project-rocm-6.2.0/libc/cmake/modules/prepare_libc_gpu_build.cmake	2024-08-02 18:37:34.077716693 -0700
@@ -32,7 +32,7 @@ endif()
 # Identify any locally installed AMD GPUs on the system using 'amdgpu-arch'.
 find_program(LIBC_AMDGPU_ARCH
              NAMES amdgpu-arch NO_DEFAULT_PATH
-             PATHS ${LLVM_BINARY_DIR}/bin /opt/rocm/llvm/bin/)
+             PATHS ${LLVM_BINARY_DIR}/bin /opt/rocm-@ROCM_VERSION@/llvm/bin/)
 
 # Identify any locally installed NVIDIA GPUs on the system using 'nvptx-arch'.
 find_program(LIBC_NVPTX_ARCH
Only in llvm-project-rocm-6.2.0/libc/cmake/modules: prepare_libc_gpu_build.cmake.orig
Only in llvm-project-rocm-6.2.0/libc/cmake/modules: prepare_libc_gpu_build.cmake.rej
diff '--color=auto' -urp llvm-project-rocm-6.2.0.orig/libc/src/math/gpu/vendor/CMakeLists.txt llvm-project-rocm-6.2.0/libc/src/math/gpu/vendor/CMakeLists.txt
--- llvm-project-rocm-6.2.0.orig/libc/src/math/gpu/vendor/CMakeLists.txt	2024-07-23 09:19:13.000000000 -0700
+++ llvm-project-rocm-6.2.0/libc/src/math/gpu/vendor/CMakeLists.txt	2024-08-02 18:36:57.062279880 -0700
@@ -1,4 +1,4 @@
-find_package(AMDDeviceLibs QUIET HINTS ${CMAKE_INSTALL_PREFIX} PATHS /opt/rocm)
+find_package(AMDDeviceLibs QUIET HINTS ${CMAKE_INSTALL_PREFIX} PATHS /opt/rocm-@ROCM_VERSION@)
 if(AMDDeviceLibs_FOUND)
   message(STATUS "Found the ROCm device library. Implementations falling back "
                  "to the vendor libraries will be resolved statically.")
diff '--color=auto' -urp llvm-project-rocm-6.2.0.orig/libc/utils/gpu/loader/CMakeLists.txt llvm-project-rocm-6.2.0/libc/utils/gpu/loader/CMakeLists.txt
--- llvm-project-rocm-6.2.0.orig/libc/utils/gpu/loader/CMakeLists.txt	2024-07-23 09:19:13.000000000 -0700
+++ llvm-project-rocm-6.2.0/libc/utils/gpu/loader/CMakeLists.txt	2024-08-02 18:36:57.066279820 -0700
@@ -5,7 +5,7 @@ target_include_directories(gpu_loader PU
   ${LIBC_SOURCE_DIR}
 )
 
-find_package(hsa-runtime64 QUIET 1.2.0 HINTS ${CMAKE_INSTALL_PREFIX} PATHS /opt/rocm)
+find_package(hsa-runtime64 QUIET 1.2.0 HINTS ${CMAKE_INSTALL_PREFIX} PATHS /opt/rocm-@ROCM_VERSION@)
 if(hsa-runtime64_FOUND)
   add_subdirectory(amdgpu)
 else()
diff '--color=auto' -urp llvm-project-rocm-6.2.0.orig/mlir/lib/Dialect/GPU/CMakeLists.txt llvm-project-rocm-6.2.0/mlir/lib/Dialect/GPU/CMakeLists.txt
--- llvm-project-rocm-6.2.0.orig/mlir/lib/Dialect/GPU/CMakeLists.txt	2024-07-23 09:19:13.000000000 -0700
+++ llvm-project-rocm-6.2.0/mlir/lib/Dialect/GPU/CMakeLists.txt	2024-08-02 18:36:57.090279455 -0700
@@ -158,7 +158,7 @@ if(MLIR_ENABLE_ROCM_CONVERSIONS)
       "Building mlir with ROCm support requires the AMDGPU backend")
   endif()
 
-  set(DEFAULT_ROCM_PATH "/opt/rocm" CACHE PATH "Fallback path to search for ROCm installs")
+  set(DEFAULT_ROCM_PATH "/opt/rocm-@ROCM_VERSION@" CACHE PATH "Fallback path to search for ROCm installs")
   target_compile_definitions(obj.MLIRGPUTransforms
     PRIVATE
     __DEFAULT_ROCM_PATH__="${DEFAULT_ROCM_PATH}"
Only in llvm-project-rocm-6.2.0/mlir/lib/Dialect/GPU: CMakeLists.txt.orig
diff '--color=auto' -urp llvm-project-rocm-6.2.0.orig/mlir/lib/ExecutionEngine/CMakeLists.txt llvm-project-rocm-6.2.0/mlir/lib/ExecutionEngine/CMakeLists.txt
--- llvm-project-rocm-6.2.0.orig/mlir/lib/ExecutionEngine/CMakeLists.txt	2024-07-23 09:19:13.000000000 -0700
+++ llvm-project-rocm-6.2.0/mlir/lib/ExecutionEngine/CMakeLists.txt	2024-08-02 18:36:57.098279333 -0700
@@ -257,7 +257,7 @@ if(LLVM_ENABLE_PIC)
     # Configure ROCm support.
     if (NOT DEFINED ROCM_PATH)
       if (NOT DEFINED ENV{ROCM_PATH})
-        set(ROCM_PATH "/opt/rocm" CACHE PATH "Path to which ROCm has been installed")
+        set(ROCM_PATH "/opt/rocm-@ROCM_VERSION@" CACHE PATH "Path to which ROCm has been installed")
       else()
         set(ROCM_PATH $ENV{ROCM_PATH} CACHE PATH "Path to which ROCm has been installed")
       endif()
Only in llvm-project-rocm-6.2.0/mlir/lib/ExecutionEngine: CMakeLists.txt.orig
diff '--color=auto' -urp llvm-project-rocm-6.2.0.orig/mlir/lib/Target/LLVM/CMakeLists.txt llvm-project-rocm-6.2.0/mlir/lib/Target/LLVM/CMakeLists.txt
--- llvm-project-rocm-6.2.0.orig/mlir/lib/Target/LLVM/CMakeLists.txt	2024-07-23 09:19:13.000000000 -0700
+++ llvm-project-rocm-6.2.0/mlir/lib/Target/LLVM/CMakeLists.txt	2024-08-02 18:37:27.261820420 -0700
@@ -134,7 +134,7 @@ if(MLIR_ENABLE_ROCM_CONVERSIONS)
   elseif(DEFINED ENV{ROCM_PATH})
     set(DEFAULT_ROCM_PATH "$ENV{ROCM_PATH}" CACHE PATH "Fallback path to search for ROCm installs")
   else()
-    set(DEFAULT_ROCM_PATH "/opt/rocm" CACHE PATH "Fallback path to search for ROCm installs")
+    set(DEFAULT_ROCM_PATH "/opt/rocm-@ROCM_VERSION@" CACHE PATH "Fallback path to search for ROCm installs")
   endif()
   message(VERBOSE "MLIR Default ROCM toolkit path: ${DEFAULT_ROCM_PATH}")
 
diff '--color=auto' -urp llvm-project-rocm-6.2.0.orig/openmp/libomptarget/DeviceRTL/CMakeLists.txt llvm-project-rocm-6.2.0/openmp/libomptarget/DeviceRTL/CMakeLists.txt
--- llvm-project-rocm-6.2.0.orig/openmp/libomptarget/DeviceRTL/CMakeLists.txt	2024-07-23 09:19:13.000000000 -0700
+++ llvm-project-rocm-6.2.0/openmp/libomptarget/DeviceRTL/CMakeLists.txt	2024-08-02 18:36:57.098279333 -0700
@@ -169,7 +169,7 @@ function(addAMDSpecificBcLibs touch_targ
       ${CMAKE_BINARY_DIR}/../../tools/rocm-device-libs
       ${CMAKE_INSTALL_PREFIX}
       PATHS
-      /opt/rocm)
+      /opt/rocm-@ROCM_VERSION@)
     if(AMDDeviceLibs_DIR)
       set(amd_device_libs_found ON)
       libomptarget_say("DeviceRTLs ${gfxname}: Getting ROCm device libs from ${AMDDeviceLibs_DIR}")
Only in llvm-project-rocm-6.2.0/openmp/libomptarget/DeviceRTL: CMakeLists.txt.orig
diff '--color=auto' -urp llvm-project-rocm-6.2.0.orig/openmp/libomptarget/hostexec/CMakeLists.txt llvm-project-rocm-6.2.0/openmp/libomptarget/hostexec/CMakeLists.txt
--- llvm-project-rocm-6.2.0.orig/openmp/libomptarget/hostexec/CMakeLists.txt	2024-07-23 09:19:13.000000000 -0700
+++ llvm-project-rocm-6.2.0/openmp/libomptarget/hostexec/CMakeLists.txt	2024-08-02 18:37:48.973489963 -0700
@@ -19,10 +19,10 @@ endif()
 # If we are bootstrapping hsa via external project we need to use find_library
 # as it will not be installed.
 if(DEFINED LIBOMPTARGET_EXTERNAL_PROJECT_HSA_PATH)
-  find_library(HSA_RUNTIME hsa-runtime64 HINTS ${CMAKE_BINARY_DIR}/../../runtimes/rocr-runtime-prefix/src/rocr-runtime-build ${CMAKE_INSTALL_PREFIX} PATHS /opt/rocm)
+  find_library(HSA_RUNTIME hsa-runtime64 HINTS ${CMAKE_BINARY_DIR}/../../runtimes/rocr-runtime-prefix/src/rocr-runtime-build ${CMAKE_INSTALL_PREFIX} PATHS /opt/rocm-@ROCM_VERSION@)
 else()
  # As of rocm-3.7, hsa is installed with cmake packages and kmt is found via hsa
-  find_package(hsa-runtime64 QUIET 1.2.0 HINTS ${CMAKE_INSTALL_PREFIX} PATHS /opt/rocm)
+  find_package(hsa-runtime64 QUIET 1.2.0 HINTS ${CMAKE_INSTALL_PREFIX} PATHS /opt/rocm-@ROCM_VERSION@)
 endif()
 
 if(DEFINED HSA_RUNTIME)
Only in llvm-project-rocm-6.2.0/openmp/libomptarget/hostexec: CMakeLists.txt.orig
Only in llvm-project-rocm-6.2.0/openmp/libomptarget/hostexec: CMakeLists.txt.rej
diff '--color=auto' -urp llvm-project-rocm-6.2.0.orig/openmp/libomptarget/plugins-nextgen/amdgpu/CMakeLists.txt llvm-project-rocm-6.2.0/openmp/libomptarget/plugins-nextgen/amdgpu/CMakeLists.txt
--- llvm-project-rocm-6.2.0.orig/openmp/libomptarget/plugins-nextgen/amdgpu/CMakeLists.txt	2024-07-23 09:19:13.000000000 -0700
+++ llvm-project-rocm-6.2.0/openmp/libomptarget/plugins-nextgen/amdgpu/CMakeLists.txt	2024-08-02 18:37:55.741386931 -0700
@@ -25,13 +25,13 @@ if(DEFINED LIBOMPTARGET_EXTERNAL_PROJECT
   find_library(HSA_RUNTIME hsa-runtime64 HINTS ${CMAKE_BINARY_DIR}/../../runtimes/rocr-runtime-prefix/src/rocr-runtime-build ${CMAKE_INSTALL_PREFIX})
 else()
   # As of rocm-3.7, hsa is installed with cmake packages and kmt is found via hsa
-  find_package(hsa-runtime64 QUIET 1.2.0 HINTS ${CMAKE_INSTALL_PREFIX} PATHS /opt/rocm)
+  find_package(hsa-runtime64 QUIET 1.2.0 HINTS ${CMAKE_INSTALL_PREFIX} PATHS /opt/rocm-@ROCM_VERSION@)
 endif()
 
 # Check for COMGr package , ASan requires COMGr with minimum version 2.4
 if(SANITIZER_AMDGPU)
   add_definitions(-DSANITIZER_AMDGPU=1)
-  find_package(amd_comgr QUIET 2.4.0 HINTS ${CMAKE_INSTALL_PREFIX} PATHS /opt/rocm)
+  find_package(amd_comgr QUIET 2.4.0 HINTS ${CMAKE_INSTALL_PREFIX} PATHS /opt/rocm-@ROCM_VERSION@)
 endif()
 
 if(NOT (CMAKE_SYSTEM_PROCESSOR MATCHES "(x86_64)|(ppc64le)|(aarch64)$" AND CMAKE_SYSTEM_NAME MATCHES "Linux"))
Only in llvm-project-rocm-6.2.0/openmp/libomptarget/plugins-nextgen/amdgpu: CMakeLists.txt.orig
Only in llvm-project-rocm-6.2.0/openmp/libomptarget/plugins-nextgen/amdgpu: CMakeLists.txt.rej
Only in llvm-project-rocm-6.2.0/openmp/libomptarget/src: CMakeLists.txt.orig
Only in llvm-project-rocm-6.2.0/openmp/libomptarget/src: CMakeLists.txt.rej
