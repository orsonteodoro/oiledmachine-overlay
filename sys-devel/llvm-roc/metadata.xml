<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE pkgmetadata SYSTEM "https://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
  <maintainer type="person">
    <!-- Ebuild on the oiledmachine-overlay -->
    <email>orsonteodoro@hotmail.com</email>
    <name>Orson Teodoro</name>
  </maintainer>
  <upstream>
    <remote-id type="github">RadeonOpenCompute/llvm-project</remote-id>
  </upstream>
  <!--

  oiledmachine-overlay notes:

  This ebuild package allows the package to be optimized with PGO/BOLT for
  purposes of speeding up compilation time.

  To get PGO working, add run each slotted opt.sh script as follows:

  #ROCM_OVERLAY_DIR="/usr/local/oiledmachine-overlay" # if using older README.md instructions
  ROCM_OVERLAY_DIR="/var/db/repos/oiledmachine-overlay" # if overlay was added through eselect repository
  LLVM_ROC_TRAINERS="rocPRIM rocRAND rocSPARSE"
  ROCM_SLOT="5.7"
  ./llvm-roc-opt.sh

  To run ./llvm-roc-opt.sh, you must make sure that all the dependencies are
  installed for that slot.

  The corresponding LLVM_ROC_TRAINERS must have the corresponding
  *_PGO_TRAINING_USE flag defined.

  Environment variables:

  LLVM_ROC_TRAINERS - A space separated list of packages to build.  Acceptable values:  composable_kernel, rocBLAS, rocMLIR, rocPRIM, rocRAND, rocSPARSE
  COMPOSABLE_KERNEL_PGO_TRAINING_USE - USE flags to pass to the composable_kernel ebuild.
  ROCBLAS_PGO_TRAINING_USE - USE flags to pass to the rocBLAS ebuild.
  ROCPRIM_PGO_TRAINING_USE - USE flags to pass to the rocPRIM ebuild.
  ROCRAND_PGO_TRAINING_USE - USE flags to pass to the rocRAND ebuild.
  ROCSPARSE_PGO_TRAINING_USE - USE flags to pass to the rocSPARSE ebuild.


  Training time cost:

  composable_kernel:  high
  rocBLAS:  high
  rocMLIR:  medium
  rocRAND:  low
  rocSPARSE:  medium
  rocPRIM:  low


  Training purpose:

  composable_kernel:  GPU compile for PGO profile generation
  rocBLAS:  GPU compile for PGO profile generation
  rocMLIR:  CPU based compilation for PGO profile generation
  rocRAND:  GPU compile for PGO profile generation
  rocSPARSE:  GPU compile for PGO profile generation
  rocPRIM:  GPU compile for PGO profile generation


  -->
  <use>
    <flag name="epgo">
      Build an optimized Clang toolchain using Profile Guided Optimization (PGO)
      to decrease build times by maybe 20%.
    </flag>
    <flag name="ebolt">
      Build an optimized build using BOLT (Binary Optimization and Layout Tool)
      to improve CPU caching and branch prediction using execution sampling data
      used to optimize code layout.  This may improve performance by 15%.  It
      provides additional post build optimizations. (EXPERIMENTAL)
    </flag>
  </use>
</pkgmetadata>
