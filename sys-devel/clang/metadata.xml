<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE pkgmetadata SYSTEM "https://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
  <maintainer type="person">
    <!-- ebuild fork on the oiledmachine overlay -->
    <email>orsonteodoro@hotmail.com</email>
    <name>Orson Teodoro</name>
  </maintainer>
  <maintainer type="project">
    <!-- ebuild originator -->
    <email>llvm@gentoo.org</email>
  </maintainer>
  <longdescription>
    The goal of the Clang project is to create a new C, C++, Objective C and
    Objective C++ front-end for the LLVM compiler.

    Features and Goals

    Some of the goals for the project include the following:

    End-User Features:
    Fast compiles and low memory use
    Expressive diagnostics
    GCC compatibility
    Utility and Applications:

    Modular library based architecture
    Support diverse clients (refactoring, static analysis, code generation, etc)
    Allow tight integration with IDEs
    Use the LLVM BSD License
    Internal Design and Implementation:

    A real-world, production quality compiler
    A simple and hackable code base
    A single unified parser for C, Objective C, C++, and Objective C++
    Conformance with C/C++/ObjC and their variants


    The oiledmachine overlay modifies these ebuilds for hardened support to
    ensure that packages built with clang/llvm are properly protected with the
    equivalent security flags as its counterpart (Hardened GCC 10.3.0).

    Default ON doesn't necessarily mean hardcoded always ON.  If the package
    does not specify the option, the default ON value will be the one used
    so the flags below will be implied in use.

    Default ON patch status:
    present -- _FORITIFY_SOURCE=2
    testing --  -fstack-clash-protection (x86/x86_64 only)
    SSP canary is verified but strength is unverified --  -fstack-protector-strong
    unverified --param=ssp-buffer-size=4
    present -- -Wl,relro -Wl,now
    present -- PIE

    Verification is done via the app-admin/checksec package.

    When all testing switches to works, then it is ready for production.
    To ensure Full RELRO is applied default ON set LD="${CC}" or LD="ld.lld",
    The lld package on this overlay has been modified for Full RELRO default ON.
    However, packages may override the defaults if they are problematic or
    accidently lower the security level unintentionally, so you need to
    recheck the build log to be certain.

    While the toolchain-funcs.eclass only recognize hardened gcc existance
    in the ssp checking functions, you may verify a hardenedized counterpart
    though `clang --version` if using these patches from this overlay which
    also report the default ON hardened options.

    When using -stdlib=libc++, add -cfi-stdlib in front of it for a
    proper CFI build.
  </longdescription>
  <use>
    <flag name="default-compiler-rt">Use compiler-rt instead of libgcc as the
      default rtlib for clang</flag>
    <flag name="default-libcxx">Use libc++ instead of libstdc++ as the default
      stdlib for clang</flag>
    <flag name="default-lld">Use lld as the default linker for clang</flag>
    <flag name="hardened">Match the hardened default on settings from hardened
      GCC</flag>
    <flag name="static-analyzer">Install the Clang static analyzer</flag>
  </use>
</pkgmetadata>
