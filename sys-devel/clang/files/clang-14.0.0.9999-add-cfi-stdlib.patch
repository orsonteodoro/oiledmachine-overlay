Subject:  Statically link libc++ if it was CFIed.
Patch Author:  Orson Teodoro <orsonteodoro@hotmail.com>
Patch Status:  Testing
Date:  Tue Oct  5 08:23:24 PM PDT 2021 (Unix time: 1633490604)

CFI requires static linkage.  A CFIed libc++ needs to be linked statically.

The -cfi-stdlib has been provided to force static linkage.

Bug observed when doing  clang++ -v -Wl,-Bstatic -stdlib=libc++ -Wl,-Bdynamic  shows
dynamic linkage not static.

diff -urp clang.orig/include/clang/Driver/Options.td clang/include/clang/Driver/Options.td
--- clang.orig/include/clang/Driver/Options.td	2021-10-05 19:43:14.016308063 -0700
+++ clang/include/clang/Driver/Options.td	2021-10-05 20:19:01.839378839 -0700
@@ -3867,6 +3867,7 @@ def std_EQ : Joined<["-", "--"], "std=">
     #include "clang/Basic/LangStandards.def"
     ;
   }]>;
+def cfi_stdlib : Flag<["-"], "cfi-stdlib">;
 def stdlib_EQ : Joined<["-", "--"], "stdlib=">, Flags<[CC1Option]>,
   HelpText<"C++ standard library to use">, Values<"libc++,libstdc++,platform">;
 def stdlibxx_isystem : JoinedOrSeparate<["-"], "stdlib++-isystem">,
diff -urp clang.orig/lib/Driver/ToolChain.cpp clang/lib/Driver/ToolChain.cpp
--- clang.orig/lib/Driver/ToolChain.cpp	2021-10-05 19:42:47.585307192 -0700
+++ clang/lib/Driver/ToolChain.cpp	2021-10-05 20:20:58.389382680 -0700
@@ -943,7 +943,11 @@ void ToolChain::AddCXXStdlibLibArgs(cons
 
   switch (Type) {
   case ToolChain::CST_Libcxx:
+    if (Args.hasArg(options::OPT_cfi_stdlib))
+      CmdArgs.push_back("-Wl,-Bstatic");
     CmdArgs.push_back("-lc++");
+    if (Args.hasArg(options::OPT_cfi_stdlib))
+      CmdArgs.push_back("-Wl,-Bdynamic");
     break;
 
   case ToolChain::CST_Libstdcxx:
