diff '--color=auto' -urp work.org/llvm-nightly-2023-10-26/clang/lib/Driver/ToolChains/AMDGPU.cpp work/llvm-nightly-2023-10-26/clang/lib/Driver/ToolChains/AMDGPU.cpp
--- work.org/llvm-nightly-2023-10-26/clang/lib/Driver/ToolChains/AMDGPU.cpp	2023-10-25 15:44:53.000000000 -0700
+++ work/llvm-nightly-2023-10-26/clang/lib/Driver/ToolChains/AMDGPU.cpp	2024-07-24 00:25:07.028716166 -0700
@@ -270,7 +270,7 @@ RocmInstallationDetector::getInstallatio
   ROCmSearchDirs.emplace_back(D.ResourceDir,
                               /*StrictChecking=*/true);
 
-  ROCmSearchDirs.emplace_back(D.SysRoot + "/opt/rocm",
+  ROCmSearchDirs.emplace_back(D.SysRoot + "/opt/rocm-@ROCM_VERSION@",
                               /*StrictChecking=*/true);
 
   // Find the latest /opt/rocm-{release} directory.
diff '--color=auto' -urp work.org/llvm-nightly-2023-10-26/libc/cmake/modules/prepare_libc_gpu_build.cmake work/llvm-nightly-2023-10-26/libc/cmake/modules/prepare_libc_gpu_build.cmake
--- work.org/llvm-nightly-2023-10-26/libc/cmake/modules/prepare_libc_gpu_build.cmake	2023-10-25 15:44:53.000000000 -0700
+++ work/llvm-nightly-2023-10-26/libc/cmake/modules/prepare_libc_gpu_build.cmake	2024-07-24 00:23:48.657994463 -0700
@@ -31,7 +31,7 @@ endif()
 # Identify any locally installed AMD GPUs on the system using 'amdgpu-arch'.
 find_program(LIBC_AMDGPU_ARCH
              NAMES amdgpu-arch NO_DEFAULT_PATH
-             PATHS ${LLVM_BINARY_DIR}/bin /opt/rocm/llvm/bin/)
+             PATHS ${LLVM_BINARY_DIR}/bin /opt/rocm-@ROCM_VERSION@/llvm/bin/)
 
 # Identify any locally installed NVIDIA GPUs on the system using 'nvptx-arch'.
 find_program(LIBC_NVPTX_ARCH
diff '--color=auto' -urp work.org/llvm-nightly-2023-10-26/libc/src/math/gpu/vendor/CMakeLists.txt work/llvm-nightly-2023-10-26/libc/src/math/gpu/vendor/CMakeLists.txt
--- work.org/llvm-nightly-2023-10-26/libc/src/math/gpu/vendor/CMakeLists.txt	2023-10-25 15:44:53.000000000 -0700
+++ work/llvm-nightly-2023-10-26/libc/src/math/gpu/vendor/CMakeLists.txt	2024-07-24 00:23:48.661994397 -0700
@@ -1,4 +1,4 @@
-find_package(AMDDeviceLibs QUIET HINTS ${CMAKE_INSTALL_PREFIX} PATHS /opt/rocm)
+find_package(AMDDeviceLibs QUIET HINTS ${CMAKE_INSTALL_PREFIX} PATHS /opt/rocm-@ROCM_VERSION@)
 if(AMDDeviceLibs_FOUND)
   message(STATUS "Found the ROCm device library. Implementations falling back "
                  "to the vendor libraries will be resolved statically.")
diff '--color=auto' -urp work.org/llvm-nightly-2023-10-26/libc/utils/gpu/loader/CMakeLists.txt work/llvm-nightly-2023-10-26/libc/utils/gpu/loader/CMakeLists.txt
--- work.org/llvm-nightly-2023-10-26/libc/utils/gpu/loader/CMakeLists.txt	2023-10-25 15:44:53.000000000 -0700
+++ work/llvm-nightly-2023-10-26/libc/utils/gpu/loader/CMakeLists.txt	2024-07-24 00:23:48.661994397 -0700
@@ -5,7 +5,7 @@ target_include_directories(gpu_loader PU
   ${LIBC_SOURCE_DIR}
 )
 
-find_package(hsa-runtime64 QUIET 1.2.0 HINTS ${CMAKE_INSTALL_PREFIX} PATHS /opt/rocm)
+find_package(hsa-runtime64 QUIET 1.2.0 HINTS ${CMAKE_INSTALL_PREFIX} PATHS /opt/rocm-@ROCM_VERSION@)
 if(hsa-runtime64_FOUND)
   add_subdirectory(amdgpu)
 else()
diff '--color=auto' -urp work.org/llvm-nightly-2023-10-26/mlir/lib/Dialect/GPU/CMakeLists.txt work/llvm-nightly-2023-10-26/mlir/lib/Dialect/GPU/CMakeLists.txt
--- work.org/llvm-nightly-2023-10-26/mlir/lib/Dialect/GPU/CMakeLists.txt	2023-10-25 15:44:53.000000000 -0700
+++ work/llvm-nightly-2023-10-26/mlir/lib/Dialect/GPU/CMakeLists.txt	2024-07-24 00:23:48.681994072 -0700
@@ -146,7 +146,7 @@ if(MLIR_ENABLE_ROCM_CONVERSIONS)
       "Building mlir with ROCm support requires the AMDGPU backend")
   endif()
 
-  set(DEFAULT_ROCM_PATH "/opt/rocm" CACHE PATH "Fallback path to search for ROCm installs")
+  set(DEFAULT_ROCM_PATH "/opt/rocm-@ROCM_VERSION@" CACHE PATH "Fallback path to search for ROCm installs")
   target_compile_definitions(obj.MLIRGPUTransforms
     PRIVATE
     __DEFAULT_ROCM_PATH__="${DEFAULT_ROCM_PATH}"
diff '--color=auto' -urp work.org/llvm-nightly-2023-10-26/mlir/lib/ExecutionEngine/CMakeLists.txt work/llvm-nightly-2023-10-26/mlir/lib/ExecutionEngine/CMakeLists.txt
--- work.org/llvm-nightly-2023-10-26/mlir/lib/ExecutionEngine/CMakeLists.txt	2023-10-25 15:44:53.000000000 -0700
+++ work/llvm-nightly-2023-10-26/mlir/lib/ExecutionEngine/CMakeLists.txt	2024-07-24 00:23:48.693993877 -0700
@@ -247,7 +247,7 @@ if(LLVM_ENABLE_PIC)
     # Configure ROCm support.
     if (NOT DEFINED ROCM_PATH)
       if (NOT DEFINED ENV{ROCM_PATH})
-        set(ROCM_PATH "/opt/rocm" CACHE PATH "Path to which ROCm has been installed")
+        set(ROCM_PATH "/opt/rocm-@ROCM_VERSION@" CACHE PATH "Path to which ROCm has been installed")
       else()
         set(ROCM_PATH $ENV{ROCM_PATH} CACHE PATH "Path to which ROCm has been installed")
       endif()
diff '--color=auto' -urp work.org/llvm-nightly-2023-10-26/mlir/lib/Target/LLVM/CMakeLists.txt work/llvm-nightly-2023-10-26/mlir/lib/Target/LLVM/CMakeLists.txt
--- work.org/llvm-nightly-2023-10-26/mlir/lib/Target/LLVM/CMakeLists.txt	2023-10-25 15:44:53.000000000 -0700
+++ work/llvm-nightly-2023-10-26/mlir/lib/Target/LLVM/CMakeLists.txt	2024-07-24 00:23:48.701993747 -0700
@@ -134,7 +134,7 @@ if(MLIR_ENABLE_ROCM_CONVERSIONS)
   elseif(DEFINED ENV{ROCM_PATH})
     set(DEFAULT_ROCM_PATH "$ENV{ROCM_PATH}" CACHE PATH "Fallback path to search for ROCm installs")
   else()
-    set(DEFAULT_ROCM_PATH "/opt/rocm" CACHE PATH "Fallback path to search for ROCm installs")
+    set(DEFAULT_ROCM_PATH "/opt/rocm-@ROCM_VERSION@" CACHE PATH "Fallback path to search for ROCm installs")
   endif()
   message(VERBOSE "MLIR Default ROCM toolkit path: ${DEFAULT_ROCM_PATH}")
 
diff '--color=auto' -urp work.org/llvm-nightly-2023-10-26/openmp/libomptarget/plugins-nextgen/amdgpu/CMakeLists.txt work/llvm-nightly-2023-10-26/openmp/libomptarget/plugins-nextgen/amdgpu/CMakeLists.txt
--- work.org/llvm-nightly-2023-10-26/openmp/libomptarget/plugins-nextgen/amdgpu/CMakeLists.txt	2023-10-25 15:44:53.000000000 -0700
+++ work/llvm-nightly-2023-10-26/openmp/libomptarget/plugins-nextgen/amdgpu/CMakeLists.txt	2024-07-24 00:23:48.701993747 -0700
@@ -20,7 +20,7 @@ if (NOT LIBOMPTARGET_BUILD_AMDGPU_PLUGIN
 endif()
 
 # as of rocm-3.7, hsa is installed with cmake packages and kmt is found via hsa
-find_package(hsa-runtime64 QUIET 1.2.0 HINTS ${CMAKE_INSTALL_PREFIX} PATHS /opt/rocm)
+find_package(hsa-runtime64 QUIET 1.2.0 HINTS ${CMAKE_INSTALL_PREFIX} PATHS /opt/rocm-@ROCM_VERSION@)
 
 if(NOT (CMAKE_SYSTEM_PROCESSOR MATCHES "(x86_64)|(ppc64le)|(aarch64)$" AND CMAKE_SYSTEM_NAME MATCHES "Linux"))
   libomptarget_say("Not building AMDGPU NextGen plugin: only support AMDGPU in Linux x86_64, ppc64le, or aarch64 hosts")
diff '--color=auto' -urp work.org/llvm-nightly-2023-10-26/sycl/plugins/hip/CMakeLists.txt work/llvm-nightly-2023-10-26/sycl/plugins/hip/CMakeLists.txt
--- work.org/llvm-nightly-2023-10-26/sycl/plugins/hip/CMakeLists.txt	2023-10-25 15:44:53.000000000 -0700
+++ work/llvm-nightly-2023-10-26/sycl/plugins/hip/CMakeLists.txt	2024-07-24 00:23:48.701993747 -0700
@@ -5,7 +5,7 @@ set(SYCL_BUILD_PI_HIP_PLATFORM "AMD" CAC
 message(STATUS "Including the PI API HIP backend for ${SYCL_BUILD_PI_HIP_PLATFORM}.")
 
 # Set default ROCm installation directory
-set(SYCL_BUILD_PI_HIP_ROCM_DIR "/opt/rocm" CACHE STRING "ROCm installation dir")
+set(SYCL_BUILD_PI_HIP_ROCM_DIR "/opt/rocm-@ROCM_VERSION@" CACHE STRING "ROCm installation dir")
 
 # Set HIP include and lib dirs
 set(SYCL_BUILD_PI_HIP_INCLUDE_DIR "" CACHE STRING "Override HIP include dir path (set to \"\" for default behavior)")
diff '--color=auto' -urp work.org/unified-runtime-cf26de283a1233e6c93feb085acc10c566888b59/source/adapters/hip/CMakeLists.txt work/unified-runtime-cf26de283a1233e6c93feb085acc10c566888b59/source/adapters/hip/CMakeLists.txt
--- work.org/unified-runtime-cf26de283a1233e6c93feb085acc10c566888b59/source/adapters/hip/CMakeLists.txt	2023-10-25 02:36:48.000000000 -0700
+++ work/unified-runtime-cf26de283a1233e6c93feb085acc10c566888b59/source/adapters/hip/CMakeLists.txt	2024-07-24 00:24:04.085743806 -0700
@@ -11,7 +11,7 @@ set(TARGET_NAME ur_adapter_hip)
 set(UR_HIP_PLATFORM "AMD" CACHE STRING "UR HIP platform, AMD or NVIDIA")
 
 # Set default ROCm installation directory
-set(UR_HIP_ROCM_DIR "/opt/rocm" CACHE STRING "ROCm installation dir")
+set(UR_HIP_ROCM_DIR "/opt/rocm-@ROCM_VERSION@" CACHE STRING "ROCm installation dir")
 
 set(UR_HIP_INCLUDE_DIR "${UR_HIP_ROCM_DIR}/include")
 
