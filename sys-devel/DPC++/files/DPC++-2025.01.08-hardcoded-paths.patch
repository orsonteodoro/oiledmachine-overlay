diff '--color=auto' -urp llvm-nightly-2025-01-08.orig/clang/lib/Driver/ToolChains/AMDGPU.cpp llvm-nightly-2025-01-08/clang/lib/Driver/ToolChains/AMDGPU.cpp
--- llvm-nightly-2025-01-08.orig/clang/lib/Driver/ToolChains/AMDGPU.cpp	2025-01-07 16:17:16.000000000 -0800
+++ llvm-nightly-2025-01-08/clang/lib/Driver/ToolChains/AMDGPU.cpp	2025-05-24 22:10:29.813864105 -0700
@@ -271,7 +271,7 @@ RocmInstallationDetector::getInstallatio
   ROCmSearchDirs.emplace_back(D.ResourceDir,
                               /*StrictChecking=*/true);
 
-  ROCmSearchDirs.emplace_back(D.SysRoot + "/opt/rocm",
+  ROCmSearchDirs.emplace_back(D.SysRoot + "/opt/rocm-@ROCM_VERSION@",
                               /*StrictChecking=*/true);
 
   // Find the latest /opt/rocm-{release} directory.
diff '--color=auto' -urp llvm-nightly-2025-01-08.orig/libc/benchmarks/gpu/src/math/CMakeLists.txt llvm-nightly-2025-01-08/libc/benchmarks/gpu/src/math/CMakeLists.txt
--- llvm-nightly-2025-01-08.orig/libc/benchmarks/gpu/src/math/CMakeLists.txt	2025-01-07 16:17:16.000000000 -0800
+++ llvm-nightly-2025-01-08/libc/benchmarks/gpu/src/math/CMakeLists.txt	2025-05-24 22:09:34.230436705 -0700
@@ -15,7 +15,7 @@ if(LIBC_TARGET_ARCHITECTURE_IS_NVPTX)
 endif()
 
 if(LIBC_TARGET_ARCHITECTURE_IS_AMDGPU)
-  find_package(AMDDeviceLibs QUIET HINTS ${CMAKE_INSTALL_PREFIX} PATHS /opt/rocm)
+  find_package(AMDDeviceLibs QUIET HINTS ${CMAKE_INSTALL_PREFIX} PATHS /opt/rocm-@ROCM_VERSION@)
   if(AMDDeviceLibs_FOUND)
     get_target_property(ocml_path ocml IMPORTED_LOCATION)
     list(APPEND math_benchmark_flags
diff '--color=auto' -urp llvm-nightly-2025-01-08.orig/libc/src/math/amdgpu/CMakeLists.txt llvm-nightly-2025-01-08/libc/src/math/amdgpu/CMakeLists.txt
--- llvm-nightly-2025-01-08.orig/libc/src/math/amdgpu/CMakeLists.txt	2025-01-07 16:17:16.000000000 -0800
+++ llvm-nightly-2025-01-08/libc/src/math/amdgpu/CMakeLists.txt	2025-05-24 22:09:31.990489186 -0700
@@ -4,7 +4,7 @@
 # them as external references and expect them to be resolved by the user when
 # they compile. In the future,we will use implementations from the 'libc'
 # project and not provide these wrappers.
-find_package(AMDDeviceLibs QUIET HINTS ${CMAKE_INSTALL_PREFIX} PATHS /opt/rocm)
+find_package(AMDDeviceLibs QUIET HINTS ${CMAKE_INSTALL_PREFIX} PATHS /opt/rocm-@ROCM_VERSION@)
 if(AMDDeviceLibs_FOUND)
   message(STATUS "Found the ROCm device library. Implementations falling back "
                  "to the vendor libraries will be resolved statically.")
diff '--color=auto' -urp llvm-nightly-2025-01-08.orig/libc/utils/gpu/loader/CMakeLists.txt llvm-nightly-2025-01-08/libc/utils/gpu/loader/CMakeLists.txt
--- llvm-nightly-2025-01-08.orig/libc/utils/gpu/loader/CMakeLists.txt	2025-01-07 16:17:16.000000000 -0800
+++ llvm-nightly-2025-01-08/libc/utils/gpu/loader/CMakeLists.txt	2025-05-24 22:09:29.318453838 -0700
@@ -11,7 +11,7 @@ if(NOT LLVM_ENABLE_RTTI)
   target_compile_options(gpu_loader PUBLIC -fno-rtti)
 endif()
 
-find_package(hsa-runtime64 QUIET 1.2.0 HINTS ${CMAKE_INSTALL_PREFIX} PATHS /opt/rocm)
+find_package(hsa-runtime64 QUIET 1.2.0 HINTS ${CMAKE_INSTALL_PREFIX} PATHS /opt/rocm-@ROCM_VERSION@)
 if(hsa-runtime64_FOUND)
   add_subdirectory(amdgpu)
 endif()
diff '--color=auto' -urp llvm-nightly-2025-01-08.orig/mlir/lib/ExecutionEngine/CMakeLists.txt llvm-nightly-2025-01-08/mlir/lib/ExecutionEngine/CMakeLists.txt
--- llvm-nightly-2025-01-08.orig/mlir/lib/ExecutionEngine/CMakeLists.txt	2025-01-07 16:17:16.000000000 -0800
+++ llvm-nightly-2025-01-08/mlir/lib/ExecutionEngine/CMakeLists.txt	2025-05-24 22:09:27.670558149 -0700
@@ -286,7 +286,7 @@ if(LLVM_ENABLE_PIC)
     # Configure ROCm support.
     if (NOT DEFINED ROCM_PATH)
       if (NOT DEFINED ENV{ROCM_PATH})
-        set(ROCM_PATH "/opt/rocm" CACHE PATH "Path to which ROCm has been installed")
+        set(ROCM_PATH "/opt/rocm-@ROCM_VERSION@" CACHE PATH "Path to which ROCm has been installed")
       else()
         set(ROCM_PATH $ENV{ROCM_PATH} CACHE PATH "Path to which ROCm has been installed")
       endif()
diff '--color=auto' -urp llvm-nightly-2025-01-08.orig/mlir/lib/Target/LLVM/CMakeLists.txt llvm-nightly-2025-01-08/mlir/lib/Target/LLVM/CMakeLists.txt
--- llvm-nightly-2025-01-08.orig/mlir/lib/Target/LLVM/CMakeLists.txt	2025-01-07 16:17:16.000000000 -0800
+++ llvm-nightly-2025-01-08/mlir/lib/Target/LLVM/CMakeLists.txt	2025-05-24 22:09:03.095007890 -0700
@@ -198,7 +198,7 @@ if(MLIR_ENABLE_ROCM_CONVERSIONS)
       # TODO: Eventually migrate to FindHIP once it becomes a part of CMake.
       set(DEFAULT_ROCM_PATH "" CACHE PATH "Fallback path to search for ROCm installs")
     else()
-      set(DEFAULT_ROCM_PATH "/opt/rocm" CACHE PATH "Fallback path to search for ROCm installs")
+      set(DEFAULT_ROCM_PATH "/opt/rocm-@ROCM_VERSION@" CACHE PATH "Fallback path to search for ROCm installs")
     endif()
   endif()
   message(VERBOSE "MLIR Default ROCM toolkit path: ${DEFAULT_ROCM_PATH}")
diff '--color=auto' -urp llvm-nightly-2025-01-08.orig/offload/plugins-nextgen/amdgpu/CMakeLists.txt llvm-nightly-2025-01-08/offload/plugins-nextgen/amdgpu/CMakeLists.txt
--- llvm-nightly-2025-01-08.orig/offload/plugins-nextgen/amdgpu/CMakeLists.txt	2025-01-07 16:17:16.000000000 -0800
+++ llvm-nightly-2025-01-08/offload/plugins-nextgen/amdgpu/CMakeLists.txt	2025-05-24 22:09:37.078434599 -0700
@@ -1,5 +1,5 @@
 # As of rocm-3.7, hsa is installed with cmake packages and kmt is found via hsa
-find_package(hsa-runtime64 QUIET 1.2.0 HINTS ${CMAKE_INSTALL_PREFIX} PATHS /opt/rocm)
+find_package(hsa-runtime64 QUIET 1.2.0 HINTS ${CMAKE_INSTALL_PREFIX} PATHS /opt/rocm-@ROCM_VERSION@)
 
 # Create the library and add the default arguments.
 add_target_library(omptarget.rtl.amdgpu AMDGPU)
