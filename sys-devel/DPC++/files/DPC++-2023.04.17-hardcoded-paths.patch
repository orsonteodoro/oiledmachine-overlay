diff '--color=auto' -urp work.orig/llvm-sycl-nightly-20230417/clang/lib/Driver/ToolChains/AMDGPU.cpp work/llvm-sycl-nightly-20230417/clang/lib/Driver/ToolChains/AMDGPU.cpp
--- work.orig/llvm-sycl-nightly-20230417/clang/lib/Driver/ToolChains/AMDGPU.cpp	2023-04-17 11:25:49.000000000 -0700
+++ work/llvm-sycl-nightly-20230417/clang/lib/Driver/ToolChains/AMDGPU.cpp	2024-07-23 23:58:52.330328519 -0700
@@ -270,7 +270,7 @@ RocmInstallationDetector::getInstallatio
   ROCmSearchDirs.emplace_back(D.ResourceDir,
                               /*StrictChecking=*/true);
 
-  ROCmSearchDirs.emplace_back(D.SysRoot + "/opt/rocm",
+  ROCmSearchDirs.emplace_back(D.SysRoot + "/opt/rocm-@ROCM_VERSION@",
                               /*StrictChecking=*/true);
 
   // Find the latest /opt/rocm-{release} directory.
diff '--color=auto' -urp work.orig/llvm-sycl-nightly-20230417/clang/tools/amdgpu-arch/CMakeLists.txt work/llvm-sycl-nightly-20230417/clang/tools/amdgpu-arch/CMakeLists.txt
--- work.orig/llvm-sycl-nightly-20230417/clang/tools/amdgpu-arch/CMakeLists.txt	2023-04-17 11:25:49.000000000 -0700
+++ work/llvm-sycl-nightly-20230417/clang/tools/amdgpu-arch/CMakeLists.txt	2024-07-23 23:57:34.175664207 -0700
@@ -11,7 +11,7 @@ set(LLVM_LINK_COMPONENTS Support)
 add_clang_tool(amdgpu-arch AMDGPUArch.cpp)
 
 # If we find the HSA runtime we link with it directly.
-find_package(hsa-runtime64 QUIET 1.2.0 HINTS ${CMAKE_INSTALL_PREFIX} PATHS /opt/rocm)
+find_package(hsa-runtime64 QUIET 1.2.0 HINTS ${CMAKE_INSTALL_PREFIX} PATHS /opt/rocm-@ROCM_VERSION@)
 if(hsa-runtime64_FOUND AND NOT (LLVM_BUILD_32_BITS OR CMAKE_SIZEOF_VOID_P EQUAL 4))
   set_target_properties(amdgpu-arch PROPERTIES INSTALL_RPATH_USE_LINK_PATH ON)
   target_link_libraries(amdgpu-arch PRIVATE hsa-runtime64::hsa-runtime64 clangBasic)
diff '--color=auto' -urp work.orig/llvm-sycl-nightly-20230417/libc/cmake/modules/prepare_libc_gpu_build.cmake work/llvm-sycl-nightly-20230417/libc/cmake/modules/prepare_libc_gpu_build.cmake
--- work.orig/llvm-sycl-nightly-20230417/libc/cmake/modules/prepare_libc_gpu_build.cmake	2023-04-17 11:25:49.000000000 -0700
+++ work/llvm-sycl-nightly-20230417/libc/cmake/modules/prepare_libc_gpu_build.cmake	2024-07-23 23:57:34.211663592 -0700
@@ -31,7 +31,7 @@ endif()
 # Identify any locally installed AMD GPUs on the system using 'amdgpu-arch'.
 find_program(LIBC_AMDGPU_ARCH
              NAMES amdgpu-arch
-             PATHS ${LLVM_BINARY_DIR}/bin /opt/rocm/llvm/bin/)
+             PATHS ${LLVM_BINARY_DIR}/bin /opt/rocm-@ROCM_VERSION@/llvm/bin/)
 
 # Identify any locally installed NVIDIA GPUs on the system using 'nvptx-arch'.
 find_program(LIBC_NVPTX_ARCH
diff '--color=auto' -urp work.orig/llvm-sycl-nightly-20230417/libc/utils/gpu/loader/CMakeLists.txt work/llvm-sycl-nightly-20230417/libc/utils/gpu/loader/CMakeLists.txt
--- work.orig/llvm-sycl-nightly-20230417/libc/utils/gpu/loader/CMakeLists.txt	2023-04-17 11:25:49.000000000 -0700
+++ work/llvm-sycl-nightly-20230417/libc/utils/gpu/loader/CMakeLists.txt	2024-07-23 23:57:34.227663319 -0700
@@ -1,7 +1,7 @@
 add_library(gpu_loader OBJECT Main.cpp)
 target_include_directories(gpu_loader PUBLIC ${CMAKE_CURRENT_SOURCE_DIR})
 
-find_package(hsa-runtime64 QUIET 1.2.0 HINTS ${CMAKE_INSTALL_PREFIX} PATHS /opt/rocm)
+find_package(hsa-runtime64 QUIET 1.2.0 HINTS ${CMAKE_INSTALL_PREFIX} PATHS /opt/rocm-@ROCM_VERSION@)
 if(hsa-runtime64_FOUND)
   add_subdirectory(amdgpu)
 else()
diff '--color=auto' -urp work.orig/llvm-sycl-nightly-20230417/mlir/lib/Dialect/GPU/CMakeLists.txt work/llvm-sycl-nightly-20230417/mlir/lib/Dialect/GPU/CMakeLists.txt
--- work.orig/llvm-sycl-nightly-20230417/mlir/lib/Dialect/GPU/CMakeLists.txt	2023-04-17 11:25:49.000000000 -0700
+++ work/llvm-sycl-nightly-20230417/mlir/lib/Dialect/GPU/CMakeLists.txt	2024-07-23 23:57:34.243663045 -0700
@@ -133,7 +133,7 @@ if(MLIR_ENABLE_ROCM_CONVERSIONS)
       "Building mlir with ROCm support requires the AMDGPU backend")
   endif()
 
-  set(DEFAULT_ROCM_PATH "/opt/rocm" CACHE PATH "Fallback path to search for ROCm installs")
+  set(DEFAULT_ROCM_PATH "/opt/rocm-@ROCM_VERSION@" CACHE PATH "Fallback path to search for ROCm installs")
   target_compile_definitions(obj.MLIRGPUTransforms
     PRIVATE
     __DEFAULT_ROCM_PATH__="${DEFAULT_ROCM_PATH}"
diff '--color=auto' -urp work.orig/llvm-sycl-nightly-20230417/mlir/lib/ExecutionEngine/CMakeLists.txt work/llvm-sycl-nightly-20230417/mlir/lib/ExecutionEngine/CMakeLists.txt
--- work.orig/llvm-sycl-nightly-20230417/mlir/lib/ExecutionEngine/CMakeLists.txt	2023-04-17 11:25:49.000000000 -0700
+++ work/llvm-sycl-nightly-20230417/mlir/lib/ExecutionEngine/CMakeLists.txt	2024-07-23 23:57:34.251662909 -0700
@@ -211,7 +211,7 @@ if(LLVM_ENABLE_PIC)
     # Configure ROCm support.
     if (NOT DEFINED ROCM_PATH)
       if (NOT DEFINED ENV{ROCM_PATH})
-        set(ROCM_PATH "/opt/rocm" CACHE PATH "Path to which ROCm has been installed")
+        set(ROCM_PATH "/opt/rocm-@ROCM_VERSION@" CACHE PATH "Path to which ROCm has been installed")
       else()
         set(ROCM_PATH $ENV{ROCM_PATH} CACHE PATH "Path to which ROCm has been installed")
       endif()
diff '--color=auto' -urp work.orig/llvm-sycl-nightly-20230417/openmp/libomptarget/plugins/amdgpu/CMakeLists.txt work/llvm-sycl-nightly-20230417/openmp/libomptarget/plugins/amdgpu/CMakeLists.txt
--- work.orig/llvm-sycl-nightly-20230417/openmp/libomptarget/plugins/amdgpu/CMakeLists.txt	2023-04-17 11:25:49.000000000 -0700
+++ work/llvm-sycl-nightly-20230417/openmp/libomptarget/plugins/amdgpu/CMakeLists.txt	2024-07-23 23:57:34.251662909 -0700
@@ -20,7 +20,7 @@ if (NOT LIBOMPTARGET_BUILD_AMDGPU_PLUGIN
 endif()
 
 # as of rocm-3.7, hsa is installed with cmake packages and kmt is found via hsa
-find_package(hsa-runtime64 QUIET 1.2.0 HINTS ${CMAKE_INSTALL_PREFIX} PATHS /opt/rocm)
+find_package(hsa-runtime64 QUIET 1.2.0 HINTS ${CMAKE_INSTALL_PREFIX} PATHS /opt/rocm-@ROCM_VERSION@)
 
 if(NOT (CMAKE_SYSTEM_PROCESSOR MATCHES "(x86_64)|(ppc64le)|(aarch64)$" AND CMAKE_SYSTEM_NAME MATCHES "Linux"))
   libomptarget_say("Not building AMDGPU plugin: only support AMDGPU in Linux x86_64, ppc64le, or aarch64 hosts")
diff '--color=auto' -urp work.orig/llvm-sycl-nightly-20230417/openmp/libomptarget/plugins-nextgen/amdgpu/CMakeLists.txt work/llvm-sycl-nightly-20230417/openmp/libomptarget/plugins-nextgen/amdgpu/CMakeLists.txt
--- work.orig/llvm-sycl-nightly-20230417/openmp/libomptarget/plugins-nextgen/amdgpu/CMakeLists.txt	2023-04-17 11:25:49.000000000 -0700
+++ work/llvm-sycl-nightly-20230417/openmp/libomptarget/plugins-nextgen/amdgpu/CMakeLists.txt	2024-07-23 23:57:34.251662909 -0700
@@ -20,7 +20,7 @@ if (NOT LIBOMPTARGET_BUILD_AMDGPU_PLUGIN
 endif()
 
 # as of rocm-3.7, hsa is installed with cmake packages and kmt is found via hsa
-find_package(hsa-runtime64 QUIET 1.2.0 HINTS ${CMAKE_INSTALL_PREFIX} PATHS /opt/rocm)
+find_package(hsa-runtime64 QUIET 1.2.0 HINTS ${CMAKE_INSTALL_PREFIX} PATHS /opt/rocm-@ROCM_VERSION@)
 
 if(NOT (CMAKE_SYSTEM_PROCESSOR MATCHES "(x86_64)|(ppc64le)|(aarch64)$" AND CMAKE_SYSTEM_NAME MATCHES "Linux"))
   libomptarget_say("Not building AMDGPU NextGen plugin: only support AMDGPU in Linux x86_64, ppc64le, or aarch64 hosts")
diff '--color=auto' -urp work.orig/llvm-sycl-nightly-20230417/sycl/plugins/hip/CMakeLists.txt work/llvm-sycl-nightly-20230417/sycl/plugins/hip/CMakeLists.txt
--- work.orig/llvm-sycl-nightly-20230417/sycl/plugins/hip/CMakeLists.txt	2023-04-17 11:25:49.000000000 -0700
+++ work/llvm-sycl-nightly-20230417/sycl/plugins/hip/CMakeLists.txt	2024-07-23 23:57:34.251662909 -0700
@@ -5,7 +5,7 @@ set(SYCL_BUILD_PI_HIP_PLATFORM "AMD" CAC
 message(STATUS "Including the PI API HIP backend for ${SYCL_BUILD_PI_HIP_PLATFORM}.")
 
 # Set default ROCm installation directory
-set(SYCL_BUILD_PI_HIP_ROCM_DIR "/opt/rocm" CACHE STRING "ROCm installation dir")
+set(SYCL_BUILD_PI_HIP_ROCM_DIR "/opt/rocm-@ROCM_VERSION@" CACHE STRING "ROCm installation dir")
 
 # Set HIP include and lib dirs
 set(SYCL_BUILD_PI_HIP_INCLUDE_DIR "" CACHE STRING "Override HIP include dir path (set to \"\" for default behavior)")
