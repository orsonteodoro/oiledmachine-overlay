Subject:  Distro does not build llvm with LLVM_ENABLE_DUMP, so make it toggable.
Patch author:   Orson Teodoro <orsonteodoro@hotmail.com>
Date:  Fri Feb 11 07:09:44 PM PST 2022 (Unix time:  1644635384)
Patch status:  Testing

License header for patched file:

// Copyright 2014 The Souper Authors. All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

-DNDEBUG is always required because of headers issue with dump().
When codepaths related to dump() are disabled the headers
still want to link to it with this error:
ld.lld: error: libsouperPass.so: undefined reference to llvm::cfg::Update<llvm::BasicBlock*>::dump() const

diff -urp souper-69536e134478ae1d44c912c90c3db96ad06437c1.orig/CMakeLists.txt souper-69536e134478ae1d44c912c90c3db96ad06437c1/CMakeLists.txt
--- souper-69536e134478ae1d44c912c90c3db96ad06437c1.orig/CMakeLists.txt	2022-02-10 20:19:24.161646932 -0800
+++ souper-69536e134478ae1d44c912c90c3db96ad06437c1/CMakeLists.txt	2022-02-10 20:45:51.188318002 -0800
@@ -502,8 +502,9 @@ add_custom_target(check
   DEPENDS extractor_tests inst_tests parser-test parser_tests ${PROFILERUNTIME_LIB} souper souper-check souper-interpret souperPass souper2llvm souperPassProfileAll count-insts interpreter_tests bulk_tests codegen_tests		# oteodoro:  changed line
   USES_TERMINAL)
 
 # we want assertions even in release mode!
-string(REPLACE "-DNDEBUG" "" CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE}")
+#string(REPLACE "-DNDEBUG" "" CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE}")										# oteodoro:  disabled line
+add_definitions(-DNDEBUG)																	# oteodoro:  added line
 
 if(FEATURE_EXTERNAL_CACHE)			# oteodoro:  add line
 add_library(profileRuntime STATIC
diff -urp souper-69536e134478ae1d44c912c90c3db96ad06437c1.orig/lib/Pass/Pass.cpp souper-69536e134478ae1d44c912c90c3db96ad06437c1/lib/Pass/Pass.cpp
--- souper-69536e134478ae1d44c912c90c3db96ad06437c1.orig/lib/Pass/Pass.cpp	2022-02-10 20:19:24.169647259 -0800
+++ souper-69536e134478ae1d44c912c90c3db96ad06437c1/lib/Pass/Pass.cpp	2022-02-10 20:20:03.645256629 -0800
@@ -228,9 +228,11 @@ public:
 
     if (DebugLevel > 1) {
       errs() << "\n";
+#ifdef LLVM_ENABLE_DUMP								// oteodoro:  added line
       errs() << "; entering Souper's runOnFunction() for " << FunctionName << "()\n\n";
       F->getParent()->dump();
       errs() << "\n";
+#endif										// oteodoro:  added line
     }
 
     InstContext IC;
@@ -367,8 +369,10 @@ public:
       if (DebugLevel > 1) {
         if (DebugLevel > 2) {
           if (DebugLevel > 4) {
+#ifdef LLVM_ENABLE_DUMP								// oteodoro:  added line
             errs() << "\nModule before replacement:\n";
             F->getParent()->dump();
+#endif										// oteodoro:  added line
           } else {
             errs() << "\nFunction before replacement:\n";
             F->print(errs());
@@ -412,8 +416,10 @@ public:
 
       if (DebugLevel > 2) {
         if (DebugLevel > 4) {
+#ifdef LLVM_ENABLE_DUMP								// oteodoro:  added line
           errs() << "\nModule after replacement:\n";
           F->getParent()->dump();
+#endif										// oteodoro:  added line
         } else {
           errs() << "\nFunction after replacement:\n\n";
           F->print(errs());
