Subject:  OptimizationLevel update for LLVM 14 RC1 and LLVM 15 init
Patch author:   Orson Teodoro <orsonteodoro@hotmail.com>
Date:  Fri Feb 11 07:09:44 PM PST 2022 (Unix time:  1644635384)
Patch status:  Testing

License header for patched files:

// Copyright 2014 The Souper Authors. All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

diff -urp souper-69536e134478ae1d44c912c90c3db96ad06437c1.orig/CMakeLists.txt souper-69536e134478ae1d44c912c90c3db96ad06437c1/CMakeLists.txt
--- souper-69536e134478ae1d44c912c90c3db96ad06437c1.orig/CMakeLists.txt	2022-02-12 01:46:01.227846111 -0800
+++ souper-69536e134478ae1d44c912c90c3db96ad06437c1/CMakeLists.txt	2022-02-12 09:24:09.047715013 -0800
@@ -1,6 +1,8 @@
 cmake_minimum_required(VERSION 3.8)
 project(Souper)
 
+include(CheckIncludeFileCXX)						# oteodoro:  added line
+									# oteodoro:  added line
 set(CMAKE_MACOSX_RPATH NEW)
 
 if(NOT CMAKE_BUILD_TYPE)
@@ -92,6 +94,12 @@ set(GTEST_INCLUDEDIR "/usr/include/gtest
 set(GTEST_LIBS "-lgtest_main -lgtest")
 
 set(LLVM_CXXFLAGS "${LLVM_CXXFLAGS} -std=c++20")
+										# oteodoro:  added line
+CHECK_INCLUDE_FILE_CXX("${LLVM_INCLUDEDIR}/llvm/Passes/OptimizationLevel.h"	# oteodoro:  added line
+  HAVE_OPTIMIZATIONLEVEL_H)							# oteodoro:  added line
+if (HAVE_OPTIMIZATIONLEVEL_H)							# oteodoro:  added line
+  add_definitions(-DOPTIMIZATIONLEVEL_NOT_IN_PASSBUILDER)			# oteodoro:  added line
+endif()										# oteodoro:  added line
 
 if(${CMAKE_SYSTEM_NAME} MATCHES "Darwin")
   set(CMAKE_XCODE_ATTRIBUTE_CLANG_CXX_LANGUAGE_STANDARD "c++20")
diff -urp souper-69536e134478ae1d44c912c90c3db96ad06437c1.orig/lib/Codegen/MachineCost.cpp souper-69536e134478ae1d44c912c90c3db96ad06437c1/lib/Codegen/MachineCost.cpp
--- souper-69536e134478ae1d44c912c90c3db96ad06437c1.orig/lib/Codegen/MachineCost.cpp	2021-06-09 12:16:44.000000000 -0700
+++ souper-69536e134478ae1d44c912c90c3db96ad06437c1/lib/Codegen/MachineCost.cpp	2022-02-12 01:46:30.634005866 -0800
@@ -50,9 +50,15 @@ void optimizeModule(llvm::Module &M) {
   PB.registerLoopAnalyses(LAM);
   PB.crossRegisterProxies(LAM, FAM, CGAM, MAM);
 
+#if defined(LLVM_14_RC1) || defined(LLVM_15_INIT) || defined(LLVM_14_HEAD) || defined(LLVM_15_HEAD) || defined(OPTIMIZATIONLEVEL_NOT_IN_PASSBUILDER)
+  llvm::FunctionPassManager FPM =
+    PB.buildFunctionSimplificationPipeline(llvm::OptimizationLevel::O2,
+                                           ThinOrFullLTOPhase::None);
+#else
   llvm::FunctionPassManager FPM =
     PB.buildFunctionSimplificationPipeline(llvm::PassBuilder::OptimizationLevel::O2,
                                            ThinOrFullLTOPhase::None);
+#endif
   llvm::ModulePassManager MPM;
   MPM.addPass(createModuleToFunctionPassAdaptor(std::move(FPM)));
   MPM.run(M, MAM);
