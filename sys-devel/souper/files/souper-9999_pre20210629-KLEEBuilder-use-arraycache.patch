Subject:  Update API for use for klee 2.3-pre (0ba95ed) with use for ArrayCache and removal of unique_ptr
Patch author:   Orson Teodoro <orsonteodoro@hotmail.com>
Date:  Fri Feb 11 07:09:44 PM PST 2022 (Unix time:  1644635384)
Patch status:  Testing

// Copyright 2014 The Souper Authors. All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

diff -urp souper-69536e134478ae1d44c912c90c3db96ad06437c1.orig/CMakeLists.txt souper-69536e134478ae1d44c912c90c3db96ad06437c1/CMakeLists.txt
--- souper-69536e134478ae1d44c912c90c3db96ad06437c1.orig/CMakeLists.txt	2022-02-10 01:14:46.717121690 -0800
+++ souper-69536e134478ae1d44c912c90c3db96ad06437c1/CMakeLists.txt	2022-02-10 01:17:23.450309143 -0800
@@ -96,6 +96,7 @@ include_directories(include third_party/
 include_directories(include "${CMAKE_BINARY_DIR}/include")
 
 set(KLEE_EXPR_FILES
+  third_party/klee/lib/Expr/ArrayCache.cpp					# oteodoro:  added line
   third_party/klee/lib/Expr/Constraints.cpp
   third_party/klee/lib/Expr/ExprBuilder.cpp
   third_party/klee/lib/Expr/Expr.cpp
@@ -107,6 +108,8 @@ set(KLEE_EXPR_FILES
   third_party/klee/lib/Expr/Lexer.cpp
   third_party/klee/lib/Expr/Parser.cpp
   third_party/klee/lib/Expr/Updates.cpp
+  third_party/klee/lib/Solver/SolverCmdLine.cpp					# oteodoro:  added line
 )
+add_definitions(-DENABLE_Z3)							# oteodoro:  added line
 
 add_library(kleeExpr STATIC
diff -urp souper-69536e134478ae1d44c912c90c3db96ad06437c1.orig/lib/Extractor/KLEEBuilder.cpp souper-69536e134478ae1d44c912c90c3db96ad06437c1/lib/Extractor/KLEEBuilder.cpp
--- souper-69536e134478ae1d44c912c90c3db96ad06437c1.orig/lib/Extractor/KLEEBuilder.cpp	2022-02-10 01:14:46.797124849 -0800
+++ souper-69536e134478ae1d44c912c90c3db96ad06437c1/lib/Extractor/KLEEBuilder.cpp	2022-02-10 01:15:38.078149753 -0800
@@ -15,6 +15,7 @@
 #include "klee/Expr/Expr.h"			// oteodoro:  update for klee 0ba95ed
 #include "klee/Expr/ExprPPrinter.h"		// oteodoro:  update for klee 0ba95ed
 #include "klee/Expr/ExprSMTLIBPrinter.h"	// oteodoro:  update for klee 0ba95ed
+#include "klee/Expr/ArrayCache.h"		// oteodoro:  added line
 #include "souper/Extractor/ExprBuilder.h"
 #include "llvm/ADT/SmallVector.h"
 #include "llvm/Analysis/LoopInfo.h"
@@ -32,7 +33,8 @@ static llvm::cl::opt<bool> DumpKLEEExprs
 
 class KLEEBuilder : public ExprBuilder {
   UniqueNameSet ArrayNames;
-  std::vector<std::unique_ptr<Array>> Arrays;
+  ArrayCache ac;					// oteodoro:  added line
+  std::vector<const klee::Array *> Arrays;		// oteodoro:  changed line
   std::map<Inst *, ref<Expr>> ExprMap;
   std::vector<Inst *> Vars;
 
@@ -81,7 +83,7 @@ public:
     if (ModelVars) {
       for (unsigned I = 0; I != Vars.size(); ++I) {
         if (Vars[I]) {
-          Arr.push_back(Arrays[I].get());
+          Arr.push_back(Arrays[I]);	// oteodoro:  changed line
           ModelVars->push_back(Vars[I]);
         }
       }
@@ -488,11 +490,11 @@ private:
       NameStr = ("a" + Name).str();
     else
       NameStr = Name;
-    Arrays.emplace_back(
-     new Array(ArrayNames.makeName(NameStr), 1, 0, 0, Expr::Int32, Width));
+    Arrays.push_back(
+    ac.CreateArray(ArrayNames.makeName(NameStr), 1, 0, 0, Expr::Int32, Width));		// oteodoro:  Used array cache.  See 53ff7a0 for API details.
     Vars.push_back(Origin);
 
-    UpdateList UL(Arrays.back().get(), 0);
+    UpdateList UL(Arrays.back(), 0);							// oteodoro:  Changed line
     return ReadExpr::create(UL, klee::ConstantExpr::alloc(0, Expr::Int32));
   }
 
