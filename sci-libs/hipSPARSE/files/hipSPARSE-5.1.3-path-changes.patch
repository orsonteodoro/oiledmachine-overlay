diff -urp hipSPARSE-rocm-5.1.3.orig/clients/CMakeLists.txt hipSPARSE-rocm-5.1.3/clients/CMakeLists.txt
--- hipSPARSE-rocm-5.1.3.orig/clients/CMakeLists.txt	2022-03-11 13:03:01.000000000 -0800
+++ hipSPARSE-rocm-5.1.3/clients/CMakeLists.txt	2023-09-01 17:00:07.293694886 -0700
@@ -27,15 +27,15 @@ cmake_minimum_required(VERSION 3.5 FATAL
 # Consider removing this in the future
 # This should appear before the project command, because it does not use FORCE
 if(WIN32)
-  set(CMAKE_INSTALL_PREFIX "${PROJECT_BINARY_DIR}/package" CACHE PATH "Install path prefix, prepended onto install directories")
+#_cmake_modify_IGNORE   set(CMAKE_INSTALL_PREFIX "${PROJECT_BINARY_DIR}/package" CACHE PATH "Install path prefix, prepended onto install directories")
 else()
-  set(CMAKE_INSTALL_PREFIX "/opt/rocm" CACHE PATH "Install path prefix, prepended onto install directories")
+#_cmake_modify_IGNORE   set(CMAKE_INSTALL_PREFIX "/usr" CACHE PATH "Install path prefix, prepended onto install directories")
 endif()
 
 # This has to be initialized before the project() command appears
 # Set the default of CMAKE_BUILD_TYPE to be release, unless user specifies with -D.  MSVC_IDE does not use CMAKE_BUILD_TYPE
 if(NOT DEFINED CMAKE_CONFIGURATION_TYPES AND NOT DEFINED CMAKE_BUILD_TYPE)
-  set(CMAKE_BUILD_TYPE Release CACHE STRING "Choose the type of build, options are: None Debug Release RelWithDebInfo MinSizeRel.")
+#_cmake_modify_IGNORE   set(CMAKE_BUILD_TYPE Release CACHE STRING "Choose the type of build, options are: None Debug Release RelWithDebInfo MinSizeRel.")
 endif()
 
 # This project may compile dependencies for clients
@@ -48,7 +48,7 @@ list(APPEND CMAKE_MODULE_PATH ${CMAKE_CU
 set(CMAKE_EXPORT_COMPILE_COMMANDS ON)
 
 if(NOT TARGET hipsparse)
-  find_package(hipsparse REQUIRED CONFIG PATHS /opt/rocm/hipsparse)
+  find_package(hipsparse REQUIRED CONFIG PATHS /usr/hipsparse)
 
   option(BUILD_CLIENTS_TESTS "Build tests (requires googletest)" OFF)
   option(BUILD_CLIENTS_SAMPLES "Build examples" ON)
diff -urp hipSPARSE-rocm-5.1.3.orig/cmake/Dependencies.cmake hipSPARSE-rocm-5.1.3/cmake/Dependencies.cmake
--- hipSPARSE-rocm-5.1.3.orig/cmake/Dependencies.cmake	2022-03-11 13:03:01.000000000 -0800
+++ hipSPARSE-rocm-5.1.3/cmake/Dependencies.cmake	2023-09-01 17:00:33.789695576 -0700
@@ -27,19 +27,19 @@
 find_package(Git REQUIRED)
 
 if( NOT DEFINED ENV{HIP_PATH})
-    set( HIP_PATH "/opt/rocm/hip" )
+    set( HIP_PATH "/usr/hip" )
 else( )
     set (HIP_PATH $ENV{HIP_PATH} )
 endif( )
 
 # Either rocSPARSE or cuSPARSE is required
 if(NOT USE_CUDA)
-  find_package(hip REQUIRED CONFIG PATHS ${HIP_PATH} ${ROCM_PATH} /opt/rocm)
+  find_package(hip REQUIRED CONFIG PATHS ${HIP_PATH} ${ROCM_PATH} /usr)
   find_package(rocsparse REQUIRED)
   if(WIN32)
         find_package( rocsparse REQUIRED CONFIG PATHS ${ROCSPARSE_PATH} )
   else()
-        find_package( rocsparse REQUIRED CONFIG PATHS /opt/rocm /opt/rocm/rocsparse /usr/local/rocsparse )
+        find_package( rocsparse REQUIRED CONFIG PATHS /usr /usr/rocsparse /usr/local/rocsparse )
   endif()
 else()
   set(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} "${HIP_PATH}/cmake")
Only in hipSPARSE-rocm-5.1.3/cmake: Dependencies.cmake.orig
Only in hipSPARSE-rocm-5.1.3/cmake: Dependencies.cmake.rej
diff -urp hipSPARSE-rocm-5.1.3.orig/CMakeLists.txt hipSPARSE-rocm-5.1.3/CMakeLists.txt
--- hipSPARSE-rocm-5.1.3.orig/CMakeLists.txt	2022-03-11 13:03:01.000000000 -0800
+++ hipSPARSE-rocm-5.1.3/CMakeLists.txt	2023-09-01 17:05:42.601703620 -0700
@@ -32,11 +32,11 @@ endif()
 if(WIN32)
   set(CMAKE_INSTALL_PREFIX "${PROJECT_BINARY_DIR}/package" CACHE PATH "Install path prefix, prepended onto install directories")
 else()
-  set(CMAKE_INSTALL_PREFIX "/opt/rocm" CACHE PATH "Install path prefix, prepended onto install directories")
+  set(CMAKE_INSTALL_PREFIX "/usr" CACHE PATH "Install path prefix, prepended onto install directories")
 endif()
 
 # Pick up static and dynamic shared object files
-list( APPEND CMAKE_PREFIX_PATH /opt/rocm/llvm /opt/rocm/hip )
+list( APPEND CMAKE_PREFIX_PATH /usr/lib/llvm/@LLVM_SLOT@ /usr/hip )
 
 # CMake modules
 list(APPEND CMAKE_MODULE_PATH
@@ -47,7 +47,7 @@ list(APPEND CMAKE_MODULE_PATH
 # Set a default build type if none was specified
 if(NOT CMAKE_BUILD_TYPE AND NOT CMAKE_CONFIGURATION_TYPES)
   message(STATUS "Setting build type to 'Release' as none was specified.")
-  set(CMAKE_BUILD_TYPE "Release" CACHE STRING "Choose the type of build." FORCE)
+#_cmake_modify_IGNORE   set(CMAKE_BUILD_TYPE "Release" CACHE STRING "Choose the type of build." FORCE)
   set_property(CACHE CMAKE_BUILD_TYPE PROPERTY STRINGS "" "Debug" "Release" "MinSizeRel" "RelWithDebInfo")
 endif()
 
@@ -66,8 +66,8 @@ endif( )
 # hipSPARSE project
 project(hipsparse LANGUAGES CXX Fortran)
 
-# Force library install path to lib (CentOS 7 defaults to lib64)
-set(CMAKE_INSTALL_LIBDIR "lib" CACHE INTERNAL "Installation directory for libraries" FORCE)
+# Force library install path to lib (defaults to @LIBDIR@)
+set(CMAKE_INSTALL_LIBDIR "@LIBDIR@" CACHE INTERNAL "Installation directory for libraries" FORCE)
 
 # Build flags
 set(CMAKE_CXX_STANDARD 14)
@@ -146,7 +146,7 @@ if(BUILD_CODE_COVERAGE)
     COMMAND mkdir -p lcoverage
     COMMAND echo "\\#!/bin/bash" > llvm-gcov.sh
     COMMAND echo "\\# THIS FILE HAS BEEN GENERATED" >> llvm-gcov.sh
-    COMMAND printf "exec /opt/rocm/llvm/bin/llvm-cov gcov $$\\@" >> llvm-gcov.sh
+    COMMAND printf "exec /usr/lib/llvm/@LLVM_SLOT@/bin/llvm-cov gcov $$\\@" >> llvm-gcov.sh
     COMMAND chmod +x llvm-gcov.sh
     )
 
Only in hipSPARSE-rocm-5.1.3: CMakeLists.txt.orig
Only in hipSPARSE-rocm-5.1.3: CMakeLists.txt.rej
diff -urp hipSPARSE-rocm-5.1.3.orig/deps/CMakeLists.txt hipSPARSE-rocm-5.1.3/deps/CMakeLists.txt
--- hipSPARSE-rocm-5.1.3.orig/deps/CMakeLists.txt	2022-03-11 13:03:01.000000000 -0800
+++ hipSPARSE-rocm-5.1.3/deps/CMakeLists.txt	2023-09-01 17:00:07.293694886 -0700
@@ -32,13 +32,13 @@ list( APPEND CMAKE_MODULE_PATH ${CMAKE_C
 # Consider removing this in the future
 # It can be annoying for visual studio developers to build a project that tries to install into 'program files'
 if( WIN32 AND CMAKE_INSTALL_PREFIX_INITIALIZED_TO_DEFAULT )
-  set( CMAKE_INSTALL_PREFIX "${PROJECT_BINARY_DIR}/package" CACHE PATH "Install path prefix, prepended onto install directories" FORCE )
+#_cmake_modify_IGNORE   set( CMAKE_INSTALL_PREFIX "${PROJECT_BINARY_DIR}/package" CACHE PATH "Install path prefix, prepended onto install directories" FORCE )
 endif( )
 
 # This has to be initialized before the project() command appears
 # Set the default of CMAKE_BUILD_TYPE to be release, unless user specifies with -D.  MSVC_IDE does not use CMAKE_BUILD_TYPE
 if( NOT DEFINED CMAKE_CONFIGURATION_TYPES AND NOT DEFINED CMAKE_BUILD_TYPE )
-  set( CMAKE_BUILD_TYPE Release CACHE STRING "Choose the type of build, options are: None Debug Release RelWithDebInfo MinSizeRel." )
+#_cmake_modify_IGNORE   set( CMAKE_BUILD_TYPE Release CACHE STRING "Choose the type of build, options are: None Debug Release RelWithDebInfo MinSizeRel." )
 endif()
 
 # The superbuild does not build anything itself; all compiling is done in external projects
diff -urp hipSPARSE-rocm-5.1.3.orig/deps/external-gtest.cmake hipSPARSE-rocm-5.1.3/deps/external-gtest.cmake
--- hipSPARSE-rocm-5.1.3.orig/deps/external-gtest.cmake	2022-03-11 13:03:01.000000000 -0800
+++ hipSPARSE-rocm-5.1.3/deps/external-gtest.cmake	2023-09-01 17:00:07.293694886 -0700
@@ -91,11 +91,7 @@ ExternalProject_Get_Property( googletest
 set( package_dir "${PREFIX_GTEST}" )
 if( CMAKE_CONFIGURATION_TYPES )
   # Create a package by bundling libraries and header files
-  if( BUILD_64 )
-    set( LIB_DIR lib64 )
-  else( )
-    set( LIB_DIR lib )
-  endif( )
+  set( LIB_DIR @LIBDIR@ )
 
   set( gtest_lib_dir "<BINARY_DIR>/${LIB_DIR}" )
   ExternalProject_Add_Step( googletest createPackage
diff -urp hipSPARSE-rocm-5.1.3.orig/docs/source/usermanual.rst hipSPARSE-rocm-5.1.3/docs/source/usermanual.rst
--- hipSPARSE-rocm-5.1.3.orig/docs/source/usermanual.rst	2022-03-11 13:03:01.000000000 -0800
+++ hipSPARSE-rocm-5.1.3/docs/source/usermanual.rst	2023-09-01 17:00:07.293694886 -0700
@@ -97,7 +97,7 @@ Command           Description
 `./install.sh -h` Print help information.
 `./install.sh -d` Build dependencies and library in your local directory. The `-d` flag only needs to be used once. For subsequent invocations of `install.sh` it is not necessary to rebuild the dependencies.
 `./install.sh`    Build library in your local directory. It is assumed dependencies are available.
-`./install.sh -i` Build library, then build and install hipSPARSE package in `/opt/rocm/hipsparse`. You will be prompted for sudo access. This will install for all users.
+`./install.sh -i` Build library, then build and install hipSPARSE package in `/usr/hipsparse`. You will be prompted for sudo access. This will install for all users.
 ================= ====
 
 Using `install.sh` to build hipSPARSE with dependencies and clients
@@ -113,7 +113,7 @@ Command             Description
 `./install.sh -h`   Print help information.
 `./install.sh -dc`  Build dependencies, library and client in your local directory. The `-d` flag only needs to be used once. For subsequent invocations of `install.sh` it is not necessary to rebuild the dependencies.
 `./install.sh -c`   Build library and client in your local directory. It is assumed dependencies are available.
-`./install.sh -idc` Build library, dependencies and client, then build and install hipSPARSE package in `/opt/rocm/hipsparse`. You will be prompted for sudo access. This will install for all users.
+`./install.sh -idc` Build library, dependencies and client, then build and install hipSPARSE package in `/usr/hipsparse`. You will be prompted for sudo access. This will install for all users.
 `./install.sh -ic`  Build library and client, then build and install hipSPARSE package in `opt/rocm/hipsparse`. You will be prompted for sudo access. This will install for all users.
 =================== ====
 
@@ -128,13 +128,13 @@ hipSPARSE can be built using the followi
   # Create and change to build directory
   $ mkdir -p build/release ; cd build/release
 
-  # Default install path is /opt/rocm, use -DCMAKE_INSTALL_PREFIX=<path> to adjust it
+  # Default install path is /usr, use -DCMAKE_INSTALL_PREFIX=<path> to adjust it
   $ cmake ../..
 
   # Compile hipSPARSE library
   $ make -j$(nproc)
 
-  # Install hipSPARSE to /opt/rocm
+  # Install hipSPARSE to /usr
   $ make install
 
 GoogleTest is required in order to build hipSPARSE clients.
@@ -151,13 +151,13 @@ hipSPARSE with dependencies and clients
   # Change to build directory
   $ cd ..
 
-  # Default install path is /opt/rocm, use -DCMAKE_INSTALL_PREFIX=<path> to adjust it
+  # Default install path is /usr, use -DCMAKE_INSTALL_PREFIX=<path> to adjust it
   $ cmake ../.. -DBUILD_CLIENTS_TESTS=ON -DBUILD_CLIENTS_SAMPLES=ON
 
   # Compile hipSPARSE library
   $ make -j$(nproc)
 
-  # Install hipSPARSE to /opt/rocm
+  # Install hipSPARSE to /usr
   $ make install
 
 Simple Test
Only in hipSPARSE-rocm-5.1.3.orig: hipSPARSE-rocm-5.1.3
diff -urp hipSPARSE-rocm-5.1.3.orig/install.sh hipSPARSE-rocm-5.1.3/install.sh
--- hipSPARSE-rocm-5.1.3.orig/install.sh	2022-03-11 13:03:01.000000000 -0800
+++ hipSPARSE-rocm-5.1.3/install.sh	2023-09-01 17:02:16.553698253 -0700
@@ -248,7 +248,7 @@ build_release=true
 build_release_debug=false
 build_codecoverage=false
 install_prefix=hipsparse-install
-rocm_path=/opt/rocm
+rocm_path=/usr
 build_relocatable=false
 build_address_sanitizer=false
 compiler=${CXX}
@@ -335,7 +335,7 @@ if [[ "${build_relocatable}" == true ]];
         rocm_path=${ROCM_PATH}
     fi
 
-    rocm_rpath=" -Wl,--enable-new-dtags -Wl,--rpath,/opt/rocm/lib:/opt/rocm/lib64"
+    rocm_rpath=" -Wl,--enable-new-dtags -Wl,--rpath,/usr/@LIBDIR@"
     if ! [ -z ${ROCM_RPATH+x} ]; then
         rocm_rpath=" -Wl,--enable-new-dtags -Wl,--rpath,${ROCM_RPATH}"
     fi
@@ -387,7 +387,7 @@ fi
 if [[ "${build_relocatable}" == true ]]; then
     export PATH=${rocm_path}/bin:${PATH}
 else
-    export PATH=${PATH}:/opt/rocm/bin
+    export PATH=${PATH}:/usr/bin
 fi
 
 pushd .
@@ -440,7 +440,7 @@ pushd .
   if [[ "${build_relocatable}" == true ]]; then
     cmake_common_options="${cmake_common_options} -DCPACK_SET_DESTDIR=OFF -DCPACK_PACKAGING_INSTALL_PREFIX=${rocm_path}"
   else
-    cmake_common_options="${cmake_common_options} -DCPACK_SET_DESTDIR=OFF -DCPACK_PACKAGING_INSTALL_PREFIX=/opt/rocm"
+    cmake_common_options="${cmake_common_options} -DCPACK_SET_DESTDIR=OFF -DCPACK_PACKAGING_INSTALL_PREFIX=/usr"
   fi
 
   # cuda or hip
@@ -457,7 +457,7 @@ pushd .
       -DCMAKE_SHARED_LINKER_FLAGS="${rocm_rpath}" \
       -DCMAKE_PREFIX_PATH="${rocm_path} ${rocm_path}/hcc ${rocm_path}/hip" \
       -DCMAKE_MODULE_PATH="${rocm_path}/hip/cmake" \
-      -DCMAKE_EXE_LINKER_FLAGS=" -Wl,--enable-new-dtags -Wl,--rpath,${rocm_path}/lib:${rocm_path}/lib64 ${cmake_build_static_options}" \
+      -DCMAKE_EXE_LINKER_FLAGS=" -Wl,--enable-new-dtags -Wl,--rpath,${rocm_path}/@LIBDIR@ ${cmake_build_static_options}" \
       -DROCM_DISABLE_LDCONFIG=ON \
       -DROCM_PATH="${rocm_path}" ../..
   else
diff -urp hipSPARSE-rocm-5.1.3.orig/rmake.py hipSPARSE-rocm-5.1.3/rmake.py
--- hipSPARSE-rocm-5.1.3.orig/rmake.py	2022-03-11 13:03:01.000000000 -0800
+++ hipSPARSE-rocm-5.1.3/rmake.py	2023-09-01 17:00:07.321694887 -0700
@@ -130,7 +130,7 @@ def config_cmd():
         cmake_options.append( generator )
         toolchain = os.path.join( src_path, "toolchain-windows.cmake" )
     else:
-        rocm_path = os.getenv( 'ROCM_PATH', "/opt/rocm")
+        rocm_path = os.getenv( 'ROCM_PATH', "/usr")
         if (OS_info["ID"] in ['centos', 'rhel']):
           cmake_executable = "cmake" # was cmake3 but now we built cmake
         else:
diff -urp hipSPARSE-rocm-5.1.3.orig/toolchain-linux.cmake hipSPARSE-rocm-5.1.3/toolchain-linux.cmake
--- hipSPARSE-rocm-5.1.3.orig/toolchain-linux.cmake	2022-03-11 13:03:01.000000000 -0800
+++ hipSPARSE-rocm-5.1.3/toolchain-linux.cmake	2023-09-01 17:03:10.729699664 -0700
@@ -1,8 +1,8 @@
 
 if (DEFINED ENV{ROCM_PATH})
-  set(rocm_bin "$ENV{ROCM_PATH}/hip/bin")
+  set(rocm_bin "$ENV{ROCM_PATH}/bin")
 else()
-  set(rocm_bin "/opt/rocm/hip/bin")
+  set(rocm_bin "/usr/bin")
 endif()
 
 set(CMAKE_CXX_COMPILER "${rocm_bin}/hipcc")
Only in hipSPARSE-rocm-5.1.3: toolchain-linux.cmake.orig
Only in hipSPARSE-rocm-5.1.3: toolchain-linux.cmake.rej
