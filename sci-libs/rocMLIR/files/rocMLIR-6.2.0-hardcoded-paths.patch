diff '--color=auto' -urp rocMLIR-rocm-6.2.0.orig/CMakeLists.txt rocMLIR-rocm-6.2.0/CMakeLists.txt
--- rocMLIR-rocm-6.2.0.orig/CMakeLists.txt	2024-06-06 02:48:01.000000000 -0700
+++ rocMLIR-rocm-6.2.0/CMakeLists.txt	2024-08-19 10:56:04.786087394 -0700
@@ -61,7 +61,7 @@ if( BUILD_FAT_LIBROCKCOMPILER )
   set(ROCMLIR_DRIVER_PR_E2E_TEST_ENABLED 0 CACHE BOOL "Enable build PR-triggered E2E tests for Rock driver")
   set(MHAL_ENABLE_HOST_RUNNER OFF CACHE BOOL "Enable MHAL host runner")
   if(NOT WIN32)
-    set(CMAKE_INSTALL_PREFIX "/opt/rocm" CACHE STRING "")
+    set(CMAKE_INSTALL_PREFIX "/opt/rocm-@ROCM_VERSION@" CACHE STRING "")
     # Note, this is a hack to ignore Pytorch added conda path
     list(APPEND CMAKE_IGNORE_PATH /opt/conda)
   endif()
diff '--color=auto' -urp rocMLIR-rocm-6.2.0.orig/cmake/llvm-project.cmake rocMLIR-rocm-6.2.0/cmake/llvm-project.cmake
--- rocMLIR-rocm-6.2.0.orig/cmake/llvm-project.cmake	2024-06-06 02:48:01.000000000 -0700
+++ rocMLIR-rocm-6.2.0/cmake/llvm-project.cmake	2024-08-19 10:56:04.810086990 -0700
@@ -33,7 +33,7 @@ endif()
 # Configure ROCm support.
 if (NOT DEFINED ROCM_PATH)
   if (NOT DEFINED ENV{ROCM_PATH})
-    set(ROCM_PATH "/opt/rocm" CACHE PATH "Path to which ROCm has been installed")
+    set(ROCM_PATH "/opt/rocm-@ROCM_VERSION@" CACHE PATH "Path to which ROCm has been installed")
   else()
     set(ROCM_PATH $ENV{ROCM_PATH} CACHE PATH "Path to which ROCm has been installed")
   endif()
diff '--color=auto' -urp rocMLIR-rocm-6.2.0.orig/external/llvm-project/clang/lib/Driver/ToolChains/AMDGPU.cpp rocMLIR-rocm-6.2.0/external/llvm-project/clang/lib/Driver/ToolChains/AMDGPU.cpp
--- rocMLIR-rocm-6.2.0.orig/external/llvm-project/clang/lib/Driver/ToolChains/AMDGPU.cpp	2024-06-06 02:48:01.000000000 -0700
+++ rocMLIR-rocm-6.2.0/external/llvm-project/clang/lib/Driver/ToolChains/AMDGPU.cpp	2024-08-19 10:56:08.938017419 -0700
@@ -271,7 +271,7 @@ RocmInstallationDetector::getInstallatio
   ROCmSearchDirs.emplace_back(D.ResourceDir,
                               /*StrictChecking=*/true);
 
-  ROCmSearchDirs.emplace_back(D.SysRoot + "/opt/rocm",
+  ROCmSearchDirs.emplace_back(D.SysRoot + "/opt/rocm-@ROCM_VERSION@",
                               /*StrictChecking=*/true);
 
   // Find the latest /opt/rocm-{release} directory.
Only in rocMLIR-rocm-6.2.0/external/llvm-project/clang/lib/Driver/ToolChains: AMDGPU.cpp.orig
diff '--color=auto' -urp rocMLIR-rocm-6.2.0.orig/external/llvm-project/clang/tools/amdgpu-arch/CMakeLists.txt rocMLIR-rocm-6.2.0/external/llvm-project/clang/tools/amdgpu-arch/CMakeLists.txt
--- rocMLIR-rocm-6.2.0.orig/external/llvm-project/clang/tools/amdgpu-arch/CMakeLists.txt	2024-06-06 02:48:01.000000000 -0700
+++ rocMLIR-rocm-6.2.0/external/llvm-project/clang/tools/amdgpu-arch/CMakeLists.txt	2024-08-19 10:56:04.830086652 -0700
@@ -8,7 +8,7 @@
 
 set(LLVM_LINK_COMPONENTS Support)
 
-find_package(hsa-runtime64 QUIET 1.2.0 HINTS ${CMAKE_INSTALL_PREFIX} PATHS /opt/rocm)
+find_package(hsa-runtime64 QUIET 1.2.0 HINTS ${CMAKE_INSTALL_PREFIX} PATHS /opt/rocm-@ROCM_VERSION@)
 
 add_clang_tool(amdgpu-arch AMDGPUArch.cpp AMDGPUArchByHSA.cpp AMDGPUArchByHIP.cpp)
 
diff '--color=auto' -urp rocMLIR-rocm-6.2.0.orig/external/llvm-project/compiler-rt/CMakeLists.txt rocMLIR-rocm-6.2.0/external/llvm-project/compiler-rt/CMakeLists.txt
--- rocMLIR-rocm-6.2.0.orig/external/llvm-project/compiler-rt/CMakeLists.txt	2024-06-06 02:48:01.000000000 -0700
+++ rocMLIR-rocm-6.2.0/external/llvm-project/compiler-rt/CMakeLists.txt	2024-08-19 10:56:04.830086652 -0700
@@ -482,12 +482,12 @@ endif()
 
 if(SANITIZER_AMDGPU)
   list(APPEND SANITIZER_COMMON_CFLAGS -DSANITIZER_AMDGPU=1)
-  find_path(HSA_INCLUDE hsa.h HINTS ${SANITIZER_HSA_INCLUDE_PATH} ${CMAKE_INSTALL_PREFIX}/include/hsa ${CMAKE_INSTALL_PREFIX}/../include/hsa /opt/rocm/include/hsa PATH_SUFFIXES hsa)
+  find_path(HSA_INCLUDE hsa.h HINTS ${SANITIZER_HSA_INCLUDE_PATH} ${CMAKE_INSTALL_PREFIX}/include/hsa ${CMAKE_INSTALL_PREFIX}/../include/hsa /opt/rocm-@ROCM_VERSION@/include/hsa PATH_SUFFIXES hsa)
   include_directories(${HSA_INCLUDE})
   find_path(COMgr_INCLUDE amd_comgr.h.in HINTS ${SANITIZER_COMGR_INCLUDE_PATH} ${CMAKE_INSTALL_PREFIX}/../include ${CMAKE_INSTALL_PREFIX}/include)
   if (NOT COMgr_INCLUDE)
     add_compile_definitions(AMD_COMGR)
-    find_path(COMgr_INCLUDE amd_comgr.h HINTS ${CMAKE_INSTALL_PREFIX}/../include ${CMAKE_INSTALL_PREFIX}/include /opt/rocm/include)
+    find_path(COMgr_INCLUDE amd_comgr.h HINTS ${CMAKE_INSTALL_PREFIX}/../include ${CMAKE_INSTALL_PREFIX}/include /opt/rocm-@ROCM_VERSION@/include)
   endif()
   include_directories(${COMgr_INCLUDE})
 endif()
Only in rocMLIR-rocm-6.2.0/external/llvm-project/compiler-rt: CMakeLists.txt.orig
Only in rocMLIR-rocm-6.2.0/external/llvm-project/libc/cmake/modules: prepare_libc_gpu_build.cmake.orig
Only in rocMLIR-rocm-6.2.0/external/llvm-project/libc/cmake/modules: prepare_libc_gpu_build.cmake.rej
diff '--color=auto' -urp rocMLIR-rocm-6.2.0.orig/external/llvm-project/libc/src/math/amdgpu/CMakeLists.txt rocMLIR-rocm-6.2.0/external/llvm-project/libc/src/math/amdgpu/CMakeLists.txt
--- rocMLIR-rocm-6.2.0.orig/external/llvm-project/libc/src/math/amdgpu/CMakeLists.txt	2024-06-06 02:48:01.000000000 -0700
+++ rocMLIR-rocm-6.2.0/external/llvm-project/libc/src/math/amdgpu/CMakeLists.txt	2024-08-19 10:58:09.371987349 -0700
@@ -4,7 +4,7 @@
 # them as external references and expect them to be resolved by the user when
 # they compile. In the future,we will use implementations from the 'libc'
 # project and not provide these wrappers.
-find_package(AMDDeviceLibs QUIET HINTS ${CMAKE_INSTALL_PREFIX} PATHS /opt/rocm)
+find_package(AMDDeviceLibs QUIET HINTS ${CMAKE_INSTALL_PREFIX} PATHS /opt/rocm-@ROCM_VERSION@)
 if(AMDDeviceLibs_FOUND)
   message(STATUS "Found the ROCm device library. Implementations falling back "
                  "to the vendor libraries will be resolved statically.")
diff '--color=auto' -urp rocMLIR-rocm-6.2.0.orig/external/llvm-project/libc/utils/gpu/loader/CMakeLists.txt rocMLIR-rocm-6.2.0/external/llvm-project/libc/utils/gpu/loader/CMakeLists.txt
--- rocMLIR-rocm-6.2.0.orig/external/llvm-project/libc/utils/gpu/loader/CMakeLists.txt	2024-06-06 02:48:01.000000000 -0700
+++ rocMLIR-rocm-6.2.0/external/llvm-project/libc/utils/gpu/loader/CMakeLists.txt	2024-08-19 10:56:06.614056587 -0700
@@ -6,7 +6,7 @@ target_include_directories(gpu_loader PU
   ${LIBC_SOURCE_DIR}
 )
 
-find_package(hsa-runtime64 QUIET 1.2.0 HINTS ${CMAKE_INSTALL_PREFIX} PATHS /opt/rocm)
+find_package(hsa-runtime64 QUIET 1.2.0 HINTS ${CMAKE_INSTALL_PREFIX} PATHS /opt/rocm-@ROCM_VERSION@)
 if(hsa-runtime64_FOUND)
   add_subdirectory(amdgpu)
 endif()
Only in rocMLIR-rocm-6.2.0/external/llvm-project/libc/utils/gpu/loader: CMakeLists.txt.orig
diff '--color=auto' -urp rocMLIR-rocm-6.2.0.orig/external/llvm-project/mlir/lib/Dialect/GPU/CMakeLists.txt rocMLIR-rocm-6.2.0/external/llvm-project/mlir/lib/Dialect/GPU/CMakeLists.txt
--- rocMLIR-rocm-6.2.0.orig/external/llvm-project/mlir/lib/Dialect/GPU/CMakeLists.txt	2024-06-06 02:48:01.000000000 -0700
+++ rocMLIR-rocm-6.2.0/external/llvm-project/mlir/lib/Dialect/GPU/CMakeLists.txt	2024-08-19 10:56:06.614056587 -0700
@@ -115,7 +115,7 @@ if(MLIR_ENABLE_ROCM_CONVERSIONS)
   ### This is menat to let us embed the device libraries into a static library.
   if (NOT DEFINED ROCM_PATH)
     if (NOT DEFINED ENV{ROCM_PATH})
-      set(ROCM_PATH "/opt/rocm" CACHE PATH "Path to which ROCm has been installed")
+      set(ROCM_PATH "/opt/rocm-@ROCM_VERSION@" CACHE PATH "Path to which ROCm has been installed")
     else()
       set(ROCM_PATH $ENV{ROCM_PATH} CACHE PATH "Path to which ROCm has been installed")
     endif()
@@ -164,7 +164,7 @@ if(MLIR_ENABLE_ROCM_CONVERSIONS)
     message(NOTICE "Device libraries not found during builds, assuming we can find them at runtime")
   endif()
   ### End rocMLIR-specific hackery
-  set(DEFAULT_ROCM_PATH "/opt/rocm" CACHE PATH "Fallback path to search for ROCm installs")
+  set(DEFAULT_ROCM_PATH "/opt/rocm-@ROCM_VERSION@" CACHE PATH "Fallback path to search for ROCm installs")
   target_compile_definitions(obj.MLIRGPUTransforms
     PRIVATE
     __DEFAULT_ROCM_PATH__="${DEFAULT_ROCM_PATH}"
Only in rocMLIR-rocm-6.2.0/external/llvm-project/mlir/lib/Dialect/GPU: CMakeLists.txt.orig
diff '--color=auto' -urp rocMLIR-rocm-6.2.0.orig/external/llvm-project/mlir/lib/ExecutionEngine/CMakeLists.txt rocMLIR-rocm-6.2.0/external/llvm-project/mlir/lib/ExecutionEngine/CMakeLists.txt
--- rocMLIR-rocm-6.2.0.orig/external/llvm-project/mlir/lib/ExecutionEngine/CMakeLists.txt	2024-06-06 02:48:01.000000000 -0700
+++ rocMLIR-rocm-6.2.0/external/llvm-project/mlir/lib/ExecutionEngine/CMakeLists.txt	2024-08-19 10:56:06.614056587 -0700
@@ -292,7 +292,7 @@ if(LLVM_ENABLE_PIC)
     # Configure ROCm support.
     if (NOT DEFINED ROCM_PATH)
       if (NOT DEFINED ENV{ROCM_PATH})
-        set(ROCM_PATH "/opt/rocm" CACHE PATH "Path to which ROCm has been installed")
+        set(ROCM_PATH "/opt/rocm-@ROCM_VERSION@" CACHE PATH "Path to which ROCm has been installed")
       else()
         set(ROCM_PATH $ENV{ROCM_PATH} CACHE PATH "Path to which ROCm has been installed")
       endif()
Only in rocMLIR-rocm-6.2.0/external/llvm-project/mlir/lib/ExecutionEngine: CMakeLists.txt.orig
diff '--color=auto' -urp rocMLIR-rocm-6.2.0.orig/external/llvm-project/mlir/lib/Target/LLVM/CMakeLists.txt rocMLIR-rocm-6.2.0/external/llvm-project/mlir/lib/Target/LLVM/CMakeLists.txt
--- rocMLIR-rocm-6.2.0.orig/external/llvm-project/mlir/lib/Target/LLVM/CMakeLists.txt	2024-06-06 02:48:01.000000000 -0700
+++ rocMLIR-rocm-6.2.0/external/llvm-project/mlir/lib/Target/LLVM/CMakeLists.txt	2024-08-19 10:58:00.364139211 -0700
@@ -133,7 +133,7 @@ if(MLIR_ENABLE_ROCM_CONVERSIONS)
   elseif(DEFINED ENV{ROCM_PATH})
     set(DEFAULT_ROCM_PATH "$ENV{ROCM_PATH}" CACHE PATH "Fallback path to search for ROCm installs")
   else()
-    set(DEFAULT_ROCM_PATH "/opt/rocm" CACHE PATH "Fallback path to search for ROCm installs")
+    set(DEFAULT_ROCM_PATH "/opt/rocm-@ROCM_VERSION@" CACHE PATH "Fallback path to search for ROCm installs")
   endif()
   message(VERBOSE "MLIR Default ROCM toolkit path: ${DEFAULT_ROCM_PATH}")
 
diff '--color=auto' -urp rocMLIR-rocm-6.2.0.orig/external/llvm-project/offload/DeviceRTL/CMakeLists.txt rocMLIR-rocm-6.2.0/external/llvm-project/offload/DeviceRTL/CMakeLists.txt
--- rocMLIR-rocm-6.2.0.orig/external/llvm-project/offload/DeviceRTL/CMakeLists.txt	2024-06-06 02:48:01.000000000 -0700
+++ rocMLIR-rocm-6.2.0/external/llvm-project/offload/DeviceRTL/CMakeLists.txt	2024-08-19 10:58:37.483513400 -0700
@@ -375,7 +375,7 @@ foreach(gpu_arch ${LIBOMPTARGET_DEVICE_A
     find_package(AMDDeviceLibs REQUIRED CONFIG
                  HINTS ${CMAKE_INSTALL_PREFIX} 
                        ${CMAKE_BINARY_DIR}/../../tools/rocm-device-libs
-                 PATHS /opt/rocm
+                 PATHS /opt/rocm-@ROCM_VERSION@
     )
     
     # Link in the ROCm Device Libraries once the other files have been linked.
diff '--color=auto' -urp rocMLIR-rocm-6.2.0.orig/external/llvm-project/offload/hostexec/CMakeLists.txt rocMLIR-rocm-6.2.0/external/llvm-project/offload/hostexec/CMakeLists.txt
--- rocMLIR-rocm-6.2.0.orig/external/llvm-project/offload/hostexec/CMakeLists.txt	2024-06-06 02:48:01.000000000 -0700
+++ rocMLIR-rocm-6.2.0/external/llvm-project/offload/hostexec/CMakeLists.txt	2024-08-19 10:58:30.283634791 -0700
@@ -19,10 +19,10 @@ endif()
 # If we are bootstrapping hsa via external project we need to use find_library
 # as it will not be installed.
 if(DEFINED LIBOMPTARGET_EXTERNAL_PROJECT_HSA_PATH)
-  find_library(HSA_RUNTIME hsa-runtime64 HINTS ${CMAKE_BINARY_DIR}/../../runtimes/rocr-runtime-prefix/src/rocr-runtime-build ${CMAKE_INSTALL_PREFIX} PATHS /opt/rocm)
+  find_library(HSA_RUNTIME hsa-runtime64 HINTS ${CMAKE_BINARY_DIR}/../../runtimes/rocr-runtime-prefix/src/rocr-runtime-build ${CMAKE_INSTALL_PREFIX} PATHS /opt/rocm-@ROCM_VERSION@)
 else()
  # As of rocm-3.7, hsa is installed with cmake packages and kmt is found via hsa
-  find_package(hsa-runtime64 QUIET 1.2.0 HINTS ${CMAKE_INSTALL_PREFIX} PATHS /opt/rocm)
+  find_package(hsa-runtime64 QUIET 1.2.0 HINTS ${CMAKE_INSTALL_PREFIX} PATHS /opt/rocm-@ROCM_VERSION@)
 endif()
 
 if(DEFINED HSA_RUNTIME)
@@ -158,7 +158,7 @@ foreach(archname ${HOSTRPC_ARCHS})
         find_package(AMDDeviceLibs REQUIRED CONFIG
                      HINTS ${CMAKE_INSTALL_PREFIX}
                            ${CMAKE_BINARY_DIR}/../../tools/rocm-device-libs
-                     PATHS /opt/rocm
+                     PATHS /opt/rocm-@ROCM_VERSION@
         )
         get_target_property(ocml_path ocml IMPORTED_LOCATION)
         get_target_property(ockl_path ockl IMPORTED_LOCATION)
diff '--color=auto' -urp rocMLIR-rocm-6.2.0.orig/external/llvm-project/offload/plugins-nextgen/amdgpu/CMakeLists.txt rocMLIR-rocm-6.2.0/external/llvm-project/offload/plugins-nextgen/amdgpu/CMakeLists.txt
--- rocMLIR-rocm-6.2.0.orig/external/llvm-project/offload/plugins-nextgen/amdgpu/CMakeLists.txt	2024-06-06 02:48:01.000000000 -0700
+++ rocMLIR-rocm-6.2.0/external/llvm-project/offload/plugins-nextgen/amdgpu/CMakeLists.txt	2024-08-19 10:58:42.043436519 -0700
@@ -31,7 +31,7 @@ if(DEFINED LIBOMPTARGET_EXTERNAL_PROJECT
   )
 else()
   # As of rocm-3.7, hsa is installed with cmake packages and kmt is found via hsa
-  find_package(hsa-runtime64 QUIET 1.2.0 HINTS ${CMAKE_INSTALL_PREFIX} PATHS /opt/rocm)
+  find_package(hsa-runtime64 QUIET 1.2.0 HINTS ${CMAKE_INSTALL_PREFIX} PATHS /opt/rocm-@ROCM_VERSION@)
 endif()
 
 if(NOT (CMAKE_SYSTEM_PROCESSOR MATCHES "(x86_64)|(ppc64le)|(aarch64)$" AND CMAKE_SYSTEM_NAME MATCHES "Linux"))
diff '--color=auto' -urp rocMLIR-rocm-6.2.0.orig/external/llvm-project/openmp/CMakeLists.txt rocMLIR-rocm-6.2.0/external/llvm-project/openmp/CMakeLists.txt
--- rocMLIR-rocm-6.2.0.orig/external/llvm-project/openmp/CMakeLists.txt	2024-06-06 02:48:01.000000000 -0700
+++ rocMLIR-rocm-6.2.0/external/llvm-project/openmp/CMakeLists.txt	2024-08-19 10:58:18.395835215 -0700
@@ -98,7 +98,7 @@ endif()
 if(SANITIZER_AMDGPU)
   add_definitions(-DSANITIZER_AMDGPU=1)
   # Check for COMGr package , ASan requires COMGr with minimum version 2.4
-  find_package(amd_comgr QUIET 2.4.0 HINTS ${CMAKE_INSTALL_PREFIX} PATHS /opt/rocm)
+  find_package(amd_comgr QUIET 2.4.0 HINTS ${CMAKE_INSTALL_PREFIX} PATHS /opt/rocm-@ROCM_VERSION@)
 endif()
 
 if((CMAKE_BUILD_TYPE MATCHES Debug) AND (${LIBOMPTARGET_NVPTX_DEBUG}))
diff '--color=auto' -urp rocMLIR-rocm-6.2.0.orig/mlir/tools/rocmlir-lib/CMakeLists.txt rocMLIR-rocm-6.2.0/mlir/tools/rocmlir-lib/CMakeLists.txt
--- rocMLIR-rocm-6.2.0.orig/mlir/tools/rocmlir-lib/CMakeLists.txt	2024-06-06 02:48:01.000000000 -0700
+++ rocMLIR-rocm-6.2.0/mlir/tools/rocmlir-lib/CMakeLists.txt	2024-08-19 10:56:08.882018364 -0700
@@ -34,7 +34,7 @@ mlir_check_link_libraries(rocmlir-lib-te
 llvm_canonicalize_cmake_booleans(BUILD_FAT_LIBROCKCOMPILER)
 # Static library target, enabled only when building static libs
 if(BUILD_FAT_LIBROCKCOMPILER)
-  find_package(ROCM 0.8 REQUIRED PATHS /opt/rocm)
+  find_package(ROCM 0.8 REQUIRED PATHS /opt/rocm-@ROCM_VERSION@)
   include(ROCMInstallTargets)
   include(ROCMCreatePackage)
 
diff '--color=auto' -urp rocMLIR-rocm-6.2.0.orig/mlir/tools/rocmlir-tuning-driver/CMakeLists.txt rocMLIR-rocm-6.2.0/mlir/tools/rocmlir-tuning-driver/CMakeLists.txt
--- rocMLIR-rocm-6.2.0.orig/mlir/tools/rocmlir-tuning-driver/CMakeLists.txt	2024-06-06 02:48:01.000000000 -0700
+++ rocMLIR-rocm-6.2.0/mlir/tools/rocmlir-tuning-driver/CMakeLists.txt	2024-08-19 10:56:08.882018364 -0700
@@ -21,7 +21,7 @@ add_rocmlir_tool(rocmlir-tuning-driver
 # Grab HIP again, since we'll be using it directly
 if (NOT DEFINED ROCM_PATH)
   if (NOT DEFINED ENV{ROCM_PATH})
-    set(ROCM_PATH "/opt/rocm" CACHE PATH "Path to which ROCm has been installed")
+    set(ROCM_PATH "/opt/rocm-@ROCM_VERSION@" CACHE PATH "Path to which ROCm has been installed")
   else()
     set(ROCM_PATH $ENV{ROCM_PATH} CACHE PATH "Path to which ROCm has been installed")
   endif()
diff '--color=auto' -urp rocMLIR-rocm-6.2.0.orig/mlir/utils/performance/ck-benchmark-driver/CMakeLists.txt rocMLIR-rocm-6.2.0/mlir/utils/performance/ck-benchmark-driver/CMakeLists.txt
--- rocMLIR-rocm-6.2.0.orig/mlir/utils/performance/ck-benchmark-driver/CMakeLists.txt	2024-06-06 02:48:01.000000000 -0700
+++ rocMLIR-rocm-6.2.0/mlir/utils/performance/ck-benchmark-driver/CMakeLists.txt	2024-08-19 10:57:47.288359645 -0700
@@ -2,7 +2,7 @@ find_package(composable_kernel 1.1.0 COM
 
 if (composable_kernel_FOUND)
   message(STATUS "Found Composable Kernel Library")
-  find_package(hip REQUIRED PATHS /opt/rocm)
+  find_package(hip REQUIRED PATHS /opt/rocm-@ROCM_VERSION@)
   set(LIBS composable_kernel::device_gemm_operations hip::device benchmark-driver-utils)
 
   add_library(ck-common INTERFACE IMPORTED)
Only in rocMLIR-rocm-6.2.0/mlir/utils/performance/ck-benchmark-driver: CMakeLists.txt.orig
Only in rocMLIR-rocm-6.2.0/mlir/utils/performance/ck-benchmark-driver: CMakeLists.txt.rej
diff '--color=auto' -urp rocMLIR-rocm-6.2.0.orig/mlir/utils/performance/common/CMakeLists.txt rocMLIR-rocm-6.2.0/mlir/utils/performance/common/CMakeLists.txt
--- rocMLIR-rocm-6.2.0.orig/mlir/utils/performance/common/CMakeLists.txt	2024-06-06 02:48:01.000000000 -0700
+++ rocMLIR-rocm-6.2.0/mlir/utils/performance/common/CMakeLists.txt	2024-08-19 10:56:08.882018364 -0700
@@ -1,4 +1,4 @@
-find_package(hip PATHS /opt/rocm)
+find_package(hip PATHS /opt/rocm-@ROCM_VERSION@)
 
 if (hip_FOUND)
   add_library(benchmark-driver-utils EXCLUDE_FROM_ALL benchmarkUtils.cpp)
diff '--color=auto' -urp rocMLIR-rocm-6.2.0.orig/mlir/utils/performance/rocblas-benchmark-driver/CMakeLists.txt rocMLIR-rocm-6.2.0/mlir/utils/performance/rocblas-benchmark-driver/CMakeLists.txt
--- rocMLIR-rocm-6.2.0.orig/mlir/utils/performance/rocblas-benchmark-driver/CMakeLists.txt	2024-06-06 02:48:01.000000000 -0700
+++ rocMLIR-rocm-6.2.0/mlir/utils/performance/rocblas-benchmark-driver/CMakeLists.txt	2024-08-19 10:56:08.882018364 -0700
@@ -1,4 +1,4 @@
-find_package(rocblas CONFIG HINTS /opt/rocm)
+find_package(rocblas CONFIG HINTS /opt/rocm-@ROCM_VERSION@)
 
 if (rocblas_FOUND)
   set(LIBS ${rocblas_LIBRARY} benchmark-driver-utils)
