diff '--color=auto' -urp rocMLIR-rocm-5.6.0.orig/CMakeLists.txt rocMLIR-rocm-5.6.0/CMakeLists.txt
--- rocMLIR-rocm-5.6.0.orig/CMakeLists.txt	2023-04-12 05:18:38.000000000 -0700
+++ rocMLIR-rocm-5.6.0/CMakeLists.txt	2024-07-10 07:40:59.971371100 -0700
@@ -50,7 +50,7 @@ if( BUILD_FAT_LIBROCKCOMPILER )
   # rocm-runner is not supported with static libraries
   set(MLIR_ENABLE_ROCM_RUNNER 0 CACHE BOOL "")
   set(MLIR_INCLUDE_INTEGRATION_TESTS OFF CACHE BOOL "")
-  set(CMAKE_INSTALL_PREFIX "/opt/rocm" CACHE STRING "")
+  set(CMAKE_INSTALL_PREFIX "/opt/rocm-@ROCM_VERSION@" CACHE STRING "")
   set(ROCMLIR_DRIVER_PR_E2E_TEST_ENABLED 0 CACHE BOOL "Enable build PR-triggered E2E tests for Rock driver")
   # Note, this is a hack to ignore Pytorch added conda path
   list(APPEND CMAKE_IGNORE_PATH /opt/conda)
Only in rocMLIR-rocm-5.6.0: CMakeLists.txt.orig
diff '--color=auto' -urp rocMLIR-rocm-5.6.0.orig/cmake/llvm-project.cmake rocMLIR-rocm-5.6.0/cmake/llvm-project.cmake
--- rocMLIR-rocm-5.6.0.orig/cmake/llvm-project.cmake	2023-04-12 05:18:38.000000000 -0700
+++ rocMLIR-rocm-5.6.0/cmake/llvm-project.cmake	2024-07-10 07:40:59.971371100 -0700
@@ -31,7 +31,7 @@ set(LLVM_PROJ_SRC "${CMAKE_CURRENT_SOURC
 # Configure ROCm support.
 if (NOT DEFINED ROCM_PATH)
   if (NOT DEFINED ENV{ROCM_PATH})
-    set(ROCM_PATH "/opt/rocm" CACHE PATH "Path to which ROCm has been installed")
+    set(ROCM_PATH "/opt/rocm-@ROCM_VERSION@" CACHE PATH "Path to which ROCm has been installed")
   else()
     set(ROCM_PATH $ENV{ROCM_PATH} CACHE PATH "Path to which ROCm has been installed")
   endif()
Only in rocMLIR-rocm-5.6.0/cmake: llvm-project.cmake.orig
diff '--color=auto' -urp rocMLIR-rocm-5.6.0.orig/external/llvm-project/clang/tools/amdgpu-arch/CMakeLists.txt rocMLIR-rocm-5.6.0/external/llvm-project/clang/tools/amdgpu-arch/CMakeLists.txt
--- rocMLIR-rocm-5.6.0.orig/external/llvm-project/clang/tools/amdgpu-arch/CMakeLists.txt	2023-04-12 05:18:38.000000000 -0700
+++ rocMLIR-rocm-5.6.0/external/llvm-project/clang/tools/amdgpu-arch/CMakeLists.txt	2024-07-10 07:42:07.186454501 -0700
@@ -11,7 +11,7 @@ set(LLVM_LINK_COMPONENTS Support)
 add_clang_tool(amdgpu-arch AMDGPUArch.cpp)
 
 # If we find the HSA runtime we link with it directly.
-find_package(hsa-runtime64 QUIET 1.2.0 HINTS ${CMAKE_INSTALL_PREFIX} PATHS /opt/rocm)
+find_package(hsa-runtime64 QUIET 1.2.0 HINTS ${CMAKE_INSTALL_PREFIX} PATHS /opt/rocm-@ROCM_VERSION@)
 if (${hsa-runtime64_FOUND})
   set_target_properties(amdgpu-arch PROPERTIES INSTALL_RPATH_USE_LINK_PATH ON)
   clang_target_link_libraries(amdgpu-arch PRIVATE hsa-runtime64::hsa-runtime64)
Only in rocMLIR-rocm-5.6.0/external/llvm-project/clang/tools/amdgpu-arch: CMakeLists.txt.orig
Only in rocMLIR-rocm-5.6.0/external/llvm-project/clang/tools/amdgpu-arch: CMakeLists.txt.rej
diff '--color=auto' -urp rocMLIR-rocm-5.6.0.orig/external/llvm-project/libc/cmake/modules/prepare_libc_gpu_build.cmake rocMLIR-rocm-5.6.0/external/llvm-project/libc/cmake/modules/prepare_libc_gpu_build.cmake
--- rocMLIR-rocm-5.6.0.orig/external/llvm-project/libc/cmake/modules/prepare_libc_gpu_build.cmake	2023-04-12 05:18:38.000000000 -0700
+++ rocMLIR-rocm-5.6.0/external/llvm-project/libc/cmake/modules/prepare_libc_gpu_build.cmake	2024-07-10 07:41:54.754623674 -0700
@@ -32,7 +32,7 @@ endif()
 # Identify any locally installed GPUs to use for testing.
 find_program(LIBC_AMDGPU_ARCH
              NAMES amdgpu-arch
-             PATHS ${LLVM_BINARY_DIR}/bin /opt/rocm/llvm/bin/)
+             PATHS ${LLVM_BINARY_DIR}/bin /opt/rocm-@ROCM_VERSION@/llvm/bin/)
 if(LIBC_AMDGPU_ARCH)
   execute_process(COMMAND ${LIBC_AMDGPU_ARCH}
                   OUTPUT_VARIABLE LIBC_AMDGPU_ARCH_OUTPUT
diff '--color=auto' -urp rocMLIR-rocm-5.6.0.orig/external/llvm-project/mlir/lib/Dialect/GPU/CMakeLists.txt rocMLIR-rocm-5.6.0/external/llvm-project/mlir/lib/Dialect/GPU/CMakeLists.txt
--- rocMLIR-rocm-5.6.0.orig/external/llvm-project/mlir/lib/Dialect/GPU/CMakeLists.txt	2023-04-12 05:18:38.000000000 -0700
+++ rocMLIR-rocm-5.6.0/external/llvm-project/mlir/lib/Dialect/GPU/CMakeLists.txt	2024-07-10 07:40:59.995370761 -0700
@@ -137,7 +137,7 @@ if(MLIR_ENABLE_ROCM_CONVERSIONS)
       "LLD is not enabled, please reconfigure llvm build")
   endif()
 
-  set(DEFAULT_ROCM_PATH "/opt/rocm" CACHE PATH "Fallback path to search for ROCm installs")
+  set(DEFAULT_ROCM_PATH "/opt/rocm-@ROCM_VERSION@" CACHE PATH "Fallback path to search for ROCm installs")
   target_compile_definitions(obj.MLIRGPUTransforms
     PRIVATE
     __DEFAULT_ROCM_PATH__="${DEFAULT_ROCM_PATH}"
Only in rocMLIR-rocm-5.6.0/external/llvm-project/mlir/lib/Dialect/GPU: CMakeLists.txt.orig
diff '--color=auto' -urp rocMLIR-rocm-5.6.0.orig/external/llvm-project/mlir/lib/ExecutionEngine/CMakeLists.txt rocMLIR-rocm-5.6.0/external/llvm-project/mlir/lib/ExecutionEngine/CMakeLists.txt
--- rocMLIR-rocm-5.6.0.orig/external/llvm-project/mlir/lib/ExecutionEngine/CMakeLists.txt	2023-04-12 05:18:38.000000000 -0700
+++ rocMLIR-rocm-5.6.0/external/llvm-project/mlir/lib/ExecutionEngine/CMakeLists.txt	2024-07-10 07:40:59.995370761 -0700
@@ -208,7 +208,7 @@ if(MLIR_ENABLE_ROCM_RUNNER)
   # Configure ROCm support.
   if (NOT DEFINED ROCM_PATH)
     if (NOT DEFINED ENV{ROCM_PATH})
-      set(ROCM_PATH "/opt/rocm" CACHE PATH "Path to which ROCm has been installed")
+      set(ROCM_PATH "/opt/rocm-@ROCM_VERSION@" CACHE PATH "Path to which ROCm has been installed")
     else()
       set(ROCM_PATH $ENV{ROCM_PATH} CACHE PATH "Path to which ROCm has been installed")
     endif()
Only in rocMLIR-rocm-5.6.0/external/llvm-project/mlir/lib/ExecutionEngine: CMakeLists.txt.orig
diff '--color=auto' -urp rocMLIR-rocm-5.6.0.orig/external/llvm-project/openmp/libomptarget/plugins/amdgpu/CMakeLists.txt rocMLIR-rocm-5.6.0/external/llvm-project/openmp/libomptarget/plugins/amdgpu/CMakeLists.txt
--- rocMLIR-rocm-5.6.0.orig/external/llvm-project/openmp/libomptarget/plugins/amdgpu/CMakeLists.txt	2023-04-12 05:18:38.000000000 -0700
+++ rocMLIR-rocm-5.6.0/external/llvm-project/openmp/libomptarget/plugins/amdgpu/CMakeLists.txt	2024-07-10 07:40:59.995370761 -0700
@@ -20,7 +20,7 @@ if (NOT LIBOMPTARGET_BUILD_AMDGPU_PLUGIN
 endif()
 
 # as of rocm-3.7, hsa is installed with cmake packages and kmt is found via hsa
-find_package(hsa-runtime64 QUIET 1.2.0 HINTS ${CMAKE_INSTALL_PREFIX} PATHS /opt/rocm)
+find_package(hsa-runtime64 QUIET 1.2.0 HINTS ${CMAKE_INSTALL_PREFIX} PATHS /opt/rocm-@ROCM_VERSION@)
 
 if(NOT CMAKE_SYSTEM_PROCESSOR MATCHES "(x86_64)|(ppc64le)|(aarch64)$" AND CMAKE_SYSTEM_NAME MATCHES "Linux")
   libomptarget_say("Not building AMDGPU plugin: only support AMDGPU in Linux x86_64, ppc64le, or aarch64 hosts")
diff '--color=auto' -urp rocMLIR-rocm-5.6.0.orig/external/llvm-project/openmp/libomptarget/plugins-nextgen/amdgpu/CMakeLists.txt rocMLIR-rocm-5.6.0/external/llvm-project/openmp/libomptarget/plugins-nextgen/amdgpu/CMakeLists.txt
--- rocMLIR-rocm-5.6.0.orig/external/llvm-project/openmp/libomptarget/plugins-nextgen/amdgpu/CMakeLists.txt	2023-04-12 05:18:38.000000000 -0700
+++ rocMLIR-rocm-5.6.0/external/llvm-project/openmp/libomptarget/plugins-nextgen/amdgpu/CMakeLists.txt	2024-07-10 07:42:02.482518514 -0700
@@ -20,7 +20,7 @@ if (NOT LIBOMPTARGET_BUILD_AMDGPU_PLUGIN
 endif()
 
 # as of rocm-3.7, hsa is installed with cmake packages and kmt is found via hsa
-find_package(hsa-runtime64 QUIET 1.2.0 HINTS ${CMAKE_INSTALL_PREFIX} PATHS /opt/rocm)
+find_package(hsa-runtime64 QUIET 1.2.0 HINTS ${CMAKE_INSTALL_PREFIX} PATHS /opt/rocm-@ROCM_VERSION@)
 
 if(NOT CMAKE_SYSTEM_PROCESSOR MATCHES "(x86_64)|(ppc64le)|(aarch64)$" AND CMAKE_SYSTEM_NAME MATCHES "Linux")
   libomptarget_say("Not building AMDGPU NextGen plugin: only support AMDGPU in Linux x86_64, ppc64le, or aarch64 hosts")
diff '--color=auto' -urp rocMLIR-rocm-5.6.0.orig/mlir/tools/rocmlir-lib/CMakeLists.txt rocMLIR-rocm-5.6.0/mlir/tools/rocmlir-lib/CMakeLists.txt
--- rocMLIR-rocm-5.6.0.orig/mlir/tools/rocmlir-lib/CMakeLists.txt	2023-04-12 05:18:38.000000000 -0700
+++ rocMLIR-rocm-5.6.0/mlir/tools/rocmlir-lib/CMakeLists.txt	2024-07-10 07:41:40.342819773 -0700
@@ -40,7 +40,7 @@ mlir_check_link_libraries(rocmlir-lib-te
 llvm_canonicalize_cmake_booleans(BUILD_FAT_LIBROCKCOMPILER)
 # Static library target, enabled only when building static libs
 if(BUILD_FAT_LIBROCKCOMPILER)
-  find_package(ROCM 0.8 REQUIRED PATHS /opt/rocm)
+  find_package(ROCM 0.8 REQUIRED PATHS /opt/rocm-@ROCM_VERSION@)
   include(ROCMInstallTargets)
   include(ROCMCreatePackage)
 
diff '--color=auto' -urp rocMLIR-rocm-5.6.0.orig/mlir/tools/rocmlir-tuning-driver/CMakeLists.txt rocMLIR-rocm-5.6.0/mlir/tools/rocmlir-tuning-driver/CMakeLists.txt
--- rocMLIR-rocm-5.6.0.orig/mlir/tools/rocmlir-tuning-driver/CMakeLists.txt	2023-04-12 05:18:38.000000000 -0700
+++ rocMLIR-rocm-5.6.0/mlir/tools/rocmlir-tuning-driver/CMakeLists.txt	2024-07-10 07:41:35.746882304 -0700
@@ -20,7 +20,7 @@ add_llvm_tool(rocmlir-tuning-driver
 # Grab HIP again, since we'll be using it directly
 if (NOT DEFINED ROCM_PATH)
   if (NOT DEFINED ENV{ROCM_PATH})
-    set(ROCM_PATH "/opt/rocm" CACHE PATH "Path to which ROCm has been installed")
+    set(ROCM_PATH "/opt/rocm-@ROCM_VERSION@" CACHE PATH "Path to which ROCm has been installed")
   else()
     set(ROCM_PATH $ENV{ROCM_PATH} CACHE PATH "Path to which ROCm has been installed")
   endif()
diff '--color=auto' -urp rocMLIR-rocm-5.6.0.orig/mlir/utils/performance/ck-benchmark-driver/CMakeLists.txt rocMLIR-rocm-5.6.0/mlir/utils/performance/ck-benchmark-driver/CMakeLists.txt
--- rocMLIR-rocm-5.6.0.orig/mlir/utils/performance/ck-benchmark-driver/CMakeLists.txt	2023-04-12 05:18:38.000000000 -0700
+++ rocMLIR-rocm-5.6.0/mlir/utils/performance/ck-benchmark-driver/CMakeLists.txt	2024-07-10 07:41:29.682964807 -0700
@@ -4,7 +4,7 @@ if(NOT composable_kernel_FOUND)
 endif()
 
 if (composable_kernel_FOUND)
-  find_package(hip REQUIRED PATHS /opt/rocm)
+  find_package(hip REQUIRED PATHS /opt/rocm-@ROCM_VERSION@)
   set(LIBS composable_kernel::device_operations hip::device benchmark-driver-utils)
   set(EXCLUDE_FROM_ALL TRUE)
 
diff '--color=auto' -urp rocMLIR-rocm-5.6.0.orig/mlir/utils/performance/common/CMakeLists.txt rocMLIR-rocm-5.6.0/mlir/utils/performance/common/CMakeLists.txt
--- rocMLIR-rocm-5.6.0.orig/mlir/utils/performance/common/CMakeLists.txt	2023-04-12 05:18:38.000000000 -0700
+++ rocMLIR-rocm-5.6.0/mlir/utils/performance/common/CMakeLists.txt	2024-07-10 07:41:26.675005731 -0700
@@ -1,4 +1,4 @@
-find_package(hip PATHS /opt/rocm)
+find_package(hip PATHS /opt/rocm-@ROCM_VERSION@)
 if(NOT hip_FOUND)
   message(WARNING "Could not find HIP, not building benchmark utils")
 endif()
diff '--color=auto' -urp rocMLIR-rocm-5.6.0.orig/mlir/utils/performance/rocblas-benchmark-driver/CMakeLists.txt rocMLIR-rocm-5.6.0/mlir/utils/performance/rocblas-benchmark-driver/CMakeLists.txt
--- rocMLIR-rocm-5.6.0.orig/mlir/utils/performance/rocblas-benchmark-driver/CMakeLists.txt	2023-04-12 05:18:38.000000000 -0700
+++ rocMLIR-rocm-5.6.0/mlir/utils/performance/rocblas-benchmark-driver/CMakeLists.txt	2024-07-10 07:40:59.995370761 -0700
@@ -1,4 +1,4 @@
-find_package(rocblas CONFIG HINTS /opt/rocm)
+find_package(rocblas CONFIG HINTS /opt/rocm-@ROCM_VERSION@)
 if(NOT rocblas_FOUND)
   message(WARNING "Could not find rocBLAS, not building a rocBLAS benchmark driver")
 endif()
diff '--color=auto' -urp rocMLIR-rocm-5.1.3.orig/external/llvm-project/clang/lib/Driver/ToolChains/AMDGPU.cpp rocMLIR-rocm-5.1.3/external/llvm-project/clang/lib/Driver/ToolChains/AMDGPU.cpp
--- rocMLIR-rocm-5.1.3.orig/external/llvm-project/clang/lib/Driver/ToolChains/AMDGPU.cpp	2022-01-20 11:34:11.000000000 -0800
+++ rocMLIR-rocm-5.1.3/external/llvm-project/clang/lib/Driver/ToolChains/AMDGPU.cpp	2024-07-24 04:33:21.098778312 -0700
@@ -260,7 +260,7 @@ RocmInstallationDetector::getInstallatio
   ROCmSearchDirs.emplace_back(D.ResourceDir,
                               /*StrictChecking=*/true);
 
-  ROCmSearchDirs.emplace_back(D.SysRoot + "/opt/rocm",
+  ROCmSearchDirs.emplace_back(D.SysRoot + "/opt/rocm-@ROCM_VERSION@",
                               /*StrictChecking=*/true);
 
   // Find the latest /opt/rocm-{release} directory.
