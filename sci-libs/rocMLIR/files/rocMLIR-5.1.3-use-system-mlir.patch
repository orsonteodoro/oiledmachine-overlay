diff -urp rocMLIR-rocm-5.1.3.orig/cmake/llvm-project.cmake rocMLIR-rocm-5.1.3/cmake/llvm-project.cmake
--- rocMLIR-rocm-5.1.3.orig/cmake/llvm-project.cmake	2022-01-20 11:34:11.000000000 -0800
+++ rocMLIR-rocm-5.1.3/cmake/llvm-project.cmake	2023-08-06 14:05:04.549150124 -0700
@@ -15,7 +15,7 @@ set(LLVM_BUILD_EXAMPLES ON CACHE BOOL ""
 set(LLVM_INSTALL_UTILS ON CACHE BOOL "")
 set(LLVM_ENABLE_TERMINFO OFF CACHE BOOL "")
 set(LLVM_ENABLE_ASSERTIONS ON CACHE BOOL "")
-set(LLVM_PROJ_SRC "${CMAKE_SOURCE_DIR}/external/llvm-project")
+set(LLVM_VERSION_MAJOR ${ELLVM_VERSION_MAJOR})
 
 # Configure ROCm support.
 if (NOT DEFINED ROCM_PATH)
@@ -31,26 +31,56 @@ message(STATUS "ROCM_PATH: ${ROCM_PATH}"
 list(APPEND CMAKE_MODULE_PATH
   "${ROCM_PATH}/hip/cmake"
 )
-list(APPEND CMAKE_MODULE_PATH
-  "${CMAKE_CURRENT_BINARY_DIR}/lib/cmake/mlir"
-)
-list(APPEND CMAKE_MODULE_PATH
-  "${CMAKE_CURRENT_BINARY_DIR}/external/llvm-project/llvm/lib/cmake/llvm/"
-)
+
+if(USE_SYSTEM_MLIR)
+  list(APPEND CMAKE_MODULE_PATH
+    "/usr/lib/llvm/${LLVM_VERSION_MAJOR}/${CMAKE_INSTALL_LIBDIR}/cmake/mlir"
+  )
+  list(APPEND CMAKE_MODULE_PATH
+    "/usr/lib/llvm/${LLVM_VERSION_MAJOR}/${CMAKE_INSTALL_LIBDIR}/cmake/llvm"
+  )
+
+  set(LLVM_INCLUDE_DIR1 /usr/lib/llvm/${LLVM_VERSION_MAJOR}/include)
+  set(LLVM_INCLUDE_DIR2 "")
+  set(MLIR_INCLUDE_DIR1 /usr/lib/llvm/${LLVM_VERSION_MAJOR}/include)
+  set(MLIR_INCLUDE_DIR2 "")
+else()
+  list(APPEND CMAKE_MODULE_PATH
+    "${CMAKE_CURRENT_BINARY_DIR}/lib/cmake/mlir"
+  )
+  list(APPEND CMAKE_MODULE_PATH
+    "${CMAKE_CURRENT_BINARY_DIR}/external/llvm-project/llvm/lib/cmake/llvm/"
+  )
+
+  set(LLVM_INCLUDE_DIR1 ${CMAKE_CURRENT_SOURCE_DIR}/external/llvm-project/llvm/include)
+  set(LLVM_INCLUDE_DIR2 ${CMAKE_CURRENT_BINARY_DIR}/external/llvm-project/llvm/include)
+  set(MLIR_INCLUDE_DIR1 ${CMAKE_CURRENT_SOURCE_DIR}/external/llvm-project/mlir/include)
+  set(MLIR_INCLUDE_DIR2 ${CMAKE_CURRENT_BINARY_DIR}/external/llvm-project/llvm/tools/mlir/include)
+endif()
 
 # Include dirs for MLIR and LLVM
 list(APPEND MLIR_INCLUDE_DIRS
-  ${CMAKE_CURRENT_SOURCE_DIR}/external/llvm-project/mlir/include
-  ${CMAKE_CURRENT_BINARY_DIR}/external/llvm-project/llvm/tools/mlir/include
+  ${MLIR_INCLUDE_DIR1}
+  ${MLIR_INCLUDE_DIR2}
 )
 list(APPEND LLVM_INCLUDE_DIRS
-  ${CMAKE_CURRENT_SOURCE_DIR}/external/llvm-project/llvm/include
-  ${CMAKE_CURRENT_BINARY_DIR}/external/llvm-project/llvm/include
+  ${LLVM_INCLUDE_DIR1}
+  ${LLVM_INCLUDE_DIR2}
 )
 
-# Linker flags
-list(APPEND CMAKE_EXE_LINKER_FLAGS
-  " -Wl,-rpath -Wl,${CMAKE_CURRENT_BINARY_DIR}/external/llvm-project/llvm/lib"
-)
+if(USE_SYSTEM_MLIR)
+  # Linker flags
+  list(APPEND CMAKE_EXE_LINKER_FLAGS
+    " -Wl,-rpath -Wl,/usr/lib/${LLVM_VERSION_MAJOR}/${CMAKE_INSTALL_LIBDIR}"
+  )
 
-add_subdirectory("${LLVM_PROJ_SRC}/llvm" "external/llvm-project/llvm" EXCLUDE_FROM_ALL)
+  # Already built
+else()
+  # Linker flags
+  list(APPEND CMAKE_EXE_LINKER_FLAGS
+    " -Wl,-rpath -Wl,${CMAKE_CURRENT_BINARY_DIR}/external/llvm-project/llvm/lib"
+  )
+
+  set(LLVM_PROJ_SRC "${CMAKE_SOURCE_DIR}/external/llvm-project")
+  add_subdirectory("${LLVM_PROJ_SRC}/llvm" "external/llvm-project/llvm" EXCLUDE_FROM_ALL)
+endif()
diff -urp rocMLIR-rocm-5.1.3.orig/CMakeLists.txt rocMLIR-rocm-5.1.3/CMakeLists.txt
--- rocMLIR-rocm-5.1.3.orig/CMakeLists.txt	2022-01-20 11:34:11.000000000 -0800
+++ rocMLIR-rocm-5.1.3/CMakeLists.txt	2023-08-06 14:06:41.313152644 -0700
@@ -49,9 +49,16 @@ else()
 endif()
 add_definitions(-DMLIR_ROCM_CONVERSIONS_ENABLED=${MLIR_ROCM_CONVERSIONS_ENABLED})
 
-# Pointers to: 1) external LLVM bins/libs, and 2) MIOpen Dialect bins/libs
-set(LLVM_EXTERNAL_BIN_DIR "${CMAKE_CURRENT_BINARY_DIR}/external/llvm-project/llvm/bin" CACHE PATH "")
-set(LLVM_EXTERNAL_LIB_DIR "${CMAKE_CURRENT_BINARY_DIR}/external/llvm-project/llvm/lib" CACHE PATH "")
+option(USE_SYSTEM_MLIR "Use the system MLIR instead of the vendored" ON)
+if (NOT USE_SYSTEM_MLIR)
+  # Pointers to: 1) external LLVM bins/libs, and 2) MIOpen Dialect bins/libs
+  set(LLVM_EXTERNAL_BIN_DIR "${CMAKE_CURRENT_BINARY_DIR}/external/llvm-project/llvm/bin" CACHE PATH "")
+  set(LLVM_EXTERNAL_LIB_DIR "${CMAKE_CURRENT_BINARY_DIR}/external/llvm-project/llvm/lib" CACHE PATH "")
+else()
+  set(LLVM_VERSION_MAJOR ${ELLVM_VERSION_MAJOR})
+  set(LLVM_EXTERNAL_BIN_DIR "/usr/lib/llvm/${LLVM_VERSION_MAJOR}/bin" CACHE PATH "")
+  set(LLVM_EXTERNAL_LIB_DIR "/usr/lib/llvm/${LLVM_VERSION_MAJOR}/${CMAKE_INSTALL_LIBDIR}" CACHE PATH "")
+endif()
 set(MLIR_MIOPEN_BIN_DIR "${CMAKE_CURRENT_BINARY_DIR}/bin" CACHE PATH "")
 set(MLIR_MIOPEN_LIB_DIR "${CMAKE_CURRENT_BINARY_DIR}/lib" CACHE PATH "")
 message(STATUS "LLVM_EXTERNAL_BIN_DIR: ${LLVM_EXTERNAL_BIN_DIR}")
@@ -67,9 +74,14 @@ if(BUILD_MIXR_TARGET)
 endif()
 
 # Library type and linkage settings
-if( NOT DEFINED BUILD_FAT_LIBMLIRMIOPEN )
+if( NOT DEFINED BUILD_FAT_LIBMLIRMIOPEN AND NOT USE_SYSTEM_MLIR )
   set(BUILD_FAT_LIBMLIRMIOPEN OFF CACHE BOOL "Build fat libMLIRMIOpen to link into MIOpen driver")
 endif()
+
+if(USE_SYSTEM_MLIR)
+  set(BUILD_FAT_LIBROCKCOMPILER OFF)
+endif()
+
 if( BUILD_FAT_LIBMLIRMIOPEN )
   set(BUILD_SHARED_LIBS OFF CACHE BOOL "")
   set(LLVM_BUILD_LLVM_DYLIB OFF CACHE BOOL "")
diff -urp rocMLIR-rocm-5.1.3.orig/mlir/CMakeLists.txt rocMLIR-rocm-5.1.3/mlir/CMakeLists.txt
--- rocMLIR-rocm-5.1.3.orig/mlir/CMakeLists.txt	2023-08-06 14:04:47.905149691 -0700
+++ rocMLIR-rocm-5.1.3/mlir/CMakeLists.txt	2023-08-06 14:05:04.549150124 -0700
@@ -38,7 +38,9 @@ add_subdirectory(include/mlir)
 add_subdirectory(lib)
 # C API needs all dialects for registration, but should be built before tests.
 add_subdirectory(lib/CAPI)
-add_subdirectory(test)
+if(NOT USE_SYSTEM_MLIR)
+  add_subdirectory(test)
+endif()
 add_subdirectory(tools)
 
 if ((NOT LLVM_INSTALL_TOOLCHAIN_ONLY) AND EXPORT_ALL_HEADERS)
Only in rocMLIR-rocm-5.1.3/mlir: CMakeLists.txt.orig
diff -urp rocMLIR-rocm-5.1.3.orig/mlir/test/CMakeLists.txt rocMLIR-rocm-5.1.3/mlir/test/CMakeLists.txt
--- rocMLIR-rocm-5.1.3.orig/mlir/test/CMakeLists.txt	2022-01-20 11:34:11.000000000 -0800
+++ rocMLIR-rocm-5.1.3/mlir/test/CMakeLists.txt	2023-08-06 14:07:17.377153584 -0700
@@ -31,7 +31,11 @@ message(STATUS "MLIR_ROCM_WRAPPER_LIBRAR
 
 # Need to explicitly give paths to llvm tools
 set(LLVM_LIT_TOOLS_DIR ${LLVM_EXTERNAL_BIN_DIR})
-set(LLVM_EXTERNAL_LIT "${LLVM_LIT_TOOLS_DIR}/llvm-lit")
+if(USE_SYSTEM_MLIR)
+  set(LLVM_EXTERNAL_LIT "/usr/bin/lit")
+else()
+  set(LLVM_EXTERNAL_LIT "${LLVM_LIT_TOOLS_DIR}/llvm-lit")
+endif()
 set(LLVM_TOOLS_DIR ${LLVM_EXTERNAL_BIN_DIR})
 set(MLIR_TOOLS_DIR ${LLVM_EXTERNAL_BIN_DIR})
 set(MLIR_MIOPEN_TOOLS_DIR ${MLIR_MIOPEN_BIN_DIR})
diff -urp rocMLIR-rocm-5.1.3.orig/mlir/tools/mlir-miopen-driver/CMakeLists.txt rocMLIR-rocm-5.1.3/mlir/tools/mlir-miopen-driver/CMakeLists.txt
--- rocMLIR-rocm-5.1.3.orig/mlir/tools/mlir-miopen-driver/CMakeLists.txt	2023-08-06 14:04:47.897149690 -0700
+++ rocMLIR-rocm-5.1.3/mlir/tools/mlir-miopen-driver/CMakeLists.txt	2023-08-06 14:05:04.549150124 -0700
@@ -51,5 +51,7 @@ file(GLOB PERFORMANCE_SCRIPTS
   "${CMAKE_CURRENT_SOURCE_DIR}/../../utils/jenkins/*.py" 
 )
 
-add_custom_target(ci-performance-scripts
-	COMMAND ${CMAKE_COMMAND} -E copy ${PERFORMANCE_SCRIPTS} ${MLIR_MIOPEN_BIN_DIR})
+if(NOT USE_SYSTEM_MLIR)
+	add_custom_target(ci-performance-scripts
+		COMMAND ${CMAKE_COMMAND} -E copy ${PERFORMANCE_SCRIPTS} ${MLIR_MIOPEN_BIN_DIR})
+endif()
diff -urp rocMLIR-rocm-5.1.3.orig/mlir/tools/mlir-miopen-lib/CMakeLists.txt rocMLIR-rocm-5.1.3/mlir/tools/mlir-miopen-lib/CMakeLists.txt
--- rocMLIR-rocm-5.1.3.orig/mlir/tools/mlir-miopen-lib/CMakeLists.txt	2022-01-20 11:34:11.000000000 -0800
+++ rocMLIR-rocm-5.1.3/mlir/tools/mlir-miopen-lib/CMakeLists.txt	2023-08-06 14:05:04.549150124 -0700
@@ -23,7 +23,11 @@ set(LIBS
   MLIRIR
 )
 
-set(CMAKE_BUILD_RPATH ${CMAKE_BUILD_DIR}/external/llvm-project/llvm/lib)
+if(USE_SYSTEM_MLIR)
+  set(CMAKE_BUILD_RPATH /usr/lib/llvm/${LLVM_VERSION_MAJOR}/${CMAKE_INSTALL_LIBDIR})
+else()
+  set(CMAKE_BUILD_RPATH ${CMAKE_BUILD_DIR}/external/llvm-project/llvm/lib)
+endif()
 
 llvm_add_library(MLIRMIOpenThin
 PARTIAL_SOURCES_INTENDED
