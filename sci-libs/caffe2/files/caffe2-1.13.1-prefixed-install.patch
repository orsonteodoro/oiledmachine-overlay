diff '--color=auto' -urp pytorch-1.13.1.orig/third_party/FP16/CMakeLists.txt pytorch-1.13.1/third_party/FP16/CMakeLists.txt
--- pytorch-1.13.1.orig/third_party/FP16/CMakeLists.txt	2020-05-14 01:22:54.000000000 -0700
+++ pytorch-1.13.1/third_party/FP16/CMakeLists.txt	2024-11-07 20:33:46.735168702 -0800
@@ -79,7 +79,7 @@ TARGET_INCLUDE_DIRECTORIES(fp16 INTERFAC
     $<INSTALL_INTERFACE:include>)
 
 INSTALL(FILES include/fp16.h
-  DESTINATION ${CMAKE_INSTALL_INCLUDEDIR})
+  DESTINATION ${CMAKE_INSTALL_PREFIXED_INCLUDEDIR})
 INSTALL(FILES
     include/fp16/bitcasts.h
     include/fp16/fp16.h
@@ -87,7 +87,7 @@ INSTALL(FILES
     include/fp16/__init__.py
     include/fp16/avx.py
     include/fp16/avx2.py
-  DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}/fp16)
+  DESTINATION ${CMAKE_INSTALL_PREFIXED_INCLUDEDIR}/fp16)
 
 # ---[ Configure psimd
 IF(NOT TARGET psimd)
diff '--color=auto' -urp pytorch-1.13.1.orig/third_party/cpuinfo/CMakeLists.txt pytorch-1.13.1/third_party/cpuinfo/CMakeLists.txt
--- pytorch-1.13.1.orig/third_party/cpuinfo/CMakeLists.txt	2022-08-19 09:23:47.000000000 -0700
+++ pytorch-1.13.1/third_party/cpuinfo/CMakeLists.txt	2024-11-07 20:33:46.747168517 -0800
@@ -274,19 +274,19 @@ INCLUDE(CMakePackageConfigHelpers)
 GET_FILENAME_COMPONENT(CONFIG_FILE_PATH ${CMAKE_CURRENT_BINARY_DIR}/cpuinfo-config.cmake ABSOLUTE)
 CONFIGURE_PACKAGE_CONFIG_FILE(
   cmake/cpuinfo-config.cmake.in ${CONFIG_FILE_PATH}
-  INSTALL_DESTINATION ${CMAKE_INSTALL_DATAROOTDIR}/${PROJECT_NAME})
+  INSTALL_DESTINATION ${CMAKE_INSTALL_PREFIXED_DATAROOTDIR}/${PROJECT_NAME})
 INSTALL(FILES ${CONFIG_FILE_PATH}
-  DESTINATION ${CMAKE_INSTALL_DATAROOTDIR}/${PROJECT_NAME}) # cpuinfo_DIR ${prefix}/share/cpuinfo
+  DESTINATION ${CMAKE_INSTALL_PREFIXED_DATAROOTDIR}/${PROJECT_NAME}) # cpuinfo_DIR ${prefix}/share/cpuinfo
 
 INSTALL(TARGETS cpuinfo
   EXPORT cpuinfo-targets
-  LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR}
-  ARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR}
-  PUBLIC_HEADER DESTINATION ${CMAKE_INSTALL_INCLUDEDIR})
+  LIBRARY DESTINATION ${CMAKE_INSTALL_PREFIXED_LIBDIR}
+  ARCHIVE DESTINATION ${CMAKE_INSTALL_PREFIXED_LIBDIR}
+  PUBLIC_HEADER DESTINATION ${CMAKE_INSTALL_PREFIXED_INCLUDEDIR})
 
 INSTALL(EXPORT cpuinfo-targets
   NAMESPACE ${PROJECT_NAME}:: # IMPORTED cpuinfo::cpuinfo, cpuinfo::clog
-  DESTINATION ${CMAKE_INSTALL_DATAROOTDIR}/${PROJECT_NAME})
+  DESTINATION ${CMAKE_INSTALL_PREFIXED_DATAROOTDIR}/${PROJECT_NAME})
 
 # ---[ cpuinfo micro-benchmarks
 IF(CPUINFO_SUPPORTED_PLATFORM AND CPUINFO_BUILD_BENCHMARKS)
@@ -810,19 +810,19 @@ IF(CPUINFO_SUPPORTED_PLATFORM AND CPUINF
   CPUINFO_TARGET_ENABLE_C99(isa-info)
   CPUINFO_TARGET_RUNTIME_LIBRARY(isa-info)
   TARGET_LINK_LIBRARIES(isa-info PRIVATE cpuinfo)
-  INSTALL(TARGETS isa-info RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR})
+  INSTALL(TARGETS isa-info RUNTIME DESTINATION ${CMAKE_INSTALL_PREFIXED_BINDIR})
 
   ADD_EXECUTABLE(cpu-info tools/cpu-info.c)
   CPUINFO_TARGET_ENABLE_C99(cpu-info)
   CPUINFO_TARGET_RUNTIME_LIBRARY(cpu-info)
   TARGET_LINK_LIBRARIES(cpu-info PRIVATE cpuinfo)
-  INSTALL(TARGETS cpu-info RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR})
+  INSTALL(TARGETS cpu-info RUNTIME DESTINATION ${CMAKE_INSTALL_PREFIXED_BINDIR})
 
   ADD_EXECUTABLE(cache-info tools/cache-info.c)
   CPUINFO_TARGET_ENABLE_C99(cache-info)
   CPUINFO_TARGET_RUNTIME_LIBRARY(cache-info)
   TARGET_LINK_LIBRARIES(cache-info PRIVATE cpuinfo)
-  INSTALL(TARGETS cache-info RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR})
+  INSTALL(TARGETS cache-info RUNTIME DESTINATION ${CMAKE_INSTALL_PREFIXED_BINDIR})
 
   IF(CMAKE_SYSTEM_NAME MATCHES "^(Android|Linux)$" AND CMAKE_SYSTEM_PROCESSOR MATCHES "^(armv[5-8].*|aarch64)$")
     ADD_EXECUTABLE(auxv-dump tools/auxv-dump.c)
@@ -841,7 +841,7 @@ IF(CPUINFO_SUPPORTED_PLATFORM AND CPUINF
     CPUINFO_TARGET_RUNTIME_LIBRARY(cpuid-dump)
     TARGET_INCLUDE_DIRECTORIES(cpuid-dump BEFORE PRIVATE src)
     TARGET_INCLUDE_DIRECTORIES(cpuid-dump BEFORE PRIVATE include)
-    INSTALL(TARGETS cpuid-dump RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR})
+    INSTALL(TARGETS cpuid-dump RUNTIME DESTINATION ${CMAKE_INSTALL_PREFIXED_BINDIR})
   ENDIF()
 ENDIF()
 
@@ -862,8 +862,8 @@ IF(CPUINFO_BUILD_PKG_CONFIG)
     SET(${joined_path} "${temp_path}" PARENT_SCOPE)
   ENDFUNCTION()
 
-  JOIN_PATHS(libdir_for_pc_file "\${exec_prefix}" "${CMAKE_INSTALL_LIBDIR}")
-  JOIN_PATHS(includedir_for_pc_file "\${prefix}" "${CMAKE_INSTALL_INCLUDEDIR}")
+  JOIN_PATHS(libdir_for_pc_file "\${exec_prefix}" "${CMAKE_INSTALL_PREFIXED_LIBDIR}")
+  JOIN_PATHS(includedir_for_pc_file "\${prefix}" "${CMAKE_INSTALL_PREFIXED_INCLUDEDIR}")
 
   CONFIGURE_FILE(
     "libcpuinfo.pc.in"
@@ -871,6 +871,6 @@ IF(CPUINFO_BUILD_PKG_CONFIG)
     @ONLY)
 
   INSTALL(FILES "${CMAKE_CURRENT_BINARY_DIR}/libcpuinfo.pc"
-  DESTINATION "${CMAKE_INSTALL_LIBDIR}/pkgconfig")
+  DESTINATION "${CMAKE_INSTALL_PREFIXED_LIBDIR}/pkgconfig")
 
 ENDIF()
diff '--color=auto' -urp pytorch-1.13.1.orig/third_party/cpuinfo/deps/clog/CMakeLists.txt pytorch-1.13.1/third_party/cpuinfo/deps/clog/CMakeLists.txt
--- pytorch-1.13.1.orig/third_party/cpuinfo/deps/clog/CMakeLists.txt	2022-08-19 09:23:47.000000000 -0700
+++ pytorch-1.13.1/third_party/cpuinfo/deps/clog/CMakeLists.txt	2024-11-07 20:33:46.747168517 -0800
@@ -71,9 +71,9 @@ ADD_LIBRARY(cpuinfo::clog ALIAS clog)
 
 INSTALL(TARGETS clog
   EXPORT cpuinfo-targets
-  LIBRARY DESTINATION "${CMAKE_INSTALL_LIBDIR}"
-  ARCHIVE DESTINATION "${CMAKE_INSTALL_LIBDIR}"
-  PUBLIC_HEADER DESTINATION "${CMAKE_INSTALL_INCLUDEDIR}")
+  LIBRARY DESTINATION "${CMAKE_INSTALL_PREFIXED_LIBDIR}"
+  ARCHIVE DESTINATION "${CMAKE_INSTALL_PREFIXED_LIBDIR}"
+  PUBLIC_HEADER DESTINATION "${CMAKE_INSTALL_PREFIXED_INCLUDEDIR}")
 
 # ---[ clog tests
 IF(CLOG_BUILD_TESTS)
diff '--color=auto' -urp pytorch-1.13.1.orig/third_party/fmt/CMakeLists.txt pytorch-1.13.1/third_party/fmt/CMakeLists.txt
--- pytorch-1.13.1.orig/third_party/fmt/CMakeLists.txt	2020-08-06 08:51:01.000000000 -0700
+++ pytorch-1.13.1/third_party/fmt/CMakeLists.txt	2024-11-07 20:34:52.546155253 -0800
@@ -54,7 +54,7 @@ endif ()
 
 project(FMT CXX)
 include(GNUInstallDirs)
-set_verbose(FMT_INC_DIR ${CMAKE_INSTALL_INCLUDEDIR} CACHE STRING
+set_verbose(FMT_INC_DIR ${CMAKE_INSTALL_PREFIXED_INCLUDEDIR} CACHE STRING
             "Installation directory for include files, a relative path "
             "that will be joined to ${CMAKE_INSTALL_PREFIX}, or an arbitrary absolute path.")
 
@@ -255,7 +255,7 @@ target_include_directories(fmt-header-on
 # Install targets.
 if (FMT_INSTALL)
   include(CMakePackageConfigHelpers)
-  set_verbose(FMT_CMAKE_DIR ${CMAKE_INSTALL_LIBDIR}/cmake/fmt CACHE STRING
+  set_verbose(FMT_CMAKE_DIR ${CMAKE_INSTALL_PREFIXED_LIBDIR}/cmake/fmt CACHE STRING
               "Installation directory for cmake files, a relative path "
               "that will be joined to ${CMAKE_INSTALL_PREFIX}, or an arbitrary absolute path.")
   set(version_config ${PROJECT_BINARY_DIR}/fmt-config-version.cmake)
@@ -263,11 +263,11 @@ if (FMT_INSTALL)
   set(pkgconfig ${PROJECT_BINARY_DIR}/fmt.pc)
   set(targets_export_name fmt-targets)
 
-  set_verbose(FMT_LIB_DIR ${CMAKE_INSTALL_LIBDIR} CACHE STRING
+  set_verbose(FMT_LIB_DIR ${CMAKE_INSTALL_PREFIXED_LIBDIR} CACHE STRING
               "Installation directory for libraries, a relative path "
               "that will be joined to ${CMAKE_INSTALL_PREFIX}, or an arbitrary absolute path.")
 
-  set_verbose(FMT_PKGCONFIG_DIR ${CMAKE_INSTALL_LIBDIR}/pkgconfig CACHE PATH
+  set_verbose(FMT_PKGCONFIG_DIR ${CMAKE_INSTALL_PREFIXED_LIBDIR}/pkgconfig CACHE PATH
               "Installation directory for pkgconfig (.pc) files, a relative path "
               "that will be joined to ${CMAKE_INSTALL_PREFIX}, or an arbitrary absolute path.")
 
@@ -306,7 +306,7 @@ if (FMT_INSTALL)
   install(TARGETS ${INSTALL_TARGETS} EXPORT ${targets_export_name}
           LIBRARY DESTINATION ${FMT_LIB_DIR}
           ARCHIVE DESTINATION ${FMT_LIB_DIR}
-          RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR})
+          RUNTIME DESTINATION ${CMAKE_INSTALL_PREFIXED_BINDIR})
 
   install(FILES $<TARGET_PDB_FILE:${INSTALL_TARGETS}>
           DESTINATION ${FMT_LIB_DIR} OPTIONAL)
Only in pytorch-1.13.1/third_party/fmt: CMakeLists.txt.orig
Only in pytorch-1.13.1/third_party/fmt: CMakeLists.txt.rej
diff '--color=auto' -urp pytorch-1.13.1.orig/third_party/ideep/mkl-dnn/CMakeLists.txt pytorch-1.13.1/third_party/ideep/mkl-dnn/CMakeLists.txt
--- pytorch-1.13.1.orig/third_party/ideep/mkl-dnn/CMakeLists.txt	2022-03-31 22:06:33.000000000 -0700
+++ pytorch-1.13.1/third_party/ideep/mkl-dnn/CMakeLists.txt	2024-11-07 20:33:46.763168271 -0800
@@ -210,6 +210,6 @@ add_subdirectory(tests)
 add_subdirectory(examples/c)
 add_subdirectory(examples/cpp)
 
-install(FILES LICENSE DESTINATION ${CMAKE_INSTALL_DATAROOTDIR}/doc/${LIB_NAME})
-install(FILES THIRD-PARTY-PROGRAMS DESTINATION ${CMAKE_INSTALL_DATAROOTDIR}/doc/${LIB_NAME})
-install(FILES README.md DESTINATION ${CMAKE_INSTALL_DATAROOTDIR}/doc/${LIB_NAME})
+install(FILES LICENSE DESTINATION ${CMAKE_INSTALL_PREFIXED_DATAROOTDIR}/doc/${LIB_NAME})
+install(FILES THIRD-PARTY-PROGRAMS DESTINATION ${CMAKE_INSTALL_PREFIXED_DATAROOTDIR}/doc/${LIB_NAME})
+install(FILES README.md DESTINATION ${CMAKE_INSTALL_PREFIXED_DATAROOTDIR}/doc/${LIB_NAME})
Only in pytorch-1.13.1/third_party/ideep/mkl-dnn: CMakeLists.txt.orig
diff '--color=auto' -urp pytorch-1.13.1.orig/third_party/ideep/mkl-dnn/src/CMakeLists.txt pytorch-1.13.1/third_party/ideep/mkl-dnn/src/CMakeLists.txt
--- pytorch-1.13.1.orig/third_party/ideep/mkl-dnn/src/CMakeLists.txt	2022-03-31 22:06:33.000000000 -0700
+++ pytorch-1.13.1/third_party/ideep/mkl-dnn/src/CMakeLists.txt	2024-11-07 20:33:46.775168086 -0800
@@ -105,23 +105,23 @@ target_include_directories(${LIB_NAME}
     PUBLIC
     $<BUILD_INTERFACE:${PROJECT_SOURCE_DIR}/include>
     $<BUILD_INTERFACE:${CMAKE_CURRENT_LIST_DIR}/../include>
-    $<INSTALL_INTERFACE:$<INSTALL_PREFIX>/${CMAKE_INSTALL_INCLUDEDIR}>
+    $<INSTALL_INTERFACE:$<INSTALL_PREFIX>/${CMAKE_INSTALL_PREFIXED_INCLUDEDIR}>
     )
 
 set(DNNL_GRAPH_EXPORT_NAME "${LIB_NAME}-targets")
 
 foreach(header ${HEADERS_ONEAPI})
-    install(FILES ${header} DESTINATION "${CMAKE_INSTALL_INCLUDEDIR}/oneapi/dnnl/")
+    install(FILES ${header} DESTINATION "${CMAKE_INSTALL_PREFIXED_INCLUDEDIR}/oneapi/dnnl/")
 endforeach()
 
-set(DNNL_GRAPH_CONFIG_INSTALL_DIR "${CMAKE_INSTALL_LIBDIR}/cmake/${LIB_NAME}")
+set(DNNL_GRAPH_CONFIG_INSTALL_DIR "${CMAKE_INSTALL_PREFIXED_LIBDIR}/cmake/${LIB_NAME}")
 
 install(TARGETS ${LIB_NAME}
     EXPORT ${DNNL_GRAPH_EXPORT_NAME}
-    RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR}
-    ARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR}
-    LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR}
-    PUBLIC_HEADER DESTINATION "${CMAKE_INSTALL_INCLUDEDIR}"
+    RUNTIME DESTINATION ${CMAKE_INSTALL_PREFIXED_BINDIR}
+    ARCHIVE DESTINATION ${CMAKE_INSTALL_PREFIXED_LIBDIR}
+    LIBRARY DESTINATION ${CMAKE_INSTALL_PREFIXED_LIBDIR}
+    PUBLIC_HEADER DESTINATION "${CMAKE_INSTALL_PREFIXED_INCLUDEDIR}"
     )
 
 configure_package_config_file(../dnnlgraphConfig.cmake.in
diff '--color=auto' -urp pytorch-1.13.1.orig/third_party/kineto/libkineto/third_party/fmt/CMakeLists.txt pytorch-1.13.1/third_party/kineto/libkineto/third_party/fmt/CMakeLists.txt
--- pytorch-1.13.1.orig/third_party/kineto/libkineto/third_party/fmt/CMakeLists.txt	2022-06-19 08:25:58.000000000 -0700
+++ pytorch-1.13.1/third_party/kineto/libkineto/third_party/fmt/CMakeLists.txt	2024-11-07 20:33:46.787167900 -0800
@@ -65,7 +65,7 @@ endif ()
 
 project(FMT CXX)
 include(GNUInstallDirs)
-set_verbose(FMT_INC_DIR ${CMAKE_INSTALL_INCLUDEDIR} CACHE STRING
+set_verbose(FMT_INC_DIR ${CMAKE_INSTALL_PREFIXED_INCLUDEDIR} CACHE STRING
             "Installation directory for include files, a relative path that "
             "will be joined with ${CMAKE_INSTALL_PREFIX} or an absolute path.")
 
@@ -287,7 +287,7 @@ target_include_directories(fmt-header-on
 # Install targets.
 if (FMT_INSTALL)
   include(CMakePackageConfigHelpers)
-  set_verbose(FMT_CMAKE_DIR ${CMAKE_INSTALL_LIBDIR}/cmake/fmt CACHE STRING
+  set_verbose(FMT_CMAKE_DIR ${CMAKE_INSTALL_PREFIXED_LIBDIR}/cmake/fmt CACHE STRING
               "Installation directory for cmake files, a relative path that "
               "will be joined with ${CMAKE_INSTALL_PREFIX} or an absolute "
               "path.")
@@ -296,11 +296,11 @@ if (FMT_INSTALL)
   set(pkgconfig ${PROJECT_BINARY_DIR}/fmt.pc)
   set(targets_export_name fmt-targets)
 
-  set_verbose(FMT_LIB_DIR ${CMAKE_INSTALL_LIBDIR} CACHE STRING
+  set_verbose(FMT_LIB_DIR ${CMAKE_INSTALL_PREFIXED_LIBDIR} CACHE STRING
               "Installation directory for libraries, a relative path that "
               "will be joined to ${CMAKE_INSTALL_PREFIX} or an absolute path.")
 
-  set_verbose(FMT_PKGCONFIG_DIR ${CMAKE_INSTALL_LIBDIR}/pkgconfig CACHE PATH
+  set_verbose(FMT_PKGCONFIG_DIR ${CMAKE_INSTALL_PREFIXED_LIBDIR}/pkgconfig CACHE PATH
               "Installation directory for pkgconfig (.pc) files, a relative "
               "path that will be joined with ${CMAKE_INSTALL_PREFIX} or an "
               "absolute path.")
@@ -331,7 +331,7 @@ if (FMT_INSTALL)
           ARCHIVE DESTINATION ${FMT_LIB_DIR}
           PUBLIC_HEADER DESTINATION "${FMT_INC_DIR}/fmt"
           FRAMEWORK DESTINATION "."
-          RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR})
+          RUNTIME DESTINATION ${CMAKE_INSTALL_PREFIXED_BINDIR})
 
   # Use a namespace because CMake provides better diagnostics for namespaced
   # imported targets.
Only in pytorch-1.13.1/third_party/kineto/libkineto/third_party/fmt: CMakeLists.txt.orig
diff '--color=auto' -urp pytorch-1.13.1.orig/third_party/onnx/third_party/pybind11/CMakeLists.txt pytorch-1.13.1/third_party/onnx/third_party/pybind11/CMakeLists.txt
--- pytorch-1.13.1.orig/third_party/onnx/third_party/pybind11/CMakeLists.txt	2022-02-02 14:34:15.000000000 -0800
+++ pytorch-1.13.1/third_party/onnx/third_party/pybind11/CMakeLists.txt	2024-11-07 20:33:46.787167900 -0800
@@ -184,7 +184,7 @@ if(NOT TARGET pybind11_headers)
 
   target_include_directories(
     pybind11_headers ${pybind11_system} INTERFACE $<BUILD_INTERFACE:${pybind11_INCLUDE_DIR}>
-                                                  $<INSTALL_INTERFACE:${CMAKE_INSTALL_INCLUDEDIR}>)
+                                                  $<INSTALL_INTERFACE:${CMAKE_INSTALL_PREFIXED_INCLUDEDIR}>)
 
   target_compile_features(pybind11_headers INTERFACE cxx_inheriting_constructors cxx_user_literals
                                                      cxx_right_angle_brackets)
@@ -201,22 +201,19 @@ include("${CMAKE_CURRENT_SOURCE_DIR}/too
 
 # Relative directory setting
 if(USE_PYTHON_INCLUDE_DIR AND DEFINED Python_INCLUDE_DIRS)
-  file(RELATIVE_PATH CMAKE_INSTALL_INCLUDEDIR ${CMAKE_INSTALL_PREFIX} ${Python_INCLUDE_DIRS})
+  file(RELATIVE_PATH CMAKE_INSTALL_INCLUDEDIR ${CMAKE_INSTALL_PREFIXED_INCLUDEDIR} ${Python_INCLUDE_DIRS})
 elseif(USE_PYTHON_INCLUDE_DIR AND DEFINED PYTHON_INCLUDE_DIR)
-  file(RELATIVE_PATH CMAKE_INSTALL_INCLUDEDIR ${CMAKE_INSTALL_PREFIX} ${PYTHON_INCLUDE_DIRS})
+  file(RELATIVE_PATH CMAKE_INSTALL_INCLUDEDIR ${CMAKE_INSTALL_PREFIXED_INCLUDEDIR} ${PYTHON_INCLUDE_DIRS})
 endif()
 
 if(PYBIND11_INSTALL)
-  install(DIRECTORY ${pybind11_INCLUDE_DIR}/pybind11 DESTINATION ${CMAKE_INSTALL_INCLUDEDIR})
+  install(DIRECTORY ${pybind11_INCLUDE_DIR}/pybind11
+    DESTINATION ${CMAKE_INSTALL_PREFIXED_INCLUDEDIR})
   set(PYBIND11_CMAKECONFIG_INSTALL_DIR
-      "${CMAKE_INSTALL_DATAROOTDIR}/cmake/${PROJECT_NAME}"
+      "${CMAKE_INSTALL_PREFIXED_DATAROOTDIR}/cmake/${PROJECT_NAME}"
       CACHE STRING "install path for pybind11Config.cmake")
 
-  if(IS_ABSOLUTE "${CMAKE_INSTALL_INCLUDEDIR}")
-    set(pybind11_INCLUDEDIR "${CMAKE_INSTALL_FULL_INCLUDEDIR}")
-  else()
-    set(pybind11_INCLUDEDIR "\$\{PACKAGE_PREFIX_DIR\}/${CMAKE_INSTALL_INCLUDEDIR}")
-  endif()
+  set(pybind11_INCLUDEDIR "${CMAKE_INSTALL_PREFIXED_INCLUDEDIR}")
 
   configure_package_config_file(
     tools/${PROJECT_NAME}Config.cmake.in "${CMAKE_CURRENT_BINARY_DIR}/${PROJECT_NAME}Config.cmake"
@@ -255,7 +252,10 @@ if(PYBIND11_INSTALL)
     set(PYBIND11_EXPORT_NAME "${PROJECT_NAME}Targets")
   endif()
 
-  install(TARGETS pybind11_headers EXPORT "${PYBIND11_EXPORT_NAME}")
+  install(TARGETS pybind11_headers
+    PUBLIC_HEADER
+    EXPORT "${PYBIND11_EXPORT_NAME}"
+    DESTINATION ${CMAKE_INSTALL_PREFIXED_INCLUDEDIR})
 
   install(
     EXPORT "${PYBIND11_EXPORT_NAME}"
diff '--color=auto' -urp pytorch-1.13.1.orig/third_party/protobuf/cmake/install.cmake pytorch-1.13.1/third_party/protobuf/cmake/install.cmake
--- pytorch-1.13.1.orig/third_party/protobuf/cmake/install.cmake	2020-10-08 11:17:30.000000000 -0700
+++ pytorch-1.13.1/third_party/protobuf/cmake/install.cmake	2024-11-07 20:33:46.803167655 -0800
@@ -14,7 +14,7 @@ foreach(_library ${_protobuf_libraries})
   set_property(TARGET ${_library}
     PROPERTY INTERFACE_INCLUDE_DIRECTORIES
     $<BUILD_INTERFACE:${protobuf_source_dir}/src>
-    $<INSTALL_INTERFACE:${CMAKE_INSTALL_INCLUDEDIR}>)
+    $<INSTALL_INTERFACE:${CMAKE_INSTALL_PREFIXED_INCLUDEDIR}>)
   if (UNIX AND NOT APPLE)
     set_property(TARGET ${_library}
       PROPERTY INSTALL_RPATH "$ORIGIN")
@@ -23,24 +23,24 @@ foreach(_library ${_protobuf_libraries})
       PROPERTY INSTALL_RPATH "@loader_path")
   endif()
   install(TARGETS ${_library} EXPORT protobuf-targets
-    RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR} COMPONENT ${_library}
-    LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR} COMPONENT ${_library}
-    ARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR} COMPONENT ${_library})
+    RUNTIME DESTINATION ${CMAKE_INSTALL_PREFIXED_BINDIR} COMPONENT ${_library}
+    LIBRARY DESTINATION ${CMAKE_INSTALL_PREFIXED_LIBDIR} COMPONENT ${_library}
+    ARCHIVE DESTINATION ${CMAKE_INSTALL_PREFIXED_LIBDIR} COMPONENT ${_library})
 endforeach()
 
 if (protobuf_BUILD_PROTOC_BINARIES)
   install(TARGETS protoc EXPORT protobuf-targets
-    RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR} COMPONENT protoc)
+    RUNTIME DESTINATION ${CMAKE_INSTALL_PREFIXED_BINDIR} COMPONENT protoc)
   if (UNIX AND NOT APPLE)
     set_property(TARGET protoc
-      PROPERTY INSTALL_RPATH "$ORIGIN/../${CMAKE_INSTALL_LIBDIR}")
+      PROPERTY INSTALL_RPATH "$ORIGIN/../${CMAKE_INSTALL_PREFIXED_LIBDIR}")
   elseif (APPLE)
     set_property(TARGET protoc
       PROPERTY INSTALL_RPATH "@loader_path/../lib")
   endif()
 endif (protobuf_BUILD_PROTOC_BINARIES)
 
-install(FILES ${CMAKE_CURRENT_BINARY_DIR}/protobuf.pc ${CMAKE_CURRENT_BINARY_DIR}/protobuf-lite.pc DESTINATION "${CMAKE_INSTALL_LIBDIR}/pkgconfig")
+install(FILES ${CMAKE_CURRENT_BINARY_DIR}/protobuf.pc ${CMAKE_CURRENT_BINARY_DIR}/protobuf-lite.pc DESTINATION "${CMAKE_INSTALL_PREFIXED_LIBDIR}/pkgconfig")
 
 file(STRINGS extract_includes.bat.in _extract_strings
   REGEX "^copy")
@@ -50,7 +50,7 @@ foreach(_extract_string ${_extract_strin
   string(REPLACE "\\" "/" _header ${_header})
   get_filename_component(_extract_from "${protobuf_SOURCE_DIR}/../src/${_header}" ABSOLUTE)
   get_filename_component(_extract_name ${_header} NAME)
-  get_filename_component(_extract_to "${CMAKE_INSTALL_INCLUDEDIR}/${_header}" PATH)
+  get_filename_component(_extract_to "${CMAKE_INSTALL_PREFIXED_INCLUDEDIR}/${_header}" PATH)
   if(EXISTS "${_extract_from}")
     install(FILES "${_extract_from}"
       DESTINATION "${_extract_to}"
@@ -90,7 +90,7 @@ foreach(_file ${nobase_dist_proto_DATA})
   get_filename_component(_file_path ${_file} PATH)
   if(EXISTS "${_file_from}")
     install(FILES "${_file_from}"
-      DESTINATION "${CMAKE_INSTALL_INCLUDEDIR}/${_file_path}"
+      DESTINATION "${CMAKE_INSTALL_PREFIXED_INCLUDEDIR}/${_file_path}"
       COMPONENT protobuf-protos
       RENAME "${_file_name}")
   else()
@@ -103,7 +103,7 @@ endforeach()
 # Install configuration
 set(_cmakedir_desc "Directory relative to CMAKE_INSTALL to install the cmake configuration files")
 if(NOT MSVC)
-  set(CMAKE_INSTALL_CMAKEDIR "${CMAKE_INSTALL_LIBDIR}/cmake/protobuf" CACHE STRING "${_cmakedir_desc}")
+  set(CMAKE_INSTALL_CMAKEDIR "${CMAKE_INSTALL_PREFIXED_LIBDIR}/cmake/protobuf" CACHE STRING "${_cmakedir_desc}")
 else()
   set(CMAKE_INSTALL_CMAKEDIR "cmake" CACHE STRING "${_cmakedir_desc}")
 endif()
diff '--color=auto' -urp pytorch-1.13.1.orig/third_party/protobuf/third_party/googletest/googletest/CMakeLists.txt pytorch-1.13.1/third_party/protobuf/third_party/googletest/googletest/CMakeLists.txt
--- pytorch-1.13.1.orig/third_party/protobuf/third_party/googletest/googletest/CMakeLists.txt	2019-01-25 08:01:36.000000000 -0800
+++ pytorch-1.13.1/third_party/protobuf/third_party/googletest/googletest/CMakeLists.txt	2024-11-07 20:33:46.815167469 -0800
@@ -91,7 +91,7 @@ if (INSTALL_GTEST)
   set(cmake_package_name GTest)
   set(targets_export_name ${cmake_package_name}Targets CACHE INTERNAL "")
   set(generated_dir "${CMAKE_CURRENT_BINARY_DIR}/generated" CACHE INTERNAL "")
-  set(cmake_files_install_dir "${CMAKE_INSTALL_LIBDIR}/cmake/${cmake_package_name}")
+  set(cmake_files_install_dir "${CMAKE_INSTALL_PREFIXED_LIBDIR}/cmake/${cmake_package_name}")
   set(version_file "${generated_dir}/${cmake_package_name}ConfigVersion.cmake")
   write_basic_package_version_file(${version_file} COMPATIBILITY AnyNewerVersion)
   install(EXPORT ${targets_export_name}
diff '--color=auto' -urp pytorch-1.13.1.orig/third_party/protobuf/third_party/googletest/googletest/cmake/internal_utils.cmake pytorch-1.13.1/third_party/protobuf/third_party/googletest/googletest/cmake/internal_utils.cmake
--- pytorch-1.13.1.orig/third_party/protobuf/third_party/googletest/googletest/cmake/internal_utils.cmake	2019-01-25 08:01:36.000000000 -0800
+++ pytorch-1.13.1/third_party/protobuf/third_party/googletest/googletest/cmake/internal_utils.cmake	2024-11-07 20:33:46.819167408 -0800
@@ -315,13 +315,13 @@ endfunction()
 function(install_project)
   if(INSTALL_GTEST)
     install(DIRECTORY "${PROJECT_SOURCE_DIR}/include/"
-      DESTINATION "${CMAKE_INSTALL_INCLUDEDIR}")
+      DESTINATION "${CMAKE_INSTALL_PREFIXED_INCLUDEDIR}")
     # Install the project targets.
     install(TARGETS ${ARGN}
       EXPORT ${targets_export_name}
-      RUNTIME DESTINATION "${CMAKE_INSTALL_BINDIR}"
-      ARCHIVE DESTINATION "${CMAKE_INSTALL_LIBDIR}"
-      LIBRARY DESTINATION "${CMAKE_INSTALL_LIBDIR}")
+      RUNTIME DESTINATION "${CMAKE_INSTALL_PREFIXED_BINDIR}"
+      ARCHIVE DESTINATION "${CMAKE_INSTALL_PREFIXED_LIBDIR}"
+      LIBRARY DESTINATION "${CMAKE_INSTALL_PREFIXED_LIBDIR}")
     if(CMAKE_CXX_COMPILER_ID MATCHES "MSVC")
       # Install PDBs
       foreach(t ${ARGN})
@@ -330,7 +330,7 @@ function(install_project)
         get_target_property(t_pdb_output_directory ${t} PDB_OUTPUT_DIRECTORY)
         install(FILES
           "${t_pdb_output_directory}/\${CMAKE_INSTALL_CONFIG_NAME}/$<$<CONFIG:Debug>:${t_pdb_name_debug}>$<$<NOT:$<CONFIG:Debug>>:${t_pdb_name}>.pdb"
-          DESTINATION ${CMAKE_INSTALL_LIBDIR}
+          DESTINATION ${CMAKE_INSTALL_PREFIXED_LIBDIR}
           OPTIONAL)
       endforeach()
     endif()
@@ -340,7 +340,7 @@ function(install_project)
       configure_file("${PROJECT_SOURCE_DIR}/cmake/${t}.pc.in"
         "${configured_pc}" @ONLY)
       install(FILES "${configured_pc}"
-        DESTINATION "${CMAKE_INSTALL_LIBDIR}/pkgconfig")
+        DESTINATION "${CMAKE_INSTALL_PREFIXED_LIBDIR}/pkgconfig")
     endforeach()
   endif()
 endfunction()
diff '--color=auto' -urp pytorch-1.13.1.orig/third_party/psimd/CMakeLists.txt pytorch-1.13.1/third_party/psimd/CMakeLists.txt
--- pytorch-1.13.1.orig/third_party/psimd/CMakeLists.txt	2020-05-17 03:58:41.000000000 -0700
+++ pytorch-1.13.1/third_party/psimd/CMakeLists.txt	2024-11-07 20:33:46.819167408 -0800
@@ -14,4 +14,4 @@ ELSE()
 ENDIF()
 TARGET_INCLUDE_DIRECTORIES(psimd INTERFACE include)
 
-INSTALL(FILES include/psimd.h DESTINATION ${CMAKE_INSTALL_INCLUDEDIR})
+INSTALL(FILES include/psimd.h DESTINATION ${CMAKE_INSTALL_PREFIXED_INCLUDEDIR})
diff '--color=auto' -urp pytorch-1.13.1.orig/third_party/pybind11/CMakeLists.txt pytorch-1.13.1/third_party/pybind11/CMakeLists.txt
--- pytorch-1.13.1.orig/third_party/pybind11/CMakeLists.txt	2022-07-15 13:47:47.000000000 -0700
+++ pytorch-1.13.1/third_party/pybind11/CMakeLists.txt	2024-11-07 20:33:46.827167285 -0800
@@ -184,7 +184,7 @@ if(NOT TARGET pybind11_headers)
 
   target_include_directories(
     pybind11_headers ${pybind11_system} INTERFACE $<BUILD_INTERFACE:${pybind11_INCLUDE_DIR}>
-                                                  $<INSTALL_INTERFACE:${CMAKE_INSTALL_INCLUDEDIR}>)
+                                                  $<INSTALL_INTERFACE:${CMAKE_INSTALL_PREFIXED_INCLUDEDIR}>)
 
   target_compile_features(pybind11_headers INTERFACE cxx_inheriting_constructors cxx_user_literals
                                                      cxx_right_angle_brackets)
@@ -201,22 +201,19 @@ include("${CMAKE_CURRENT_SOURCE_DIR}/too
 
 # Relative directory setting
 if(USE_PYTHON_INCLUDE_DIR AND DEFINED Python_INCLUDE_DIRS)
-  file(RELATIVE_PATH CMAKE_INSTALL_INCLUDEDIR ${CMAKE_INSTALL_PREFIX} ${Python_INCLUDE_DIRS})
+  file(RELATIVE_PATH CMAKE_INSTALL_INCLUDEDIR ${CMAKE_INSTALL_PREFIXED_INCLUDEDIR} ${Python_INCLUDE_DIRS})
 elseif(USE_PYTHON_INCLUDE_DIR AND DEFINED PYTHON_INCLUDE_DIR)
-  file(RELATIVE_PATH CMAKE_INSTALL_INCLUDEDIR ${CMAKE_INSTALL_PREFIX} ${PYTHON_INCLUDE_DIRS})
+  file(RELATIVE_PATH CMAKE_INSTALL_INCLUDEDIR ${CMAKE_INSTALL_PREFIXED_INCLUDEDIR} ${PYTHON_INCLUDE_DIRS})
 endif()
 
 if(PYBIND11_INSTALL)
-  install(DIRECTORY ${pybind11_INCLUDE_DIR}/pybind11 DESTINATION ${CMAKE_INSTALL_INCLUDEDIR})
+  install(DIRECTORY ${pybind11_INCLUDE_DIR}/pybind11
+    DESTINATION ${CMAKE_INSTALL_PREFIXED_INCLUDEDIR})
   set(PYBIND11_CMAKECONFIG_INSTALL_DIR
-      "${CMAKE_INSTALL_DATAROOTDIR}/cmake/${PROJECT_NAME}"
+      "${CMAKE_INSTALL_PREFIXED_DATAROOTDIR}/cmake/${PROJECT_NAME}"
       CACHE STRING "install path for pybind11Config.cmake")
 
-  if(IS_ABSOLUTE "${CMAKE_INSTALL_INCLUDEDIR}")
-    set(pybind11_INCLUDEDIR "${CMAKE_INSTALL_FULL_INCLUDEDIR}")
-  else()
-    set(pybind11_INCLUDEDIR "\$\{PACKAGE_PREFIX_DIR\}/${CMAKE_INSTALL_INCLUDEDIR}")
-  endif()
+  set(pybind11_INCLUDEDIR "${CMAKE_INSTALL_PREFIXED_INCLUDEDIR}")
 
   configure_package_config_file(
     tools/${PROJECT_NAME}Config.cmake.in "${CMAKE_CURRENT_BINARY_DIR}/${PROJECT_NAME}Config.cmake"
@@ -255,7 +252,10 @@ if(PYBIND11_INSTALL)
     set(PYBIND11_EXPORT_NAME "${PROJECT_NAME}Targets")
   endif()
 
-  install(TARGETS pybind11_headers EXPORT "${PYBIND11_EXPORT_NAME}")
+  install(TARGETS pybind11_headers
+    PUBLIC_HEADER
+    EXPORT "${PYBIND11_EXPORT_NAME}"
+    DESTINATION ${CMAKE_INSTALL_PREFIXED_INCLUDEDIR})
 
   install(
     EXPORT "${PYBIND11_EXPORT_NAME}"
Only in pytorch-1.13.1/third_party/pybind11: CMakeLists.txt.orig
Only in pytorch-1.13.1/third_party/pybind11: CMakeLists.txt.rej
diff '--color=auto' -urp pytorch-1.13.1.orig/third_party/sleef/src/dft/CMakeLists.txt pytorch-1.13.1/third_party/sleef/src/dft/CMakeLists.txt
--- pytorch-1.13.1.orig/third_party/sleef/src/dft/CMakeLists.txt	2020-12-21 16:12:09.000000000 -0800
+++ pytorch-1.13.1/third_party/sleef/src/dft/CMakeLists.txt	2024-11-07 20:33:46.839167100 -0800
@@ -381,8 +381,8 @@ set_target_properties(${TARGET_LIBDFT} P
 
 # Install
 install(TARGETS ${TARGET_LIBDFT}
-        PUBLIC_HEADER DESTINATION "${CMAKE_INSTALL_INCLUDEDIR}"
-        LIBRARY DESTINATION "${CMAKE_INSTALL_LIBDIR}"
-        ARCHIVE DESTINATION "${CMAKE_INSTALL_LIBDIR}"
-        RUNTIME DESTINATION bin
+        PUBLIC_HEADER DESTINATION "${CMAKE_INSTALL_PREFIXED_INCLUDEDIR}"
+        LIBRARY DESTINATION "${CMAKE_INSTALL_PREFIXED_LIBDIR}"
+        ARCHIVE DESTINATION "${CMAKE_INSTALL_PREFIXED_LIBDIR}"
+        RUNTIME DESTINATION "${CMAKE_INSTALL_PREFIXED_BINDIR}"
 )
diff '--color=auto' -urp pytorch-1.13.1.orig/third_party/sleef/src/libm/CMakeLists.txt pytorch-1.13.1/third_party/sleef/src/libm/CMakeLists.txt
--- pytorch-1.13.1.orig/third_party/sleef/src/libm/CMakeLists.txt	2020-12-21 16:12:09.000000000 -0800
+++ pytorch-1.13.1/third_party/sleef/src/libm/CMakeLists.txt	2024-11-07 20:33:46.851166915 -0800
@@ -942,7 +942,7 @@ if(CLANG_EXE_PATH AND SLEEF_ENABLE_LLVM_
   )
   add_dependencies(${TARGET_LLVM_BITCODE} ${TARGET_HEADERS})
 
-  install(FILES ${LLVM_BITCODE_OUTPUTS} DESTINATION "${CMAKE_INSTALL_LIBDIR}")
+  install(FILES ${LLVM_BITCODE_OUTPUTS} DESTINATION "${CMAKE_INSTALL_PREFIXED_LIBDIR}")
 endif()
 
 # --------------------------------------------------------------------
@@ -950,19 +950,19 @@ endif()
 # --------------------------------------------------------------------
 # Install libsleef and sleef.h
 install(TARGETS ${TARGET_LIBSLEEF}
-        PUBLIC_HEADER DESTINATION "${CMAKE_INSTALL_INCLUDEDIR}"
-        LIBRARY DESTINATION "${CMAKE_INSTALL_LIBDIR}"
-        ARCHIVE DESTINATION "${CMAKE_INSTALL_LIBDIR}"
-        RUNTIME DESTINATION bin
+        PUBLIC_HEADER DESTINATION "${CMAKE_INSTALL_PREFIXED_INCLUDEDIR}"
+        LIBRARY DESTINATION "${CMAKE_INSTALL_PREFIXED_LIBDIR}"
+        ARCHIVE DESTINATION "${CMAKE_INSTALL_PREFIXED_LIBDIR}"
+        RUNTIME DESTINATION "${CMAKE_INSTALL_PREFIXED_BINDIR}"
 )
 configure_file("sleef.pc.in" "${CMAKE_CURRENT_BINARY_DIR}/sleef.pc" @ONLY)
 install(FILES "${CMAKE_CURRENT_BINARY_DIR}/sleef.pc"
-        DESTINATION "${CMAKE_INSTALL_LIBDIR}/pkgconfig")
+        DESTINATION "${CMAKE_INSTALL_PREFIXED_LIBDIR}/pkgconfig")
 
 if(ENABLE_GNUABI)
   install(TARGETS ${TARGET_LIBSLEEFGNUABI}
-          LIBRARY DESTINATION "${CMAKE_INSTALL_LIBDIR}"
-          ARCHIVE DESTINATION "${CMAKE_INSTALL_LIBDIR}"
-          RUNTIME DESTINATION bin
+          LIBRARY DESTINATION "${CMAKE_INSTALL_PREFIXED_LIBDIR}"
+          ARCHIVE DESTINATION "${CMAKE_INSTALL_PREFIXED_LIBDIR}"
+          RUNTIME DESTINATION "${CMAKE_INSTALL_PREFIXED_BINDIR}"
           )
 endif()
diff '--color=auto' -urp pytorch-1.13.1.orig/third_party/sleef/src/quad/CMakeLists.txt pytorch-1.13.1/third_party/sleef/src/quad/CMakeLists.txt
--- pytorch-1.13.1.orig/third_party/sleef/src/quad/CMakeLists.txt	2020-12-21 16:12:09.000000000 -0800
+++ pytorch-1.13.1/third_party/sleef/src/quad/CMakeLists.txt	2024-11-07 20:33:46.851166915 -0800
@@ -328,8 +328,8 @@ endif(BUILD_INLINE_HEADERS)
 # --------------------------------------------------------------------
 # Install libsleef and sleef.h
 install(TARGETS sleefquad
-        PUBLIC_HEADER DESTINATION "${CMAKE_INSTALL_INCLUDEDIR}"
-        LIBRARY DESTINATION "${CMAKE_INSTALL_LIBDIR}"
-        ARCHIVE DESTINATION "${CMAKE_INSTALL_LIBDIR}"
-        RUNTIME DESTINATION bin
+        PUBLIC_HEADER DESTINATION "${CMAKE_INSTALL_PREFIXED_INCLUDEDIR}"
+        LIBRARY DESTINATION "${CMAKE_INSTALL_PREFIXED_LIBDIR}"
+        ARCHIVE DESTINATION "${CMAKE_INSTALL_PREFIXED_LIBDIR}"
+        RUNTIME DESTINATION "${CMAKE_INSTALL_PREFIXED_BINDIR}"
 )
diff '--color=auto' -urp pytorch-1.13.1.orig/third_party/tensorpipe/third_party/pybind11/CMakeLists.txt pytorch-1.13.1/third_party/tensorpipe/third_party/pybind11/CMakeLists.txt
--- pytorch-1.13.1.orig/third_party/tensorpipe/third_party/pybind11/CMakeLists.txt	2018-11-11 12:10:09.000000000 -0800
+++ pytorch-1.13.1/third_party/tensorpipe/third_party/pybind11/CMakeLists.txt	2024-11-07 20:33:46.859166792 -0800
@@ -90,7 +90,7 @@ message(STATUS "pybind11 v${${PROJECT_NA
 
 option (USE_PYTHON_INCLUDE_DIR "Install pybind11 headers in Python include directory instead of default installation prefix" OFF)
 if (USE_PYTHON_INCLUDE_DIR)
-    file(RELATIVE_PATH CMAKE_INSTALL_INCLUDEDIR ${CMAKE_INSTALL_PREFIX} ${PYTHON_INCLUDE_DIRS})
+    file(RELATIVE_PATH CMAKE_INSTALL_INCLUDEDIR ${CMAKE_INSTALL_PREFIXED_INCLUDEDIR} ${PYTHON_INCLUDE_DIRS})
 endif()
 
 if(NOT (CMAKE_VERSION VERSION_LESS 3.0))  # CMake >= 3.0
@@ -99,7 +99,7 @@ if(NOT (CMAKE_VERSION VERSION_LESS 3.0))
   add_library(pybind11::pybind11 ALIAS pybind11)  # to match exported target
   target_include_directories(pybind11 INTERFACE $<BUILD_INTERFACE:${PYBIND11_INCLUDE_DIR}>
                                                 $<BUILD_INTERFACE:${PYTHON_INCLUDE_DIRS}>
-                                                $<INSTALL_INTERFACE:${CMAKE_INSTALL_INCLUDEDIR}>)
+                                                $<INSTALL_INTERFACE:${CMAKE_INSTALL_PREFIXED_INCLUDEDIR}>)
   target_compile_options(pybind11 INTERFACE $<BUILD_INTERFACE:${PYBIND11_CPP_STANDARD}>)
 
   add_library(module INTERFACE)
@@ -120,7 +120,8 @@ if(NOT (CMAKE_VERSION VERSION_LESS 3.0))
 endif()
 
 if (PYBIND11_INSTALL)
-  install(DIRECTORY ${PYBIND11_INCLUDE_DIR}/pybind11 DESTINATION ${CMAKE_INSTALL_INCLUDEDIR})
+  install(DIRECTORY ${PYBIND11_INCLUDE_DIR}/pybind11
+    DESTINATION ${CMAKE_INSTALL_PREFIXED_INCLUDEDIR})
   # GNUInstallDirs "DATADIR" wrong here; CMake search path wants "share".
   set(PYBIND11_CMAKECONFIG_INSTALL_DIR "share/cmake/${PROJECT_NAME}" CACHE STRING "install path for pybind11Config.cmake")
 
