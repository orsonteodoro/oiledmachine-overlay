diff -urp pytorch-2.0.1.orig/cmake/public/LoadHIP.cmake pytorch-2.0.1/cmake/public/LoadHIP.cmake
--- pytorch-2.0.1.orig/cmake/public/LoadHIP.cmake	2023-04-24 06:27:27.000000000 -0700
+++ pytorch-2.0.1/cmake/public/LoadHIP.cmake	2023-08-16 10:35:57.557576761 -0700
@@ -232,37 +232,37 @@ if(HIP_FOUND)
 
   # As of ROCm 5.1.x, all *.cmake files are under /opt/rocm/lib/cmake/<package>
   if(ROCM_VERSION_DEV VERSION_GREATER_EQUAL "5.1.0")
-    set(hip_DIR ${ROCM_PATH}/lib/cmake/hip)
-    set(hsa-runtime64_DIR ${ROCM_PATH}/lib/cmake/hsa-runtime64)
-    set(AMDDeviceLibs_DIR ${ROCM_PATH}/lib/cmake/AMDDeviceLibs)
-    set(amd_comgr_DIR ${ROCM_PATH}/lib/cmake/amd_comgr)
-    set(rocrand_DIR ${ROCM_PATH}/lib/cmake/rocrand)
-    set(hiprand_DIR ${ROCM_PATH}/lib/cmake/hiprand)
-    set(rocblas_DIR ${ROCM_PATH}/lib/cmake/rocblas)
-    set(miopen_DIR ${ROCM_PATH}/lib/cmake/miopen)
-    set(rocfft_DIR ${ROCM_PATH}/lib/cmake/rocfft)
-    set(hipfft_DIR ${ROCM_PATH}/lib/cmake/hipfft)
-    set(hipsparse_DIR ${ROCM_PATH}/lib/cmake/hipsparse)
-    set(rccl_DIR ${ROCM_PATH}/lib/cmake/rccl)
-    set(rocprim_DIR ${ROCM_PATH}/lib/cmake/rocprim)
-    set(hipcub_DIR ${ROCM_PATH}/lib/cmake/hipcub)
-    set(rocthrust_DIR ${ROCM_PATH}/lib/cmake/rocthrust)
+    set(hip_DIR ${ROCM_PATH}/lib64/cmake/hip)
+    set(hsa-runtime64_DIR ${ROCM_PATH}/lib64/cmake/hsa-runtime64)
+    set(AMDDeviceLibs_DIR ${ROCM_PATH}/lib64/cmake/AMDDeviceLibs)
+    set(amd_comgr_DIR ${ROCM_PATH}/lib64/cmake/amd_comgr)
+    set(rocrand_DIR ${ROCM_PATH}/lib64/cmake/rocrand)
+    set(hiprand_DIR ${ROCM_PATH}/lib64/cmake/hiprand)
+    set(rocblas_DIR ${ROCM_PATH}/lib64/cmake/rocblas)
+    set(miopen_DIR ${ROCM_PATH}/lib64/cmake/miopen)
+    set(rocfft_DIR ${ROCM_PATH}/lib64/cmake/rocfft)
+    set(hipfft_DIR ${ROCM_PATH}/lib64/cmake/hipfft)
+    set(hipsparse_DIR ${ROCM_PATH}/lib64/cmake/hipsparse)
+    set(rccl_DIR ${ROCM_PATH}/lib64/cmake/rccl)
+    set(rocprim_DIR ${ROCM_PATH}/lib64/cmake/rocprim)
+    set(hipcub_DIR ${ROCM_PATH}/lib64/cmake/hipcub)
+    set(rocthrust_DIR ${ROCM_PATH}/lib64/cmake/rocthrust)
   else()
-    set(hip_DIR ${HIP_PATH}/lib/cmake/hip)
-    set(hsa-runtime64_DIR ${ROCM_PATH}/lib/cmake/hsa-runtime64)
-    set(AMDDeviceLibs_DIR ${ROCM_PATH}/lib/cmake/AMDDeviceLibs)
-    set(amd_comgr_DIR ${ROCM_PATH}/lib/cmake/amd_comgr)
-    set(rocrand_DIR ${ROCRAND_PATH}/lib/cmake/rocrand)
-    set(hiprand_DIR ${HIPRAND_PATH}/lib/cmake/hiprand)
-    set(rocblas_DIR ${ROCBLAS_PATH}/lib/cmake/rocblas)
-    set(miopen_DIR ${MIOPEN_PATH}/lib/cmake/miopen)
-    set(rocfft_DIR ${ROCFFT_PATH}/lib/cmake/rocfft)
-    set(hipfft_DIR ${HIPFFT_PATH}/lib/cmake/hipfft)
-    set(hipsparse_DIR ${HIPSPARSE_PATH}/lib/cmake/hipsparse)
-    set(rccl_DIR ${RCCL_PATH}/lib/cmake/rccl)
-    set(rocprim_DIR ${ROCPRIM_PATH}/lib/cmake/rocprim)
-    set(hipcub_DIR ${HIPCUB_PATH}/lib/cmake/hipcub)
-    set(rocthrust_DIR ${ROCTHRUST_PATH}/lib/cmake/rocthrust)
+    set(hip_DIR ${HIP_PATH}/lib64/cmake/hip)
+    set(hsa-runtime64_DIR ${ROCM_PATH}/lib64/cmake/hsa-runtime64)
+    set(AMDDeviceLibs_DIR ${ROCM_PATH}/lib64/cmake/AMDDeviceLibs)
+    set(amd_comgr_DIR ${ROCM_PATH}/lib64/cmake/amd_comgr)
+    set(rocrand_DIR ${ROCRAND_PATH}/lib64/cmake/rocrand)
+    set(hiprand_DIR ${HIPRAND_PATH}/lib64/cmake/hiprand)
+    set(rocblas_DIR ${ROCBLAS_PATH}/lib64/cmake/rocblas)
+    set(miopen_DIR ${MIOPEN_PATH}/lib64/cmake/miopen)
+    set(rocfft_DIR ${ROCFFT_PATH}/lib64/cmake/rocfft)
+    set(hipfft_DIR ${HIPFFT_PATH}/lib64/cmake/hipfft)
+    set(hipsparse_DIR ${HIPSPARSE_PATH}/lib64/cmake/hipsparse)
+    set(rccl_DIR ${RCCL_PATH}/lib64/cmake/rccl)
+    set(rocprim_DIR ${ROCPRIM_PATH}/lib64/cmake/rocprim)
+    set(hipcub_DIR ${HIPCUB_PATH}/lib64/cmake/hipcub)
+    set(rocthrust_DIR ${ROCTHRUST_PATH}/lib64/cmake/rocthrust)
   endif()
 
   find_package_and_print_version(hip REQUIRED)
@@ -294,24 +294,24 @@ if(HIP_FOUND)
   # recognizable by hcc, but not gcc and clang. Right now in our
   # setup, hcc is only used for linking, but it should be used to
   # compile the *_hip.cc files as well.
-  find_library(PYTORCH_HIP_HCC_LIBRARIES ${hip_library_name} HINTS ${HIP_PATH}/lib)
+  find_library(PYTORCH_HIP_HCC_LIBRARIES ${hip_library_name} HINTS ${HIP_PATH}/lib64)
   # TODO: miopen_LIBRARIES should return fullpath to the library file,
   # however currently it's just the lib name
   if(TARGET ${miopen_LIBRARIES})
     set(PYTORCH_MIOPEN_LIBRARIES ${miopen_LIBRARIES})
   else()
-    find_library(PYTORCH_MIOPEN_LIBRARIES ${miopen_LIBRARIES} HINTS ${MIOPEN_PATH}/lib)
+    find_library(PYTORCH_MIOPEN_LIBRARIES ${miopen_LIBRARIES} HINTS ${MIOPEN_PATH}/lib64)
   endif()
   # TODO: rccl_LIBRARIES should return fullpath to the library file,
   # however currently it's just the lib name
   if(TARGET ${rccl_LIBRARIES})
     set(PYTORCH_RCCL_LIBRARIES ${rccl_LIBRARIES})
   else()
-    find_library(PYTORCH_RCCL_LIBRARIES ${rccl_LIBRARIES} HINTS ${RCCL_PATH}/lib)
+    find_library(PYTORCH_RCCL_LIBRARIES ${rccl_LIBRARIES} HINTS ${RCCL_PATH}/lib64)
   endif()
   # hiprtc is part of HIP
-  find_library(ROCM_HIPRTC_LIB ${hip_library_name} HINTS ${HIP_PATH}/lib)
+  find_library(ROCM_HIPRTC_LIB ${hip_library_name} HINTS ${HIP_PATH}/lib64)
   # roctx is part of roctracer
-  find_library(ROCM_ROCTX_LIB roctx64 HINTS ${ROCTRACER_PATH}/lib)
+  find_library(ROCM_ROCTX_LIB roctx64 HINTS ${ROCTRACER_PATH}/lib64)
   set(roctracer_INCLUDE_DIRS ${ROCTRACER_PATH}/include)
 endif()
