diff '--color=auto' -urp pytorch-2.5.1.orig/cmake/Codegen.cmake pytorch-2.5.1/cmake/Codegen.cmake
--- pytorch-2.5.1.orig/cmake/Codegen.cmake	2024-11-20 18:19:58.090465628 -0800
+++ pytorch-2.5.1/cmake/Codegen.cmake	2024-11-20 18:46:09.148251451 -0800
@@ -9,6 +9,11 @@
 # Helper functions
 ################################################################################
 
+option(USE_AVX2 "Use avx?" ON)
+option(USE_AVX512 "Use avx512?" ON)
+option(USE_VSX "Use vsx?" ON)
+option(USE_ZVECTOR "Use zvector?" ON)
+
 function(filter_list output input)
     unset(result)
     foreach(filename ${${input}})
@@ -267,7 +272,7 @@ if(INTERN_BUILD_ATEN_OPS)
   list(APPEND CPU_CAPABILITY_NAMES "DEFAULT")
   list(APPEND CPU_CAPABILITY_FLAGS "${OPT_FLAG}")
 
-  if(CXX_AVX512_FOUND)
+  if(CXX_AVX512_FOUND AND USE_AVX512)
     set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -DHAVE_AVX512_CPU_DEFINITION")
     list(APPEND CPU_CAPABILITY_NAMES "AVX512")
     if(MSVC)
@@ -275,9 +280,9 @@ if(INTERN_BUILD_ATEN_OPS)
     else(MSVC)
       list(APPEND CPU_CAPABILITY_FLAGS "${OPT_FLAG} -mavx512f -mavx512bw -mavx512vl -mavx512dq -mfma")
     endif(MSVC)
-  endif(CXX_AVX512_FOUND)
+  endif(CXX_AVX512_FOUND AND USE_AVX512)
 
-  if(CXX_AVX2_FOUND)
+  if(CXX_AVX2_FOUND AND USE_AVX2)
     set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -DHAVE_AVX2_CPU_DEFINITION")
 
     # Some versions of GCC pessimistically split unaligned load and store
@@ -292,14 +297,14 @@ if(INTERN_BUILD_ATEN_OPS)
     list(APPEND CPU_CAPABILITY_NAMES "AVX2")
     if(DEFINED ENV{ATEN_AVX512_256})
       if($ENV{ATEN_AVX512_256} MATCHES "TRUE")
-        if(CXX_AVX512_FOUND)
+        if(CXX_AVX512_FOUND AND USE_AVX512)
           message("-- ATen AVX2 kernels will use 32 ymm registers")
           if(MSVC)
             list(APPEND CPU_CAPABILITY_FLAGS "${OPT_FLAG}/arch:AVX512")
           else(MSVC)
             list(APPEND CPU_CAPABILITY_FLAGS "${OPT_FLAG} -march=native ${CPU_NO_AVX256_SPLIT_FLAGS}")
           endif(MSVC)
-        endif(CXX_AVX512_FOUND)
+        endif(CXX_AVX512_FOUND AND USE_AVX512)
       endif()
     else()
       if(MSVC)
@@ -308,15 +313,15 @@ if(INTERN_BUILD_ATEN_OPS)
         list(APPEND CPU_CAPABILITY_FLAGS "${OPT_FLAG} -mavx2 -mfma -mf16c ${CPU_NO_AVX256_SPLIT_FLAGS}")
       endif(MSVC)
     endif()
-  endif(CXX_AVX2_FOUND)
+  endif(CXX_AVX2_FOUND AND USE_AVX2)
 
-  if(CXX_VSX_FOUND)
+  if(CXX_VSX_FOUND AND USE_VSX)
     SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -DHAVE_VSX_CPU_DEFINITION")
     LIST(APPEND CPU_CAPABILITY_NAMES "VSX")
     LIST(APPEND CPU_CAPABILITY_FLAGS "${OPT_FLAG}  ${CXX_VSX_FLAGS}")
-  endif(CXX_VSX_FOUND)
+  endif(CXX_VSX_FOUND AND USE_VSX)
 
-  if(CXX_ZVECTOR_FOUND)
+  if(CXX_ZVECTOR_FOUND AND USE_ZVECTOR)
     SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -DHAVE_ZVECTOR_CPU_DEFINITION")
     LIST(APPEND CPU_CAPABILITY_NAMES "ZVECTOR")
     LIST(APPEND CPU_CAPABILITY_FLAGS "${OPT_FLAG}  ${CXX_ZVECTOR_FLAGS}")
diff '--color=auto' -urp pytorch-2.5.1.orig/cmake/MiscCheck.cmake pytorch-2.5.1/cmake/MiscCheck.cmake
--- pytorch-2.5.1.orig/cmake/MiscCheck.cmake	2024-10-22 18:14:52.000000000 -0700
+++ pytorch-2.5.1/cmake/MiscCheck.cmake	2024-11-20 18:49:18.311014128 -0800
@@ -2,6 +2,7 @@ include(CheckCXXSourceCompiles)
 include(CheckCXXCompilerFlag)
 include(CMakePushCheckState)
 
+option(USE_AVX2 "Use avx2?" ON)
 set(CAFFE2_USE_EXCEPTION_PTR 1)
 
 # ---[ Check if we want to turn off deprecated warning due to glog.
@@ -25,7 +26,7 @@ endif()
 # ---[ Check if the compiler has AVX/AVX2 support. We only check AVX2.
 if(NOT INTERN_BUILD_MOBILE)
   find_package(AVX) # checks AVX and AVX2
-  if(CXX_AVX2_FOUND)
+  if(CXX_AVX2_FOUND AND USE_AVX2)
     message(STATUS "Current compiler supports avx2 extension. Will build perfkernels.")
     # Also see CMakeLists.txt under caffe2/perfkernels.
     set(CAFFE2_PERF_WITH_AVX 1)
