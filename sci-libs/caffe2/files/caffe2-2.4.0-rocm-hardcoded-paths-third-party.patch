diff '--color=auto' -urp pytorch-2.4.0.orig/third_party/FBGEMM/fbgemm_gpu/CMakeLists.txt pytorch-2.4.0/third_party/FBGEMM/fbgemm_gpu/CMakeLists.txt
--- pytorch-2.4.0.orig/third_party/FBGEMM/fbgemm_gpu/CMakeLists.txt	2024-08-10 23:17:48.948351034 -0700
+++ pytorch-2.4.0/third_party/FBGEMM/fbgemm_gpu/CMakeLists.txt	2024-08-10 23:43:47.534761977 -0700
@@ -31,7 +31,7 @@ set(THIRDPARTY ${FBGEMM}/third_party)
 option(FBGEMM_CPU_ONLY  "Build FBGEMM_GPU without GPU support" OFF)
 option(USE_ROCM         "Build FBGEMM_GPU for ROCm" OFF)
 
-if(((EXISTS "/opt/rocm/") OR (EXISTS $ENV{ROCM_PATH}))
+if(((EXISTS "/opt/rocm-@ROCM_VERSION@/") OR (EXISTS $ENV{ROCM_PATH}))
    AND NOT (EXISTS "/bin/nvcc"))
   message("AMD GPU detected; setting to ROCm build")
   set(USE_ROCM ON)
diff '--color=auto' -urp pytorch-2.4.0.orig/third_party/FBGEMM/fbgemm_gpu/cmake/Hip.cmake pytorch-2.4.0/third_party/FBGEMM/fbgemm_gpu/cmake/Hip.cmake
--- pytorch-2.4.0.orig/third_party/FBGEMM/fbgemm_gpu/cmake/Hip.cmake	2023-12-04 14:00:48.000000000 -0800
+++ pytorch-2.4.0/third_party/FBGEMM/fbgemm_gpu/cmake/Hip.cmake	2024-08-10 23:43:51.286700686 -0700
@@ -7,7 +7,7 @@
 set(FBGEMM_HAVE_HIP FALSE)
 
 if(NOT DEFINED ENV{ROCM_PATH})
-  set(ROCM_PATH /opt/rocm)
+  set(ROCM_PATH /opt/rocm-@ROCM_VERSION@)
 else()
   set(ROCM_PATH $ENV{ROCM_PATH})
 endif()
diff '--color=auto' -urp pytorch-2.4.0.orig/third_party/aotriton/CMakeLists.txt pytorch-2.4.0/third_party/aotriton/CMakeLists.txt
--- pytorch-2.4.0.orig/third_party/aotriton/CMakeLists.txt	2024-08-10 23:17:48.352360825 -0700
+++ pytorch-2.4.0/third_party/aotriton/CMakeLists.txt	2024-08-10 23:42:32.247991752 -0700
@@ -16,7 +16,7 @@ option(AOTRITON_NO_SHARED "Disable share
 option(AOTRITON_NO_PYTHON "Disable python binding build" OFF)
 option(AOTRITON_ENABLE_ASAN "Enable Address Sanitizer. Implies -g" OFF)
 set(TARGET_GPUS "MI200;MI300X" CACHE STRING "Target Architecture (Note here uses Trade names)")
-set(AMDHSA_LD_PRELOAD "/opt/rocm/lib/libhsa-runtime64.so" CACHE STRING "Workaround of libamdhip64.so.5: undefined symbol: hsa_amd_memory_async_copy_on_engine")
+set(AMDHSA_LD_PRELOAD "/opt/rocm-@ROCM_VERSION@/lib/libhsa-runtime64.so" CACHE STRING "Workaround of libamdhip64.so.5: undefined symbol: hsa_amd_memory_async_copy_on_engine")
 
 # GPU kernel compression related options
 option(AOTRITON_COMPRESS_KERNEL "Enable GPU kernel compression with zstd. Fail when zstd is unavailable. Only effective for AOTriton API V2" ON)
@@ -49,7 +49,7 @@ if(AOTRITON_COMPRESS_KERNEL)
     endif()
 endif()
 
-set(AOTRITON_EXTRA_COMPILER_OPTIONS "-I/opt/rocm/include/ ")
+set(AOTRITON_EXTRA_COMPILER_OPTIONS "-I/opt/rocm-@ROCM_VERSION@/include/ ")
 if(AOTRITON_ENABLE_ASAN)
     set(AOTRITON_EXTRA_COMPILER_OPTIONS "${AOTRITON_EXTRA_COMPILER_OPTIONS} -g -fsanitize=address -fno-omit-frame-pointer")
     set(CMAKE_CXX_FLAGS  "${CMAKE_CXX_FLAGS} ${AOTRITON_EXTRA_COMPILER_OPTIONS}")
diff '--color=auto' -urp pytorch-2.4.0.orig/third_party/aotriton/python/compile.py pytorch-2.4.0/third_party/aotriton/python/compile.py
--- pytorch-2.4.0.orig/third_party/aotriton/python/compile.py	2024-06-03 13:21:28.000000000 -0700
+++ pytorch-2.4.0/third_party/aotriton/python/compile.py	2024-08-10 23:43:35.110964931 -0700
@@ -125,7 +125,7 @@ def main():
         if args.nostrip:
             shutil.copy(hsaco_path, out_path.with_suffix('.hsaco'))
         else:
-            subprocess.run(['/opt/rocm/llvm/bin/llvm-objcopy', '--remove-section', '.debug_*', str(hsaco_path), str(out_path.with_suffix('.hsaco'))])
+            subprocess.run(['/opt/rocm-@ROCM_VERSION@/llvm/bin/llvm-objcopy', '--remove-section', '.debug_*', str(hsaco_path), str(out_path.with_suffix('.hsaco'))])
 
     with out_path.with_suffix('.json').open("w") as fp:
         json.dump(ccinfo.metadata, fp, indent=2)
diff '--color=auto' -urp pytorch-2.4.0.orig/third_party/aotriton/python/generate.py pytorch-2.4.0/third_party/aotriton/python/generate.py
--- pytorch-2.4.0.orig/third_party/aotriton/python/generate.py	2024-06-03 13:21:28.000000000 -0700
+++ pytorch-2.4.0/third_party/aotriton/python/generate.py	2024-08-10 23:43:42.230848623 -0700
@@ -48,7 +48,7 @@ def main():
     args = parse()
     build_dir = Path(args.build_dir)
     with open(build_dir / 'Makefile.compile', 'w') as f:
-        print('LIBHSA_RUNTIME64=/opt/rocm/lib/libhsa-runtime64.so\n', file=f)
+        print('LIBHSA_RUNTIME64=/opt/rocm-@ROCM_VERSION@/lib/libhsa-runtime64.so\n', file=f)
         makefile_content = io.StringIO()
         per_kernel_targets = []
         for k in rules.kernels:
diff '--color=auto' -urp pytorch-2.4.0.orig/third_party/aotriton/third_party/triton/CMakeLists.txt pytorch-2.4.0/third_party/aotriton/third_party/triton/CMakeLists.txt
--- pytorch-2.4.0.orig/third_party/aotriton/third_party/triton/CMakeLists.txt	2024-08-10 23:17:48.424359643 -0700
+++ pytorch-2.4.0/third_party/aotriton/third_party/triton/CMakeLists.txt	2024-08-10 23:42:41.143846455 -0700
@@ -35,7 +35,7 @@ set(TRITON_CODEGEN_BACKENDS "" CACHE STR
 
 # Force TRITON_USE_ROCM for ROCm support
 set(TRITON_USE_ROCM ON)
-set(ROCM_DEFAULT_DIR "/opt/rocm")
+set(ROCM_DEFAULT_DIR "/opt/rocm-@ROCM_VERSION@")
 add_definitions( -DROCM_DEFAULT_DIR="${ROCM_DEFAULT_DIR}")
 
 # Ensure Python3 vars are set correctly
diff '--color=auto' -urp pytorch-2.4.0.orig/third_party/aotriton/third_party/triton/python/triton/common/build.py pytorch-2.4.0/third_party/aotriton/third_party/triton/python/triton/common/build.py
--- pytorch-2.4.0.orig/third_party/aotriton/third_party/triton/python/triton/common/build.py	2024-03-29 12:41:35.000000000 -0700
+++ pytorch-2.4.0/third_party/aotriton/third_party/triton/python/triton/common/build.py	2024-08-10 23:43:07.527415509 -0700
@@ -85,7 +85,7 @@ def rocm_path_dir():
     if (os.path.exists(default_path+"/include/hip/hip_runtime.h")):
         return default_path
     else:
-        return os.getenv("ROCM_PATH", default="/opt/rocm")
+        return os.getenv("ROCM_PATH", default="/opt/rocm-@ROCM_VERSION@")
 
 
 @contextlib.contextmanager
diff '--color=auto' -urp pytorch-2.4.0.orig/third_party/aotriton/third_party/triton/python/triton/third_party/hip/CMakeLists.txt pytorch-2.4.0/third_party/aotriton/third_party/triton/python/triton/third_party/hip/CMakeLists.txt
--- pytorch-2.4.0.orig/third_party/aotriton/third_party/triton/python/triton/third_party/hip/CMakeLists.txt	2024-08-10 23:17:48.680355438 -0700
+++ pytorch-2.4.0/third_party/aotriton/third_party/triton/python/triton/third_party/hip/CMakeLists.txt	2024-08-10 23:43:12.551333446 -0700
@@ -2,7 +2,7 @@ list(APPEND CMAKE_MODULE_PATH "${CMAKE_C
 
 # FLAGS
 message(STATUS "HIP_BACKEND_MODE = ${HIP_BACKEND_MODE}")
-set(ROCM_DEFAULT_DIR "/opt/rocm")
+set(ROCM_DEFAULT_DIR "/opt/rocm-@ROCM_VERSION@")
 add_definitions( -DROCM_DEFAULT_DIR="${ROCM_DEFAULT_DIR}")
 set(ROCM_LIBRARIES
   ${CMAKE_CURRENT_SOURCE_DIR}/lib/hsa/libhsa-runtime64.so
@@ -106,4 +106,4 @@ if(TRITON_BUILD_PYTHON_MODULE)
         DEPENDS ${HIP_BACKEND_PY_STAMP}
         COMMENT "Checking and applying modifications to hip_backend.py"
     )
-endif()
\ No newline at end of file
+endif()
diff '--color=auto' -urp pytorch-2.4.0.orig/third_party/aotriton/third_party/triton/python/triton/third_party/hip/lib/Target/HSACO/HSACOTranslation.cpp pytorch-2.4.0/third_party/aotriton/third_party/triton/python/triton/third_party/hip/lib/Target/HSACO/HSACOTranslation.cpp
--- pytorch-2.4.0.orig/third_party/aotriton/third_party/triton/python/triton/third_party/hip/lib/Target/HSACO/HSACOTranslation.cpp	2024-03-29 12:41:35.000000000 -0700
+++ pytorch-2.4.0/third_party/aotriton/third_party/triton/python/triton/third_party/hip/lib/Target/HSACO/HSACOTranslation.cpp	2024-08-10 23:43:18.839230733 -0700
@@ -221,7 +221,7 @@ std::string generate_hsaco(llvm::Module
   std::string lld_path = compiletime_path.string();
   if (!std::filesystem::exists(lld_path)) {
     std::string rocm_path = ::triton::tools::getenv("ROCM_PATH");
-    // auto ROCM_DEFAULT_DIR = "/opt/rocm";
+    // auto ROCM_DEFAULT_DIR = "/opt/rocm-@ROCM_VERSION@";
     lld_path = (rocm_path.empty()) ? ROCM_DEFAULT_DIR : rocm_path;
     lld_path += "/llvm/bin/ld.lld";
   }
diff '--color=auto' -urp pytorch-2.4.0.orig/third_party/aotriton/third_party/triton/scripts/amd/setup_rocm_libs.sh pytorch-2.4.0/third_party/aotriton/third_party/triton/scripts/amd/setup_rocm_libs.sh
--- pytorch-2.4.0.orig/third_party/aotriton/third_party/triton/scripts/amd/setup_rocm_libs.sh	2024-03-29 12:41:35.000000000 -0700
+++ pytorch-2.4.0/third_party/aotriton/third_party/triton/scripts/amd/setup_rocm_libs.sh	2024-08-10 23:42:56.615593745 -0700
@@ -4,7 +4,7 @@ set -ex
 
 # Set ROCM_HOME if not set
 if [[ -z "${ROCM_HOME}" ]]; then
-    export ROCM_HOME=/opt/rocm
+    export ROCM_HOME=/opt/rocm-@ROCM_VERSION@
 fi
 
 # Check TRITON_ROCM_DIR is set
diff '--color=auto' -urp pytorch-2.4.0.orig/third_party/aotriton/tritonsrc/rocm_arch.py pytorch-2.4.0/third_party/aotriton/tritonsrc/rocm_arch.py
--- pytorch-2.4.0.orig/third_party/aotriton/tritonsrc/rocm_arch.py	2024-06-03 13:21:28.000000000 -0700
+++ pytorch-2.4.0/third_party/aotriton/tritonsrc/rocm_arch.py	2024-08-10 23:42:37.079912832 -0700
@@ -4,7 +4,7 @@
 import subprocess
 
 def rocm_get_gpuarch():
-    # return subprocess.check_output(['/opt/rocm/bin/offload-arch']).decode('utf8', errors='ignore').strip()
+    # return subprocess.check_output(['/opt/rocm-@ROCM_VERSION@/bin/offload-arch']).decode('utf8', errors='ignore').strip()
     out = subprocess.check_output(['rocm_agent_enumerator -name'], shell=True).decode('utf8', errors='ignore').strip()
     lines = out.splitlines()
     assert lines
diff '--color=auto' -urp pytorch-2.4.0.orig/third_party/aotriton/v2python/compile.py pytorch-2.4.0/third_party/aotriton/v2python/compile.py
--- pytorch-2.4.0.orig/third_party/aotriton/v2python/compile.py	2024-06-03 13:21:28.000000000 -0700
+++ pytorch-2.4.0/third_party/aotriton/v2python/compile.py	2024-08-10 23:43:35.110964931 -0700
@@ -125,7 +125,7 @@ def main():
         if args.nostrip:
             shutil.copy(hsaco_path, out_path.with_suffix('.hsaco'))
         else:
-            subprocess.run(['/opt/rocm/llvm/bin/llvm-objcopy', '--remove-section', '.debug_*', str(hsaco_path), str(out_path.with_suffix('.hsaco'))])
+            subprocess.run(['/opt/rocm-@ROCM_VERSION@/llvm/bin/llvm-objcopy', '--remove-section', '.debug_*', str(hsaco_path), str(out_path.with_suffix('.hsaco'))])
 
     with out_path.with_suffix('.json').open("w") as fp:
         json.dump(ccinfo.metadata, fp, indent=2)
diff '--color=auto' -urp pytorch-2.4.0.orig/third_party/aotriton/v2python/generate_compile.py pytorch-2.4.0/third_party/aotriton/v2python/generate_compile.py
--- pytorch-2.4.0.orig/third_party/aotriton/v2python/generate_compile.py	2024-06-03 13:21:28.000000000 -0700
+++ pytorch-2.4.0/third_party/aotriton/v2python/generate_compile.py	2024-08-10 23:43:27.975081499 -0700
@@ -75,7 +75,7 @@ def main():
     fn = 'Bare.compile' if args.bare_mode else 'Makefile.compile'
     with open(build_dir / fn, 'w') as f:
         if not args.bare_mode:
-            print('LIBHSA_RUNTIME64=/opt/rocm/lib/libhsa-runtime64.so\n', file=f)
+            print('LIBHSA_RUNTIME64=/opt/rocm-@ROCM_VERSION@/lib/libhsa-runtime64.so\n', file=f)
         makefile_content = io.StringIO()
         per_kernel_targets = []
         for k in triton_kernels:
diff '--color=auto' -urp pytorch-2.4.0.orig/third_party/eigen/test/CMakeLists.txt pytorch-2.4.0/third_party/eigen/test/CMakeLists.txt
--- pytorch-2.4.0.orig/third_party/eigen/test/CMakeLists.txt	2024-08-10 23:17:48.088365163 -0700
+++ pytorch-2.4.0/third_party/eigen/test/CMakeLists.txt	2024-08-10 23:42:18.024224065 -0700
@@ -425,7 +425,7 @@ endif()
 option(EIGEN_TEST_HIP "Add HIP support." OFF)
 if (EIGEN_TEST_HIP)
 
-  set(HIP_PATH "/opt/rocm/hip" CACHE STRING "Path to the HIP installation.")
+  set(HIP_PATH "/opt/rocm-@ROCM_VERSION@/hip" CACHE STRING "Path to the HIP installation.")
 
   if (EXISTS ${HIP_PATH})
     
diff '--color=auto' -urp pytorch-2.4.0.orig/third_party/eigen/unsupported/test/CMakeLists.txt pytorch-2.4.0/third_party/eigen/unsupported/test/CMakeLists.txt
--- pytorch-2.4.0.orig/third_party/eigen/unsupported/test/CMakeLists.txt	2024-08-10 23:17:48.228362863 -0700
+++ pytorch-2.4.0/third_party/eigen/unsupported/test/CMakeLists.txt	2024-08-10 23:42:22.952143579 -0700
@@ -362,7 +362,7 @@ endif()
 # Add HIP specific tests
 if (EIGEN_TEST_HIP)
 
-  set(HIP_PATH "/opt/rocm/hip" CACHE STRING "Path to the HIP installation.")
+  set(HIP_PATH "/opt/rocm-@ROCM_VERSION@/hip" CACHE STRING "Path to the HIP installation.")
 
   if (EXISTS ${HIP_PATH})
 
diff '--color=auto' -urp pytorch-2.4.0.orig/third_party/gloo/cmake/Hip.cmake pytorch-2.4.0/third_party/gloo/cmake/Hip.cmake
--- pytorch-2.4.0.orig/third_party/gloo/cmake/Hip.cmake	2023-12-02 17:32:51.000000000 -0800
+++ pytorch-2.4.0/third_party/gloo/cmake/Hip.cmake	2024-08-10 23:42:08.484379868 -0700
@@ -1,7 +1,7 @@
 set(HAVE_HIP FALSE)
 
 IF(NOT DEFINED ENV{ROCM_PATH})
-  SET(ROCM_PATH /opt/rocm)
+  SET(ROCM_PATH /opt/rocm-@ROCM_VERSION@)
 ELSE()
   SET(ROCM_PATH $ENV{ROCM_PATH})
 ENDIF()
diff '--color=auto' -urp pytorch-2.4.0.orig/third_party/gloo/cmake/Modules/Findrccl.cmake pytorch-2.4.0/third_party/gloo/cmake/Modules/Findrccl.cmake
--- pytorch-2.4.0.orig/third_party/gloo/cmake/Modules/Findrccl.cmake	2023-12-02 17:32:51.000000000 -0800
+++ pytorch-2.4.0/third_party/gloo/cmake/Modules/Findrccl.cmake	2024-08-10 23:42:11.908323947 -0700
@@ -17,7 +17,7 @@
 if(DEFINED ENV{ROCM_PATH})
     set(RCCL_ROOT_DIR $ENV{ROCM_PATH} CACHE PATH "Folder contains AMD RCCL")
 else()
-    set(RCCL_ROOT_DIR "/opt/rocm")
+    set(RCCL_ROOT_DIR "/opt/rocm-@ROCM_VERSION@")
 endif()
 
 find_path(RCCL_INCLUDE_DIR
diff '--color=auto' -urp pytorch-2.4.0.orig/third_party/ideep/mkl-dnn/cmake/FindHIP.cmake pytorch-2.4.0/third_party/ideep/mkl-dnn/cmake/FindHIP.cmake
--- pytorch-2.4.0.orig/third_party/ideep/mkl-dnn/cmake/FindHIP.cmake	2024-05-10 14:39:30.000000000 -0700
+++ pytorch-2.4.0/third_party/ideep/mkl-dnn/cmake/FindHIP.cmake	2024-08-10 23:44:05.590467010 -0700
@@ -20,8 +20,8 @@ find_package(Threads REQUIRED)
 list(APPEND hip_root_hints
             ${HIPROOT}
             $ENV{HIPROOT}
-            "/opt/rocm"
-            "/opt/rocm/hip")
+            "/opt/rocm-@ROCM_VERSION@"
+            "/opt/rocm-@ROCM_VERSION@/hip")
 
 find_path(
     HIP_INCLUDE_DIR "hip/hip_runtime_api.h"
diff '--color=auto' -urp pytorch-2.4.0.orig/third_party/ideep/mkl-dnn/cmake/FindMIOpen.cmake pytorch-2.4.0/third_party/ideep/mkl-dnn/cmake/FindMIOpen.cmake
--- pytorch-2.4.0.orig/third_party/ideep/mkl-dnn/cmake/FindMIOpen.cmake	2024-05-10 14:39:30.000000000 -0700
+++ pytorch-2.4.0/third_party/ideep/mkl-dnn/cmake/FindMIOpen.cmake	2024-08-10 23:44:14.662318804 -0700
@@ -21,7 +21,7 @@ find_package(rocBLAS REQUIRED)
 # Rely on the standard CMake config for amd_comgr as it doesn't add redundant
 # dependencies.
 find_package(amd_comgr REQUIRED CONFIG
-    HINTS ${COMGRROOT}/lib/cmake $ENV{COMGRROOT}/lib/cmake /opt/rocm/lib/cmake
+    HINTS ${COMGRROOT}/lib/cmake $ENV{COMGRROOT}/lib/cmake /opt/rocm-@ROCM_VERSION@/lib/cmake
 )
 
 # amd_comgr target adds "${COMGRROOT}/include` directory that may contain
@@ -36,8 +36,8 @@ list(APPEND EXTRA_SHARED_LIBS amd_comgr)
 list(APPEND miopen_root_hints
             ${MIOPENROOT}
             $ENV{MIOPENROOT}
-            "/opt/rocm"
-            "/opt/rocm/miopen"
+            "/opt/rocm-@ROCM_VERSION@"
+            "/opt/rocm-@ROCM_VERSION@/miopen"
 )
 
 find_path(
diff '--color=auto' -urp pytorch-2.4.0.orig/third_party/ideep/mkl-dnn/cmake/FindrocBLAS.cmake pytorch-2.4.0/third_party/ideep/mkl-dnn/cmake/FindrocBLAS.cmake
--- pytorch-2.4.0.orig/third_party/ideep/mkl-dnn/cmake/FindrocBLAS.cmake	2024-05-10 14:39:30.000000000 -0700
+++ pytorch-2.4.0/third_party/ideep/mkl-dnn/cmake/FindrocBLAS.cmake	2024-08-10 23:43:57.478599532 -0700
@@ -21,8 +21,8 @@ find_package(Threads REQUIRED)
 list(APPEND rocblas_root_hints
             ${ROCBLASROOT}
             $ENV{ROCBLASROOT}
-            "/opt/rocm"
-            "/opt/rocm/rocblas")
+            "/opt/rocm-@ROCM_VERSION@"
+            "/opt/rocm-@ROCM_VERSION@/rocblas")
 
 find_path(
     rocBLAS_INCLUDE_DIR "rocblas.h"
