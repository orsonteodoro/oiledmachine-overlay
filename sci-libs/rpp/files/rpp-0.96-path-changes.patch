diff -urp rpp-0.96.orig/cmake/ClangTidy.cmake rpp-0.96/cmake/ClangTidy.cmake
--- rpp-0.96.orig/cmake/ClangTidy.cmake	2022-08-03 15:34:16.000000000 -0700
+++ rpp-0.96/cmake/ClangTidy.cmake	2023-10-01 16:46:12.206897877 -0700
@@ -39,8 +39,8 @@ find_program(CLANG_TIDY_EXE
     PATH_SUFFIXES
         compiler/bin
     PATHS
-        /opt/rocm/hcc
-        /usr/local/opt/llvm/bin
+        @ESYSROOT_ROCM_PATH@/hcc
+        @ESYSROOT_LLVM_PATH@/bin
 )
 
 function(find_clang_tidy_version VAR)
diff -urp rpp-0.96.orig/cmake/CppCheck.cmake rpp-0.96/cmake/CppCheck.cmake
--- rpp-0.96.orig/cmake/CppCheck.cmake	2022-08-03 15:34:16.000000000 -0700
+++ rpp-0.96/cmake/CppCheck.cmake	2023-10-01 16:45:31.214897042 -0700
@@ -32,7 +32,7 @@ find_program(CPPCHECK_EXE
     NAMES 
         cppcheck
     PATHS
-        /opt/rocm/bin
+        @ESYSROOT_ROCM_PATH@/bin
 )
 
 ProcessorCount(CPPCHECK_JOBS)
diff -urp rpp-0.96.orig/cmake/FindOpenCL.cmake rpp-0.96/cmake/FindOpenCL.cmake
--- rpp-0.96.orig/cmake/FindOpenCL.cmake	2022-08-03 15:34:16.000000000 -0700
+++ rpp-0.96/cmake/FindOpenCL.cmake	2023-10-01 16:45:31.214897042 -0700
@@ -57,38 +57,25 @@ else()
     mark_as_advanced( OPENCL_INCLUDE_DIRS )
 
     if("${CMAKE_SIZEOF_VOID_P}" EQUAL "8")
-        find_library( OPENCL_LIBRARIES
-            NAMES OpenCL
-            HINTS
-            $ENV{OPENCL_ROOT}/lib
-            $ENV{AMDAPPSDKROOT}/lib
-            $ENV{CUDA_PATH}/lib
-            $ENV{OCL_ROOT}/lib
-            DOC "OpenCL dynamic library path"
-            PATH_SUFFIXES x86_64 x64 x86_64/sdk
-            PATHS
-            ${ROCM_PATH}/lib/
-            /usr/lib
-            /usr/local/cuda/lib
-            /opt/cuda/lib
-        )
-    else( )
-        find_library( OPENCL_LIBRARIES
-            NAMES OpenCL
-            HINTS
-            $ENV{OPENCL_ROOT}/lib
-            $ENV{AMDAPPSDKROOT}/lib
-            $ENV{CUDA_PATH}/lib
-            $ENV{OCL_ROOT}/lib
-            DOC "OpenCL dynamic library path"
-            PATH_SUFFIXES x86 Win32
-            PATHS
-            ${ROCM_PATH}/lib/
-            /usr/lib
-            /usr/local/cuda/lib
-            /opt/cuda/lib
-        )
-    endif( )
+        set(_PATH_SUFFIXES "x86_64 x64 x86_64/sdk")
+    else()
+        set(_PATH_SUFFIXES "x86 Win32")
+    endif()
+    find_library( OPENCL_LIBRARIES
+        NAMES OpenCL
+        HINTS
+        $ENV{OPENCL_ROOT}/@LIBDIR@
+        $ENV{AMDAPPSDKROOT}/@LIBDIR@
+        $ENV{CUDA_PATH}/@LIBDIR@
+        $ENV{OCL_ROOT}/@LIBDIR@
+        DOC "OpenCL dynamic library path"
+        PATH_SUFFIXES ${_PATH_SUFFIXES}
+        PATHS
+        ${ROCM_PATH}/@LIBDIR@/
+        @ESYSROOT@/usr/@LIBDIR@
+        @ESYSROOT@/usr/local/cuda/@LIBDIR@
+        @ESYSROOT@/opt/cuda/@LIBDIR@
+    )
     mark_as_advanced( OPENCL_LIBRARIES )
 
     if(OPENCL_LIBRARIES AND OPENCL_INCLUDE_DIRS)
@@ -99,11 +86,11 @@ else()
     set(OpenCL_LIBRARIES ${OPENCL_LIBRARIES} CACHE INTERNAL "")
     set(OpenCL_INCLUDE_DIRS ${OPENCL_INCLUDE_DIRS} CACHE INTERNAL "")
 
-    if(EXISTS "${ROCM_PATH}/lib/libOpenCL.so")
-        if(NOT "${OPENCL_LIBRARIES}" STREQUAL "${ROCM_PATH}/lib/libOpenCL.so")
+    if(EXISTS "${ROCM_PATH}/@LIBDIR@/libOpenCL.so")
+        if(NOT "${OPENCL_LIBRARIES}" STREQUAL "${ROCM_PATH}/@LIBDIR@/libOpenCL.so")
             message("-- ${White}OpenCL Found - ${OPENCL_LIBRARIES}${ColourReset}")
             message("-- ${White}ROCm OpenCL Found - Force OpenCL_LIBRARIES & OpenCL_INCLUDE_DIRS to use ROCm OpenCL${ColourReset}")
-            set(OpenCL_LIBRARIES ${ROCM_PATH}/lib/libOpenCL.so CACHE INTERNAL "")
+            set(OpenCL_LIBRARIES ${ROCM_PATH}/@LIBDIR@/libOpenCL.so CACHE INTERNAL "")
             set(OpenCL_INCLUDE_DIRS ${ROCM_PATH}/include CACHE INTERNAL "")
         endif()
     else()
@@ -140,4 +127,4 @@ else()
     if( NOT OpenCL_FOUND )
         message( "-- ${Yellow}NOTE: FindOpenCL failed to find -- OpenCL${ColourReset}" )
     endif()
-endif()
\ No newline at end of file
+endif()
diff -urp rpp-0.96.orig/CMakeLists.txt rpp-0.96/CMakeLists.txt
--- rpp-0.96.orig/CMakeLists.txt	2022-08-03 15:34:16.000000000 -0700
+++ rpp-0.96/CMakeLists.txt	2023-10-01 16:45:54.494897516 -0700
@@ -27,7 +27,7 @@ set(CMAKE_CXX_STANDARD 14)
 project(amd_rpp CXX)
 set(VERSION "0.96")
 
-set(CMAKE_INSTALL_LIBDIR "lib" CACHE STRING "Library install directory")
+set(CMAKE_INSTALL_LIBDIR "@LIBDIR@" CACHE STRING "Library install directory")
 include(GNUInstallDirs)
 
 set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/${CMAKE_INSTALL_LIBDIR})
@@ -39,7 +39,7 @@ find_program(RPMBUILD_EXE rpmbuild)
 find_program(DPKG_EXE dpkg)
 
 # ROCm Path
-set(ROCM_PATH /opt/rocm CACHE PATH "RPP default ROCm installation path")
+set(ROCM_PATH @ESYSROOT_ROCM_PATH@ CACHE PATH "RPP default ROCm installation path")
 # Avoid setting the default path to /usr/local
 if(CMAKE_INSTALL_PREFIX_INITIALIZED_TO_DEFAULT)
   set(CMAKE_INSTALL_PREFIX ${ROCM_PATH} CACHE PATH "RPP default ROCm installation path" FORCE)
@@ -224,7 +224,7 @@ elseif("${BACKEND}" STREQUAL "OCL")
 
         # Set compiler and flags
         set(LINK_LIBRARY_LIST ${LINK_LIBRARY_LIST} ${OpenCL_LIBRARIES})
-        # set(INCLUDE_LIST ${OpenCL_INCLUDE_DIRS} ${INCLUDE_LIST})  # using substitute since OpenCL_INCLUDE_DIRS points to a deprecated /opt/rocm/opencl/include
+        # set(INCLUDE_LIST ${OpenCL_INCLUDE_DIRS} ${INCLUDE_LIST})  # using substitute since OpenCL_INCLUDE_DIRS points to a deprecated @ESYSROOT_ROCM_PATH@/opencl/include
         set(INCLUDE_LIST ${INCLUDE_LIST})
         add_definitions(-DRPP_CACHE_DIR="${CACHE_DIR}")
 
@@ -294,7 +294,7 @@ endif()
 add_subdirectory(addkernels)
 
 # Installation
-# install RPP libs -- {ROCM_PATH}/lib
+# install RPP libs -- {ROCM_PATH}/@LIBDIR@
 install(TARGETS ${PROJECT_NAME} LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR})
 # install RPP include files -- {ROCM_PATH}/include/rpp/
 install(DIRECTORY include/ DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}/rpp PATTERN "*.h.in" EXCLUDE)
diff -urp rpp-0.96.orig/src/modules/cl/hip_build_utils.cpp rpp-0.96/src/modules/cl/hip_build_utils.cpp
--- rpp-0.96.orig/src/modules/cl/hip_build_utils.cpp	2022-08-03 15:34:16.000000000 -0700
+++ rpp-0.96/src/modules/cl/hip_build_utils.cpp	2023-10-01 16:45:31.214897042 -0700
@@ -59,7 +59,7 @@ boost::filesystem::path HipBuild(boost::
     auto bin_file = tmp_dir->path / (filename + ".o");
     // compile with hcc
     auto env = std::string("KMOPTLLC=-mattr=+enable-ds128");
-    tmp_dir->Execute(env + std::string(" ") + "/opt/rocm/hip/bin/hipcc",
+    tmp_dir->Execute(env + std::string(" ") + "@EPREFIX_ROCM_PATH@/bin/hipcc",
                      params + filename + " -o " + bin_file.string());
     if(!boost::filesystem::exists(bin_file))
         RPP_THROW(filename + " failed to compile");
diff -urp rpp-0.96.orig/src/modules/CMakeLists.txt rpp-0.96/src/modules/CMakeLists.txt
--- rpp-0.96.orig/src/modules/CMakeLists.txt	2022-08-03 15:34:16.000000000 -0700
+++ rpp-0.96/src/modules/CMakeLists.txt	2023-10-01 16:46:38.430898412 -0700
@@ -113,8 +113,8 @@ elseif( "${BACKEND}" STREQUAL "OCL")
 
     # Add OpenCL specific includes
     set(ROCM_INC ${ROCM_PATH}/include/)
-    # list(APPEND OpenCL_INCLUDE_DIRS ${CMAKE_SOURCE_DIR}/src/include/cl/ ${CMAKE_SOURCE_DIR}/src/include/common/) # using substitute since OpenCL_INCLUDE_DIRS points to a deprecated /opt/rocm/opencl/include
-    # set(INCLUDE_LIST ${OpenCL_INCLUDE_DIRS} ${INCLUDE_LIST} ${ROCM_INC}) # using substitute since OpenCL_INCLUDE_DIRS points to a deprecated /opt/rocm/opencl/include
+    # list(APPEND OpenCL_INCLUDE_DIRS ${CMAKE_SOURCE_DIR}/src/include/cl/ ${CMAKE_SOURCE_DIR}/src/include/common/) # using substitute since OpenCL_INCLUDE_DIRS points to a deprecated @ESYSROOT_ROCM_PATH@/opencl/include
+    # set(INCLUDE_LIST ${OpenCL_INCLUDE_DIRS} ${INCLUDE_LIST} ${ROCM_INC}) # using substitute since OpenCL_INCLUDE_DIRS points to a deprecated @ESYSROOT_ROCM_PATH@/opencl/include
     list(APPEND INCLUDE_LIST ${CMAKE_SOURCE_DIR}/src/include/cl/ ${CMAKE_SOURCE_DIR}/src/include/common/)
     set(INCLUDE_LIST ${INCLUDE_LIST} ${ROCM_INC})
 elseif( "${BACKEND}" STREQUAL "CPU")
@@ -156,4 +156,4 @@ elseif( "${BACKEND}" STREQUAL "OCL")
     PRIVATE
         ${CMAKE_CURRENT_SOURCE_DIR}/src/include/cl
     )
-endif()
\ No newline at end of file
+endif()
diff -urp rpp-0.96.orig/src/modules/hip/hip_build_utils.cpp rpp-0.96/src/modules/hip/hip_build_utils.cpp
--- rpp-0.96.orig/src/modules/hip/hip_build_utils.cpp	2022-08-03 15:34:16.000000000 -0700
+++ rpp-0.96/src/modules/hip/hip_build_utils.cpp	2023-10-01 16:45:31.214897042 -0700
@@ -59,7 +59,7 @@ boost::filesystem::path HipBuild(boost::
     auto bin_file = tmp_dir->path / (filename + ".o");
     // compile with hcc
     auto env = std::string("KMOPTLLC=-mattr=+enable-ds128");
-    tmp_dir->Execute(env + std::string(" ") + "/opt/rocm/hip/bin/hipcc",
+    tmp_dir->Execute(env + std::string(" ") + "@EPREFIX_ROCM_PATH@/bin/hipcc",
                      params + filename + " -o " + bin_file.string());
     if(!boost::filesystem::exists(bin_file))
         RPP_THROW(filename + " failed to compile");
diff -urp rpp-0.96.orig/utilities/rpp-performancetests/HIP_NEW/CMakeLists.txt rpp-0.96/utilities/rpp-performancetests/HIP_NEW/CMakeLists.txt
--- rpp-0.96.orig/utilities/rpp-performancetests/HIP_NEW/CMakeLists.txt	2022-08-03 15:34:16.000000000 -0700
+++ rpp-0.96/utilities/rpp-performancetests/HIP_NEW/CMakeLists.txt	2023-10-01 16:45:31.214897042 -0700
@@ -1,7 +1,7 @@
 cmake_minimum_required(VERSION 3.5)
 project(rpp_performancetests/HIP_NEW)
 list(APPEND CMAKE_MODULE_PATH ${PROJECT_SOURCE_DIR}/../../../cmake)
-set(ROCM_PATH /opt/rocm CACHE PATH "default ROCm installation path")
+set(ROCM_PATH @ESYSROOT_ROCM_PATH@ CACHE PATH "default ROCm installation path")
 list(APPEND CMAKE_PREFIX_PATH ${ROCM_PATH})
 
 # Set message options
@@ -39,7 +39,7 @@ if (hip_FOUND AND OpenCV_FOUND)
     include_directories(${hip_INCLUDE_DIRS} ${hip_INCLUDE_DIRS}/hip)
     include_directories(${OpenCV_INCLUDE_DIRS})
     include_directories(${ROCM_PATH}/include ${ROCM_PATH}/include/rpp /usr/local/include)
-    link_directories(${ROCM_PATH}/lib /usr/local/lib)
+    link_directories(${ROCM_PATH}/@LIBDIR@ @ESYSROOT@/usr/local/@LIBDIR@)
 
     add_executable(BatchPD_hip_pkd3 BatchPD_hip_pkd3.cpp)
     add_executable(BatchPD_hip_pln1 BatchPD_hip_pln1.cpp)
@@ -60,4 +60,4 @@ if (hip_FOUND AND OpenCV_FOUND)
     target_link_libraries(uniqueFunctionalities_hip ${OpenCV_LIBS} -lamd_rpp ${hip_LIBRARIES} pthread ${LINK_LIBRARY_LIST} hip::device)
 else()
     message("-- ${Yellow}Error: OpenCV and hip must be installed to install ${PROJECT_NAME} successfully!${ColourReset}")
-endif()
\ No newline at end of file
+endif()
diff -urp rpp-0.96.orig/utilities/rpp-performancetests/HOST_NEW/CMakeLists.txt rpp-0.96/utilities/rpp-performancetests/HOST_NEW/CMakeLists.txt
--- rpp-0.96.orig/utilities/rpp-performancetests/HOST_NEW/CMakeLists.txt	2022-08-03 15:34:16.000000000 -0700
+++ rpp-0.96/utilities/rpp-performancetests/HOST_NEW/CMakeLists.txt	2023-10-01 16:45:31.214897042 -0700
@@ -1,7 +1,7 @@
 cmake_minimum_required(VERSION 3.5)
 project(rpp_performancetests/HOST_NEW)
 list(APPEND CMAKE_MODULE_PATH ${PROJECT_SOURCE_DIR}/../../../cmake)
-set(ROCM_PATH /opt/rocm CACHE PATH "default ROCm installation path")
+set(ROCM_PATH @ESYSROOT_ROCM_PATH@ CACHE PATH "default ROCm installation path")
 
 # Set message options
 if(NOT WIN32)
@@ -34,7 +34,7 @@ if (OpenCV_FOUND)
     message("-- ${Green}${PROJECT_NAME} set to build with rpp and OpenCV${ColourReset}")
     include_directories(${OpenCV_INCLUDE_DIRS})
     include_directories(${ROCM_PATH}/include ${ROCM_PATH}/include/rpp /usr/local/include)
-    link_directories(${ROCM_PATH}/lib /usr/local/lib)
+    link_directories(${ROCM_PATH}/@LIBDIR@ @ESYSROOT@/usr/local/@LIBDIR@)
 
     add_executable(BatchPD_host_pkd3 BatchPD_host_pkd3.cpp)
     add_executable(BatchPD_host_pln1 BatchPD_host_pln1.cpp)
@@ -53,4 +53,4 @@ if (OpenCV_FOUND)
     # target_link_libraries(Single_host ${OpenCV_LIBS} -lamd_rpp ${OpenCL_LIBRARIES} pthread boost_filesystem boost_system )
 else()
     message("-- ${Yellow}Error: OpenCV must be installed to install ${PROJECT_NAME} successfully!${ColourReset}")
-endif()
\ No newline at end of file
+endif()
diff -urp rpp-0.96.orig/utilities/rpp-performancetests/OCL_NEW/CMakeLists.txt rpp-0.96/utilities/rpp-performancetests/OCL_NEW/CMakeLists.txt
--- rpp-0.96.orig/utilities/rpp-performancetests/OCL_NEW/CMakeLists.txt	2022-08-03 15:34:16.000000000 -0700
+++ rpp-0.96/utilities/rpp-performancetests/OCL_NEW/CMakeLists.txt	2023-10-01 16:45:31.214897042 -0700
@@ -1,7 +1,7 @@
 cmake_minimum_required(VERSION 3.5)
 project(Rpp_test)
 list(APPEND CMAKE_MODULE_PATH ${PROJECT_SOURCE_DIR}/../../../cmake)
-set(ROCM_PATH /opt/rocm CACHE PATH "default ROCm installation path")
+set(ROCM_PATH @ESYSROOT_ROCM_PATH@ CACHE PATH "default ROCm installation path")
 
 # Set message options
 if(NOT WIN32)
@@ -31,10 +31,10 @@ set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS}
 
 if (OpenCL_FOUND AND OpenCV_FOUND)
     message("-- ${Green}${PROJECT_NAME} set to build with rpp, OpenCL and OpenCV${ColourReset}")
-    # include_directories(${OpenCL_INCLUDE_DIRS} ${OpenCL_INCLUDE_DIRS}/Headers) # commented since OpenCL_INCLUDE_DIRS points to a deprecated /opt/rocm/opencl/include
+    # include_directories(${OpenCL_INCLUDE_DIRS} ${OpenCL_INCLUDE_DIRS}/Headers) # commented since OpenCL_INCLUDE_DIRS points to a deprecated @ESYSROOT_ROCM_PATH@/opencl/include
     include_directories(${OpenCV_INCLUDE_DIRS})
     include_directories(${ROCM_PATH}/include ${ROCM_PATH}/include/rpp /usr/local/include)
-    link_directories(${ROCM_PATH}/lib /usr/local/lib)
+    link_directories(${ROCM_PATH}/@LIBDIR@ @ESYSROOT@/usr/local/@LIBDIR@)
 
     add_executable(BatchPD_ocl_pkd3 BatchPD_ocl_pkd3.cpp)
     add_executable(BatchPD_ocl_pln1 BatchPD_ocl_pln1.cpp)
@@ -49,4 +49,4 @@ if (OpenCL_FOUND AND OpenCV_FOUND)
     target_link_libraries(uniqueFunctionalities_ocl ${OpenCV_LIBS} -lamd_rpp ${OpenCL_LIBRARIES} pthread ${LINK_LIBRARY_LIST})
 else()
     message("-- ${Yellow}Error: OpenCV and OpenCL must be installed to install ${PROJECT_NAME} successfully!${ColourReset}")
-endif()
\ No newline at end of file
+endif()
diff -urp rpp-0.96.orig/utilities/rpp-unittests/HIP_NEW/CMakeLists.txt rpp-0.96/utilities/rpp-unittests/HIP_NEW/CMakeLists.txt
--- rpp-0.96.orig/utilities/rpp-unittests/HIP_NEW/CMakeLists.txt	2022-08-03 15:34:16.000000000 -0700
+++ rpp-0.96/utilities/rpp-unittests/HIP_NEW/CMakeLists.txt	2023-10-01 16:45:31.214897042 -0700
@@ -1,7 +1,7 @@
 cmake_minimum_required(VERSION 3.5)
 project(rpp_unittests/HIP_NEW)
 list(APPEND CMAKE_MODULE_PATH ${PROJECT_SOURCE_DIR}/../../../cmake)
-set(ROCM_PATH /opt/rocm CACHE PATH "default ROCm installation path")
+set(ROCM_PATH @ESYSROOT_ROCM_PATH@ CACHE PATH "default ROCm installation path")
 list(APPEND CMAKE_PREFIX_PATH ${ROCM_PATH})
 
 # Set message options
@@ -39,7 +39,7 @@ if (hip_FOUND AND OpenCV_FOUND)
     include_directories(${hip_INCLUDE_DIRS} ${hip_INCLUDE_DIRS}/hip)
     include_directories(${OpenCV_INCLUDE_DIRS})
     include_directories(${ROCM_PATH}/include ${ROCM_PATH}/include/rpp /usr/local/include)
-    link_directories(${ROCM_PATH}/lib /usr/local/lib)
+    link_directories(${ROCM_PATH}/@LIBDIR@ @ESYSROOT@/usr/local/@LIBDIR@)
 
     add_executable(BatchPD_hip_pkd3 BatchPD_hip_pkd3.cpp)
     add_executable(BatchPD_hip_pln1 BatchPD_hip_pln1.cpp)
@@ -60,4 +60,4 @@ if (hip_FOUND AND OpenCV_FOUND)
     target_link_libraries(uniqueFunctionalities_hip ${OpenCV_LIBS} -lamd_rpp ${hip_LIBRARIES} pthread ${LINK_LIBRARY_LIST} hip::device)
 else()
     message("-- ${Yellow}Error: OpenCV and hip must be installed to install ${PROJECT_NAME} successfully!${ColourReset}")
-endif()
\ No newline at end of file
+endif()
diff -urp rpp-0.96.orig/utilities/rpp-unittests/HOST_NEW/CMakeLists.txt rpp-0.96/utilities/rpp-unittests/HOST_NEW/CMakeLists.txt
--- rpp-0.96.orig/utilities/rpp-unittests/HOST_NEW/CMakeLists.txt	2022-08-03 15:34:16.000000000 -0700
+++ rpp-0.96/utilities/rpp-unittests/HOST_NEW/CMakeLists.txt	2023-10-01 16:45:31.214897042 -0700
@@ -1,7 +1,7 @@
 cmake_minimum_required(VERSION 3.5)
 project(rpp_unittests/HOST_NEW)
 
-set(ROCM_PATH /opt/rocm CACHE PATH "default ROCm installation path")
+set(ROCM_PATH @ESYSROOT_ROCM_PATH@ CACHE PATH "default ROCm installation path")
 
 # Set message options
 if(NOT WIN32)
@@ -33,7 +33,7 @@ if (OpenCV_FOUND)
     message("-- ${Green}${PROJECT_NAME} set to build with rpp and OpenCV${ColourReset}")
     include_directories(${OpenCV_INCLUDE_DIRS})
     include_directories(${ROCM_PATH}/include ${ROCM_PATH}/include/rpp /usr/local/include)
-    link_directories(${ROCM_PATH}/lib /usr/local/lib)
+    link_directories(${ROCM_PATH}/@LIBDIR@ @ESYSROOT@/usr/local/@LIBDIR@)
 
     add_executable(BatchPD_host_pkd3 BatchPD_host_pkd3.cpp)
     add_executable(BatchPD_host_pln1 BatchPD_host_pln1.cpp)
@@ -54,4 +54,4 @@ if (OpenCV_FOUND)
     target_link_libraries(uniqueFunctionalities_host ${OpenCV_LIBS} -lamd_rpp pthread ${LINK_LIBRARY_LIST})
 else()
     message("-- ${Yellow}Error: OpenCV must be installed to install ${PROJECT_NAME} successfully!${ColourReset}")
-endif()
\ No newline at end of file
+endif()
diff -urp rpp-0.96.orig/utilities/rpp-unittests/OCL_NEW/CMakeLists.txt rpp-0.96/utilities/rpp-unittests/OCL_NEW/CMakeLists.txt
--- rpp-0.96.orig/utilities/rpp-unittests/OCL_NEW/CMakeLists.txt	2022-08-03 15:34:16.000000000 -0700
+++ rpp-0.96/utilities/rpp-unittests/OCL_NEW/CMakeLists.txt	2023-10-01 16:45:31.214897042 -0700
@@ -1,7 +1,7 @@
 cmake_minimum_required(VERSION 3.5)
 project(rpp_unittests/OCL_NEW)
 list(APPEND CMAKE_MODULE_PATH ${PROJECT_SOURCE_DIR}/../../../cmake)
-set(ROCM_PATH /opt/rocm CACHE PATH "default ROCm installation path")
+set(ROCM_PATH @ESYSROOT_ROCM_PATH@ CACHE PATH "default ROCm installation path")
 
 # Set message options
 if(NOT WIN32)
@@ -32,10 +32,10 @@ set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS}
 
 if (OpenCL_FOUND AND OpenCV_FOUND)
     message("-- ${Green}${PROJECT_NAME} set to build with rpp, OpenCL and OpenCV${ColourReset}")
-    # include_directories(${OpenCL_INCLUDE_DIRS} ${OpenCL_INCLUDE_DIRS}/Headers) # commented since OpenCL_INCLUDE_DIRS points to a deprecated /opt/rocm/opencl/include
+    # include_directories(${OpenCL_INCLUDE_DIRS} ${OpenCL_INCLUDE_DIRS}/Headers) # commented since OpenCL_INCLUDE_DIRS points to a deprecated @ESYSROOT_ROCM_PATH@/opencl/include
     include_directories(${OpenCV_INCLUDE_DIRS})
     include_directories(${ROCM_PATH}/include ${ROCM_PATH}/include/rpp /usr/local/include)
-    link_directories(${ROCM_PATH}/lib /usr/local/lib)
+    link_directories(${ROCM_PATH}/@LIBDIR@ @ESYSROOT@/usr/local/@LIBDIR@)
 
     add_executable(BatchPD_ocl_pkd3 BatchPD_ocl_pkd3.cpp)
     add_executable(BatchPD_ocl_pln1 BatchPD_ocl_pln1.cpp)
@@ -50,4 +50,4 @@ if (OpenCL_FOUND AND OpenCV_FOUND)
     target_link_libraries(uniqueFunctionalities_ocl ${OpenCV_LIBS} -lamd_rpp ${OpenCL_LIBRARIES} pthread ${LINK_LIBRARY_LIST})
 else()
     message("-- ${Yellow}Error: OpenCV and OpenCL must be installed to install ${PROJECT_NAME} successfully!${ColourReset}")
-endif()
\ No newline at end of file
+endif()
