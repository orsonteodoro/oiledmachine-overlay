diff '--color=auto' -urp rpp-0.96.orig/CMakeLists.txt rpp-0.96/CMakeLists.txt
--- rpp-0.96.orig/CMakeLists.txt	2022-08-03 15:34:16.000000000 -0700
+++ rpp-0.96/CMakeLists.txt	2024-08-19 11:32:18.227307073 -0700
@@ -39,7 +39,7 @@ find_program(RPMBUILD_EXE rpmbuild)
 find_program(DPKG_EXE dpkg)
 
 # ROCm Path
-set(ROCM_PATH /opt/rocm CACHE PATH "RPP default ROCm installation path")
+set(ROCM_PATH /opt/rocm-@ROCM_VERSION@ CACHE PATH "RPP default ROCm installation path")
 # Avoid setting the default path to /usr/local
 if(CMAKE_INSTALL_PREFIX_INITIALIZED_TO_DEFAULT)
   set(CMAKE_INSTALL_PREFIX ${ROCM_PATH} CACHE PATH "RPP default ROCm installation path" FORCE)
diff '--color=auto' -urp rpp-0.96.orig/cmake/ClangTidy.cmake rpp-0.96/cmake/ClangTidy.cmake
--- rpp-0.96.orig/cmake/ClangTidy.cmake	2022-08-03 15:34:16.000000000 -0700
+++ rpp-0.96/cmake/ClangTidy.cmake	2024-08-19 11:32:18.227307073 -0700
@@ -39,7 +39,8 @@ find_program(CLANG_TIDY_EXE
     PATH_SUFFIXES
         compiler/bin
     PATHS
-        /opt/rocm/hcc
+        /opt/rocm-@ROCM_VERSION@/hcc
+        /opt/rocm-@ROCM_VERSION@/llvm/bin
         /usr/local/opt/llvm/bin
 )
 
diff '--color=auto' -urp rpp-0.96.orig/cmake/CppCheck.cmake rpp-0.96/cmake/CppCheck.cmake
--- rpp-0.96.orig/cmake/CppCheck.cmake	2022-08-03 15:34:16.000000000 -0700
+++ rpp-0.96/cmake/CppCheck.cmake	2024-08-19 11:32:18.227307073 -0700
@@ -32,7 +32,7 @@ find_program(CPPCHECK_EXE
     NAMES 
         cppcheck
     PATHS
-        /opt/rocm/bin
+        /opt/rocm-@ROCM_VERSION@/bin
 )
 
 ProcessorCount(CPPCHECK_JOBS)
diff '--color=auto' -urp rpp-0.96.orig/cmake/FindOpenCL.cmake rpp-0.96/cmake/FindOpenCL.cmake
--- rpp-0.96.orig/cmake/FindOpenCL.cmake	2022-08-03 15:34:16.000000000 -0700
+++ rpp-0.96/cmake/FindOpenCL.cmake	2024-08-19 11:33:08.782491408 -0700
@@ -62,15 +62,15 @@ else()
             HINTS
             $ENV{OPENCL_ROOT}/lib
             $ENV{AMDAPPSDKROOT}/lib
-            $ENV{CUDA_PATH}/lib
+            $ENV{CUDA_PATH}/lib64
             $ENV{OCL_ROOT}/lib
             DOC "OpenCL dynamic library path"
             PATH_SUFFIXES x86_64 x64 x86_64/sdk
             PATHS
             ${ROCM_PATH}/lib/
-            /usr/lib
+            /usr/lib64
             /usr/local/cuda/lib
-            /opt/cuda/lib
+            /opt/cuda/lib64
         )
     else( )
         find_library( OPENCL_LIBRARIES
@@ -140,4 +140,4 @@ else()
     if( NOT OpenCL_FOUND )
         message( "-- ${Yellow}NOTE: FindOpenCL failed to find -- OpenCL${ColourReset}" )
     endif()
-endif()
\ No newline at end of file
+endif()
diff '--color=auto' -urp rpp-0.96.orig/src/modules/cl/hip_build_utils.cpp rpp-0.96/src/modules/cl/hip_build_utils.cpp
--- rpp-0.96.orig/src/modules/cl/hip_build_utils.cpp	2022-08-03 15:34:16.000000000 -0700
+++ rpp-0.96/src/modules/cl/hip_build_utils.cpp	2024-08-19 11:32:18.231307009 -0700
@@ -59,7 +59,7 @@ boost::filesystem::path HipBuild(boost::
     auto bin_file = tmp_dir->path / (filename + ".o");
     // compile with hcc
     auto env = std::string("KMOPTLLC=-mattr=+enable-ds128");
-    tmp_dir->Execute(env + std::string(" ") + "/opt/rocm/hip/bin/hipcc",
+    tmp_dir->Execute(env + std::string(" ") + "/opt/rocm-@ROCM_VERSION@/hip/bin/hipcc",
                      params + filename + " -o " + bin_file.string());
     if(!boost::filesystem::exists(bin_file))
         RPP_THROW(filename + " failed to compile");
diff '--color=auto' -urp rpp-0.96.orig/src/modules/hip/hip_build_utils.cpp rpp-0.96/src/modules/hip/hip_build_utils.cpp
--- rpp-0.96.orig/src/modules/hip/hip_build_utils.cpp	2022-08-03 15:34:16.000000000 -0700
+++ rpp-0.96/src/modules/hip/hip_build_utils.cpp	2024-08-19 11:32:18.231307009 -0700
@@ -59,7 +59,7 @@ boost::filesystem::path HipBuild(boost::
     auto bin_file = tmp_dir->path / (filename + ".o");
     // compile with hcc
     auto env = std::string("KMOPTLLC=-mattr=+enable-ds128");
-    tmp_dir->Execute(env + std::string(" ") + "/opt/rocm/hip/bin/hipcc",
+    tmp_dir->Execute(env + std::string(" ") + "/opt/rocm-@ROCM_VERSION@/hip/bin/hipcc",
                      params + filename + " -o " + bin_file.string());
     if(!boost::filesystem::exists(bin_file))
         RPP_THROW(filename + " failed to compile");
diff '--color=auto' -urp rpp-0.96.orig/utilities/rpp-performancetests/HIP_NEW/CMakeLists.txt rpp-0.96/utilities/rpp-performancetests/HIP_NEW/CMakeLists.txt
--- rpp-0.96.orig/utilities/rpp-performancetests/HIP_NEW/CMakeLists.txt	2022-08-03 15:34:16.000000000 -0700
+++ rpp-0.96/utilities/rpp-performancetests/HIP_NEW/CMakeLists.txt	2024-08-19 11:32:18.231307009 -0700
@@ -1,7 +1,7 @@
 cmake_minimum_required(VERSION 3.5)
 project(rpp_performancetests/HIP_NEW)
 list(APPEND CMAKE_MODULE_PATH ${PROJECT_SOURCE_DIR}/../../../cmake)
-set(ROCM_PATH /opt/rocm CACHE PATH "default ROCm installation path")
+set(ROCM_PATH /opt/rocm-@ROCM_VERSION@ CACHE PATH "default ROCm installation path")
 list(APPEND CMAKE_PREFIX_PATH ${ROCM_PATH})
 
 # Set message options
@@ -60,4 +60,4 @@ if (hip_FOUND AND OpenCV_FOUND)
     target_link_libraries(uniqueFunctionalities_hip ${OpenCV_LIBS} -lamd_rpp ${hip_LIBRARIES} pthread ${LINK_LIBRARY_LIST} hip::device)
 else()
     message("-- ${Yellow}Error: OpenCV and hip must be installed to install ${PROJECT_NAME} successfully!${ColourReset}")
-endif()
\ No newline at end of file
+endif()
diff '--color=auto' -urp rpp-0.96.orig/utilities/rpp-performancetests/HOST_NEW/CMakeLists.txt rpp-0.96/utilities/rpp-performancetests/HOST_NEW/CMakeLists.txt
--- rpp-0.96.orig/utilities/rpp-performancetests/HOST_NEW/CMakeLists.txt	2022-08-03 15:34:16.000000000 -0700
+++ rpp-0.96/utilities/rpp-performancetests/HOST_NEW/CMakeLists.txt	2024-08-19 11:32:18.231307009 -0700
@@ -1,7 +1,7 @@
 cmake_minimum_required(VERSION 3.5)
 project(rpp_performancetests/HOST_NEW)
 list(APPEND CMAKE_MODULE_PATH ${PROJECT_SOURCE_DIR}/../../../cmake)
-set(ROCM_PATH /opt/rocm CACHE PATH "default ROCm installation path")
+set(ROCM_PATH /opt/rocm-@ROCM_VERSION@ CACHE PATH "default ROCm installation path")
 
 # Set message options
 if(NOT WIN32)
@@ -53,4 +53,4 @@ if (OpenCV_FOUND)
     # target_link_libraries(Single_host ${OpenCV_LIBS} -lamd_rpp ${OpenCL_LIBRARIES} pthread boost_filesystem boost_system )
 else()
     message("-- ${Yellow}Error: OpenCV must be installed to install ${PROJECT_NAME} successfully!${ColourReset}")
-endif()
\ No newline at end of file
+endif()
diff '--color=auto' -urp rpp-0.96.orig/utilities/rpp-performancetests/OCL_NEW/CMakeLists.txt rpp-0.96/utilities/rpp-performancetests/OCL_NEW/CMakeLists.txt
--- rpp-0.96.orig/utilities/rpp-performancetests/OCL_NEW/CMakeLists.txt	2022-08-03 15:34:16.000000000 -0700
+++ rpp-0.96/utilities/rpp-performancetests/OCL_NEW/CMakeLists.txt	2024-08-19 11:32:18.231307009 -0700
@@ -1,7 +1,7 @@
 cmake_minimum_required(VERSION 3.5)
 project(Rpp_test)
 list(APPEND CMAKE_MODULE_PATH ${PROJECT_SOURCE_DIR}/../../../cmake)
-set(ROCM_PATH /opt/rocm CACHE PATH "default ROCm installation path")
+set(ROCM_PATH /opt/rocm-@ROCM_VERSION@ CACHE PATH "default ROCm installation path")
 
 # Set message options
 if(NOT WIN32)
@@ -49,4 +49,4 @@ if (OpenCL_FOUND AND OpenCV_FOUND)
     target_link_libraries(uniqueFunctionalities_ocl ${OpenCV_LIBS} -lamd_rpp ${OpenCL_LIBRARIES} pthread ${LINK_LIBRARY_LIST})
 else()
     message("-- ${Yellow}Error: OpenCV and OpenCL must be installed to install ${PROJECT_NAME} successfully!${ColourReset}")
-endif()
\ No newline at end of file
+endif()
diff '--color=auto' -urp rpp-0.96.orig/utilities/rpp-unittests/HIP_NEW/CMakeLists.txt rpp-0.96/utilities/rpp-unittests/HIP_NEW/CMakeLists.txt
--- rpp-0.96.orig/utilities/rpp-unittests/HIP_NEW/CMakeLists.txt	2022-08-03 15:34:16.000000000 -0700
+++ rpp-0.96/utilities/rpp-unittests/HIP_NEW/CMakeLists.txt	2024-08-19 11:32:18.231307009 -0700
@@ -1,7 +1,7 @@
 cmake_minimum_required(VERSION 3.5)
 project(rpp_unittests/HIP_NEW)
 list(APPEND CMAKE_MODULE_PATH ${PROJECT_SOURCE_DIR}/../../../cmake)
-set(ROCM_PATH /opt/rocm CACHE PATH "default ROCm installation path")
+set(ROCM_PATH /opt/rocm-@ROCM_VERSION@ CACHE PATH "default ROCm installation path")
 list(APPEND CMAKE_PREFIX_PATH ${ROCM_PATH})
 
 # Set message options
@@ -60,4 +60,4 @@ if (hip_FOUND AND OpenCV_FOUND)
     target_link_libraries(uniqueFunctionalities_hip ${OpenCV_LIBS} -lamd_rpp ${hip_LIBRARIES} pthread ${LINK_LIBRARY_LIST} hip::device)
 else()
     message("-- ${Yellow}Error: OpenCV and hip must be installed to install ${PROJECT_NAME} successfully!${ColourReset}")
-endif()
\ No newline at end of file
+endif()
diff '--color=auto' -urp rpp-0.96.orig/utilities/rpp-unittests/HOST_NEW/CMakeLists.txt rpp-0.96/utilities/rpp-unittests/HOST_NEW/CMakeLists.txt
--- rpp-0.96.orig/utilities/rpp-unittests/HOST_NEW/CMakeLists.txt	2022-08-03 15:34:16.000000000 -0700
+++ rpp-0.96/utilities/rpp-unittests/HOST_NEW/CMakeLists.txt	2024-08-19 11:32:18.231307009 -0700
@@ -1,7 +1,7 @@
 cmake_minimum_required(VERSION 3.5)
 project(rpp_unittests/HOST_NEW)
 
-set(ROCM_PATH /opt/rocm CACHE PATH "default ROCm installation path")
+set(ROCM_PATH /opt/rocm-@ROCM_VERSION@ CACHE PATH "default ROCm installation path")
 
 # Set message options
 if(NOT WIN32)
@@ -54,4 +54,4 @@ if (OpenCV_FOUND)
     target_link_libraries(uniqueFunctionalities_host ${OpenCV_LIBS} -lamd_rpp pthread ${LINK_LIBRARY_LIST})
 else()
     message("-- ${Yellow}Error: OpenCV must be installed to install ${PROJECT_NAME} successfully!${ColourReset}")
-endif()
\ No newline at end of file
+endif()
diff '--color=auto' -urp rpp-0.96.orig/utilities/rpp-unittests/OCL_NEW/CMakeLists.txt rpp-0.96/utilities/rpp-unittests/OCL_NEW/CMakeLists.txt
--- rpp-0.96.orig/utilities/rpp-unittests/OCL_NEW/CMakeLists.txt	2022-08-03 15:34:16.000000000 -0700
+++ rpp-0.96/utilities/rpp-unittests/OCL_NEW/CMakeLists.txt	2024-08-19 11:32:18.231307009 -0700
@@ -1,7 +1,7 @@
 cmake_minimum_required(VERSION 3.5)
 project(rpp_unittests/OCL_NEW)
 list(APPEND CMAKE_MODULE_PATH ${PROJECT_SOURCE_DIR}/../../../cmake)
-set(ROCM_PATH /opt/rocm CACHE PATH "default ROCm installation path")
+set(ROCM_PATH /opt/rocm-@ROCM_VERSION@ CACHE PATH "default ROCm installation path")
 
 # Set message options
 if(NOT WIN32)
@@ -50,4 +50,4 @@ if (OpenCL_FOUND AND OpenCV_FOUND)
     target_link_libraries(uniqueFunctionalities_ocl ${OpenCV_LIBS} -lamd_rpp ${OpenCL_LIBRARIES} pthread ${LINK_LIBRARY_LIST})
 else()
     message("-- ${Yellow}Error: OpenCV and OpenCL must be installed to install ${PROJECT_NAME} successfully!${ColourReset}")
-endif()
\ No newline at end of file
+endif()
