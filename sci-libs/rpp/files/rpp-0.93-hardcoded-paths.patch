diff '--color=auto' -urp rpp-0.93.orig/cmake/ClangTidy.cmake rpp-0.93/cmake/ClangTidy.cmake
--- rpp-0.93.orig/cmake/ClangTidy.cmake	2022-03-25 15:51:53.000000000 -0700
+++ rpp-0.93/cmake/ClangTidy.cmake	2024-07-09 08:28:42.835157832 -0700
@@ -39,8 +39,8 @@ find_program(CLANG_TIDY_EXE
     PATH_SUFFIXES
         compiler/bin
     PATHS
-        /opt/rocm/hcc
-        /usr/local/opt/llvm/bin
+        /opt/rocm-@ROCM_VERSION@/hcc
+        /opt/rocm-@ROCM_VERSION@/llvm/bin
 )
 
 function(find_clang_tidy_version VAR)
diff '--color=auto' -urp rpp-0.93.orig/cmake/FindHIP.cmake rpp-0.93/cmake/FindHIP.cmake
--- rpp-0.93.orig/cmake/FindHIP.cmake	2022-03-25 15:51:53.000000000 -0700
+++ rpp-0.93/cmake/FindHIP.cmake	2024-07-09 08:29:36.722410503 -0700
@@ -555,7 +555,7 @@ macro(HIP_ADD_EXECUTABLE hip_target)
         list(REMOVE_ITEM _sources ${_source_files})
     endif()
     if("x${HCC_HOME}" STREQUAL "x")
-        set(HCC_HOME "/opt/rocm/hcc")
+        set(HCC_HOME "/opt/rocm-@ROCM_VERSION@/hcc")
     endif()
     set(CMAKE_HIP_LINK_EXECUTABLE "${HIP_HIPCC_CMAKE_LINKER_HELPER} ${HCC_HOME} <FLAGS> <CMAKE_CXX_LINK_FLAGS> <LINK_FLAGS> <OBJECTS> -o <TARGET> <LINK_LIBRARIES>")
     add_executable(${hip_target} ${_cmake_options} ${_generated_files} ${_sources})
diff '--color=auto' -urp rpp-0.93.orig/src/modules/CMakeLists.txt rpp-0.93/src/modules/CMakeLists.txt
--- rpp-0.93.orig/src/modules/CMakeLists.txt	2022-03-25 15:51:53.000000000 -0700
+++ rpp-0.93/src/modules/CMakeLists.txt	2024-07-09 08:25:20.545987352 -0700
@@ -81,7 +81,7 @@ if( "${BACKEND}" STREQUAL "HIP")
     add_definitions(-DRPP_BACKEND_HIP)
 
     # Add HIP specific includes
-    set(HIP_INC "/opt/rocm/hip/include")
+    set(HIP_INC "/opt/rocm-@ROCM_VERSION@/hip/include")
     set(INCLUDE_LIST ${HIP_INC} ${INCLUDE_LIST})
     message("-- ${Blue}HIP include directories -- ${INCLUDE_LIST}${ColourReset}")
 
@@ -103,7 +103,7 @@ elseif( "${BACKEND}" STREQUAL "OCL")
     add_definitions(-DMOD_CL_PATH="${CMAKE_CURRENT_LIST_DIR}/cl/kernel/")
 
     # Add OpenCL specific includes
-    set(ROCM_INC "/opt/rocm/include")
+    set(ROCM_INC "/opt/rocm-@ROCM_VERSION@/include")
     list(APPEND OpenCL_INCLUDE_DIRS ${CMAKE_SOURCE_DIR}/src/include/cl/)
     set(INCLUDE_LIST ${OpenCL_INCLUDE_DIRS} ${INCLUDE_LIST} ${ROCM_INC})
     message("-- ${Blue}OpenCL include directories -- ${INCLUDE_LIST}${ColourReset}")
@@ -129,4 +129,4 @@ target_include_directories( ${PROJECT_NA
     PRIVATE
         ${CMAKE_SOURCE_DIR}/src/include
         ${INCLUDE_LIST}
-)
\ No newline at end of file
+)
diff '--color=auto' -urp rpp-0.93.orig/src/modules/cl/hip_build_utils.cpp rpp-0.93/src/modules/cl/hip_build_utils.cpp
--- rpp-0.93.orig/src/modules/cl/hip_build_utils.cpp	2022-03-25 15:51:53.000000000 -0700
+++ rpp-0.93/src/modules/cl/hip_build_utils.cpp	2024-07-09 08:25:20.545987352 -0700
@@ -62,7 +62,7 @@ boost::filesystem::path HipBuild(boost::
     auto bin_file = tmp_dir->path / (filename + ".o");
     // compile with hcc
     auto env = std::string("KMOPTLLC=-mattr=+enable-ds128");
-    tmp_dir->Execute(env + std::string(" ") + "/opt/rocm/hip/bin/hipcc",
+    tmp_dir->Execute(env + std::string(" ") + "/opt/rocm-@ROCM_VERSION@/hip/bin/hipcc",
                      params + filename + " -o " + bin_file.string());
     if(!boost::filesystem::exists(bin_file))
         RPP_THROW(filename + " failed to compile");
diff '--color=auto' -urp rpp-0.93.orig/src/modules/hip/hip_build_utils.cpp rpp-0.93/src/modules/hip/hip_build_utils.cpp
--- rpp-0.93.orig/src/modules/hip/hip_build_utils.cpp	2022-03-25 15:51:53.000000000 -0700
+++ rpp-0.93/src/modules/hip/hip_build_utils.cpp	2024-07-09 08:25:20.549987295 -0700
@@ -62,7 +62,7 @@ boost::filesystem::path HipBuild(boost::
     auto bin_file = tmp_dir->path / (filename + ".o");
     // compile with hcc
     auto env = std::string("KMOPTLLC=-mattr=+enable-ds128");
-    tmp_dir->Execute(env + std::string(" ") + "/opt/rocm/hip/bin/hipcc",
+    tmp_dir->Execute(env + std::string(" ") + "/opt/rocm-@ROCM_VERSION@/hip/bin/hipcc",
                      params + filename + " -o " + bin_file.string());
     if(!boost::filesystem::exists(bin_file))
         RPP_THROW(filename + " failed to compile");
