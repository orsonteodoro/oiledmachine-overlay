--- a/third_party/gpus/rocm_configure.bzl.orig	2023-06-28 11:38:35.000000000 -0700
+++ b/third_party/gpus/rocm_configure.bzl	2023-07-26 22:28:15.329182746 -0700
@@ -35,7 +35,7 @@ _ROCM_TOOLKIT_PATH = "ROCM_PATH"
 _TF_ROCM_AMDGPU_TARGETS = "TF_ROCM_AMDGPU_TARGETS"
 _TF_ROCM_CONFIG_REPO = "TF_ROCM_CONFIG_REPO"
 
-_DEFAULT_ROCM_TOOLKIT_PATH = "/opt/rocm"
+_DEFAULT_ROCM_TOOLKIT_PATH = "/usr" # oteodoro:  changed for distro
 
 def verify_build_defines(params):
     """Verify all variables that crosstool/BUILD.rocm.tpl expects are substituted.
@@ -175,10 +175,10 @@ def _rocm_include_path(repository_ctx, r
     inc_dirs = []
 
     # Add HSA headers (needs to match $HSA_PATH)
-    inc_dirs.append(rocm_config.rocm_toolkit_path + "/hsa/include")
+    inc_dirs.append(rocm_config.rocm_toolkit_path + "/include/hsa") # oteodoro:  changed for distro
 
     # Add HIP headers (needs to match $HIP_PATH)
-    inc_dirs.append(rocm_config.rocm_toolkit_path + "/hip/include")
+    inc_dirs.append(rocm_config.rocm_toolkit_path + "/include/hsa") # oteodoro:  changed for distro
     if int(rocm_config.rocm_version_number) >= 50200:
         inc_dirs.append(rocm_config.rocm_toolkit_path + "/include")
         inc_dirs.append(rocm_config.rocm_toolkit_path + "/include/hip")
@@ -188,21 +188,42 @@ def _rocm_include_path(repository_ctx, r
 
     # Add HIP-Clang headers (realpath relative to compiler binary)
     rocm_toolkit_path = realpath(repository_ctx, rocm_config.rocm_toolkit_path, bash_bin)
-    inc_dirs.append(rocm_toolkit_path + "/llvm/lib/clang/8.0/include")
-    inc_dirs.append(rocm_toolkit_path + "/llvm/lib/clang/9.0.0/include")
-    inc_dirs.append(rocm_toolkit_path + "/llvm/lib/clang/10.0.0/include")
-    inc_dirs.append(rocm_toolkit_path + "/llvm/lib/clang/11.0.0/include")
-    inc_dirs.append(rocm_toolkit_path + "/llvm/lib/clang/12.0.0/include")
-    inc_dirs.append(rocm_toolkit_path + "/llvm/lib/clang/13.0.0/include")
-    inc_dirs.append(rocm_toolkit_path + "/llvm/lib/clang/14.0.0/include")
-    inc_dirs.append(rocm_toolkit_path + "/llvm/lib/clang/15.0.0/include")
+    inc_dirs.append(rocm_toolkit_path + "/lib/clang/8.0/include")    # oteodoro:  changed for distro
+    inc_dirs.append(rocm_toolkit_path + "/lib/clang/9.0.0/include")  # oteodoro:  changed for distro
+    inc_dirs.append(rocm_toolkit_path + "/lib/clang/10.0.0/include") # oteodoro:  changed for distro
+    inc_dirs.append(rocm_toolkit_path + "/lib/clang/11.0.0/include") # oteodoro:  changed for distro
+    inc_dirs.append(rocm_toolkit_path + "/lib/clang/12.0.0/include") # oteodoro:  changed for distro
+    inc_dirs.append(rocm_toolkit_path + "/lib/clang/13.0.0/include") # oteodoro:  changed for distro
+    inc_dirs.append(rocm_toolkit_path + "/lib/clang/13.0.1/include") # oteodoro:  changed for distro
+    inc_dirs.append(rocm_toolkit_path + "/lib/clang/14.0.0/include") # oteodoro:  changed for distro
+    inc_dirs.append(rocm_toolkit_path + "/lib/clang/14.0.1/include") # oteodoro:  changed for distro
+    inc_dirs.append(rocm_toolkit_path + "/lib/clang/14.0.2/include") # oteodoro:  changed for distro
+    inc_dirs.append(rocm_toolkit_path + "/lib/clang/14.0.3/include") # oteodoro:  changed for distro
+    inc_dirs.append(rocm_toolkit_path + "/lib/clang/14.0.4/include") # oteodoro:  changed for distro
+    inc_dirs.append(rocm_toolkit_path + "/lib/clang/14.0.5/include") # oteodoro:  changed for distro
+    inc_dirs.append(rocm_toolkit_path + "/lib/clang/14.0.6/include") # oteodoro:  changed for distro
+    inc_dirs.append(rocm_toolkit_path + "/lib/clang/15.0.0/include") # oteodoro:  changed for distro
+    inc_dirs.append(rocm_toolkit_path + "/lib/clang/15.0.1/include") # oteodoro:  changed for distro
+    inc_dirs.append(rocm_toolkit_path + "/lib/clang/15.0.2/include") # oteodoro:  changed for distro
+    inc_dirs.append(rocm_toolkit_path + "/lib/clang/15.0.3/include") # oteodoro:  changed for distro
+    inc_dirs.append(rocm_toolkit_path + "/lib/clang/15.0.4/include") # oteodoro:  changed for distro
+    inc_dirs.append(rocm_toolkit_path + "/lib/clang/15.0.5/include") # oteodoro:  changed for distro
+    inc_dirs.append(rocm_toolkit_path + "/lib/clang/15.0.6/include") # oteodoro:  changed for distro
+    inc_dirs.append(rocm_toolkit_path + "/lib/clang/15.0.7/include") # oteodoro:  changed for distro
+    inc_dirs.append(rocm_toolkit_path + "/lib/clang/16.0.0/include") # oteodoro:  changed for distro
+    inc_dirs.append(rocm_toolkit_path + "/lib/clang/16.0.1/include") # oteodoro:  changed for distro
+    inc_dirs.append(rocm_toolkit_path + "/lib/clang/16.0.2/include") # oteodoro:  changed for distro
+    inc_dirs.append(rocm_toolkit_path + "/lib/clang/16.0.3/include") # oteodoro:  changed for distro
+    inc_dirs.append(rocm_toolkit_path + "/lib/clang/16.0.4/include") # oteodoro:  changed for distro
+    inc_dirs.append(rocm_toolkit_path + "/lib/clang/16.0.5/include") # oteodoro:  changed for distro
+    inc_dirs.append(rocm_toolkit_path + "/lib/clang/16.0.6/include") # oteodoro:  changed for distro
 
     # Support hcc based off clang 10.0.0 (for ROCm 3.3)
     inc_dirs.append(rocm_toolkit_path + "/hcc/compiler/lib/clang/10.0.0/include/")
     inc_dirs.append(rocm_toolkit_path + "/hcc/lib/clang/10.0.0/include")
 
     # Add hcc headers
-    inc_dirs.append(rocm_toolkit_path + "/hcc/include")
+    inc_dirs.append(rocm_toolkit_path + "/include/hcc") # oteodoro:  changed for distro
 
     return inc_dirs
 
@@ -335,14 +356,14 @@ def _find_libs(repository_ctx, rocm_conf
     libs_paths = [
         (name, _rocm_lib_paths(repository_ctx, name, path))
         for name, path in [
-            ("amdhip64", rocm_config.rocm_toolkit_path + "/hip"),
+            ("amdhip64", rocm_config.rocm_toolkit_path), # oteodoro:  changed for distro
             ("rocblas", rocm_config.rocm_toolkit_path),
             (hipfft_or_rocfft, rocm_config.rocm_toolkit_path),
             ("hiprand", rocm_config.rocm_toolkit_path),
             ("MIOpen", miopen_path),
             ("rccl", rccl_path),
             ("hipsparse", rocm_config.rocm_toolkit_path),
-            ("roctracer64", rocm_config.rocm_toolkit_path + "/roctracer"),
+            ("roctracer64", rocm_config.rocm_toolkit_path), # oteodoro:  changed for distro
             ("rocsolver", rocm_config.rocm_toolkit_path),
         ]
     ]
@@ -586,7 +607,7 @@ def _create_local_rocm_repository(reposi
             make_copy_dir_rule(
                 repository_ctx,
                 name = "hiprand-include",
-                src_dir = rocm_toolkit_path + "/hiprand/include",
+                src_dir = rocm_toolkit_path + "/include/hiprand", # oteodoro:  changed for distro
                 out_dir = "rocm/include/hiprand",
             ),
         )
@@ -600,7 +621,7 @@ def _create_local_rocm_repository(reposi
             make_copy_dir_rule(
                 repository_ctx,
                 name = "rocrand-include",
-                src_dir = rocm_toolkit_path + "/rocrand/include",
+                src_dir = rocm_toolkit_path + "/include/rocrand", # oteodoro:  changed for distro
                 out_dir = "rocm/include/rocrand",
             ),
         )
@@ -618,7 +639,8 @@ def _create_local_rocm_repository(reposi
         outs = rocm_lib_outs,
     ))
 
-    clang_offload_bundler_path = rocm_toolkit_path + "/llvm/bin/clang-offload-bundler"
+    rocm_llvm_slot = get_host_environ(repository_ctx, "TF_ROCM_LLVM_SLOT", "16")                                  # oteodoro:  changed for distro
+    clang_offload_bundler_path = rocm_toolkit_path + "/lib/llvm/" + rocm_llvm_slot + "/bin/clang-offload-bundler" # oteodoro:  changed for distro
 
     # copy files mentioned in third_party/gpus/rocm/BUILD
     copy_rules.append(make_copy_files_rule(
@@ -814,6 +836,7 @@ _ENVIRONS = [
     _GCC_HOST_COMPILER_PATH,
     _GCC_HOST_COMPILER_PREFIX,
     "TF_NEED_ROCM",
+    "TF_ROCM_LLVM_SLOT", # oteodoro:  changed for distro
     _ROCM_TOOLKIT_PATH,
     _TF_ROCM_AMDGPU_TARGETS,
 ]
