# Split patch of original patch
Original patch:  https://gist.githubusercontent.com/raw/ed891528aacf0c5baf3a789e5e9aaead
Context:  https://bugs.gentoo.org/705712#c29
--- a/tensorflow/compiler/mlir/tools/kernel_gen/transforms/gpu_kernel_to_blob_pass.cc.orig	2024-03-07 18:19:10.000000000 -0800
+++ b/tensorflow/compiler/mlir/tools/kernel_gen/transforms/gpu_kernel_to_blob_pass.cc	2024-03-13 14:38:10.192834884 -0700
@@ -231,7 +231,8 @@ class GpuKernelToBlobPass
           "compute_)");
     }
     int arch;
-    if (!absl::SimpleAtoi(consumable_arch, &arch)) {
+    absl::SimpleAtoi(consumable_arch, &arch);
+    if (arch <= 0) {
       return tensorflow::errors::Internal(
           "Could not parse cuda architecture number");
     }
--- a/third_party/xla/xla/service/gpu/llvm_gpu_backend/gpu_backend_lib.cc.orig	2024-03-07 18:19:10.000000000 -0800
+++ b/third_party/xla/xla/service/gpu/llvm_gpu_backend/gpu_backend_lib.cc	2024-03-13 14:38:21.840779171 -0700
@@ -767,7 +767,7 @@ StatusOr<std::vector<uint8_t>> EmitModul
   // Locate lld.
   // TODO(whchung@gmail.com): change to tensorflow::ROCmRoot() after
   // ROCm-Device-Libs PR.
-  std::string lld_path = tsl::io::JoinPath("/opt/rocm", "llvm/bin");
+  std::string lld_path = "@ESYSROOT_LLVM_PATH@/bin";
   auto lld_program = llvm::sys::findProgramByName("ld.lld", {lld_path});
   if (!lld_program) {
     return xla::InternalError("unable to find ld.lld in PATH: %s",
--- a/third_party/xla/xla/stream_executor/gpu/asm_compiler.cc.orig	2024-03-07 18:19:10.000000000 -0800
+++ b/third_party/xla/xla/stream_executor/gpu/asm_compiler.cc	2024-03-13 14:38:32.848726439 -0700
@@ -439,7 +439,7 @@ static std::string findRocmExecutable(co
 tsl::StatusOr<std::vector<uint8_t>> BundleGpuAsm(
     std::vector<HsacoImage> images, const std::string rocm_root_dir) {
   std::string clang_offload_bundler_path =
-      findRocmExecutable("llvm/bin/clang-offload-bundler", rocm_root_dir);
+      "@ESYSROOT_LLVM_PATH@/bin/clang-offload-bundler";
 
   // Initialise the "--inputs" / "--targets" arguments for the
   // clang-offload-bundler with a dummy file / host target triple...
--- a/third_party/xla/third_party/tsl/tsl/platform/default/rocm_rocdl_path.cc.orig	2024-03-07 18:19:10.000000000 -0800
+++ b/third_party/xla/third_party/tsl/tsl/platform/default/rocm_rocdl_path.cc	2024-03-13 14:38:37.168705724 -0700
@@ -40,6 +40,6 @@ string RocmRoot() {
 #endif
 }
 
-string RocdlRoot() { return io::JoinPath(RocmRoot(), "amdgcn/bitcode"); }
+string RocdlRoot() { return io::JoinPath(RocmRoot(), "@LIBDIR@/amdgcn/bitcode"); }
 
 }  // namespace tsl
