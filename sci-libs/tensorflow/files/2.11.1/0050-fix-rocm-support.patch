--- a/third_party/gpus/rocm_configure.bzl.orig	2022-11-15 17:17:12.000000000 -0800
+++ b/third_party/gpus/rocm_configure.bzl	2023-07-26 17:58:54.592761830 -0700
@@ -35,7 +35,7 @@ _ROCM_TOOLKIT_PATH = "ROCM_PATH"
 _TF_ROCM_AMDGPU_TARGETS = "TF_ROCM_AMDGPU_TARGETS"
 _TF_ROCM_CONFIG_REPO = "TF_ROCM_CONFIG_REPO"
 
-_DEFAULT_ROCM_TOOLKIT_PATH = "/opt/rocm"
+_DEFAULT_ROCM_TOOLKIT_PATH = "/usr" # oteodoro:  changed for distro
 
 def verify_build_defines(params):
     """Verify all variables that crosstool/BUILD.rocm.tpl expects are substituted.
@@ -175,27 +175,34 @@ def _rocm_include_path(repository_ctx, r
     inc_dirs = []
 
     # Add HSA headers (needs to match $HSA_PATH)
-    inc_dirs.append(rocm_config.rocm_toolkit_path + "/hsa/include")
+    inc_dirs.append(rocm_config.rocm_toolkit_path + "/include/hsa") # oteodoro:  changed for distro
 
     # Add HIP headers (needs to match $HIP_PATH)
-    inc_dirs.append(rocm_config.rocm_toolkit_path + "/hip/include")
+    inc_dirs.append(rocm_config.rocm_toolkit_path + "/include/hip") # oteodoro:  changed for distro
 
     # Add HIP-Clang headers (realpath relative to compiler binary)
     rocm_toolkit_path = realpath(repository_ctx, rocm_config.rocm_toolkit_path, bash_bin)
-    inc_dirs.append(rocm_toolkit_path + "/llvm/lib/clang/8.0/include")
-    inc_dirs.append(rocm_toolkit_path + "/llvm/lib/clang/9.0.0/include")
-    inc_dirs.append(rocm_toolkit_path + "/llvm/lib/clang/10.0.0/include")
-    inc_dirs.append(rocm_toolkit_path + "/llvm/lib/clang/11.0.0/include")
-    inc_dirs.append(rocm_toolkit_path + "/llvm/lib/clang/12.0.0/include")
-    inc_dirs.append(rocm_toolkit_path + "/llvm/lib/clang/13.0.0/include")
-    inc_dirs.append(rocm_toolkit_path + "/llvm/lib/clang/14.0.0/include")
+    inc_dirs.append(rocm_toolkit_path + "/lib/clang/8.0/include")    # oteodoro:  changed for distro
+    inc_dirs.append(rocm_toolkit_path + "/lib/clang/9.0.0/include")  # oteodoro:  changed for distro
+    inc_dirs.append(rocm_toolkit_path + "/lib/clang/10.0.0/include") # oteodoro:  changed for distro
+    inc_dirs.append(rocm_toolkit_path + "/lib/clang/11.0.0/include") # oteodoro:  changed for distro
+    inc_dirs.append(rocm_toolkit_path + "/lib/clang/12.0.0/include") # oteodoro:  changed for distro
+    inc_dirs.append(rocm_toolkit_path + "/lib/clang/13.0.0/include") # oteodoro:  changed for distro
+    inc_dirs.append(rocm_toolkit_path + "/lib/clang/13.0.1/include") # oteodoro:  changed for distro
+    inc_dirs.append(rocm_toolkit_path + "/lib/clang/14.0.0/include") # oteodoro:  changed for distro
+    inc_dirs.append(rocm_toolkit_path + "/lib/clang/14.0.1/include") # oteodoro:  changed for distro
+    inc_dirs.append(rocm_toolkit_path + "/lib/clang/14.0.2/include") # oteodoro:  changed for distro
+    inc_dirs.append(rocm_toolkit_path + "/lib/clang/14.0.3/include") # oteodoro:  changed for distro
+    inc_dirs.append(rocm_toolkit_path + "/lib/clang/14.0.4/include") # oteodoro:  changed for distro
+    inc_dirs.append(rocm_toolkit_path + "/lib/clang/14.0.5/include") # oteodoro:  changed for distro
+    inc_dirs.append(rocm_toolkit_path + "/lib/clang/14.0.6/include") # oteodoro:  changed for distro
 
     # Support hcc based off clang 10.0.0 (for ROCm 3.3)
     inc_dirs.append(rocm_toolkit_path + "/hcc/compiler/lib/clang/10.0.0/include/")
     inc_dirs.append(rocm_toolkit_path + "/hcc/lib/clang/10.0.0/include")
 
     # Add hcc headers
-    inc_dirs.append(rocm_toolkit_path + "/hcc/include")
+    inc_dirs.append(rocm_toolkit_path + "/include/hcc") # oteodoro:  changed for distro
 
     return inc_dirs
 
@@ -328,20 +335,20 @@ def _find_libs(repository_ctx, rocm_conf
     libs_paths = [
         (name, _rocm_lib_paths(repository_ctx, name, path))
         for name, path in [
-            ("amdhip64", rocm_config.rocm_toolkit_path + "/hip"),
-            ("rocblas", rocm_config.rocm_toolkit_path + "/rocblas"),
-            (hipfft_or_rocfft, rocm_config.rocm_toolkit_path + "/" + hipfft_or_rocfft),
+            ("amdhip64", rocm_config.rocm_toolkit_path),       # oteodoro:  changed for distro
+            ("rocblas", rocm_config.rocm_toolkit_path),        # oteodoro:  changed for distro
+            (hipfft_or_rocfft, rocm_config.rocm_toolkit_path), # oteodoro:  changed for distro
             ("hiprand", rocm_config.rocm_toolkit_path),
-            ("MIOpen", rocm_config.rocm_toolkit_path + "/miopen"),
-            ("rccl", rocm_config.rocm_toolkit_path + "/rccl"),
-            ("hipsparse", rocm_config.rocm_toolkit_path + "/hipsparse"),
-            ("roctracer64", rocm_config.rocm_toolkit_path + "/roctracer"),
-            ("rocsolver", rocm_config.rocm_toolkit_path + "/rocsolver"),
+            ("MIOpen", rocm_config.rocm_toolkit_path),         # oteodoro:  changed for distro
+            ("rccl", rocm_config.rocm_toolkit_path),           # oteodoro:  changed for distro
+            ("hipsparse", rocm_config.rocm_toolkit_path),      # oteodoro:  changed for distro
+            ("roctracer64", rocm_config.rocm_toolkit_path),    # oteodoro:  changed for distro
+            ("rocsolver", rocm_config.rocm_toolkit_path),      # oteodoro:  changed for distro
         ]
     ]
     if int(rocm_config.rocm_version_number) >= 40500:
-        libs_paths.append(("hipsolver", _rocm_lib_paths(repository_ctx, "hipsolver", rocm_config.rocm_toolkit_path + "/hipsolver")))
-        libs_paths.append(("hipblas", _rocm_lib_paths(repository_ctx, "hipblas", rocm_config.rocm_toolkit_path + "/hipblas")))
+        libs_paths.append(("hipsolver", _rocm_lib_paths(repository_ctx, "hipsolver", rocm_config.rocm_toolkit_path))) # oteodoro:  changed for distro
+        libs_paths.append(("hipblas", _rocm_lib_paths(repository_ctx, "hipblas", rocm_config.rocm_toolkit_path)))     # oteodoro:  changed for distro
     return _select_rocm_lib_paths(repository_ctx, libs_paths, bash_bin)
 
 def _exec_find_rocm_config(repository_ctx, script_path):
@@ -564,13 +571,13 @@ def _create_local_rocm_repository(reposi
         make_copy_dir_rule(
             repository_ctx,
             name = hipfft_or_rocfft + "-include",
-            src_dir = rocm_toolkit_path + "/" + hipfft_or_rocfft + "/include",
+            src_dir = rocm_toolkit_path + "/include/" + hipfft_or_rocfft, # oteodoro:  changed for distro
             out_dir = "rocm/include/" + hipfft_or_rocfft,
         ),
         make_copy_dir_rule(
             repository_ctx,
             name = "rocblas-include",
-            src_dir = rocm_toolkit_path + "/rocblas/include",
+            src_dir = rocm_toolkit_path + "/include/rocblas", # oteodoro:  changed for distro
             out_dir = "rocm/include/rocblas",
         ),
         make_copy_dir_rule(
@@ -582,25 +589,25 @@ def _create_local_rocm_repository(reposi
         make_copy_dir_rule(
             repository_ctx,
             name = "miopen-include",
-            src_dir = rocm_toolkit_path + "/miopen/include",
+            src_dir = rocm_toolkit_path + "/include/miopen", # oteodoro:  changed for distro
             out_dir = "rocm/include/miopen",
         ),
         make_copy_dir_rule(
             repository_ctx,
             name = "rccl-include",
-            src_dir = rocm_toolkit_path + "/rccl/include",
+            src_dir = rocm_toolkit_path + "/include/rccl", # oteodoro:  changed for distro
             out_dir = "rocm/include/rccl",
         ),
         make_copy_dir_rule(
             repository_ctx,
             name = "hipsparse-include",
-            src_dir = rocm_toolkit_path + "/hipsparse/include",
+            src_dir = rocm_toolkit_path + "/include/hipsparse", # oteodoro:  changed for distro
             out_dir = "rocm/include/hipsparse",
         ),
         make_copy_dir_rule(
             repository_ctx,
             name = "rocsolver-include",
-            src_dir = rocm_toolkit_path + "/rocsolver/include",
+            src_dir = rocm_toolkit_path + "/include/rocsolver", # oteodoro:  changed for distro
             out_dir = "rocm/include/rocsolver",
         ),
     ]
@@ -611,7 +618,7 @@ def _create_local_rocm_repository(reposi
             make_copy_dir_rule(
                 repository_ctx,
                 name = "hipsolver-include",
-                src_dir = rocm_toolkit_path + "/hipsolver/include",
+                src_dir = rocm_toolkit_path + "/include/hipsolver", # oteodoro:  changed for distro
                 out_dir = "rocm/include/hipsolver",
             ),
         )
@@ -619,7 +626,7 @@ def _create_local_rocm_repository(reposi
             make_copy_dir_rule(
                 repository_ctx,
                 name = "hipblas-include",
-                src_dir = rocm_toolkit_path + "/hipblas/include",
+                src_dir = rocm_toolkit_path + "/include/hipblas", # oteodoro:  changed for distro
                 out_dir = "rocm/include/hipblas",
             ),
         )
@@ -636,7 +643,7 @@ def _create_local_rocm_repository(reposi
             make_copy_dir_rule(
                 repository_ctx,
                 name = "hiprand-include",
-                src_dir = rocm_toolkit_path + "/hiprand/include",
+                src_dir = rocm_toolkit_path + "/include/hiprand", # oteodoro:  changed for distro
                 out_dir = "rocm/include/hiprand",
             ),
         )
@@ -650,7 +657,7 @@ def _create_local_rocm_repository(reposi
             make_copy_dir_rule(
                 repository_ctx,
                 name = "rocrand-include",
-                src_dir = rocm_toolkit_path + "/rocrand/include",
+                src_dir = rocm_toolkit_path + "/include/rocrand", # oteodoro:  changed for distro
                 out_dir = "rocm/include/rocrand",
             ),
         )
@@ -668,7 +675,8 @@ def _create_local_rocm_repository(reposi
         outs = rocm_lib_outs,
     ))
 
-    clang_offload_bundler_path = rocm_toolkit_path + "/llvm/bin/clang-offload-bundler"
+    rocm_llvm_slot = get_host_environ(repository_ctx, "TF_ROCM_LLVM_SLOT", "14")                                  # oteodoro:  changed for distro
+    clang_offload_bundler_path = rocm_toolkit_path + "/lib/llvm/" + rocm_llvm_slot + "/bin/clang-offload-bundler" # oteodoro:  changed for distro
 
     # copy files mentioned in third_party/gpus/rocm/BUILD
     copy_rules.append(make_copy_files_rule(
@@ -872,6 +880,7 @@ _ENVIRONS = [
     _GCC_HOST_COMPILER_PATH,
     _GCC_HOST_COMPILER_PREFIX,
     "TF_NEED_ROCM",
+    "TF_ROCM_LLVM_SLOT", # oteodoro:  changed for distro
     _ROCM_TOOLKIT_PATH,
     _TF_ROCM_AMDGPU_TARGETS,
 ]
