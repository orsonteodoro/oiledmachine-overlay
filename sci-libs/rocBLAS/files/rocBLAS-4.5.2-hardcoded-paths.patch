diff '--color=auto' -urp rocBLAS-rocm-4.5.2.orig/CMakeLists.txt rocBLAS-rocm-4.5.2/CMakeLists.txt
--- rocBLAS-rocm-4.5.2.orig/CMakeLists.txt	2024-07-20 11:30:56.432502929 -0700
+++ rocBLAS-rocm-4.5.2/CMakeLists.txt	2024-07-20 11:31:53.027605252 -0700
@@ -102,7 +102,7 @@ endif( )
 # This finds the rocm-cmake project, and installs it if not found
 # rocm-cmake contains common cmake code for rocm projects to help setup and install
 set( PROJECT_EXTERN_DIR ${CMAKE_CURRENT_BINARY_DIR}/extern )
-find_package( ROCM 0.6 CONFIG QUIET PATHS ${ROCM_PATH} /opt/rocm )
+find_package( ROCM 0.6 CONFIG QUIET PATHS ${ROCM_PATH} /opt/rocm-@ROCM_VERSION@ )
 if( NOT ROCM_FOUND )
   set( rocm_cmake_tag "master" CACHE STRING "rocm-cmake tag to download" )
   file( DOWNLOAD https://github.com/RadeonOpenCompute/rocm-cmake/archive/${rocm_cmake_tag}.zip
@@ -153,7 +153,7 @@ rocm_setup_version( VERSION ${VERSION_ST
 list( APPEND CMAKE_MODULE_PATH ${CMAKE_CURRENT_SOURCE_DIR}/cmake )
 
 # NOTE:  workaround until llvm & hip cmake modules fixes symlink logic in their config files; remove when fixed
-list( APPEND CMAKE_PREFIX_PATH ${ROCM_PATH}/llvm ${ROCM_PATH}/hip /opt/rocm/llvm /opt/rocm/hip )
+list( APPEND CMAKE_PREFIX_PATH ${ROCM_PATH}/llvm ${ROCM_PATH}/hip /opt/rocm-@ROCM_VERSION@/llvm /opt/rocm-@ROCM_VERSION@/hip )
 
 option( BUILD_VERBOSE "Output additional build information" OFF )
 
@@ -274,7 +274,7 @@ endif()
 
 # Find HIP dependencies
 if( CMAKE_CXX_COMPILER_ID MATCHES "Clang" )
-  find_package( hip REQUIRED CONFIG PATHS ${HIP_DIR} ${ROCM_PATH} /opt/rocm )
+  find_package( hip REQUIRED CONFIG PATHS ${HIP_DIR} ${ROCM_PATH} /opt/rocm-@ROCM_VERSION@ )
 endif( )
 
 message(STATUS "Using AMDGPU_TARGETS: ${AMDGPU_TARGETS}")
@@ -335,7 +335,7 @@ if(BUILD_CODE_COVERAGE)
     COMMAND mkdir -p lcoverage
     COMMAND echo "\\#!/bin/bash" > llvm-gcov.sh
     COMMAND echo "\\# THIS FILE HAS BEEN GENERATED" >> llvm-gcov.sh
-    COMMAND printf "exec /opt/rocm/llvm/bin/llvm-cov gcov $$\\@" >> llvm-gcov.sh
+    COMMAND printf "exec /opt/rocm-@ROCM_VERSION@/llvm/bin/llvm-cov gcov $$\\@" >> llvm-gcov.sh
     COMMAND chmod +x llvm-gcov.sh
     )
 
Only in rocBLAS-rocm-4.5.2: CMakeLists.txt.orig
Only in rocBLAS-rocm-4.5.2: CMakeLists.txt.rej
diff '--color=auto' -urp rocBLAS-rocm-4.5.2.orig/clients/CMakeLists.txt rocBLAS-rocm-4.5.2/clients/CMakeLists.txt
--- rocBLAS-rocm-4.5.2.orig/clients/CMakeLists.txt	2021-09-30 14:43:15.000000000 -0700
+++ rocBLAS-rocm-4.5.2/clients/CMakeLists.txt	2024-07-20 11:31:10.536279237 -0700
@@ -78,11 +78,11 @@ include( build-options )
 set( CMAKE_EXPORT_COMPILE_COMMANDS ON )
 
 if( NOT TARGET rocblas )
-  find_package( rocblas REQUIRED CONFIG PATHS ${ROCM_PATH}/rocblas /opt/rocm/rocblas ${ROCBLAS_LIBRARY_DIR})
+  find_package( rocblas REQUIRED CONFIG PATHS ${ROCM_PATH}/rocblas /opt/rocm-@ROCM_VERSION@/rocblas ${ROCBLAS_LIBRARY_DIR})
 endif( )
 
 # Hip headers required of all clients; clients use hip to allocate device memory
-list( APPEND CMAKE_PREFIX_PATH ${ROCM_PATH} /opt/rocm )
+list( APPEND CMAKE_PREFIX_PATH ${ROCM_PATH} /opt/rocm-@ROCM_VERSION@ )
 if ( NOT hip_FOUND )
   find_package( hip REQUIRED CONFIG PATHS ${ROCM_PATH} )
 endif( )
diff '--color=auto' -urp rocBLAS-rocm-4.5.2.orig/library/src/tensile_host.cpp rocBLAS-rocm-4.5.2/library/src/tensile_host.cpp
--- rocBLAS-rocm-4.5.2.orig/library/src/tensile_host.cpp	2021-09-30 14:43:15.000000000 -0700
+++ rocBLAS-rocm-4.5.2/library/src/tensile_host.cpp	2024-07-20 11:31:10.540279173 -0700
@@ -53,7 +53,7 @@ extern "C" void rocblas_initialize() {}
 #include <glob.h>
 #include <libgen.h>
 #include <unistd.h>
-#define ROCBLAS_LIB_PATH "/opt/rocm/rocblas/lib"
+#define ROCBLAS_LIB_PATH "/opt/rocm-@ROCM_VERSION@/rocblas/lib"
 #endif
 
 #ifdef WIN32
Only in rocBLAS-rocm-4.5.2/library/src: tensile_host.cpp.orig
diff '--color=auto' -urp rocBLAS-rocm-4.5.2.orig/rmake.py rocBLAS-rocm-4.5.2/rmake.py
--- rocBLAS-rocm-4.5.2.orig/rmake.py	2021-09-30 14:43:15.000000000 -0700
+++ rocBLAS-rocm-4.5.2/rmake.py	2024-07-20 11:32:22.291141040 -0700
@@ -38,7 +38,7 @@ def parse_args():
     parser.add_argument(     '--clients-only', dest='clients_only', required=False, default = False, action='store_true',
                         help='Build only clients with a pre-built library')
     parser.add_argument(     '--library-path', dest='library_dir_installed', type=str, required=False, default = "", 
-                        help='When only building clients, the path to the pre-built rocBLAS library (optional, default: /opt/rocm/rocblas)')
+                        help='When only building clients, the path to the pre-built rocBLAS library (optional, default: /opt/rocm-@ROCM_VERSION@/rocblas)')
     parser.add_argument(      '--cpu_ref_lib', type=str, required=False, default = "blis",
                         help='Specify library to use for CPU reference code in testing (blis or lapack)')
     parser.add_argument(      '--rocm_dev', type=str, required=False, default = "",
@@ -121,7 +121,7 @@ def config_cmd():
         cmake_options.append( generator )
         toolchain = os.path.join( src_path, "toolchain-windows.cmake" )
     else:
-        rocm_path = os.getenv( 'ROCM_PATH', "/opt/rocm")
+        rocm_path = os.getenv( 'ROCM_PATH', "/opt/rocm-@ROCM_VERSION@")
         if (OS_info["ID"] in ['centos', 'rhel']):
           cmake_executable = "cmake" # was cmake3 but now we built cmake
         else:
Only in rocBLAS-rocm-4.5.2: rmake.py.orig
Only in rocBLAS-rocm-4.5.2: rmake.py.rej
diff '--color=auto' -urp rocBLAS-rocm-4.5.2.orig/toolchain-linux.cmake rocBLAS-rocm-4.5.2/toolchain-linux.cmake
--- rocBLAS-rocm-4.5.2.orig/toolchain-linux.cmake	2021-09-30 14:43:15.000000000 -0700
+++ rocBLAS-rocm-4.5.2/toolchain-linux.cmake	2024-07-20 11:31:10.540279173 -0700
@@ -2,7 +2,7 @@
 if (DEFINED ENV{ROCM_PATH})
   set(rocm_bin "$ENV{ROCM_PATH}/hip/bin")
 else()
-  set(rocm_bin "/opt/rocm/hip/bin")
+  set(rocm_bin "/opt/rocm-@ROCM_VERSION@/hip/bin")
 endif()
 
 set(CMAKE_CXX_COMPILER "${rocm_bin}/hipcc")
