diff '--color=auto' -urp rocBLAS-rocm-5.1.3.orig/CMakeLists.txt rocBLAS-rocm-5.1.3/CMakeLists.txt
--- rocBLAS-rocm-5.1.3.orig/CMakeLists.txt	2024-07-09 14:10:14.355114650 -0700
+++ rocBLAS-rocm-5.1.3/CMakeLists.txt	2024-07-09 14:12:21.773548483 -0700
@@ -107,7 +107,7 @@ endif( )
 # This finds the rocm-cmake project, and installs it if not found
 # rocm-cmake contains common cmake code for rocm projects to help setup and install
 set( PROJECT_EXTERN_DIR ${CMAKE_CURRENT_BINARY_DIR}/extern )
-find_package( ROCM 0.7 CONFIG QUIET PATHS ${ROCM_PATH} /opt/rocm )
+find_package( ROCM 0.7 CONFIG QUIET PATHS ${ROCM_PATH} /opt/rocm-@ROCM_VERSION@ )
 if( NOT ROCM_FOUND )
   set( rocm_cmake_tag "master" CACHE STRING "rocm-cmake tag to download" )
   file( DOWNLOAD https://github.com/RadeonOpenCompute/rocm-cmake/archive/${rocm_cmake_tag}.zip
@@ -158,7 +158,7 @@ rocm_setup_version( VERSION ${VERSION_ST
 list( APPEND CMAKE_MODULE_PATH ${CMAKE_CURRENT_SOURCE_DIR}/cmake )
 
 # NOTE:  workaround until llvm & hip cmake modules fixes symlink logic in their config files; remove when fixed
-list( APPEND CMAKE_PREFIX_PATH ${ROCM_PATH}/llvm ${ROCM_PATH}/hip /opt/rocm/llvm /opt/rocm/hip )
+list( APPEND CMAKE_PREFIX_PATH ${ROCM_PATH}/llvm ${ROCM_PATH}/hip /opt/rocm-@ROCM_VERSION@/llvm /opt/rocm-@ROCM_VERSION@/hip )
 
 option( BUILD_VERBOSE "Output additional build information" OFF )
 
@@ -282,7 +282,7 @@ endif()
 
 # Find HIP dependencies
 if( CMAKE_CXX_COMPILER_ID MATCHES "Clang" )
-  find_package( hip REQUIRED CONFIG PATHS ${HIP_DIR} ${ROCM_PATH} /opt/rocm )
+  find_package( hip REQUIRED CONFIG PATHS ${HIP_DIR} ${ROCM_PATH} /opt/rocm-@ROCM_VERSION@ )
 endif( )
 
 message(STATUS "Using AMDGPU_TARGETS: ${AMDGPU_TARGETS}")
@@ -340,7 +340,7 @@ if(BUILD_CODE_COVERAGE)
     COMMAND mkdir -p lcoverage
     COMMAND echo "\\#!/bin/bash" > llvm-gcov.sh
     COMMAND echo "\\# THIS FILE HAS BEEN GENERATED" >> llvm-gcov.sh
-    COMMAND printf "exec /opt/rocm/llvm/bin/llvm-cov gcov $$\\@" >> llvm-gcov.sh
+    COMMAND printf "exec /opt/rocm-@ROCM_VERSION@/llvm/bin/llvm-cov gcov $$\\@" >> llvm-gcov.sh
     COMMAND chmod +x llvm-gcov.sh
     )
 
diff '--color=auto' -urp rocBLAS-rocm-5.1.3.orig/clients/CMakeLists.txt rocBLAS-rocm-5.1.3/clients/CMakeLists.txt
--- rocBLAS-rocm-5.1.3.orig/clients/CMakeLists.txt	2022-04-27 09:22:13.000000000 -0700
+++ rocBLAS-rocm-5.1.3/clients/CMakeLists.txt	2024-07-09 14:12:25.913497476 -0700
@@ -78,11 +78,11 @@ include( build-options )
 set( CMAKE_EXPORT_COMPILE_COMMANDS ON )
 
 if( NOT TARGET rocblas )
-  find_package( rocblas REQUIRED CONFIG PATHS ${ROCM_PATH}/rocblas /opt/rocm/rocblas ${ROCBLAS_LIBRARY_DIR})
+  find_package( rocblas REQUIRED CONFIG PATHS ${ROCM_PATH}/rocblas /opt/rocm-@ROCM_VERSION@/rocblas ${ROCBLAS_LIBRARY_DIR})
 endif( )
 
 # Hip headers required of all clients; clients use hip to allocate device memory
-list( APPEND CMAKE_PREFIX_PATH ${ROCM_PATH} /opt/rocm )
+list( APPEND CMAKE_PREFIX_PATH ${ROCM_PATH} /opt/rocm-@ROCM_VERSION@ )
 if ( NOT hip_FOUND )
   find_package( hip REQUIRED CONFIG PATHS ${ROCM_PATH} )
 endif( )
diff '--color=auto' -urp rocBLAS-rocm-5.1.3.orig/library/src/tensile_host.cpp rocBLAS-rocm-5.1.3/library/src/tensile_host.cpp
--- rocBLAS-rocm-5.1.3.orig/library/src/tensile_host.cpp	2022-04-27 09:22:13.000000000 -0700
+++ rocBLAS-rocm-5.1.3/library/src/tensile_host.cpp	2024-07-09 14:10:36.958837341 -0700
@@ -46,7 +46,7 @@ extern "C" void rocblas_shutdown();
 #include <libgen.h>
 #include <link.h>
 #include <unistd.h>
-#define ROCBLAS_LIB_PATH "/opt/rocm/rocblas/lib"
+#define ROCBLAS_LIB_PATH "/opt/rocm-@ROCM_VERSION@/rocblas/lib"
 #endif
 
 #ifdef WIN32
diff '--color=auto' -urp rocBLAS-rocm-5.1.3.orig/rmake.py rocBLAS-rocm-5.1.3/rmake.py
--- rocBLAS-rocm-5.1.3.orig/rmake.py	2022-04-27 09:22:13.000000000 -0700
+++ rocBLAS-rocm-5.1.3/rmake.py	2024-07-09 14:12:32.797412646 -0700
@@ -58,7 +58,7 @@ def parse_args():
                         help='Specify the Tensile logic target, e.g., asm_full, asm_lite, etc. (optional, default: asm_full)')
 
     parser.add_argument(     '--library-path', dest='library_dir_installed', type=str, required=False, default = "",
-                        help='Specify path to a pre-built rocBLAS library, when building clients only using --clients-only flag. (optional, default: /opt/rocm/rocblas)')
+                        help='Specify path to a pre-built rocBLAS library, when building clients only using --clients-only flag. (optional, default: /opt/rocm-@ROCM_VERSION@/rocblas)')
 
     parser.add_argument('-n', '--no_tensile', dest='build_tensile', required=False, default=True, action='store_false',
                         help='Build a subset of rocBLAS library which does not require Tensile.')
@@ -146,7 +146,7 @@ def config_cmd():
         cmake_options.append( generator )
         toolchain = os.path.join( src_path, "toolchain-windows.cmake" )
     else:
-        rocm_path = os.getenv( 'ROCM_PATH', "/opt/rocm")
+        rocm_path = os.getenv( 'ROCM_PATH', "/opt/rocm-@ROCM_VERSION@")
         if (OS_info["ID"] in ['centos', 'rhel']):
           cmake_executable = "cmake" # was cmake3 but now we built cmake
         else:
diff '--color=auto' -urp rocBLAS-rocm-5.1.3.orig/toolchain-linux.cmake rocBLAS-rocm-5.1.3/toolchain-linux.cmake
--- rocBLAS-rocm-5.1.3.orig/toolchain-linux.cmake	2022-04-27 09:22:13.000000000 -0700
+++ rocBLAS-rocm-5.1.3/toolchain-linux.cmake	2024-07-09 14:12:28.781462137 -0700
@@ -2,7 +2,7 @@
 if (DEFINED ENV{ROCM_PATH})
   set(rocm_bin "$ENV{ROCM_PATH}/hip/bin")
 else()
-  set(rocm_bin "/opt/rocm/hip/bin")
+  set(rocm_bin "/opt/rocm-@ROCM_VERSION@/hip/bin")
 endif()
 
 set(CMAKE_CXX_COMPILER "${rocm_bin}/hipcc")
