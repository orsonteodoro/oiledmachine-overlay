diff '--color=auto' -urp rocBLAS-rocm-4.1.0.orig/CMakeLists.txt rocBLAS-rocm-4.1.0/CMakeLists.txt
--- rocBLAS-rocm-4.1.0.orig/CMakeLists.txt	2024-08-19 01:43:18.290097865 -0700
+++ rocBLAS-rocm-4.1.0/CMakeLists.txt	2024-08-19 01:44:34.388826638 -0700
@@ -92,7 +92,7 @@ endif( )
 # This finds the rocm-cmake project, and installs it if not found
 # rocm-cmake contains common cmake code for rocm projects to help setup and install
 set( PROJECT_EXTERN_DIR ${CMAKE_CURRENT_BINARY_DIR}/extern )
-find_package( ROCM CONFIG QUIET PATHS ${ROCM_PATH} /opt/rocm )
+find_package( ROCM CONFIG QUIET PATHS ${ROCM_PATH} /opt/rocm-@ROCM_VERSION@ )
 if( NOT ROCM_FOUND )
   set( rocm_cmake_tag "master" CACHE STRING "rocm-cmake tag to download" )
   file( DOWNLOAD https://github.com/RadeonOpenCompute/rocm-cmake/archive/${rocm_cmake_tag}.zip
@@ -137,7 +137,7 @@ rocm_setup_version( VERSION ${VERSION_ST
 list( APPEND CMAKE_MODULE_PATH ${CMAKE_CURRENT_SOURCE_DIR}/cmake )
 
 # NOTE:  workaround until llvm & hip cmake modules fixes symlink logic in their config files; remove when fixed
-list( APPEND CMAKE_PREFIX_PATH ${ROCM_PATH}/llvm ${ROCM_PATH}/hip /opt/rocm/llvm /opt/rocm/hip )
+list( APPEND CMAKE_PREFIX_PATH ${ROCM_PATH}/llvm ${ROCM_PATH}/hip /opt/rocm-@ROCM_VERSION@/llvm /opt/rocm-@ROCM_VERSION@/hip )
 
 option( BUILD_VERBOSE "Output additional build information" OFF )
 
@@ -221,7 +221,7 @@ endif()
 
 # Find HIP dependencies
 if( CMAKE_CXX_COMPILER MATCHES ".*/hipcc$" )
-  find_package( hip REQUIRED CONFIG PATHS ${ROCM_PATH} /opt/rocm )
+  find_package( hip REQUIRED CONFIG PATHS ${ROCM_PATH} /opt/rocm-@ROCM_VERSION@ )
 endif( )
 
 message(STATUS "Using AMDGPU_TARGETS: ${AMDGPU_TARGETS}")
Only in rocBLAS-rocm-4.1.0: CMakeLists.txt.orig
Only in rocBLAS-rocm-4.1.0: CMakeLists.txt.rej
diff '--color=auto' -urp rocBLAS-rocm-4.1.0.orig/clients/CMakeLists.txt rocBLAS-rocm-4.1.0/clients/CMakeLists.txt
--- rocBLAS-rocm-4.1.0.orig/clients/CMakeLists.txt	2021-01-15 15:14:53.000000000 -0800
+++ rocBLAS-rocm-4.1.0/clients/CMakeLists.txt	2024-08-19 01:44:41.764703428 -0700
@@ -57,11 +57,11 @@ include( build-options )
 set( CMAKE_EXPORT_COMPILE_COMMANDS ON )
 
 if( NOT TARGET rocblas )
-  find_package( rocblas REQUIRED CONFIG PATHS ${ROCM_PATH}/rocblas /opt/rocm/rocblas )
+  find_package( rocblas REQUIRED CONFIG PATHS ${ROCM_PATH}/rocblas /opt/rocm-@ROCM_VERSION@/rocblas )
 endif( )
 
 # Hip headers required of all clients; clients use hip to allocate device memory
-list( APPEND CMAKE_PREFIX_PATH ${ROCM_PATH} /opt/rocm )
+list( APPEND CMAKE_PREFIX_PATH ${ROCM_PATH} /opt/rocm-@ROCM_VERSION@ )
 find_package( hip REQUIRED CONFIG PATHS ${ROCM_PATH} )
 
 # The presense of hip OR CUDA is not sufficient to determine if we want a rocm or cuda backend
Only in rocBLAS-rocm-4.1.0/clients: CMakeLists.txt.orig
Only in rocBLAS-rocm-4.1.0/clients: CMakeLists.txt.rej
Only in rocBLAS-rocm-4.1.0/library/src: tensile_host.cpp.orig
Only in rocBLAS-rocm-4.1.0/library/src: tensile_host.cpp.rej
