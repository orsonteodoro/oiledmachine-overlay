diff '--color=auto' -urp pytorch-1.13.1.orig/caffe2/CMakeLists.txt pytorch-1.13.1/caffe2/CMakeLists.txt
--- pytorch-1.13.1.orig/caffe2/CMakeLists.txt	2024-08-10 23:59:08.175706058 -0700
+++ pytorch-1.13.1/caffe2/CMakeLists.txt	2024-08-11 00:05:00.229940913 -0700
@@ -1288,10 +1288,10 @@ if(USE_ROCM)
     __HIP_PLATFORM_HCC__
     )
   target_include_directories(torch_hip PRIVATE
-    /opt/rocm/include
-    /opt/rocm/hcc/include
-    /opt/rocm/rocblas/include
-    /opt/rocm/hipsparse/include
+    /opt/rocm-@ROCM_VERSION@/include
+    /opt/rocm-@ROCM_VERSION@/hcc/include
+    /opt/rocm-@ROCM_VERSION@/rocblas/include
+    /opt/rocm-@ROCM_VERSION@/hipsparse/include
     )
 endif()
 
diff '--color=auto' -urp pytorch-1.13.1.orig/cmake/Dependencies.cmake pytorch-1.13.1/cmake/Dependencies.cmake
--- pytorch-1.13.1.orig/cmake/Dependencies.cmake	2024-08-10 23:59:08.167706189 -0700
+++ pytorch-1.13.1/cmake/Dependencies.cmake	2024-08-11 00:05:11.365758493 -0700
@@ -1970,7 +1970,7 @@ if(USE_KINETO)
 
   if(NOT LIBKINETO_NOROCTRACER)
     if(NOT ENV{ROCM_SOURCE_DIR})
-      set(ENV{ROCM_SOURCE_DIR} "/opt/rocm")
+      set(ENV{ROCM_SOURCE_DIR} "/opt/rocm-@ROCM_VERSION@")
     endif()
   endif()
 
diff '--color=auto' -urp pytorch-1.13.1.orig/cmake/public/LoadHIP.cmake pytorch-1.13.1/cmake/public/LoadHIP.cmake
--- pytorch-1.13.1.orig/cmake/public/LoadHIP.cmake	2022-12-08 10:13:26.000000000 -0800
+++ pytorch-1.13.1/cmake/public/LoadHIP.cmake	2024-08-11 00:05:23.633557525 -0700
@@ -1,7 +1,7 @@
 set(PYTORCH_FOUND_HIP FALSE)
 
 if(NOT DEFINED ENV{ROCM_PATH})
-  set(ROCM_PATH /opt/rocm)
+  set(ROCM_PATH /opt/rocm-@ROCM_VERSION@)
 else()
   set(ROCM_PATH $ENV{ROCM_PATH})
 endif()
diff '--color=auto' -urp pytorch-1.13.1.orig/tools/amd_build/build_amd.py pytorch-1.13.1/tools/amd_build/build_amd.py
--- pytorch-1.13.1.orig/tools/amd_build/build_amd.py	2022-12-08 10:13:26.000000000 -0800
+++ pytorch-1.13.1/tools/amd_build/build_amd.py	2024-08-11 00:06:37.216352016 -0700
@@ -135,7 +135,7 @@ ignores = [os.path.join(proj_dir, ignore
 # Check if the compiler is hip-clang.
 def is_hip_clang() -> bool:
     try:
-        hip_path = os.getenv("HIP_PATH", "/opt/rocm/hip")
+        hip_path = os.getenv("HIP_PATH", "/opt/rocm-@ROCM_VERSION@/hip")
         with open(hip_path + "/lib/.hipInfo") as f:
             return "HIP_COMPILER=clang" in f.read()
     except IOError:
diff '--color=auto' -urp pytorch-1.13.1.orig/torch/utils/cpp_extension.py pytorch-1.13.1/torch/utils/cpp_extension.py
--- pytorch-1.13.1.orig/torch/utils/cpp_extension.py	2022-12-08 10:13:26.000000000 -0800
+++ pytorch-1.13.1/torch/utils/cpp_extension.py	2024-08-11 00:05:29.013469392 -0700
@@ -132,7 +132,7 @@ def _find_rocm_home() -> Optional[str]:
                 rocm_home = os.path.dirname(rocm_home)
         except Exception:
             # Guess #3
-            rocm_home = '/opt/rocm'
+            rocm_home = '/opt/rocm-@ROCM_VERSION@'
             if not os.path.exists(rocm_home):
                 rocm_home = None
     if rocm_home and torch.version.hip is None:
diff '--color=auto' -urp pytorch-1.13.1.orig/torch/utils/hipify/cuda_to_hip_mappings.py pytorch-1.13.1/torch/utils/hipify/cuda_to_hip_mappings.py
--- pytorch-1.13.1.orig/torch/utils/hipify/cuda_to_hip_mappings.py	2022-12-08 10:13:26.000000000 -0800
+++ pytorch-1.13.1/torch/utils/hipify/cuda_to_hip_mappings.py	2024-08-11 00:05:35.037370707 -0700
@@ -29,7 +29,7 @@ supported in ROCm/HIP yet.
 
 # We need to know the ROCm version so we can conditionalize some of the mappings later.
 # As of ROCm 5.0, the version is found in rocm_version.h header file under /opt/rocm/include.
-rocm_path = os.environ.get('ROCM_HOME') or os.environ.get('ROCM_PATH') or "/opt/rocm"
+rocm_path = os.environ.get('ROCM_HOME') or os.environ.get('ROCM_PATH') or "/opt/rocm-@ROCM_VERSION@"
 try:
     rocm_path = subprocess.check_output(["hipconfig", "--rocmpath"]).decode("utf-8")
 except subprocess.CalledProcessError:
