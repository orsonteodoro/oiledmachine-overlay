diff -urp rocRAND-rocm-5.5.1.orig/cmake/Dependencies.cmake rocRAND-rocm-5.5.1/cmake/Dependencies.cmake
--- rocRAND-rocm-5.5.1.orig/cmake/Dependencies.cmake	2023-09-04 13:51:53.083605588 -0700
+++ rocRAND-rocm-5.5.1/cmake/Dependencies.cmake	2023-09-04 13:52:42.251604932 -0700
@@ -59,7 +59,7 @@ if(USE_HIP_CPU)
       )
       find_program(CLANG_EXE
         clang
-        PATH_SUFFIXES bin llvm/bin
+        PATH_SUFFIXES bin llvm/llvm/@LLVM_SLOT@/bin
         REQUIRED
       )
       get_filename_component(CLANG_DIR "${CLANG_EXE}" DIRECTORY)
Only in rocRAND-rocm-5.5.1/cmake: Dependencies.cmake.rej
diff -urp rocRAND-rocm-5.5.1.orig/cmake/Modules/FindTestU01.cmake rocRAND-rocm-5.5.1/cmake/Modules/FindTestU01.cmake
--- rocRAND-rocm-5.5.1.orig/cmake/Modules/FindTestU01.cmake	2023-03-06 13:05:54.000000000 -0800
+++ rocRAND-rocm-5.5.1/cmake/Modules/FindTestU01.cmake	2023-09-04 13:52:10.123605361 -0700
@@ -1,12 +1,12 @@
 if(NOT TESTU01_ROOT_DIR)
     set(TESTU01_ROOT_DIR "/usr/local")
-    FIND_LIBRARY(testu01 NAMES testu01 PATHS ${TESTU01_ROOT_DIR}/lib)
-    FIND_LIBRARY(probdist NAMES probdist testu01probdist PATHS ${TESTU01_ROOT_DIR}/lib)
-    FIND_LIBRARY(mylib NAMES mylib testu01mylib PATHS ${TESTU01_ROOT_DIR}/lib)
+    FIND_LIBRARY(testu01 NAMES testu01 PATHS ${TESTU01_ROOT_DIR}/@LIBDIR@)
+    FIND_LIBRARY(probdist NAMES probdist testu01probdist PATHS ${TESTU01_ROOT_DIR}/@LIBDIR@)
+    FIND_LIBRARY(mylib NAMES mylib testu01mylib PATHS ${TESTU01_ROOT_DIR}/@LIBDIR@)
 else()
-    FIND_LIBRARY(testu01 NAMES testu01 PATHS ${TESTU01_ROOT_DIR}/lib NO_DEFAULT_PATH NO_CMAKE_FIND_ROOT_PATH)
-    FIND_LIBRARY(probdist NAMES probdist testu01probdist PATHS ${TESTU01_ROOT_DIR}/lib NO_DEFAULT_PATH NO_CMAKE_FIND_ROOT_PATH)
-    FIND_LIBRARY(mylib NAMES mylib testu01mylib PATHS ${TESTU01_ROOT_DIR}/lib NO_DEFAULT_PATH NO_CMAKE_FIND_ROOT_PATH)
+    FIND_LIBRARY(testu01 NAMES testu01 PATHS ${TESTU01_ROOT_DIR}/@LIBDIR@ NO_DEFAULT_PATH NO_CMAKE_FIND_ROOT_PATH)
+    FIND_LIBRARY(probdist NAMES probdist testu01probdist PATHS ${TESTU01_ROOT_DIR}/@LIBDIR@ NO_DEFAULT_PATH NO_CMAKE_FIND_ROOT_PATH)
+    FIND_LIBRARY(mylib NAMES mylib testu01mylib PATHS ${TESTU01_ROOT_DIR}/@LIBDIR@ NO_DEFAULT_PATH NO_CMAKE_FIND_ROOT_PATH)
 endif()
 mark_as_advanced(TESTU01_ROOT_DIR)
 
@@ -31,7 +31,7 @@ if(NOT TestU01_INCLUDE_DIRS)
     set(TestU01_FOUND 0)
     string(APPEND TestU01_ERROR_REASON "TestU01 headers not found")
 endif()
-set(TestU01_LIBRARY_DIRS ${TESTU01_ROOT_DIR}/lib)
+set(TestU01_LIBRARY_DIRS ${TESTU01_ROOT_DIR}/@LIBDIR@)
 
 if(TestU01_FOUND)
   set(TestU01_LIBRARIES ${testu01} ${probdist} ${mylib})
diff -urp rocRAND-rocm-5.5.1.orig/CMakeLists.txt rocRAND-rocm-5.5.1/CMakeLists.txt
--- rocRAND-rocm-5.5.1.orig/CMakeLists.txt	2023-03-06 13:05:54.000000000 -0800
+++ rocRAND-rocm-5.5.1/CMakeLists.txt	2023-09-04 13:52:10.123605361 -0700
@@ -24,17 +24,17 @@ cmake_minimum_required(VERSION 3.16 FATA
 
 # Install prefix
 if (WIN32)
-  SET( CMAKE_INSTALL_PREFIX "C:/hipSDK" CACHE PATH "Install path" FORCE )
+#_cmake_modify_IGNORE   SET( CMAKE_INSTALL_PREFIX "C:/hipSDK" CACHE PATH "Install path" FORCE )
   SET( INSTALL_PREFIX "C:/hipSDK" )
   SET( CPACK_SET_DESTDIR FALSE )
   SET( CPACK_PACKAGE_INSTALL_DIRECTORY "C:/hipSDK" )
   SET( CPACK_PACKAGING_INSTALL_PREFIX "" )
   set( CPACK_INCLUDE_TOPLEVEL_DIRECTORY OFF )
 else()
-  set(CMAKE_INSTALL_PREFIX "$ENV{ROCM_PATH}" CACHE PATH "Install path prefix, prepended onto install directories")
+#_cmake_modify_IGNORE   set(CMAKE_INSTALL_PREFIX "$ENV{ROCM_PATH}" CACHE PATH "Install path prefix, prepended onto install directories")
 
   #Adding CMAKE_PREFIX_PATH
-  list( APPEND CMAKE_PREFIX_PATH $ENV{ROCM_PATH}/llvm $ENV{ROCM_PATH} )
+  list( APPEND CMAKE_PREFIX_PATH $ENV{ROCM_PATH}/lib/llvm/@LLVM_SLOT@ $ENV{ROCM_PATH} )
   if(NOT CPACK_PACKAGING_INSTALL_PREFIX)
       set(CPACK_PACKAGING_INSTALL_PREFIX "${CMAKE_INSTALL_PREFIX}")
   endif()
@@ -51,9 +51,9 @@ option(BUILD_ADDRESS_SANITIZER "Build wi
 list(APPEND CMAKE_MODULE_PATH
     ${CMAKE_CURRENT_SOURCE_DIR}/cmake
     ${CMAKE_CURRENT_SOURCE_DIR}/cmake/Modules
-    $ENV{ROCM_PATH}/lib/cmake/hip
-    ${HIP_PATH}/cmake $ENV{ROCM_PATH}/hip/cmake # FindHIP.cmake
-    $ENV{ROCM_PATH}/llvm
+    $ENV{ROCM_PATH}/@LIBDIR@/cmake/hip
+    ${HIP_PATH}/@LIBDIR@/cmake $ENV{ROCM_PATH}/cmake/hip # FindHIP.cmake
+    $ENV{ROCM_PATH}/lib/llvm/@LLVM_SLOT@
 )
 
 #
@@ -63,7 +63,7 @@ project(rocRAND CXX)
 # Set a default build type if none was specified
 if(NOT CMAKE_BUILD_TYPE AND NOT CMAKE_CONFIGURATION_TYPES)
     message(STATUS "Setting build type to 'Release' as none was specified.")
-    set(CMAKE_BUILD_TYPE "Release" CACHE STRING "Choose the type of build." FORCE)
+#_cmake_modify_IGNORE     set(CMAKE_BUILD_TYPE "Release" CACHE STRING "Choose the type of build." FORCE)
     set_property(CACHE CMAKE_BUILD_TYPE PROPERTY STRINGS "" "Debug" "Release" "MinSizeRel" "RelWithDebInfo")
 endif()
 
@@ -109,7 +109,7 @@ if(NOT USE_HIP_CPU)
   if(NOT WIN32)
     include(cmake/VerifyCompiler.cmake)
   else()
-    list(APPEND CMAKE_PREFIX_PATH ${ROCM_PATH} $ENV{ROCM_PATH}/hip $ENV{ROCM_PATH}/llvm)
+    list(APPEND CMAKE_PREFIX_PATH ${ROCM_PATH} $ENV{ROCM_PATH}/hip $ENV{ROCM_PATH}/lib/llvm/@LLVM_SLOT@)
     find_package(hip REQUIRED CONFIG PATHS ${HIP_DIR} $ENV{ROCM_PATH})
   endif()
 endif()
@@ -197,7 +197,7 @@ set(CPACK_RPM_PACKAGE_LICENSE "MIT")
 if(WIN32)
     set(CPACK_SOURCE_GENERATOR "ZIP")
     set(CPACK_GENERATOR "ZIP")
-    set(CMAKE_INSTALL_PREFIX "C:/hipSDK" CACHE PATH "Install path" FORCE)
+#_cmake_modify_IGNORE     set(CMAKE_INSTALL_PREFIX "C:/hipSDK" CACHE PATH "Install path" FORCE)
     set(INSTALL_PREFIX "C:/hipSDK")
     set(CPACK_SET_DESTDIR OFF)
     set(CPACK_PACKAGE_INSTALL_DIRECTORY "C:/hipSDK")
@@ -249,3 +249,14 @@ rocm_create_package(
     LDCONFIG
     # LDCONFIG_DIR ${ROCRAND_CONFIG_DIR}
 )
+
+message(STATUS "<<< Gentoo configuration >>>
+Build type      ${CMAKE_BUILD_TYPE}
+Install path    ${CMAKE_INSTALL_PREFIX}
+Compiler flags:
+C               ${CMAKE_C_FLAGS}
+C++             ${CMAKE_CXX_FLAGS}
+Linker flags:
+Executable      ${CMAKE_EXE_LINKER_FLAGS}
+Module          ${CMAKE_MODULE_LINKER_FLAGS}
+Shared          ${CMAKE_SHARED_LINKER_FLAGS}\n")
diff -urp rocRAND-rocm-5.5.1.orig/docs/installing.rst rocRAND-rocm-5.5.1/docs/installing.rst
--- rocRAND-rocm-5.5.1.orig/docs/installing.rst	2023-03-06 13:05:54.000000000 -0800
+++ rocRAND-rocm-5.5.1/docs/installing.rst	2023-09-04 13:52:10.123605361 -0700
@@ -24,7 +24,7 @@ For SLES::
 
     sudo dnf install rocrand
 
-This will install rocRAND into the ``/opt/rocm`` directory.
+This will install rocRAND into the ``/usr`` directory.
 
 Building rocRAND From Source
 ----------------------------
@@ -44,7 +44,7 @@ After obtaining the sources, rocRAND can
     cd rocrand
     ./install --install
 
-This automatically builds all required dependencies, excluding HIP and Git, and installs the project to ``/opt/rocm`` if everything went well. See ``./install --help`` for further information.
+This automatically builds all required dependencies, excluding HIP and Git, and installs the project to ``/usr`` if everything went well. See ``./install --help`` for further information.
 
 Building With CMake
 ^^^^^^^^^^^^^^^^^^^
diff -urp rocRAND-rocm-5.5.1.orig/.gitlab-ci.yml rocRAND-rocm-5.5.1/.gitlab-ci.yml
--- rocRAND-rocm-5.5.1.orig/.gitlab-ci.yml	2023-03-06 13:05:54.000000000 -0800
+++ rocRAND-rocm-5.5.1/.gitlab-ci.yml	2023-09-04 13:52:10.123605361 -0700
@@ -22,7 +22,7 @@
 
 variables:
   GIT_SUBMODULE_STRATEGY: normal # Fetch submodules before job start (non-recursively)
-  ROCM_PATH: /opt/rocm
+  ROCM_PATH: /usr
 
 include:
   - project: amd/ci-templates
@@ -50,8 +50,8 @@ clang-format:
   tags:
     - rocm-build
   variables:
-    CLANG_FORMAT: "/opt/rocm/llvm/bin/clang-format"
-    GIT_CLANG_FORMAT: "/opt/rocm/llvm/bin/git-clang-format"
+    CLANG_FORMAT: "/usr/llvm/bin/clang-format"
+    GIT_CLANG_FORMAT: "/usr/llvm/bin/git-clang-format"
   rules:
     - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
   script:
diff -urp rocRAND-rocm-5.5.1.orig/install rocRAND-rocm-5.5.1/install
--- rocRAND-rocm-5.5.1.orig/install	2023-03-06 13:05:54.000000000 -0800
+++ rocRAND-rocm-5.5.1/install	2023-09-04 13:52:10.123605361 -0700
@@ -30,7 +30,7 @@ build_clients=false
 build_release=true
 run_tests=false
 build_hip_clang=false
-rocm_path=/opt/rocm
+rocm_path=/usr
 build_relocatable=false
 install_dependencies=false
 build_address_sanitizer=false
@@ -115,7 +115,7 @@ if [[ "${build_relocatable}" == true ]];
         rocm_path=${ROCM_PATH}
     fi
 
-    rocm_rpath=" -Wl,--enable-new-dtags -Wl,--rpath,/opt/rocm/lib:/opt/rocm/lib64"
+    rocm_rpath=" -Wl,--enable-new-dtags -Wl,--rpath,/usr/@LIBDIR@"
     if ! [ -z ${ROCM_RPATH+x} ]; then
         rocm_rpath=" -Wl,--enable-new-dtags -Wl,--rpath,${ROCM_RPATH}"
     fi
@@ -185,7 +185,7 @@ if [[ "${build_relocatable}" == true ]];
     -DCMAKE_PREFIX_PATH="${rocm_path};${rocm_path}/hcc;${rocm_path}/hip" \
     -DCMAKE_SHARED_LINKER_FLAGS="${rocm_rpath}" \
     -DROCM_DISABLE_LDCONFIG=ON \
-    -DCMAKE_MODULE_PATH="${rocm_path}/lib/cmake/hip;${rocm_path}/hip/cmake" \
+    -DCMAKE_MODULE_PATH="${rocm_path}/@LIBDIR@/cmake/hip;${rocm_path}/hip/cmake" \
     ../../. # or cmake-gui ../.
 else
     CXX=${rocm_path}/bin/$compiler ${cmake_executable} ${clients} ${cmake_common_options} ../../. # or cmake-gui ../.
diff -urp rocRAND-rocm-5.5.1.orig/.jenkins/common.groovy rocRAND-rocm-5.5.1/.jenkins/common.groovy
--- rocRAND-rocm-5.5.1.orig/.jenkins/common.groovy	2023-03-06 13:05:54.000000000 -0800
+++ rocRAND-rocm-5.5.1/.jenkins/common.groovy	2023-09-04 13:52:10.123605361 -0700
@@ -19,7 +19,7 @@ def runCompileCommand(platform, project,
                 mkdir -p build/${buildTypeDir} && cd build/${buildTypeDir}
                 # gfxTargetParser reads gfxarch and adds target features such as xnack
                 ${auxiliary.gfxTargetParser()}
-                ${cmake} -DCMAKE_CXX_COMPILER=/opt/rocm/bin/hipcc ${buildTypeArg} ${buildStatic} ${amdgpuTargets} -DBUILD_TEST=ON -DBUILD_BENCHMARK=ON ../..
+                ${cmake} -DCMAKE_CXX_COMPILER=/usr/bin/hipcc ${buildTypeArg} ${buildStatic} ${amdgpuTargets} -DBUILD_TEST=ON -DBUILD_BENCHMARK=ON ../..
                 make -j\$(nproc)
                 """
 
@@ -38,7 +38,7 @@ def runTestCommand (platform, project)
                 set -x
                 cd ${project.paths.project_build_prefix}/build/release
                 make -j4
-                ${sudo} LD_LIBRARY_PATH=/opt/rocm/lib/ ${testCommand}
+                ${sudo} LD_LIBRARY_PATH=/usr/lib/ ${testCommand}
             """
 
     platform.runCommand(this, command)
diff -urp rocRAND-rocm-5.5.1.orig/library/CMakeLists.txt rocRAND-rocm-5.5.1/library/CMakeLists.txt
--- rocRAND-rocm-5.5.1.orig/library/CMakeLists.txt	2023-03-06 13:05:54.000000000 -0800
+++ rocRAND-rocm-5.5.1/library/CMakeLists.txt	2023-09-04 13:52:10.123605361 -0700
@@ -50,8 +50,8 @@ if(BUILD_FILE_REORG_BACKWARD_COMPATIBILI
     rocm_wrap_header_file(
         rocrand_version.h
         GUARDS SYMLINK WRAPPER
-        WRAPPER_LOCATIONS include rocrand/include
-        OUTPUT_LOCATIONS library/include library/rocrand/include
+        WRAPPER_LOCATIONS include include/rocrand
+        OUTPUT_LOCATIONS library/include library/include/rocrand
         HEADER_LOCATION include/rocrand
     )
 endif()
diff -urp rocRAND-rocm-5.5.1.orig/library/src/fortran/CMakeLists.txt rocRAND-rocm-5.5.1/library/src/fortran/CMakeLists.txt
--- rocRAND-rocm-5.5.1.orig/library/src/fortran/CMakeLists.txt	2023-03-06 13:05:54.000000000 -0800
+++ rocRAND-rocm-5.5.1/library/src/fortran/CMakeLists.txt	2023-09-04 13:52:10.123605361 -0700
@@ -33,7 +33,7 @@ else()
     target_link_libraries(rocrand_fortran
         PRIVATE
             rocrand
-            "-L${HIP_ROOT_DIR}/lib -lhip_hcc -Wl,-rpath,${HIP_ROOT_DIR}/lib"
+            "-L${HIP_ROOT_DIR}/@LIBDIR@ -lhip_hcc -Wl,-rpath,${HIP_ROOT_DIR}/@LIBDIR@"
     )
 endif()
 
diff -urp rocRAND-rocm-5.5.1.orig/library/src/fortran/README.md rocRAND-rocm-5.5.1/library/src/fortran/README.md
--- rocRAND-rocm-5.5.1.orig/library/src/fortran/README.md	2023-03-06 13:05:54.000000000 -0800
+++ rocRAND-rocm-5.5.1/library/src/fortran/README.md	2023-09-04 13:52:10.123605361 -0700
@@ -51,14 +51,14 @@ For rocRAND Fortran interface:
 ```
 gfortran <input-file>.f90 hip_m.f90 rocrand_m.f90  -lrocrand_fortran -lrocrand
 # If compiling on a NVCC platform, link CUDA libraries (-lcuda -lcudart)
-# If compiling on an AMD platform, link HIP library (-L${HIP_ROOT_DIR}/lib -lhip_hcc)
+# If compiling on an AMD platform, link HIP library (-L${HIP_ROOT_DIR}/@LIBDIR@ -lhip_hcc)
 ```
 
 For hipRAND Fortran interface:
 ```
 gfortran <input-file>.f90 hip_m.f90 hiprand_m.f90  -lhiprand_fortran -lhiprand
 # If compiling on a NVCC platform, link CUDA and CURAND libraries (-lcuda -lcudart -lcurand)
-# If compiling on an AMD platform, link HIP and rocRAND library (-lrocrand -L${HIP_ROOT_DIR}/lib -lhip_hcc)
+# If compiling on an AMD platform, link HIP and rocRAND library (-lrocrand -L${HIP_ROOT_DIR}/@LIBDIR@ -lhip_hcc)
 ```
 
 Note: `${HIP_ROOT_DIR}` points to the directory where HIP was installed.
diff -urp rocRAND-rocm-5.5.1.orig/library/src/rocrand-fortran-config.cmake.in rocRAND-rocm-5.5.1/library/src/rocrand-fortran-config.cmake.in
--- rocRAND-rocm-5.5.1.orig/library/src/rocrand-fortran-config.cmake.in	2023-03-06 13:05:54.000000000 -0800
+++ rocRAND-rocm-5.5.1/library/src/rocrand-fortran-config.cmake.in	2023-09-04 13:52:10.123605361 -0700
@@ -29,7 +29,7 @@
 #     [version] [EXACT]           # Minimum or EXACT version e.g. 0.5.0
 #     [REQUIRED]                  # Fail with error if rocRAND is not found
 #     CONFIG                      # Enable Config mode (might be required)
-#     [PATHS path1 [path2 ... ]]  # Path to install dir (e.g. /opt/rocm/rocrand)
+#     [PATHS path1 [path2 ... ]]  # Path to install dir (e.g. /usr/rocrand)
 #   )
 #
 # The following variables are defined when rocRAND is found:
@@ -49,7 +49,7 @@
 #
 #    // First find and include HIP
 #    // See https://github.com/ROCm-Developer-Tools/HIP
-#    find_package(rocrand REQUIRED CONFIG PATHS "/opt/rocm/rocrand")
+#    find_package(rocrand REQUIRED CONFIG PATHS "/usr/rocrand")
 #    add_executable(foo foo.cpp)
 #    // Set HIP flags, add HIP includes
 #    // Link foo against HIP or CUDA lib (see hipconfig)
diff -urp rocRAND-rocm-5.5.1.orig/python/rocrand/rocrand/hip.py rocRAND-rocm-5.5.1/python/rocrand/rocrand/hip.py
--- rocRAND-rocm-5.5.1.orig/python/rocrand/rocrand/hip.py	2023-03-06 13:05:54.000000000 -0800
+++ rocRAND-rocm-5.5.1/python/rocrand/rocrand/hip.py	2023-09-04 13:52:10.123605361 -0700
@@ -58,8 +58,8 @@ hip = None
 HIP_PATHS = [
     os.getenv("ROCM_PATH"),
     os.getenv("HIP_PATH"),
-    "/opt/rocm",
-    "/opt/rocm/hip"]
+    "/usr",
+    "/usr/hip"]
 
 CUDA_PATHS = [
     os.getenv("CUDA_PATH"),
diff -urp rocRAND-rocm-5.5.1.orig/rmake.py rocRAND-rocm-5.5.1/rmake.py
--- rocRAND-rocm-5.5.1.orig/rmake.py	2023-03-06 13:05:54.000000000 -0800
+++ rocRAND-rocm-5.5.1/rmake.py	2023-09-04 13:52:10.123605361 -0700
@@ -105,7 +105,7 @@ def config_cmd():
         # "-G \"Visual Studio 16 2019\" -A x64"  #  -G NMake ")  #
         cmake_options.append( generator )
     else:
-        rocm_path = os.getenv( 'ROCM_PATH', "/opt/rocm")
+        rocm_path = os.getenv( 'ROCM_PATH', "/usr")
         if (OS_info["ID"] in ['centos', 'rhel']):
           cmake_executable = "cmake3"
         else:
diff -urp rocRAND-rocm-5.5.1.orig/test/package/CMakeLists.txt rocRAND-rocm-5.5.1/test/package/CMakeLists.txt
--- rocRAND-rocm-5.5.1.orig/test/package/CMakeLists.txt	2023-03-06 13:05:54.000000000 -0800
+++ rocRAND-rocm-5.5.1/test/package/CMakeLists.txt	2023-09-04 13:52:10.123605361 -0700
@@ -7,8 +7,8 @@ if(NOT USE_HIP_CPU)
     # CMake modules
     list(APPEND CMAKE_PREFIX_PATH $ENV{ROCM_PATH} $ENV{ROCM_PATH}/hip)
     list(APPEND CMAKE_MODULE_PATH
-        $ENV{ROCM_PATH}/lib/cmake/hip
-        ${HIP_PATH}/cmake $ENV{ROCM_PATH}/hip/cmake # FindHIP.cmake
+        $ENV{ROCM_PATH}/@LIBDIR@/cmake/hip
+        ${HIP_PATH}/@LIBDIR@/cmake $ENV{ROCM_PATH}/cmake/hip # FindHIP.cmake
     )
     # Find HIP
     if(CMAKE_CXX_COMPILER MATCHES ".*/nvcc$" OR "${CMAKE_CXX_COMPILER_ID}" STREQUAL "GNU")
@@ -112,7 +112,7 @@ foreach(test_src ${rocrand_pkg_TEST_SRCS
         target_link_libraries(${test_name}
             PRIVATE
                 roc::rocrand
-                "-L${HIP_ROOT_DIR}/lib -Wl,-rpath,${HIP_ROOT_DIR}/lib"
+                "-L${HIP_ROOT_DIR}/@LIBDIR@ -Wl,-rpath,${HIP_ROOT_DIR}/@LIBDIR@"
         )
     endif()
     add_relative_test(${test_name} ${test_name})
diff -urp rocRAND-rocm-5.5.1.orig/test/parity/CMakeLists.txt rocRAND-rocm-5.5.1/test/parity/CMakeLists.txt
--- rocRAND-rocm-5.5.1.orig/test/parity/CMakeLists.txt	2023-03-06 13:05:54.000000000 -0800
+++ rocRAND-rocm-5.5.1/test/parity/CMakeLists.txt	2023-09-04 13:52:10.123605361 -0700
@@ -31,7 +31,7 @@ if(NOT USE_HIP_CPU)
     # CMake modules
     list(APPEND CMAKE_PREFIX_PATH $ENV{ROCM_PATH} $ENV{ROCM_PATH}/hip)
     list(APPEND CMAKE_MODULE_PATH
-        $ENV{ROCM_PATH}/lib/cmake/hip
+        $ENV{ROCM_PATH}/@LIBDIR@/cmake/hip
         ${HIP_PATH}/cmake $ENV{ROCM_PATH}/hip/cmake # FindHIP.cmake
     )
     # Find HIP
@@ -112,7 +112,7 @@ else()
     target_link_libraries(test_rocrand_parity_rocrand
         PRIVATE
             roc::rocrand
-            "-L${HIP_ROOT_DIR}/lib -Wl,-rpath,${HIP_ROOT_DIR}/lib"
+            "-L${HIP_ROOT_DIR}/@LIBDIR@ -Wl,-rpath,${HIP_ROOT_DIR}/@LIBDIR@"
     )
 endif()
 
diff -urp rocRAND-rocm-5.5.1.orig/toolchain-linux.cmake rocRAND-rocm-5.5.1/toolchain-linux.cmake
--- rocRAND-rocm-5.5.1.orig/toolchain-linux.cmake	2023-03-06 13:05:54.000000000 -0800
+++ rocRAND-rocm-5.5.1/toolchain-linux.cmake	2023-09-04 13:52:10.123605361 -0700
@@ -6,7 +6,7 @@
 if (DEFINED ENV{ROCM_PATH})
   set(rocm_bin "$ENV{ROCM_PATH}/bin")
 else()
-  set(rocm_bin "/opt/rocm/bin")
+  set(rocm_bin "/usr/bin")
 endif()
 
 
