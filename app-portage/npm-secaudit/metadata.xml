<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
  <!-- only on the oiledmachine-overlay -->
  <maintainer type="person">
    <email>orsonteodoro@hotmail.com</email>
    <name>Orson Teodoro</name>
  </maintainer>
  <longdescription>
  This a postsync.d script that will automatically add vulnerable packages to
  the @npm-security-update set based on vulnerability level detected.  It
  is very difficult to keep up with vulnerability advisories, but this tool
  helps automate the process of finding which ebuilds have vulnerabilies.

  At the end of `emerge --sync`, the script runs every time.


  Persistent settings:
  You may save settings to /etc/npm-secaudit.conf.

  Example contents of /etc/npm-secaudit.conf
  G_TOLERANCE="critical" # can be set to either critical, high, moderate, or low
  G_VERBOSE="0" # can only be 0 for silent, or 1 for more output
  G_ACTIVE="1" # can only be 0 to disable, or 1 to run audits
  G_LONG_SCAN="1" # can only be 1 for comprehensive, 0 for short scan to stop
    immediately when it finds a package with &gt;=tolerance vulnerability level


  Vulnerability levels:

  The chosen vulnerability level will flag packages based on recommendations by
  npm of the time to address the problem.  See
  https://docs.npmjs.com/about-audit-reports for details about the meaning of
  these levels.  It is universally understood that CRITICAL vulnerabilites
  should be address immediately.

  The implied vulnerabilities listed notes the tolerance level of the user
  which can be tuned to filter which packages should be added to
  @npm-security-update.

  low implies critical, high, moderate
  moderate implies critical, high
  high implies critical
  critical implies ignore the lesser vulnerabities but triage the criticals.


  Blacklists:
  A package may be blacklisted in /etc/portage/npm-secaudit-blacklist as
  in not allowed to be added to the @npm-security-update set.  Use at
  your own risk.  The format is as follows:
${CATEGORY}/${PN0}:${SLOT}
${CATEGORY}/${PN1}:${SLOT}
${CATEGORY}/${PN2}:${SLOT}
...
${CATEGORY}/${PNN}:${SLOT}


  Additional notes:

  The package relies on /var/lib/portage/npm-packages generated by
  npm-secaudit.eclass and electron-app.eclass.  The format is CSV in
  tab(\t)/newline seperated form as follows:
${CATEGORY}/${PN0}:${SLOT}\t/${INSTALL_PATH}
${CATEGORY}/${PN1}:${SLOT}\t/${INSTALL_PATH}
${CATEGORY}/${PN2}:${SLOT}\t/${INSTALL_PATH}
...
${CATEGORY}/${PNN}:${SLOT}\t/${INSTALL_PATH}


  The package makes use of electron/releases data that comes in lite.json.
  This versioning data is used to compare against near up-to-date NVD
  criticals advisories (CVSS v3) for Electron and internal Chromium.
  This is manually added because ambiguity of the message which may be
  only chrome specific.  If we utilized a fully automated system, it
  may report false positive(s).  Adding exclusions will not fix the false
  positive problem.  Please check the NVD database and do a
  keyword check on chrome, chromium, electron, "chrome v8", if it is not
  kept up to date.


  This script needs a internet connection to fetch the lite.json and to
  obtain vulnerability advisories from npm.


  Manually removing deleted packages:

  To manually remove a package, remove the line containing the package from
  /etc/portage/sets/npm-security-update, and possibly
  /var/lib/portage/npm-packages.
  </longdescription>
  <upstream>
    <bugs-to>https://github.com/orsonteodoro/oiledmachine-overlay/issues</bugs-to>
    <remote-id type="github">orsonteodoro/oiledmachine-overlay</remote-id>
  </upstream>
</pkgmetadata>
