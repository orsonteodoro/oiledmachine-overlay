diff '--color=auto' -urp llvm-project-rocm-6.2.0.orig/openmp/libomptarget/DeviceRTL/CMakeLists.txt llvm-project-rocm-6.2.0/openmp/libomptarget/DeviceRTL/CMakeLists.txt
--- llvm-project-rocm-6.2.0.orig/openmp/libomptarget/DeviceRTL/CMakeLists.txt	2024-07-23 09:19:13.000000000 -0700
+++ llvm-project-rocm-6.2.0/openmp/libomptarget/DeviceRTL/CMakeLists.txt	2024-08-02 18:36:57.098279333 -0700
@@ -169,7 +169,7 @@ function(addAMDSpecificBcLibs touch_targ
       ${CMAKE_BINARY_DIR}/../../tools/rocm-device-libs
       ${CMAKE_INSTALL_PREFIX}
       PATHS
-      /opt/rocm)
+      /opt/rocm-@ROCM_VERSION@)
     if(AMDDeviceLibs_DIR)
       set(amd_device_libs_found ON)
       libomptarget_say("DeviceRTLs ${gfxname}: Getting ROCm device libs from ${AMDDeviceLibs_DIR}")
Only in llvm-project-rocm-6.2.0/openmp/libomptarget/DeviceRTL: CMakeLists.txt.orig
diff '--color=auto' -urp llvm-project-rocm-6.2.0.orig/openmp/libomptarget/hostexec/CMakeLists.txt llvm-project-rocm-6.2.0/openmp/libomptarget/hostexec/CMakeLists.txt
--- llvm-project-rocm-6.2.0.orig/openmp/libomptarget/hostexec/CMakeLists.txt	2024-07-23 09:19:13.000000000 -0700
+++ llvm-project-rocm-6.2.0/openmp/libomptarget/hostexec/CMakeLists.txt	2024-08-02 18:37:48.973489963 -0700
@@ -19,10 +19,10 @@ endif()
 # If we are bootstrapping hsa via external project we need to use find_library
 # as it will not be installed.
 if(DEFINED LIBOMPTARGET_EXTERNAL_PROJECT_HSA_PATH)
-  find_library(HSA_RUNTIME hsa-runtime64 HINTS ${CMAKE_BINARY_DIR}/../../runtimes/rocr-runtime-prefix/src/rocr-runtime-build ${CMAKE_INSTALL_PREFIX} PATHS /opt/rocm)
+  find_library(HSA_RUNTIME hsa-runtime64 HINTS ${CMAKE_BINARY_DIR}/../../runtimes/rocr-runtime-prefix/src/rocr-runtime-build ${CMAKE_INSTALL_PREFIX} PATHS /opt/rocm-@ROCM_VERSION@)
 else()
  # As of rocm-3.7, hsa is installed with cmake packages and kmt is found via hsa
-  find_package(hsa-runtime64 QUIET 1.2.0 HINTS ${CMAKE_INSTALL_PREFIX} PATHS /opt/rocm)
+  find_package(hsa-runtime64 QUIET 1.2.0 HINTS ${CMAKE_INSTALL_PREFIX} PATHS /opt/rocm-@ROCM_VERSION@)
 endif()
 
 if(DEFINED HSA_RUNTIME)
Only in llvm-project-rocm-6.2.0/openmp/libomptarget/hostexec: CMakeLists.txt.orig
Only in llvm-project-rocm-6.2.0/openmp/libomptarget/hostexec: CMakeLists.txt.rej
diff '--color=auto' -urp llvm-project-rocm-6.2.0.orig/openmp/libomptarget/plugins-nextgen/amdgpu/CMakeLists.txt llvm-project-rocm-6.2.0/openmp/libomptarget/plugins-nextgen/amdgpu/CMakeLists.txt
--- llvm-project-rocm-6.2.0.orig/openmp/libomptarget/plugins-nextgen/amdgpu/CMakeLists.txt	2024-07-23 09:19:13.000000000 -0700
+++ llvm-project-rocm-6.2.0/openmp/libomptarget/plugins-nextgen/amdgpu/CMakeLists.txt	2024-08-02 18:37:55.741386931 -0700
@@ -25,13 +25,13 @@ if(DEFINED LIBOMPTARGET_EXTERNAL_PROJECT
   find_library(HSA_RUNTIME hsa-runtime64 HINTS ${CMAKE_BINARY_DIR}/../../runtimes/rocr-runtime-prefix/src/rocr-runtime-build ${CMAKE_INSTALL_PREFIX})
 else()
   # As of rocm-3.7, hsa is installed with cmake packages and kmt is found via hsa
-  find_package(hsa-runtime64 QUIET 1.2.0 HINTS ${CMAKE_INSTALL_PREFIX} PATHS /opt/rocm)
+  find_package(hsa-runtime64 QUIET 1.2.0 HINTS ${CMAKE_INSTALL_PREFIX} PATHS /opt/rocm-@ROCM_VERSION@)
 endif()
 
 # Check for COMGr package , ASan requires COMGr with minimum version 2.4
 if(SANITIZER_AMDGPU)
   add_definitions(-DSANITIZER_AMDGPU=1)
-  find_package(amd_comgr QUIET 2.4.0 HINTS ${CMAKE_INSTALL_PREFIX} PATHS /opt/rocm)
+  find_package(amd_comgr QUIET 2.4.0 HINTS ${CMAKE_INSTALL_PREFIX} PATHS /opt/rocm-@ROCM_VERSION@)
 endif()
 
 if(NOT (CMAKE_SYSTEM_PROCESSOR MATCHES "(x86_64)|(ppc64le)|(aarch64)$" AND CMAKE_SYSTEM_NAME MATCHES "Linux"))
