diff '--color=auto' -urp llvm-project-rocm-5.7.1.orig/openmp/libomptarget/DeviceRTL/CMakeLists.txt llvm-project-rocm-5.7.1/openmp/libomptarget/DeviceRTL/CMakeLists.txt
--- llvm-project-rocm-5.7.1.orig/openmp/libomptarget/DeviceRTL/CMakeLists.txt	2023-09-19 10:39:23.000000000 -0700
+++ llvm-project-rocm-5.7.1/openmp/libomptarget/DeviceRTL/CMakeLists.txt	2024-07-10 17:46:01.009104444 -0700
@@ -196,7 +196,7 @@ function(compileDeviceRTLLibrary target_
         HINTS
         ${CMAKE_INSTALL_PREFIX}
         PATHS
-        /opt/rocm)
+        /opt/rocm-@ROCM_VERSION@)
       if(AMDDeviceLibs_DIR)
 	      set(amd_device_libs_found ON)
         libomptarget_say("DeviceRTLs ${target_cpu}: Getting ROCm device libs from ${AMDDeviceLibs_DIR}")
Only in llvm-project-rocm-5.7.1/openmp/libomptarget/DeviceRTL: CMakeLists.txt.orig
diff '--color=auto' -urp llvm-project-rocm-5.7.1.orig/openmp/libomptarget/deviceRTLs/amdgcn/CMakeLists.txt llvm-project-rocm-5.7.1/openmp/libomptarget/deviceRTLs/amdgcn/CMakeLists.txt
--- llvm-project-rocm-5.7.1.orig/openmp/libomptarget/deviceRTLs/amdgcn/CMakeLists.txt	2023-09-19 10:39:23.000000000 -0700
+++ llvm-project-rocm-5.7.1/openmp/libomptarget/deviceRTLs/amdgcn/CMakeLists.txt	2024-07-10 17:46:01.009104444 -0700
@@ -17,7 +17,7 @@ endif()
 find_package(AMDDeviceLibs REQUIRED CONFIG PATHS
 	${CMAKE_BINARY_DIR}/../../tools/ROCMDEVLIBS
 	${CMAKE_INSTALL_PREFIX}
-	/opt/rocm)
+	/opt/rocm-@ROCM_VERSION@)
 if(AMDDeviceLibs_DIR)
   libomptarget_say("Getting ROCm device libs from ${AMDDeviceLibs_DIR}")
 else()
diff '--color=auto' -urp llvm-project-rocm-5.7.1.orig/openmp/libomptarget/hostexec/CMakeLists.txt llvm-project-rocm-5.7.1/openmp/libomptarget/hostexec/CMakeLists.txt
--- llvm-project-rocm-5.7.1.orig/openmp/libomptarget/hostexec/CMakeLists.txt	2023-09-19 10:39:23.000000000 -0700
+++ llvm-project-rocm-5.7.1/openmp/libomptarget/hostexec/CMakeLists.txt	2024-07-10 17:46:43.456514248 -0700
@@ -16,7 +16,7 @@ if("${CMAKE_SOURCE_DIR}" STREQUAL "${CMA
   message(FATAL_ERROR "Direct configuration not supported, please use parent directory!")
 endif()
 
-find_package(hsa-runtime64 1.2.0 QUIET HINTS ${CMAKE_INSTALL_PREFIX} PATHS /opt/rocm/hsa)
+find_package(hsa-runtime64 1.2.0 QUIET HINTS ${CMAKE_INSTALL_PREFIX} PATHS /opt/rocm-@ROCM_VERSION@/hsa)
 if (hsa-runtime64_FOUND)
    list(APPEND HOSTRPC_ARCHS "amdgcn")
    add_library(amdgcn_hostexec_services STATIC 
diff '--color=auto' -urp llvm-project-rocm-5.7.1.orig/openmp/libomptarget/hostrpc/services/CMakeLists.txt llvm-project-rocm-5.7.1/openmp/libomptarget/hostrpc/services/CMakeLists.txt
--- llvm-project-rocm-5.7.1.orig/openmp/libomptarget/hostrpc/services/CMakeLists.txt	2023-09-19 10:39:23.000000000 -0700
+++ llvm-project-rocm-5.7.1/openmp/libomptarget/hostrpc/services/CMakeLists.txt	2024-07-10 17:46:01.009104444 -0700
@@ -1,5 +1,5 @@
 
-find_package(hsa-runtime64 1.2.0 REQUIRED HINTS ${CMAKE_INSTALL_PREFIX} PATHS /opt/rocm)
+find_package(hsa-runtime64 1.2.0 REQUIRED HINTS ${CMAKE_INSTALL_PREFIX} PATHS /opt/rocm-@ROCM_VERSION@)
 add_library(hostrpc_services STATIC hostcall.cpp hostrpc_execute_service.c hostrpc_externs.c urilocator.cpp devsanitizer.cpp)
 set_property(TARGET hostrpc_services PROPERTY POSITION_INDEPENDENT_CODE ON)
 if(SANITIZER_AMDGPU)
diff '--color=auto' -urp llvm-project-rocm-5.7.1.orig/openmp/libomptarget/plugins/amdgpu/CMakeLists.txt llvm-project-rocm-5.7.1/openmp/libomptarget/plugins/amdgpu/CMakeLists.txt
--- llvm-project-rocm-5.7.1.orig/openmp/libomptarget/plugins/amdgpu/CMakeLists.txt	2023-09-19 10:39:23.000000000 -0700
+++ llvm-project-rocm-5.7.1/openmp/libomptarget/plugins/amdgpu/CMakeLists.txt	2024-07-10 17:46:53.680372054 -0700
@@ -22,7 +22,7 @@ endif()
 
 # as of rocm-3.7, hsa is installed with cmake packages and kmt is found via hsa
 find_package(hsa-runtime64 QUIET 1.2.0 HINTS ${CMAKE_INSTALL_PREFIX} PATHS
-${CMAKE_INSTALL_PREFIX} /opt/rocm)
+${CMAKE_INSTALL_PREFIX} /opt/rocm-@ROCM_VERSION@)
 
 if(hsa-runtime64_DIR)
 message("FOUND hsa-runtime64 at ${hsa-runtime64_DIR}")
@@ -34,7 +34,7 @@ return()
 endif()
 
 # libhsakmt.a
-find_library ( HSAKMT_LIB libhsakmt.a REQURIED HINTS ${CMAKE_INSTALL_PREFIX} PATHS /opt/rocm)
+find_library ( HSAKMT_LIB libhsakmt.so REQURIED HINTS ${CMAKE_INSTALL_PREFIX} PATHS /opt/rocm-@ROCM_VERSION@/lib)
 get_filename_component ( HSAKMT_LIB_PATH ${HSAKMT_LIB} DIRECTORY )
 link_directories (${HSAKMT_LIB_PATH})
 
Only in llvm-project-rocm-5.7.1/openmp/libomptarget/plugins/amdgpu: CMakeLists.txt.orig
Only in llvm-project-rocm-5.7.1/openmp/libomptarget/plugins/amdgpu: CMakeLists.txt.rej
diff '--color=auto' -urp llvm-project-rocm-5.7.1.orig/openmp/libomptarget/plugins-nextgen/amdgpu/CMakeLists.txt llvm-project-rocm-5.7.1/openmp/libomptarget/plugins-nextgen/amdgpu/CMakeLists.txt
--- llvm-project-rocm-5.7.1.orig/openmp/libomptarget/plugins-nextgen/amdgpu/CMakeLists.txt	2023-09-19 10:39:23.000000000 -0700
+++ llvm-project-rocm-5.7.1/openmp/libomptarget/plugins-nextgen/amdgpu/CMakeLists.txt	2024-07-10 17:47:02.752245869 -0700
@@ -20,7 +20,7 @@ if (NOT LIBOMPTARGET_BUILD_AMDGPU_PLUGIN
 endif()
 
 # libhsakmt.a
-find_library ( HSAKMT_LIB libhsakmt.a REQURIED HINTS ${CMAKE_INSTALL_PREFIX} PATHS /opt/rocm)
+find_library ( HSAKMT_LIB libhsakmt.so REQURIED HINTS ${CMAKE_INSTALL_PREFIX} PATHS /opt/rocm-@ROCM_VERSION@/lib)
 get_filename_component ( HSAKMT_LIB_PATH ${HSAKMT_LIB} DIRECTORY )
 link_directories (${HSAKMT_LIB_PATH})
 
@@ -34,12 +34,12 @@ pkg_check_modules(drm REQUIRED IMPORTED_
 find_library(numa libnuma.so REQUIRED HINTS /usr/lib/x86_64-linux-gnu/)
 
 # as of rocm-3.7, hsa is installed with cmake packages and kmt is found via hsa
-find_package(hsa-runtime64 QUIET 1.2.0 HINTS ${CMAKE_INSTALL_PREFIX} PATHS /opt/rocm)
+find_package(hsa-runtime64 QUIET 1.2.0 HINTS ${CMAKE_INSTALL_PREFIX} PATHS /opt/rocm-@ROCM_VERSION@)
 
 # Check for COMGr package , ASan requires COMGr with minimum version 2.4
 if(SANITIZER_AMDGPU)
   add_definitions(-DSANITIZER_AMDGPU=1)
-  find_package(amd_comgr QUIET 2.4.0 HINTS ${CMAKE_INSTALL_PREFIX} PATHS /opt/rocm)
+  find_package(amd_comgr QUIET 2.4.0 HINTS ${CMAKE_INSTALL_PREFIX} PATHS /opt/rocm-@ROCM_VERSION@)
 endif()
 
 if(NOT (CMAKE_SYSTEM_PROCESSOR MATCHES "(x86_64)|(ppc64le)|(aarch64)$" AND CMAKE_SYSTEM_NAME MATCHES "Linux"))
