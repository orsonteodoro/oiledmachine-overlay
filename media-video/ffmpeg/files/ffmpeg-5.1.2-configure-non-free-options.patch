Subject:  Configure non-free changes
Patch Status:  WIP / Testing / Incomplete / Draft

TODO:  Disable all codecs in the "patented compression formats" from Wikipedia link below:

https://en.wikipedia.org/wiki/Comparison_of_audio_coding_formats     ; See patented column also
https://en.wikipedia.org/wiki/Comparison_of_graphics_file_formats    ; See patanted column also
https://en.wikipedia.org/wiki/Comparison_of_video_codecs#Codecs_list
https://en.wikipedia.org/wiki/Comparison_of_video_container_formats#Audio_coding_formats_support
https://en.wikipedia.org/wiki/Comparison_of_video_container_formats#Video_coding_formats_support
https://en.wikipedia.org/wiki/Comparison_of_video_container_formats#Subtitle_formats_support

For re-codecs, we try to infer if it is not listed in one of those list due to
the editorial limits on that website.

--- a/configure.orig	2022-08-31 11:58:25.000000000 -0700
+++ b/configure	2023-02-27 18:32:05.502056466 -0800
@@ -100,6 +100,9 @@ Licensing options:
   --enable-version3        upgrade (L)GPL to version 3 [no]
   --enable-nonfree         allow use of nonfree code, the resulting libs
                            and binaries will be unredistributable [no]
+  --non-free-patented-codecs=<allow|codec-developer|deny|user>        level of support for non-free patented codecs or network protocols
+  --re-codecs=<allow|deny>                                            toggle patentless (or possibly unknown patent status) back-engineered codecs, patentless proprietary codecs, patentless HW accelerated codecs
+  --enforceability=<patents-are-unrecognized|patents-are-illegal|enforced|unenforced>        changes the default based on enforceablity
 
 Configuration options:
   --disable-static         do not build static libraries [no]
@@ -4154,6 +4155,36 @@ for opt do
         --enable-sdl)
             enable sdl2
         ;;
+        --non-free-patented-codecs|--non-free-patented-codecs=allow|--non-free-patented-codecs=enable)
+            non_free_patented_codecs="allow"
+        ;;
+        --non-free-patented-codecs=user)
+            non_free_patented_codecs="user"
+        ;;
+        --non-free-patented-codecs=codec-developer)
+            non_free_patented_codecs="codec-developer"
+        ;;
+        --non-free-patented-codecs=deny|--non-free-patented-codecs=disable)
+            non_free_patented_codecs="deny"
+        ;;
+        --proprietary-codecs=deny|--proprietary-codecs=disable)
+            proprietary_codecs="deny"
+        ;;
+        --proprietary-codecs=allow|--proprietary-codecs=enable)
+            proprietary_codecs="allow"
+        ;;
+        --enforceability=enforced)
+            enforceability="enforced"
+        ;;
+        --enforceability=unenforced|--enforceability=patents-are-unrecognized|--enforcability=patents-are-illegal)
+            enforceability="unenforced"
+        ;;
+        --re-codecs=allow)
+            re_codecs="allow"
+        ;;
+        --re-codecs=deny)
+            re_codecs="deny"
+        ;;
         --enable-*=*|--disable-*=*)
             eval $(echo "${opt%%=*}" | sed 's/--/action=/;s/-/ thing=/')
             is_in "${thing}s" $COMPONENT_LIST || die_unknown "$opt"
@@ -7818,6 +7825,458 @@ mkdir -p tests
 mkdir -p tests/api
 echo "@c auto-generated by configure - do not modify! " > doc/config.texi
 
+
+if [ -n "${enforceability}" ] ; then
+    :;
+else
+    enforceability="unenforced"
+fi
+
+if [ -z "${non_free_patented_codecs}" ] ; then
+   if [ "${enforceability}" = "enforced" ] ; then
+       non_free_patented_codecs="deny"
+   else
+       non_free_patented_codecs="allow"
+   fi
+fi
+
+if test "${non_free_patented_codecs}" = "user" \
+   || test "${non_free_patented_codecs}" = "codec-developer" \
+   || test "${non_free_patented_codecs}" = "deny" \
+   || test "${non_free_patented_codecs}" = "disable" \
+ ; then
+   echo "Disabling likely patented non-free codecs"
+   disable als_decoder
+   disable amr_demer
+   disable amr_muxer
+   disable amr_nb_at_decoder
+   disable amrnb_decoder
+   disable amrwb_decoder
+   disable applehttp_protocol # Uses hlsproto.o
+   disable aptx_demuxer
+   disable aptx_encoder
+   disable aptx_decoder
+   disable aptx_muxer
+   disable aptx_hd_encoder
+   disable aptx_hd_decoder
+   disable aptx_hd_muxer
+   disable cbs_h264
+   disable cbs_h265
+   disable cinepak_decoder
+   disable cinepak_encoder
+   disable dash_muxer
+   disable dash_demuxer
+   disable dnxhd_decoder
+   disable dnxhd_demuxer
+   disable dnxhd_encoder
+   disable dnxhd_muxer
+   disable dts_demuxer
+   disable dts_muxer
+   disable dtshd_demuxer
+   disable dts2pts_bsf
+   disable dvbsub_decoder
+   disable dvbsub_encoder
+   disable dvbsub_parser
+   disable dvbsub_demuxer
+   disable eac3_at_decoder
+   disable eac3_core_bsf
+   disable eac3_demuxer
+   disable eac3_decoder
+   disable eac3_encoder
+   disable eac3_muxer
+   disable f4v_muxer
+   disable h261_decoder
+   disable h261_demuxer
+   disable h261_encoder
+   disable h261_muxer
+   disable h263_decoder
+   disable h263_demuxer
+   disable h263_encoder
+   disable h263_muxer
+   disable h263_parser
+   disable h263_v4l2_m2m
+   disable h263_v4l2m2m_decoder
+   disable h263_v4l2m2m_encoder
+   disable h263_vaapi_hwaccel
+   disable h263_videotoolbox_hwaccel
+   disable h263i_decoder
+   disable h263p_decoder
+   disable h263p_encoder
+   disable h263dsp
+   disable h264_decoder
+   disable h264_amf_encoder
+   disable h264_crystalhd_decoder
+   disable h264_cuvid_decoder
+   disable h264_d3d11va_hwaccel
+   disable h264_d3d11va2_hwaccel
+   disable h264_demuxer
+   disable h264_dxva2_hwaccel
+   disable h264_mediacodec_decoder
+   disable h264_metadata_bsf
+   disable h264_mf_encoder
+   disable h264_mmal_decoder
+   disable h264_muxer
+   disable h264_mp4toannexb_bsf
+   disable h264_nvenc_encoder
+   disable h264_nvdec_hwaccel
+   disable h264_omx_encoder
+   disable h264_qsv_decoder
+   disable h264_qsv_encoder
+   disable h264_redundant_pps_bsf
+   disable h264_rkmpp_decoder
+   disable h264_vdpau_hwaccel
+   disable h264_vaapi_encoder
+   disable h264_vaapi_hwaccel
+   disable h264_v4l2_m2m
+   disable h264_v4l2m2m_decoder
+   disable h264_v4l2m2m_encoder
+   disable h264_videotoolbox_encoder
+   disable h264_videotoolbox_hwaccel
+   disable h264chroma
+   disable h264dsp
+   disable h264parse
+   disable h264pred
+   disable h264qpel
+   disable hevc_amf_encoder
+   disable hevc_cuvid_decoder
+   disable hevc_d3d11va_hwaccel
+   disable hevc_d3d11va2_hwaccel
+   disable hevc_decoder
+   disable hevc_demuxer
+   disable hevc_dxva2_hwaccel
+   disable hevc_mediacodec_decoder
+   disable hevc_metadata_bsf
+   disable hevc_muxer
+   disable hevc_mf_encoder
+   disable hevc_mp4toannexb_bsf
+   disable hevc_nvenc_encoder
+   disable hevc_nvdec_hwaccel
+   disable hevc_parser
+   disable hevc_qsv_decoder
+   disable hevc_qsv_encoder
+   disable hevc_rkmpp_decoder
+   disable hevc_vaapi_encoder
+   disable hevc_vaapi_hwaccel
+   disable hevc_vdpau_hwaccel
+   disable hevc_v4l2_m2m
+   disable hevc_v4l2m2m_decoder
+   disable hevc_v4l2m2m_encoder
+   disable hevc_videotoolbox_encoder
+   disable hevc_videotoolbox_hwaccel
+   disable hevcparse
+   disable hls_demuxer
+   disable hls_muxer
+   disable hls_protocol
+   disable image_psd_pipe_demuxer
+   disable indeo3_decoder
+   disable indeo4_decoder
+   disable indeo5_decoder
+   disable ividsp
+   disable kvazaar
+   disable libkvazaar_encoder
+   disable libopencore_amrnb
+   disable libopencore_amrnb_decoder
+   disable libopencore_amrnb_encoder
+   disable libopencore_amrnb_encoder
+   disable libopencore_amrwb
+   disable libopencore_amrwb_decoder
+   disable libopenh264
+   disable libopenh264_encoder
+   disable libopenh264_decoder
+   disable libvo_amrwbenc
+   disable libvo_amrwbenc_encoder
+   disable libx264
+   disable libx264_encoder
+   disable libx264rgb_encoder
+   disable libx265
+   disable libx265_encoder
+   disable movtext_decoder
+   disable movtext_encoder
+   disable mpeg4_v4l2_m2m # h264 vbv
+   disable mpeg4audio
+   disable mpeg4_crystalhd_decoder
+   disable mpeg4_cuvid_decoder
+   disable mpeg4_mediacodec_decoder
+   disable mpeg4_mmal_decoder
+   disable mpeg4_omx_encoder
+   disable mpeg4_v4l2_m2m
+   disable mpeg4_v4l2m2m_decoder
+   disable mpeg4_v4l2m2m_encoder
+   disable mpeg4_decoder
+   disable mpeg4_encoder
+   disable mpeg4_nvdec_hwaccel
+   disable mpeg4_vaapi_hwaccel
+   disable mpeg4_vdpau_hwaccel
+   disable mpeg4_videotoolbox_hwaccel
+   disable mpeg4video_parser
+   disable mpegts_demuxer
+   disable mpegts_muxer
+   disable mpegtsraw_demuxer
+   disable msmpeg4_crystalhd_decoder
+   disable msmpeg4dec
+   disable msmpeg4enc
+   disable msmpeg4v1_decoder
+   disable msmpeg4v2_decoder
+   disable msmpeg4v2_encoder
+   disable msmpeg4v3_decoder
+   disable msmpeg4v3_encoder
+   disable nellymoser_decoder
+   disable nellymoser_encoder
+   disable pgssub_decoder
+   disable prores_aw_encoder
+   disable prores_decoder
+   disable prores_encoder
+   disable prores_ks_encoder
+   disable prores_videotoolbox_encoder
+   disable prores_videotoolbox_hwaccel
+   disable psd_decoder
+   disable rv10_decoder
+   disable rv10_encoder
+   disable rv20_decoder
+   disable rv20_encoder
+   disable rv30_decoder
+   disable rv34dsp
+   disable rv40_decoder
+   disable rv40_decoder
+   disable rtp_mpegts_muxer
+   disable sbc_decode
+   disable sbc_demuxer
+   disable sbc_encode
+   disable sbc_muxer
+   disable sbc_parser
+   disable svq1_decoder
+   disable svq1_encoder
+   disable svq3_decoder
+   disable svq3_decoder
+   disable truemotion1_decoder
+   disable truemotion2_decoder
+   disable truemotion2rt_decoder
+   disable twinvq_decoder
+   disable vc1_d3d11va_hwaccel
+   disable vc1_d3d11va2_hwaccel
+   disable vc1_decoder
+   disable vc1_demuxer
+   disable vc1_dxva2_hwaccel
+   disable vc1_crystalhd_decoder
+   disable vc1_cuvid_decoder
+   disable vc1_mmal_decoder
+   disable vc1_muxer
+   disable vc1_nvdec_hwaccel
+   disable vc1_parser
+   disable vc1_qsv_decoder
+   disable vc1_v4l2_m2m
+   disable vc1_v4l2m2m_decoder
+   disable vc1_vaapi_hwaccel
+   disable vc1_vdpau_hwaccel
+   disable vc1dsp
+   disable vc1image_decoder
+   disable vc1t_demuxer
+   disable vc1t_muxer
+   disable vp4_decoder
+   disable vp5_decoder
+   disable vp56dsp
+   disable vp6_decoder
+   disable vp6a_decoder
+   disable vp6f_decoder
+   disable vp7_decoder
+   disable vobsub_demuxer
+   disable webm_dash_manifest_demuxer
+   disable wma_freqs
+   disable wmalossless_decoder
+   disable wmapro_decoder
+   disable wmav1_decoder
+   disable wmav1_encoder
+   disable wmav2_decoder
+   disable wmav2_encoder
+   disable wmavoice_decoder
+   disable wmv1_decoder
+   disable wmv1_encoder
+   disable wmv2_decoder
+   disable wmv2_encoder
+   disable wmv2dsp
+   disable wmv3_crystalhd_decoder
+   disable wmv3_d3d11va_hwaccel
+   disable wmv3_d3d11va2_hwaccel
+   disable wmv3_decoder
+   disable wmv3_dxva2_hwaccel
+   disable wmv3_nvdec_hwaccel
+   disable wmv3_vaapi_hwaccel
+   disable wmv3_vdpau_hwaccel
+   disable wmv3image_decoder
+   disable xma1_decoder
+   disable xma2_decoder
+
+   # Required disabled as a consequence.  Fails to load when ffmpeg --help
+   disable avi_muxer # Uses mpegtsenc.o
+   disable binkaudio_dct_decoder  # references wma_freqs.o
+   disable binkaudio_rdft_decoder # references wma_freqs.o
+   disable intrax8 # Uses msmpeg4data.o
+   disable flv_demuxer
+   disable flv_muxer
+   disable flv_decoder # Uses/depends H263 in source, but missing in Makefile
+   disable flv_encoder # Uses/depends H263 in source, but missing in Makefile
+   disable metasound_decoder # Uses twinvq.o
+   disable wmv3_decoder
+   disable wmv3image_decoder
+   disable xmv_demuxer # container
+   disable xwma_demuxer
+else
+   echo "Allowing likely patented non-free codecs"
+fi
+
+if [ -z "${proprietary_codecs}" ] ; then
+   if [ "${enforceability}" = "enforced" ] ; then
+       proprietary_codecs="deny"
+   else
+       proprietary_codecs="allow"
+   fi
+fi
+
+# List below from lilac colored Wikipedia markings.
+if test "${re_codecs}" = "deny" \
+   || test "${re_codecs}" = "deny" ; then
+   echo "Disabling likely patentless RE free, patentless proprietary codecs, or patentless HW accelerated codecs"
+   # Some CONFIG_ flags marked adpcm_* are disabled due to quality control issues related to lack of preprocessor conditonals in adpcm.c and adpcmenc.c
+   disable adpcm_4xm_decoder
+   disable adpcm_adx_decoder
+   disable adpcm_adx_encoder
+   disable adpcm_afc_decoder
+   disable adpcm_agm_decoder
+   disable adpcm_aica_decoder
+   disable adpcm_argo_decoder
+   disable adpcm_argo_encoder
+   disable adpcm_ct_decoder
+   disable adpcm_dtk_decoder
+   disable adpcm_ea_decoder
+   disable adpcm_ea_maxis_xa_decoder
+   disable adpcm_ea_r1_decoder
+   disable adpcm_ea_r2_decoder
+   disable adpcm_ea_r3_decoder
+   disable adpcm_ea_xas_decoder
+   #disable adpcm_g722_decoder
+   #disable adpcm_g722_encoder
+   #disable adpcm_g726_decoder
+   #disable adpcm_g726_encoder
+   #disable adpcm_g726le_decoder
+   #disable adpcm_g726le_encoder
+   disable adpcm_ima_amv_decoder
+   disable adpcm_ima_amv_encoder
+   disable adpcm_ima_alp_decoder
+   disable adpcm_ima_alp_encoder
+   disable adpcm_ima_apc_decoder
+   disable adpcm_ima_apm_decoder
+   disable adpcm_ima_apm_encoder
+   disable adpcm_ima_cunning_decoder
+   disable adpcm_ima_dat4_decoder
+   disable adpcm_ima_dk3_decoder
+   disable adpcm_ima_dk4_decoder
+   disable adpcm_ima_ea_eacs_decoder
+   disable adpcm_ima_ea_sead_decoder
+   disable adpcm_ima_iss_decoder
+   disable adpcm_ima_moflex_decoder
+   disable adpcm_ima_mtf_decoder
+   disable adpcm_ima_oki_decoder
+   disable adpcm_ima_qt_at_decoder
+   disable adpcm_ima_qt_decoder
+   disable adpcm_ima_qt_encoder
+   disable adpcm_ima_rad_decoder
+   disable adpcm_ima_ssi_decoder
+   disable adpcm_ima_ssi_encoder
+   disable adpcm_ima_smjpeg_decoder
+   disable adpcm_ima_wav_decoder
+   disable adpcm_ima_wav_encoder
+   disable adpcm_ima_ws_decoder
+   disable adpcm_ms_decoder
+   disable adpcm_ms_encoder
+   disable adpcm_mtaf_decoder
+   disable adpcm_psx_decoder
+   disable adpcm_sbpro_2_decoder
+   disable adpcm_sbpro_3_decoder
+   disable adpcm_sbpro_4_decoder
+   disable adpcm_swf_decoder
+   disable adpcm_swf_encoder
+   disable adpcm_thp_decoder
+   disable adpcm_thp_le_decoder
+   disable adpcm_vima_decoder
+   disable adpcm_xa_decoder
+   disable adpcm_yamaha_decoder
+   disable adpcm_yamaha_encoder
+   disable adpcm_zork_decoder
+   disable adpcm_ima_qt_at_decoder
+   disable adx_parser
+   disable argo_decoder
+   disable atrac1_decoder
+   disable atrac3_decoder
+   disable atrac3p_decoder
+   disable atrac3pal_decoder
+   disable atrac9_decoder
+   disable avi_demuxer
+   disable avi_muxer
+   disable dca_core_bsf
+   disable dca_decoder
+   disable dca_encoder
+   disable dca_parser
+   disable dv_demuxer
+   disable dv_muxer
+   disable dvaudio_decoder
+   disable dvvideo_decoder
+   disable dvvideo_encoder
+   disable dvprofile
+   disable mdec_decoder
+   disable microdvd_decoder
+   disable mlp_decoder
+   disable mlp_encoder
+   disable qcelp_decoder
+   disable qtrle_decoder
+   disable qtrle_encoder
+   disable ra_144_decoder
+   disable ra_144_encoder
+   disable ra_288_decoder
+   disable rpza_decoder
+   disable rpza_encoder
+   disable sami_decoder
+   disable segafilm_demuxer
+   disable segafilm_muxer
+   disable spdif_decoder # Uses dca_sample_rate_tab.o
+   disable truehd_decoder
+   disable truehd_demuxer
+   disable truehd_encoder
+   disable truehd_muxer
+   disable truespeech_decoder
+   disable msvideo1_decoder
+   disable msvideo1_encoder
+else
+   echo "Allowing likely patentless RE free, patentless proprietary codecs, or patentless HW accelerated codecs"
+fi
+
+if test "${non_free_patented_codecs}" = "codec-developer" \
+   || test "${non_free_patented_codecs}" = "deny" \
+   || test "${non_free_patented_codecs}" = "disable" \
+   ; then
+   echo "Disabling codec developer restricted codecs"
+   disable aac_adtstoasc_bsf
+   disable aac_at_decoder
+   disable aac_decoder
+   disable aac_fixed_decoder
+   disable aac_latm_decoder
+   disable aac_latm_parser
+   disable aac_mf_encoder
+   disable aac_parser
+   disable adts_header
+   disable adts_muxer
+   disable asf_demuxer
+   disable asf_muxer
+   disable asf_o_demuxer
+   disable asf_stream_muxer
+   disable libfdk_aac
+   disable libfdk_aac_decoder
+   disable libfdk_aac_encoder
+
+   disable transcode_aac_example
+else
+   echo "Allowing codec developer restricted codecs with exceptions"
+fi
+
 print_config ARCH_   "$config_files" $ARCH_LIST
 print_config HAVE_   "$config_files" $HAVE_LIST
 print_config CONFIG_ "$config_files" $CONFIG_LIST       \
