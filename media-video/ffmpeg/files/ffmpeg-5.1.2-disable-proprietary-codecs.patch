Subject:  Disable non-free codecs/protocols
Patch Status:  WIP / Testing / Incomplete

TODO:  Disable all codecs in the "patented compression formats" from Wikipedia link below:

https://en.wikipedia.org/wiki/Comparison_of_video_codecs#Codecs_list
https://en.wikipedia.org/wiki/Comparison_of_video_container_formats#Video_coding_formats_support
https://en.wikipedia.org/wiki/Comparison_of_video_container_formats#Audio_coding_formats_support

--- a/configure.orig	2022-08-31 11:58:25.000000000 -0700
+++ b/configure	2023-02-27 18:32:05.502056466 -0800
@@ -100,6 +100,9 @@ Licensing options:
   --enable-version3        upgrade (L)GPL to version 3 [no]
   --enable-nonfree         allow use of nonfree code, the resulting libs
                            and binaries will be unredistributable [no]
+  --proprietary-codecs=<allow|codec-developer|default|deny|user>        level of support for non-free patented codecs or network protocols
+  --free-implementation=<allow|deny|default>                            allow back engineered free implementation of codecs of known proprietary (with possibly unknown patent status)
+  --enforceability=<patents-are-unrecognized|patents-are-illegal|enforced|unenforced|default>        changes the default based on enforceablity
 
 Configuration options:
   --disable-static         do not build static libraries [no]
@@ -4154,6 +4155,30 @@ for opt do
         --enable-sdl)
             enable sdl2
         ;;
+        --proprietary-codecs|--proprietary-codecs=allow|--proprietary-codecs=default|--proprietary-codecs=enable)
+            proprietary_codecs="allow" # Originally EU?
+        ;;
+        --proprietary-codecs=user)
+            proprietary_codecs="user"
+        ;;
+        --proprietary-codecs=codec-developer)
+            proprietary_codecs="codec-developer"
+        ;;
+        --proprietary-codecs=deny|--proprietary-codecs=disable)
+            proprietary_codecs="deny"
+        ;;
+        --free-implementation=deny|--free-implementation=disable)
+            proprietary_codecs="deny"
+        ;;
+        --free-implementation=allow|--free-implementation=enable)
+            proprietary_codecs="allow"
+        ;;
+        --enforceability=enforced)
+            enforceability="enforced"
+        ;;
+        --enforceability=unenforced|--enforceability=patents-are-unrecognized|--enforcability=patents-are-illegal|--enforceability=default)
+            enforceability="unenforced" # Originally EU?
+        ;;
         --enable-*=*|--disable-*=*)
             eval $(echo "${opt%%=*}" | sed 's/--/action=/;s/-/ thing=/')
             is_in "${thing}s" $COMPONENT_LIST || die_unknown "$opt"
@@ -7818,6 +7825,235 @@ mkdir -p tests
 mkdir -p tests/api
 echo "@c auto-generated by configure - do not modify! " > doc/config.texi
 
+
+if [ -z "${enforceability}" ] ; then
+   enforceability="unenforced" # Originally EU?
+fi
+
+if [ -z "${proprietary_codecs}" ] ; then
+   if [ "${enforceability}" = "enforced" ] ; then
+       proprietary_codecs="deny"
+   else
+       proprietary_codecs="allow"
+   fi
+fi
+
+if test "${proprietary_codecs}" = "user" \
+   || test "${proprietary_codecs}" = "codec-developer" \
+   || test "${proprietary_codecs}" = "deny" \
+   || test "${proprietary_codecs}" = "disable" \
+ ; then
+   echo "Disabling proprietary-codecs"
+   disable cbs_h264
+   disable cbs_h265
+   disable dash_muxer
+   disable dash_demuxer
+   disable dnxhd_decoder
+   disable dts_demuxer
+   disable dtshd_demuxer
+   disable dts2pts_bsf
+   disable eac3_at_decoder
+   disable eac3_core_bsf
+   disable eac3_demuxer
+   disable eac3_decoder
+   disable eac3_encoder
+   disable h261_decoder
+   disable h261_encoder
+   disable h263_decoder
+   disable h263_encoder
+   disable h263_parser
+   disable h263_v4l2_m2m
+   disable h263_v4l2m2m_decoder
+   disable h263_v4l2m2m_encoder
+   disable h263_vaapi_hwaccel
+   disable h263_videotoolbox_hwaccel
+   disable h263i_decoder
+   disable h263p_decoder
+   disable h263p_encoder
+   disable h263dsp
+   disable h264_decoder
+   disable h264_amf_encoder
+   disable h264_crystalhd_decoder
+   disable h264_cuvid_decoder
+   disable h264_d3d11va_hwaccel
+   disable h264_d3d11va2_hwaccel
+   disable h264_dxva2_hwaccel
+   disable h264_mediacodec_decoder
+   disable h264_metadata_bsf
+   disable h264_mf_encoder
+   disable h264_mmal_decoder
+   disable h264_mp4toannexb_bsf
+   disable h264_nvenc_encoder
+   disable h264_nvdec_hwaccel
+   disable h264_omx_encoder
+   disable h264_qsv_decoder
+   disable h264_qsv_encoder
+   disable h264_redundant_pps_bsf
+   disable h264_rkmpp_decoder
+   disable h264_vdpau_hwaccel
+   disable h264_vaapi_encoder
+   disable h264_vaapi_hwaccel
+   disable h264_v4l2_m2m
+   disable h264_v4l2m2m_decoder
+   disable h264_v4l2m2m_encoder
+   disable h264_videotoolbox_encoder
+   disable h264_videotoolbox_hwaccel
+   disable h264chroma
+   disable h264dsp
+   disable h264parse
+   disable h264pred
+   disable h264qpel
+   disable hevc_amf_encoder
+   disable hevc_cuvid_decoder
+   disable hevc_d3d11va_hwaccel
+   disable hevc_d3d11va2_hwaccel
+   disable hevc_decoder
+   disable hevc_dxva2_hwaccel
+   disable hevc_mediacodec_decoder
+   disable hevc_metadata_bsf
+   disable hevc_mf_encoder
+   disable hevc_mp4toannexb_bsf
+   disable hevc_nvenc_encoder
+   disable hevc_nvdec_hwaccel
+   disable hevc_parser
+   disable hevc_qsv_decoder
+   disable hevc_qsv_encoder
+   disable hevc_rkmpp_decoder
+   disable hevc_vaapi_encoder
+   disable hevc_vaapi_hwaccel
+   disable hevc_vdpau_hwaccel
+   disable hevc_v4l2_m2m
+   disable hevc_v4l2m2m_decoder
+   disable hevc_v4l2m2m_encoder
+   disable hevc_videotoolbox_encoder
+   disable hevc_videotoolbox_hwaccel
+   disable hevcparse
+   disable hls_demuxer
+   disable hls_muxer
+   disable kvazaar
+   disable libopenh264
+   disable libopenh264_encoder
+   disable libopenh264_decoder
+   disable libkvazaar_encoder
+   disable libx264
+   disable libx264_encoder
+   disable libx264rgb_encoder
+   disable libx265
+   disable libx265_encoder
+   disable mpeg4_v4l2_m2m # h264 vbv
+   disable mpeg4audio
+   disable mpeg4_crystalhd_decoder
+   disable mpeg4_cuvid_decoder
+   disable mpeg4_mediacodec_decoder
+   disable mpeg4_mmal_decoder
+   disable mpeg4_omx_encoder
+   disable mpeg4_v4l2_m2m
+   disable mpeg4_v4l2m2m_decoder
+   disable mpeg4_v4l2m2m_encoder
+   disable mpeg4_decoder
+   disable mpeg4_encoder
+   disable mpeg4_nvdec_hwaccel
+   disable mpeg4_vaapi_hwaccel
+   disable mpeg4_vdpau_hwaccel
+   disable mpeg4_videotoolbox_hwaccel
+   disable mpeg4video_parser
+   disable mpegts_demuxer
+   disable mpegts_muxer
+   disable mpegtsraw_demuxer
+   disable msmpeg4_crystalhd_decoder
+   disable msmpeg4dec
+   disable msmpeg4enc
+   disable msmpeg4v1_decoder
+   disable msmpeg4v2_decoder
+   disable msmpeg4v2_encoder
+   disable msmpeg4v3_decoder
+   disable msmpeg4v3_encoder
+   disable vc1_d3d11va_hwaccel
+   disable vc1_d3d11va2_hwaccel
+   disable vc1_decoder
+   disable vc1_dxva2_hwaccel
+   disable vc1_crystalhd_decoder
+   disable vc1_cuvid_decoder
+   disable vc1_mmal_decoder
+   disable vc1_nvdec_hwaccel
+   disable vc1_parser
+   disable vc1_qsv_decoder
+   disable vc1_v4l2_m2m
+   disable vc1_v4l2m2m_decoder
+   disable vc1_vaapi_hwaccel
+   disable vc1_vdpau_hwaccel
+   disable vc1dsp
+   disable vc1image_decoder
+   disable webm_dash_manifest_demuxer
+
+   # Required disabled as a consequence.  Fails to load when ffmpeg --help
+   disable rv40_decoder
+   disable wmv3image_decoder
+   disable wmv3_decoder
+else
+   echo "Allowing proprietary-codecs"
+fi
+
+if [ -z "${free_implementation}" ] ; then
+   if [ "${enforceability}" = "enforced" ] ; then
+       free_implementation="deny"
+   else
+       free_implementation="allow"
+   fi
+fi
+
+if test "{free_implementation}" = "allow" \
+   || test "{free_implementation}" = "allow" ; then
+   echo "Disabling RE free codecs"
+   disable prores_decoder
+   disable prores_encoder
+   disable prores_videotoolbox_encoder
+   disable prores_videotoolbox_hwaccel
+   disable svq1_decoder
+   disable svq1_encoder
+   disable svq3_decoder
+   disable svq3_decoder
+else
+   echo "Allow RE free codecs"
+fi
+
+if test "${proprietary_codecs}" = "codec-developer" \
+   || test "${proprietary_codecs}" = "deny" \
+   || test "${proprietary_codecs}" = "disable" \
+   ; then
+   echo "Disabling proprietary-codecs for codec developers"
+   disable aac_decoder
+   disable aac_fixed_decoder
+   disable aac_latm_decoder
+   disable aac_latm_parser
+   disable aac_mf_encoder
+   disable aac_parser
+   disable aac_adtstoasc_bsf
+   disable aac_at_decoder
+   disable aac_at_encoder
+   disable adts
+   disable adts_header
+   disable adts_muxer
+   disable asf_demuxer
+   disable asf_muxer
+   disable asf_o_demuxer
+   disable asf_stream_muxer
+   disable libfdk_aac
+   disable libfdk_aac_decoder
+   disable libfdk_aac_encoder
+
+   disable transcode_aac_example
+else
+   echo "Allowing non-free developer proprietary-codecs for regular users"
+fi
+
+if [ "${proprietary-codecs}" = "allow" ] \
+   && ( enabled gpl || enabled version3 ) ; then
+   echo "You cannot use --proprietary-codecs, --proprietary-codecs=allow, or"
+   echo "--proprietary-codecs=default with --enable-gpl or --enable-version3"
+   exit 1
+fi
+
 print_config ARCH_   "$config_files" $ARCH_LIST
 print_config HAVE_   "$config_files" $HAVE_LIST
 print_config CONFIG_ "$config_files" $CONFIG_LIST       \
