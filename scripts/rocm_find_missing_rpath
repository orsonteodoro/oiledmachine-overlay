#!/bin/bash

USE_SYSTEM_LLVM=${USE_SYSTEM_LLVM:-0}
echo "USE_SYSTEM_LLVM:  ${USE_SYSTEM_LLVM}"

main() {
	IFS=$'\n'
	local rocm_libs=(
		"libamdhip64.so"
		"libhiprtc.so"
		"libhsa-runtime64.so"
		"libhsakmt.so"
		"librdc_bootstrap.so"
		"librocm-dbgapi.so"
		"librocm_smi64.so"
		"librocrand.so"
		"libroctracer64.so"
	)
	local llvm_libs=(
		"libflang.so"
		"libflangrti.so"
		"libLLVMCore.so"
		"libLLVMFrontendOpenMP.so"
		"libLLVMOption.so"
		"libLLVMSupport.so"
		"libLLVMSupport.so.13git"
		"libLLVMSupport.so.14git"
		"libLLVMSupport.so.15git"
		"libLLVMSupport.so.16git"
	)
	local clang_libs=(
		"libclangBasic.so"
	)
	local libomp_libs=(
		"libomp.so"
	)
	local l
#	for path in $(find /opt/rocm-*/{bin,lib64,lib} 2>/dev/null) ; do
	for path in $(find /opt/rocm-* 2>/dev/null) ; do
		local is_so=0
		local is_exe=0
		if file "${path}" | grep -q "shared object" ; then
			is_so=1
		elif file "${path}" | grep -q "ELF.*executable" ; then
			is_exe=1
		elif file "${path}" | grep -q "symbolic link" ; then
			continue
		fi

		if (( ${is_so} || ${is_exe} )) ; then
			local reason_clang=""
			local reason_libomp=""
			local reason_llvm=""
			local reason_rocm=""
			local needs_rpath_patch_clang=0
			local needs_rpath_patch_libomp=0
			local needs_rpath_patch_llvm=0
			local needs_rpath_patch_rocm=0
			for l in "${rocm_libs[@]}" ; do
				if ldd "${path}" 2>/dev/null | grep -q "${l}" ; then
					if ldd "${path}" 2>/dev/null | grep "${l}" | grep -q "/rocm/" ; then
						:;
					else
						reason_rocm="${l}"
						needs_rpath_patch_rocm=1
					fi
				fi
			done

			if [[ "${USE_SYSTEM_LLVM}" != "1" ]] ; then
				for l in "${llvm_libs[@]}" ; do
					if ldd "${path}" 2>/dev/null | grep -q "${l}" ; then
						if ldd "${path}" 2>/dev/null | grep "${l}" | grep -q "/rocm/" ; then
							:;
						else
							reason_llvm="${l}"
							needs_rpath_patch_llvm=1
						fi
					fi
				done

				for l in "${clang_libs[@]}" ; do
					if ldd "${path}" 2>/dev/null | grep -q "${l}" ; then
						if ldd "${path}" 2>/dev/null | grep "${l}" | grep -q "/rocm/" ; then
							:;
						else
							reason_clang="${l}"
							needs_rpath_patch_clang=1
						fi
					fi
				done

				for l in "${libomp_libs[@]}" ; do
					if ldd "${path}" 2>/dev/null | grep -q "${l}" ; then
						if ldd "${path}" 2>/dev/null | grep "${l}" | grep -q "/rocm/" ; then
							:;
						else
							reason_libomp="${l}"
							needs_rpath_patch_libomp=1
						fi
					fi
				done
			fi

			if [[ "${USE_SYSTEM_LLVM}" == "1" ]] ; then
				for l in "${llvm_libs[@]}" ; do
					if ldd "${path}" 2>/dev/null | grep -q "${l}" ; then
						if ldd "${path}" 2>/dev/null | grep "${l}" | grep -q "lib/llvm" ; then
							:;
						else
							reason_llvm="${l}"
							needs_rpath_patch_llvm=1
						fi
					fi
				done

				for l in "${clang_libs[@]}" ; do
					if ldd "${path}" 2>/dev/null | grep -q "${l}" ; then
						if ldd "${path}" 2>/dev/null | grep "${l}" | grep -q "lib/llvm" ; then
							:;
						else
							reason_clang="${l}"
							needs_rpath_patch_clang=1
						fi
					fi
				done

				for l in "${libomp_libs[@]}" ; do
					if ldd "${path}" 2>/dev/null | grep -q "${l}" ; then
						if ldd "${path}" 2>/dev/null | grep "${l}" | grep -q "lib/llvm" ; then
							:;
						else
							reason_libomp="${l}"
							needs_rpath_patch_libomp=1
						fi
					fi
				done
			fi

			if (( ${needs_rpath_patch_rocm} )) ; then
				echo "missing rpath for ${path} ; Reason:  ${reason_rocm} (rocm)"
			fi

			if (( ${needs_rpath_patch_clang} )) ; then
				echo "missing rpath for ${path} ; Reason:  ${reason_clang} (clang)"
			fi

			if (( ${needs_rpath_patch_llvm} )) ; then
				echo "missing rpath for ${path} ; Reason:  ${reason_llvm} (llvm)"
			fi

			if (( ${needs_rpath_patch_libomp} )) ; then
				echo "missing rpath for ${path} ; Reason:  ${reason_libomp} (libomp)"
			fi

			if ldd "${path}" 2>/dev/null | grep -q "not found" ; then
				echo "missing rpath for ${path} ; Reason:  (not found)"
			fi
		fi
	done
	IFS=$' \t\n'
}


main
