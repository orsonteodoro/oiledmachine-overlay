<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
  <maintainer type="person">
    <!-- for the oiledmachine-overlay edition of this package -->
    <email>orsonteodoro@hotmail.com</email>
    <name>Orson Teodoro</name>
  </maintainer>
  <longdescription>
    Godot is a IDE for building video games capable of making 3D and 2D games
    in a day.  It can produce games for desktop, mobile, VR
    (virtual reality), AR (augmented reality), web browser games, multiplayer
    games for many game genres.

    It also has available game AI algorithms, physics engines, level
    generators.

    It also supports C/C++, C# 7.0, visual programming similar to UDK,
    GDScript similar to Python.
    It has a built in 3D level editor, IDE object manager.

    ABIs are limited so that the main editor program is a native CHOST build
    and export templates produce the game in the CTARGET ABI or
    platform of choice.

    ABIs of various large binaries:
    Linux editor with or without Mono support - CHOST native ABI
    Linux dedicated game server - 32 or 64 bit CHOST ABI
    Linux headless editor server - 32 or 64 bit CHOST ABI

    The ebuild produces the export templates for exporting to CTARGET:
    Android native - armv6 [in 2.1 slot only], armv7, arm64v8, x86, x86_64 ABIs
    Linux client / standalone - 32 bit or 64 bit CHOST ABI(s)
    Linux server(s) - 32 bit or 64 bit CHOST ABI(s)
    Mono Android - armeabi-v7a, arm64-v8a, x86, x86_64 ABIs
    Mono Linux - 32 bit (x86/i686) or 64 bit (x86_64) ABIs
    Mono iOS - devices: armv7, arm64; simulators: i386, x86_64; iOS >=10 minimal
    Mono OSX - 64 bit (x86_64)
    Mono WASM - WASM32 ABI
    Mono Windows - 32 bit (x86) or 64 bit (x86_64)
    Web - Asm.js [in 2.1 slot only], WASM [in 3.1 slot only],

    For custom C++ modules support, add a per-package patch.  This patch
    will be built in only for the Linux platform currently if using the 
    EGODOT_CUSTOM_MODULES_* per-package environmental variables (envvars),
    but it can be built for all platforms if using without the envvars
    and if you use the portable USE flag.  Ensure the library is in the
    bin folder.  List the space separated shared library name in
    EGODOT_CUSTOM_MODULES_LIBS.  For compiling, provide a semicolon
    separated folder:command pair in EGODOT_CUSTOM_MODULES_BUILD.  
    Details about custom modules can be found at:

https://docs.godotengine.org/en/3.4/development/cpp/custom_modules_in_cpp.html
https://docs.godotengine.org/en/3.3/development/cpp/custom_modules_in_cpp.html

    Consider making a custom local ebuild of your custom C++ module
    instead to reduce compile times because it is not required to keep
    rebuilding the entire Godot ebuild to build the module.

    EGODOT_ADDITIONAL_CONFIG is provided to allow for activating custom
    C++ modules globally for all platforms if a custom patch is provided.
    
    For Android support:
      The following per-package environmental variables must be set:
      ANDROID_NDK_ROOT must be set as a per-package environmental variable.
      The following are optional:
      EGODOT_ANDROID_CONFIG allows to fine tune or shrink the config
      specifically for Android independent from the native build.
      Option limited to options_modules variables in src_compile().
      See ebuild for details.
      EGODOT_ANDROID_API_LEVEL allows to set the target API level

      The following per-package environmental variables are optional:
      CCACHE_ANDROID can be set to ${sysroot_android}/usr/lib/ccache/bin, where

    For iOS support
      The following per-package environmental variables must be set:
      EIOS_SDK_VERSION must be set to the correspond to the iOS SDK version.
      EXCODE_SDK_VERSION must be set to the correspond to the Xcode version.
      The following are optional:
      EGODOT_IOS_CONFIG allows to fine tune or shrink the config
      specifically for iOS independent from the native build.
      Option limited to options_modules variables in src_compile().
      See ebuild for details.

      The following per-package environmental variables are optional:
      CCACHE_IOS can be set to ${sysroot_ios}/usr/lib/ccache/bin

    For OSX support
      The following per-package environmental variables must be set:
      OSXCROSS_ROOT must be set to the root of osxcross installation.
      EOSXCROSS_SDK must be set to x86_64-apple-${EOSXCROSS_SDK}-cc.
      EXCODE_SDK_VERSION must be set to the correspond to the Xcode version.

      The following per-package environmental variables are optional:
      CCACHE_OSX can be set to ${sysroot_osx}/usr/lib/ccache/bin

    For Windows support:
      A MingGW cross toolchain must be prepared prior.  For details, see
      https://wiki.gentoo.org/wiki/Mingw

      The following per-package environmental variables must be set:
      EGODOT_MINGW32_SYSROOT or EGODOT_MINGW64_SYSROOT must be set as
        the root of the cross toolchain.
        It should produce the file system structure similar to CHOST:
        ${EGODOT_MINGW_SYSROOT}/bin
        ${EGODOT_MINGW_SYSROOT}/usr/bin
        ...
        ${EGODOT_MINGW_SYSROOT}/etc/portage
        Typical values are
          EGODOT_MINGW64_SYSROOT=/usr/x86_64-w64-mingw32
          EGODOT_MINGW32_SYSROOT=/usr/i686-w64-mingw32

      MINGW32_PREFIX or MINGW64_PREFIX may be defined and is used as the prefix
      to gcc.  Typical values are and are already the default.
        MINGW32_PREFIX=i686-w64-mingw32-
        MINGW64_PREFIX=x86_64-w64-mingw32-

    For Web support:
      The following are optional:
      EGODOT_WEB_CONFIG allows to fine tune or shrink the config
      specifically for the Web independent from the native build.
      Option limited to options_modules variables in src_compile().
      See ebuild for details.

    Examples:
      Contents of /etc/portage/env/godot.conf:
      EGODOT_NDK_PLATFORM="arm64v8:android-21 x86:android-21 x86_64:android-21"
      EGODOT_ADDITIONAL_CONFIG="module_foo_enabled=True module_bar_enabled=True"
      EGODOT_CUSTOM_MODULES_BUILD="foo:scons foo_shared=yes bin/foo.x11.tools.64.so;bar:scons bar_shared=yes bin/bar.x11.tools.64.so"
      EGODOT_CUSTOM_MODULES_LIBS="libfoo.so libbar.so"
      EGODOT_ANDROID_CONFIG="module_opensimplex_enabled=True"
      EGODOT_WEB_CONFIG="module_opensimplex_enabled=True"

      Contents of /etc/portage/package.env:
      dev-games/godot godot.conf
  </longdescription>
  <upstream>
<!--
End of Life details can be found at
https://docs.godotengine.org/en/stable/about/release_policy.html#release-support-timeline
-->
    <doc lang="en">https://docs.godotengine.org/en/stable/</doc>
    <doc lang="en">https://docs.godotengine.org/en/3.4/</doc>
    <doc lang="en">https://docs.godotengine.org/en/3.3/</doc>
    <doc lang="de">https://docs.godotengine.org/de/latest/</doc>
    <doc lang="es">https://docs.godotengine.org/es/latest/</doc>
    <doc lang="fi">https://docs.godotengine.org/fi/latest/</doc>
    <doc lang="fr">https://docs.godotengine.org/fr/latest/</doc>
    <doc lang="it">https://docs.godotengine.org/it/latest/</doc>
    <doc lang="ja">https://docs.godotengine.org/ja/latest/</doc>
    <doc lang="ko">https://docs.godotengine.org/ko/latest/</doc>
    <doc lang="pl">https://docs.godotengine.org/pl/latest/</doc>
    <doc lang="pt_BR">https://docs.godotengine.org/pt_BR/latest/</doc>
    <doc lang="pt_BR">https://docs.godotengine.org/pt_BR/latest/</doc>
    <doc lang="ru">https://docs.godotengine.org/ru/latest/</doc>
    <doc lang="uk">https://docs.godotengine.org/uk/latest/</doc>
    <doc lang="zh_CN">https://docs.godotengine.org/zh_CN/latest/</doc>
    <bugs-to>https://github.com/godotengine/godot/issues</bugs-to>
    <maintainer>
      <name>Juan Linietsky</name>
    </maintainer>
    <maintainer>
      <name>Ariel Manzur</name>
    </maintainer>
    <remote-id type="github">godotengine/godot</remote-id>
  </upstream>
  <use>
    <flag name="3d">Enables 3D support.</flag>
    <flag name="asan_client">Enables ASAN for Linux client and editor for
      reporting but not necessarily preventing memory use problems or possible
      vulnerabilities.</flag>
    <flag name="asan_server">Enables ASAN for Linux server builds for reporting
      but not necessarily preventing memory use problems or possible
      vulnerabilities.</flag>
    <flag name="advanced-gui">Enables the advanced GUI.</flag>
    <flag name="bullet">Enables support for the Bullet 3D physics engine.</flag>
    <flag name="bmp">Enables support for bitmap images.</flag>
    <flag name="camera">Enables camera support on non-native platforms.</flag>
    <flag name="clang">Compiles the software using clang and LLVM.</flag>
    <flag name="closure-compiler">Enables minifying JavaScript code</flag>
    <flag name="csg">Enables use of Constructive Solid Geometry used to produce
      complex 3D polygon(s) from other polygons with boolean polygon
      operations.</flag>
    <flag name="cvtt">Enables use for BPTC texture
      compression / decompression.</flag>
    <flag name="denoise">Enables the denoiser module to improve lightmap
      generation quality.</flag>
    <flag name="dds">Enables support for DDS (DirectDraw Surface) format and
      loading BCn compressed (DXT1, DXT2, DXT3, DXT4, DXT5) textures.</flag>
    <flag name="debug">Enables debugging support.  Disabling builds as
      release.</flag>
    <flag name="enet">Enables multiplayer networking support.</flag>
    <flag name="etc1">Enables support for Ericsson Texture Compression and
      loading textures from the PKM file format.</flag>
    <flag name="exr">Enables support for OpenEXR texture images used in
      association with 3D animation.</flag>
    <flag name="examples_live">Installs the demo examples at the latest
      commit.  It may break at any time.</flag>
    <flag name="examples_snapshot">Installs the demo examples up to a static
      live commit.</flag>
    <flag name="examples_stable">Installs the demo examples up to latest
      stable release.</flag>
    <flag name="freetype">Enables support for the FreeType library.</flag>
    <flag name="game-center">Add support for Game Center.  (iOS only)</flag>
    <flag name="gamepad">Enables gamepad support.</flag>
    <flag name="gdnative">Enables loading of shared libraries (.so files)
      built with the C/C++ language used to create plugins, ARVR
      (Augmented Reality / Virtual Reality) Interfaces.</flag>
    <flag name="gdscript">Enables the Python like scripting language.</flag>
    <flag name="gdscript_lsp">Enables Language Server Protocol for (LSP)
      for GDScript for improved IDE features like code completion.</flag>
    <flag name="gltf">Enables support for the glTF interchange format to
      import or export 3D models or scenes between Godot and 3D editor
      programs to make changes to them on either editor side or Godot
      side.  Overview details can be found in the documentation and at
https://godotengine.org/article/introducing-the-godot-gltf-2-0-scene-exporter
      </flag>
    <flag name="gridmap">Enables support for gridmaps for 3D level making
      similar to tile maps but for 3D.</flag>
    <flag name="hdr">Enables support for HDR images.</flag>
    <flag name="icloud">Add support for iCloud.  (iOS only)</flag>
    <flag name="ik">Enables support for inverse kinematics used for hinges
      and bone animation in 3D games.</flag>
    <flag name="ios-sim">Builds the simulator binary.  (iOS only)</flag>
    <flag name="jit">Enables JIT support for PCRE2.  JIT may need to be
      disabled on platforms such as consoles if expression compilation
      fails.  If disabled, it falls back to interpretive.  It must be
      disabled on platforms if not supported.
      See https://www.pcre.org/current/doc/html/pcre2jit.html for details.
      </flag>
    <flag name="javascript_eval">Enables support of running JavaScript eval
      function() within the browser window with the trade off of lowered
      security.</flag>
    <flag name="javascript_threads">Enables limited support for WASM
      threads.</flag>
    <flag name="jsonrpc">Enables support JSON-RPC for GDScript LSP.</flag>
    <flag name="jpeg">Enables JPEG support.</flag>
    <flag name="lightmapper_cpu">Enables building the a new lightmap generator
      module.</flag>
    <flag name="lld">Uses the LLD linker for faster linking.  Disable to
      fall back to the gold linker when using LTO.</flag>
    <flag name="lsan_client">Enables LSAN for Linux client and editor for
      reporting but not necessarily preventing memory leaks.</flag>
    <flag name="lsan_server">Enables LSAN for Linux server builds for reporting
       but not necessarily preventing memory leaks.</flag>
    <flag name="lto">Enables link time optimization with ThinLTO that</flag>
       enables faster multicore linking and reduction in generated binary.
       </flag>
    <flag name="mbedtls">Enables the use of mbed TLS for X509 digital
      certificates, secured TLS networking.</flag>
    <flag name="minizip">Enables support for compressed ZIP files.</flag>
    <flag name="mobile-vr">Enables the generic mobile VR interface.</flag>
    <flag name="mod">Enables support for it, xm, s3m, mod formats.  These
      formats are used by Amiga audio files or chiptune music.  It's only
      available in the 2.1 slot.</flag>
    <flag name="mono">Enables C# scripting support.</flag>
    <flag name="mono_pregen_assemblies">Pregenerates Godot API assemblies</flag>
    <flag name="mp3">Enables MP3 support.</flag>
    <flag name="msan_client">Enables MSAN for Linux client and editor for
      reporting but not necessarily fixing uninitialized variables.</flag>
    <flag name="msan_server">Enables MSAN for Linux server builds for reporting
       but not necessarily fixing uninitialized variables.</flag>
    <flag name="musepack">Enables support for Musepack audio files.</flag>
    <flag name="ogg">Enables support for the Ogg container format.</flag>
    <flag name="opus">Enables Opus voice compression support used in used in
      voice acting asset samples.</flag>
    <flag name="opensimplex">Enables OpenSimplex for random level generation
      and/or for visual effects such as waves and clouds.</flag>
    <flag name="openssl">Enables OpenSSL support.</flag>
    <flag name="optimize-size">Optimizes the built program(s) for reduced
      size.</flag>
    <flag name="optimize-speed">Optimizes the built program(s) for speed.</flag>
    <flag name="pbm">Enables support for PBM image format used in open
      platforms.</flag>
    <flag name="pcre2">Enables string regular expression support.</flag>
    <flag name="portable">Configures build to maximize distribution.  Disables
      system dependencies.  Implies static build.</flag>
    <flag name="pulseaudio">Enables PulseAudio support.</flag>
    <flag name="pvrtc">Enables PowerVR texture compression.</flag>
    <flag name="python_targets_python3_6">For generating docs and
      translations.</flag>
    <flag name="python_targets_python3_7">For generating docs and
      translations.</flag>
    <flag name="python_targets_python3_8">For generating docs and
      translations.</flag>
    <flag name="python_targets_python3_9">For generating docs and
      translations.</flag>
    <flag name="raycast">Build the module for occlusion culling with 3 levels
      of quality.</flag>
    <flag name="recast">Enable mesh generation for 3D games.</flag>
    <flag name="rst">This configure option is related to rst documentation.</flag>
    <flag name="s3tc">Enables DXT compression.</flag>
    <flag name="server">Builds servers.</flag>
    <flag name="server_dedicated">Builds a Linux dedicated game server</flag>
    <flag name="server_headless">Builds a Linux headless editor server</flag>
    <flag name="speex">Enable speex voice compression support used in voice
      acting asset samples.  Removed in 3.x and superceeded by Opus.</flag>
    <flag name="store-kit">Add support for StoreKit.  (iOS only)</flag>
    <flag name="svg">Enable SVG vector image format support.</flag>
    <flag name="system-bullet">Uses the system's external library instead of
      the internal version.</flag>
    <flag name="system-embree">Uses the system's external library instead of the
      internal version.</flag>
    <flag name="system-enet">Uses the system's external library instead of the
      internal version.</flag>
    <flag name="system-freetype">Uses the system's external library instead of
      the internal version.</flag>
    <flag name="system-glew">Uses the system's external library instead of the
      internal version.</flag>
    <flag name="system-libmpcdec">Uses the system's external library instead of
      the internal version.</flag>
    <flag name="system-libogg">Uses the system's external library instead of
      the internal version.</flag>
    <flag name="system-libpng">Uses the system's external library instead of
      the internal version.</flag>
    <flag name="system-libtheora">Uses the system's external library instead of
      the internal version.</flag>
    <flag name="system-libvorbis">Uses the system's external library instead of
      the internal version.</flag>
    <flag name="system-libvpx">Uses the system's external library instead of
      the internal version.</flag>
    <flag name="system-libwebsockets">Uses the system's external library
      instead of the internal version.</flag>
    <flag name="system-mbedtls">Uses the system's external library instead of
      the internal version.</flag>
    <flag name="system-miniupnpc">Uses the system's external library instead of
      the internal version.</flag>
    <flag name="system-openssl">Uses the system's external library instead of
      the internal version.</flag>
    <flag name="system-opus">Uses the system's external library instead of the
      internal version.</flag>
    <flag name="system-pcre2">Uses the system's external library instead of the
      internal version.</flag>
    <flag name="system-recast">Uses the system's external library instead of
      the internal version.</flag>
    <flag name="system-squish">Uses the system's external library instead of
      the internal version.</flag>
    <flag name="system-xatlas">Uses the system's external library instead of
      the internal version.</flag>
    <flag name="system-zlib">Uses the system's external library instead of the
      internal version.</flag>
    <flag name="system-zstd">Uses the system's external library instead of the
      internal version.</flag>
    <flag name="tga">Enables support for the TGA image format.</flag>
    <flag name="theora">Enables support for the Theora video codec.</flag>
    <flag name="touch">Enables mobile touchscreen events support.</flag>
    <flag name="tsan_client">Enables TSAN for Linux client and editor to catch
      but not necessarily prevent data races that potentially can lead to a
      crash or memory corruption.</flag>
    <flag name="tsan_server">Enables TSAN for Linux server builds to catch but
      not necessarily prevent data races that potentially can lead to a crash or
      memory corruption.</flag>
    <flag name="ubsan_client">Enables UBSAN for Linux client and editor to
      catch but not necessarily prevent overflows or null pointer or misaligned
      access that could lead to a crash.</flag>
    <flag name="ubsan_server">Enables UBSAN for Linux server builds to catch but
      not necessarily prevent overflows or null pointer or misaligned access
      that could lead to a crash.</flag>
    <flag name="upnp">Enables universal plug and play for devices.</flag>
    <flag name="vhacd">Enables decomposition of 3D polygons into simple more
      accurate approximation for collison detection at the model's limbs instead
      of more spheroid or retangular shapes.</flag>
    <flag name="visual-script">Enables the visual scripting and editor.</flag>
    <flag name="vorbis">Enables support for the Vorbis audio codec.</flag>
    <flag name="web">Enables support for Web HTML5 games built with
      Emscripten / JavaScript.  The 2.1 series builds as Asm.js
      [deprecated/obsolete] and the 3.2 series builds as WASM (WebAssembly)
      by default.</flag>
    <flag name="webm">Enables support for the WebM format for audio and
      video.</flag>
    <flag name="webm-simd">Builds internal libvpx as SIMD optimized for
      WebM.</flag>
    <flag name="webp">Enables support for the WebP image format.</flag>
    <flag name="webrtc">Enables support for direct Peer-to-Peer (P2P)
      support.</flag>
    <flag name="webxr">Enables WebXR support.</flag>
    <flag name="websocket">Enables support for the WebSocket protocol.</flag>
    <flag name="xml">Enables XML support.</flag>
    <flag name="X">Enables building the editor with X support.</flag>
    <flag name="xatlas">Enables use of atlas texture packing for more efficient
      texture access.</flag>
  </use>
  <slots>
    <slot name="2">
      For backwards compatibility with version 2 projects.
    </slot>
    <slot name="3">
      For compatibility with version 3 projects only.
    </slot>
  </slots>
</pkgmetadata>
