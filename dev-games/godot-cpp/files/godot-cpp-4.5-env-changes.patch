diff '--color=auto' -urp godot-cpp-godot-4.5-stable.orig/tools/godotcpp.py godot-cpp-godot-4.5-stable/tools/godotcpp.py
--- godot-cpp-godot-4.5-stable.orig/tools/godotcpp.py	2025-09-15 14:33:30.000000000 -0700
+++ godot-cpp-godot-4.5-stable/tools/godotcpp.py	2025-09-25 12:34:55.327347863 -0700
@@ -306,6 +306,13 @@ def options(opts, env):
             map=architecture_aliases,
         )
     )
+    opts.Add("cppdefines", "Custom defines for the pre-processor")
+    opts.Add("ccflags", "Custom flags for both the C and C++ compilers")
+    opts.Add("cxxflags", "Custom flags for the C++ compiler")
+    opts.Add("cflags", "Custom flags for the C compiler")
+    opts.Add("linkflags", "Custom flags for the linker")
+    opts.Add("c_compiler_launcher", "C compiler launcher (e.g. `ccache`)")
+    opts.Add("cpp_compiler_launcher", "C++ compiler launcher (e.g. `ccache`)")
 
     opts.Add(BoolVariable(key="threads", help="Enable threading support", default=env.get("threads", True)))
 
@@ -459,6 +466,13 @@ def generate(env):
     env["optimize"] = ARGUMENTS.get("optimize", opt_level)
     env["debug_symbols"] = get_cmdline_bool("debug_symbols", env.dev_build)
 
+    # Environment flags
+    env.Append(CPPDEFINES=env.get("cppdefines", "").split())
+    env.Append(CCFLAGS=env.get("ccflags", "").split())
+    env.Append(CXXFLAGS=env.get("cxxflags", "").split())
+    env.Append(CFLAGS=env.get("cflags", "").split())
+    env.Append(LINKFLAGS=env.get("linkflags", "").split())
+
     tool = Tool(env["platform"], toolpath=get_platform_tools_paths(env))
 
     if tool is None or not tool.exists(env):
@@ -466,6 +480,14 @@ def generate(env):
 
     tool.generate(env)
 
+    if "c_compiler_launcher" in env:
+        env["CC"] = " ".join([env["c_compiler_launcher"], env["CC"]])
+
+    if "cpp_compiler_launcher" in env:
+        env["CXX"] = " ".join([env["cpp_compiler_launcher"], env["CXX"]])
+
+    env.PrependENVPath("CCACHE_DIR", os.getenv("CCACHE_DIR"))
+
     if env["threads"]:
         env.Append(CPPDEFINES=["THREADS_ENABLED"])
 
