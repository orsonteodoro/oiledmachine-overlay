#!/sbin/openrc-run
# We run the server to below root but a bit privileged (write access)
# but not root.  Must create a user called ${PN} that to not be used
# by normal users but only the server.

# Variables MY_PN and PN are replaced by sed.
PROJECT_ROOT="/opt/${PN}/${SLOT_MAJOR}"
SERVER_PID_FILE="/var/run/${PN}/${PN}-server.pid"
LOGFILE="/var/log/${PN}-server.log"
ENABLE_LOGGING=${ENABLE_LOGGING:="1"} # can set this in /etc/conf.d/${PN}-server
WAIT_TIME="1080000" # 13 min + 5 min slack
#	real	12m41.475s
#	user	0m12.462s
#	sys	0m1.796s

logmsg() {
	local msg="${1}"
	touch "${LOGFILE}"
	chown ${PN}:${PN} "${LOGFILE}"
	if [[ "${ENABLE_LOGGING}" == "1" ]] ; then
		echo -e "${msg}" >> "${LOGFILE}"
	fi
}

check_prereqs() {
	if ! which npm ; then
		local msg="You need npm to start the server."
		logmsg "${msg}"
		exit 1
	fi
	if ! which node ; then
		local msg="You need node/nodejs to start the server."
		logmsg "${msg}"
		exit 1
	fi
}

start_server() {
	mkdir -p "$(dirname ${SERVER_PID_FILE})"
	chown ${PN}:${PN} "$(dirname ${SERVER_PID_FILE})"
	touch "${SERVER_PID_FILE}"

	export NODE_VERSION="${NODE_VERSION}"
	cd "${PROJECT_ROOT}/newIDE/app"
	start-stop-daemon \
		--background \
		--start \
		--group ${PN} \
		--user ${PN} \
		--pidfile "${SERVER_PID_FILE}" \
		--wait ${WAIT_TIME} \
		--stdout "${LOGFILE}" \
		--stderr "${LOGFILE}" \
		--exec /usr/bin/npm -- start
	eend $?
}

start()
{
	local m="Starting ${MY_PN} server"
	ebegin "${m}"
	logmsg "${m}"
	start_server
}

stop() {
	local m="Stopping ${MY_PN} server"
	ebegin "${m}"
	logmsg "${m}"
	start-stop-daemon \
		--stop \
		--pidfile "${SERVER_PID_FILE}"
}
