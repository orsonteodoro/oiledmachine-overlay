diff -urp rdc-rocm-5.5.1.orig/client/CMakeLists.txt rdc-rocm-5.5.1/client/CMakeLists.txt
--- rdc-rocm-5.5.1.orig/client/CMakeLists.txt	2023-02-27 09:13:11.000000000 -0800
+++ rdc-rocm-5.5.1/client/CMakeLists.txt	2023-09-29 16:40:46.034988115 -0700
@@ -44,7 +44,7 @@ message("--------------Compiler: " ${CMA
 message("---------------Version: " ${CMAKE_CXX_COMPILER_VERSION})
 message("----------Proj Src Dir: " ${PROJECT_SOURCE_DIR})
 message("----------Proj Bld Dir: " ${PROJECT_BINARY_DIR})
-message("----------Proj Lib Dir: " ${PROJECT_BINARY_DIR}/lib)
+message("----------Proj Lib Dir: " ${PROJECT_BINARY_DIR}/@LIBDIR@)
 message("----------Proj Exe Dir: " ${PROJECT_BINARY_DIR}/bin)
 message("----------RSMI Lib Dir: " ${RSMI_LIB_DIR})
 message("----------RSMI Inc Dir: " ${RSMI_INC_DIR})
diff -urp rdc-rocm-5.5.1.orig/CMakeLists.txt rdc-rocm-5.5.1/CMakeLists.txt
--- rdc-rocm-5.5.1.orig/CMakeLists.txt	2023-09-29 16:39:43.766988831 -0700
+++ rdc-rocm-5.5.1/CMakeLists.txt	2023-09-29 16:40:46.034988115 -0700
@@ -80,7 +80,7 @@ include(GNUInstallDirs)
 
 # ROCM_DIR should be passed in via command line; it will be used
 # in sub-projects. Override with -DROCM_DIR=
-set(ROCM_DIR "/opt/rocm" CACHE STRING "ROCm directory.")
+set(ROCM_DIR "@EPREFIX_ROCM_PATH@" CACHE STRING "ROCm directory.")
 
 # Only populate RUNPATH if ROCM_RPATH env variable is set
 # Mostly makes sense in ROCm build scripts context
@@ -89,32 +89,32 @@ set(ROCM_DIR "/opt/rocm" CACHE STRING "R
 #
 # Reasons for some $ORIGIN paths:
 # $ORIGIN
-# - rocm/lib/librdc.so needs rocm/lib/librocm_smi64.so
+# - rocm/@LIBDIR@/librdc.so needs rocm/@LIBDIR@/librocm_smi64.so
 # $ORIGIN/..
-# - rocm/lib/rdc/librdc_rocp.so needs rocm/lib/rdc/../librdc_bootstrap.so
-# $ORIGIN/../lib
-# - rocm/bin/rdci needs rocm/lib/../lib/librdc_bootstrap.so.0
-# - rocm/bin/rdcd needs rocm/lib/../lib/librdc_bootstrap.so.0
-# $ORIGIN/../lib/rdc/grpc/lib
-# - rocm/lib/librdc_client.so needs rocm/lib/../lib/rdc/grpc/lib/libgrpc++.so
+# - rocm/@LIBDIR@/rdc/librdc_rocp.so needs rocm/@LIBDIR@/rdc/../librdc_bootstrap.so
+# $ORIGIN/../@LIBDIR@
+# - rocm/bin/rdci needs rocm/@LIBDIR@/../@LIBDIR@/librdc_bootstrap.so.0
+# - rocm/bin/rdcd needs rocm/@LIBDIR@/../@LIBDIR@/librdc_bootstrap.so.0
+# $ORIGIN/../@LIBDIR@/rdc/grpc/@LIBDIR@
+# - rocm/@LIBDIR@/librdc_client.so needs rocm/@LIBDIR@/../@LIBDIR@/rdc/grpc/@LIBDIR@/libgrpc++.so
 # All other versions are for inconsistencies between systems and custom installation paths
 if(DEFINED ENV{ROCM_RPATH})
     set(RDC_RUNPATH
         "\$ORIGIN"
         "\$ORIGIN/.."
-        "\$ORIGIN/../lib"
-        "\$ORIGIN/../lib/rdc")
-    # replace lib with lib64
-    list(TRANSFORM RDC_RUNPATH REPLACE "lib" "lib64" OUTPUT_VARIABLE RDC_RUNPATH64)
+        "\$ORIGIN/../@LIBDIR@"
+        "\$ORIGIN/../@LIBDIR@/rdc")
+    # replace lib with @LIBDIR@
+    list(TRANSFORM RDC_RUNPATH REPLACE "lib" "@LIBDIR@" OUTPUT_VARIABLE RDC_RUNPATH64)
 
     set(GRPC_RUNPATH
-        "\$ORIGIN/grpc/lib"
-        "\$ORIGIN/../grpc/lib"
-        "\$ORIGIN/../lib/grpc/lib"
-        "\$ORIGIN/../lib/rdc/grpc/lib"
-        "\$ORIGIN/../lib64/rdc/grpc/lib")
-    # replace /grpc/lib with /grpc/lib64
-    list(TRANSFORM GRPC_RUNPATH REPLACE "/grpc/lib" "/grpc/lib64" OUTPUT_VARIABLE GRPC_RUNPATH64)
+        "\$ORIGIN/grpc/@LIBDIR@"
+        "\$ORIGIN/../grpc/@LIBDIR@"
+        "\$ORIGIN/../@LIBDIR@/grpc/@LIBDIR@"
+        "\$ORIGIN/../@LIBDIR@/rdc/grpc/@LIBDIR@"
+        "\$ORIGIN/../@LIBDIR@/rdc/grpc/@LIBDIR@")
+    # replace /grpc/@LIBDIR@ with /grpc/@LIBDIR@
+    list(TRANSFORM GRPC_RUNPATH REPLACE "/grpc/@LIBDIR@" "/grpc/@LIBDIR@" OUTPUT_VARIABLE GRPC_RUNPATH64)
 
     # combine lists
     set(CMAKE_INSTALL_RPATH
@@ -148,7 +148,7 @@ set(CMAKE_PREFIX_PATH
     )
 set(CMAKE_LIBRARY_PATH
     ${CMAKE_LIBRARY_PATH}
-    /usr/lib64
+    /usr/@LIBDIR@
     /usr/lib/x86_64-linux-gnu
     )
 
@@ -192,7 +192,7 @@ endif()
 
 find_package(RSMI
     NAMES rocm_smi
-    HINTS ${ROCM_DIR}/lib/cmake
+    HINTS ${ROCM_DIR}/@LIBDIR@/cmake
     CONFIGURE REQUIRED)
 set(RSMI_INC_DIR "${ROCM_SMI_INCLUDE_DIR}" CACHE INTERNAL "ROCm SMI include directory.")
 set(RSMI_LIB_DIR "${ROCM_SMI_LIB_DIR}" CACHE INTERNAL "ROCm SMI library directory.")
@@ -255,7 +255,7 @@ if(BUILD_STANDALONE)
     find_program(GRPC_PLUGIN
         NAMES grpc_cpp_plugin
         REQUIRED)
-    set(GRPC_LIB_DIR "${GRPC_ROOT}/lib")
+    set(GRPC_LIB_DIR "${GRPC_ROOT}/@LIBDIR@")
 
     set(ENV{LD_LIBRARY_PATH} ${GRPC_LIB_DIR}:${GRPC_LIB_DIR}64:$ENV{LD_LIBRARY_PATH})
     message("LD_LIBRARY_PATH = $ENV{LD_LIBRARY_PATH}")
@@ -306,15 +306,15 @@ if(BUILD_STANDALONE)
     # GRPC_ROOT_DEFAULT (/usr), which is incorrect behavior.
     # This is needed because it's very difficult to track all gRPC dependencies
     if(NOT GRPC_ROOT STREQUAL GRPC_ROOT_DEFAULT)
-        install(DIRECTORY ${GRPC_ROOT}/lib
+        install(DIRECTORY ${GRPC_ROOT}/@LIBDIR@
             USE_SOURCE_PERMISSIONS
             DESTINATION ${CMAKE_INSTALL_LIBDIR}/${RDC}/grpc
             COMPONENT ${SERVER_COMPONENT})
-        # In SLES, The libprotobuf is created under lib64 folder, install it as well
-        if(EXISTS ${GRPC_ROOT}/lib64)
-            install(DIRECTORY ${GRPC_ROOT}/lib64/
+        # In SLES, The libprotobuf is created under @LIBDIR@ folder, install it as well
+        if(EXISTS ${GRPC_ROOT}/@LIBDIR@)
+            install(DIRECTORY ${GRPC_ROOT}/@LIBDIR@/
                 USE_SOURCE_PERMISSIONS
-                DESTINATION ${CMAKE_INSTALL_LIBDIR}/${RDC}/grpc/lib
+                DESTINATION ${CMAKE_INSTALL_LIBDIR}/${RDC}/grpc/@LIBDIR@
                 COMPONENT ${SERVER_COMPONENT})
         endif()
         # Also include dev setup for people do not want to build grpc
@@ -410,7 +410,7 @@ endif()
 
 
 #Identify between SLES and Centos for setting symlink for rdc.service
-#SLES need serice file in /usr/lib/systemd/system/rdc.service
+#SLES need serice file in /usr//systemd/system/rdc.service
 #CENTOS/RHEL Require file in /lib/systemd/system/rdc.service
 file(STRINGS /etc/os-release LINUX_DISTRO LIMIT_COUNT 1 REGEX "NAME=")
 message("Using Linux Distro: ${LINUX_DISTRO}")
diff -urp rdc-rocm-5.5.1.orig/cmake_modules/Findrocmtools.cmake rdc-rocm-5.5.1/cmake_modules/Findrocmtools.cmake
--- rdc-rocm-5.5.1.orig/cmake_modules/Findrocmtools.cmake	2023-02-27 09:13:11.000000000 -0800
+++ rdc-rocm-5.5.1/cmake_modules/Findrocmtools.cmake	2023-09-29 16:40:46.034988115 -0700
@@ -4,7 +4,7 @@
 set(NAME rocmtools)
 
 if(NOT DEFINED ROCM_DIR)
-    set(ROCM_DIR "/opt/rocm")
+    set(ROCM_DIR "@EPREFIX_ROCM_PATH@")
 endif()
 
 find_library(
@@ -12,7 +12,7 @@ find_library(
     NAMES ${NAME} ${NAME}64
     HINTS "${ROCM_DIR}"
     REGISTRY_VIEW BOTH
-    PATH_SUFFIXES lib)
+    PATH_SUFFIXES @LIBDIR@)
 
 if(NOT DEFINED (${NAME}_INCLUDE_DIR))
     find_path(
diff -urp rdc-rocm-5.5.1.orig/cmake_modules/rdc-backward-compat.cmake rdc-rocm-5.5.1/cmake_modules/rdc-backward-compat.cmake
--- rdc-rocm-5.5.1.orig/cmake_modules/rdc-backward-compat.cmake	2023-02-27 09:13:11.000000000 -0800
+++ rdc-rocm-5.5.1/cmake_modules/rdc-backward-compat.cmake	2023-09-29 16:40:46.034988115 -0700
@@ -21,7 +21,7 @@ cmake_minimum_required(VERSION 3.16.8)
 
 set(RDC_WRAPPER_DIR ${CMAKE_CURRENT_BINARY_DIR}/wrapper_dir)
 set(RDC_WRAPPER_INC_DIR ${RDC_WRAPPER_DIR}/include/rdc)
-set(RDC_WRAPPER_LIB_DIR ${RDC_WRAPPER_DIR}/lib)
+set(RDC_WRAPPER_LIB_DIR ${RDC_WRAPPER_DIR}/@LIBDIR@)
 set(RDC_WRAPPER_BIN_DIR ${RDC_WRAPPER_DIR}/bin)
 set(RDC_SRC_INC_DIR ${PROJECT_SOURCE_DIR}/include/rdc)
 
diff -urp rdc-rocm-5.5.1.orig/example/CMakeLists.txt rdc-rocm-5.5.1/example/CMakeLists.txt
--- rdc-rocm-5.5.1.orig/example/CMakeLists.txt	2023-02-27 09:13:11.000000000 -0800
+++ rdc-rocm-5.5.1/example/CMakeLists.txt	2023-09-29 16:40:46.034988115 -0700
@@ -58,7 +58,7 @@ include(CMakePrintHelpers)
 if(DEFINED ENV{ROCM_PATH})
     set(ROCM_DIR "$ENV{ROCM_PATH}" CACHE STRING "ROCm directory.")
 else()
-    set(ROCM_DIR "/opt/rocm" CACHE STRING "ROCm directory.")
+    set(ROCM_DIR "@EPREFIX_ROCM_PATH@" CACHE STRING "ROCm directory.")
 endif()
 
 # add package search paths
@@ -68,8 +68,7 @@ set(CMAKE_PREFIX_PATH
     )
 set(CMAKE_LIBRARY_PATH
     ${CMAKE_LIBRARY_PATH}
-    ${ROCM_DIR}/lib
-    ${ROCM_DIR}/lib64
+    ${ROCM_DIR}/@LIBDIR@
     )
 
 # RDC provides librdc_bootstrap
diff -urp rdc-rocm-5.5.1.orig/example/README.md rdc-rocm-5.5.1/example/README.md
--- rdc-rocm-5.5.1.orig/example/README.md	2023-02-27 09:13:11.000000000 -0800
+++ rdc-rocm-5.5.1/example/README.md	2023-09-29 16:40:46.034988115 -0700
@@ -5,7 +5,7 @@
 
 ***NOTE: You have to have RDC installed somewhere.***
 
-If you have rocm (and RDC) installed under `/opt/rocm` - then you can simply do:
+If you have rocm (and RDC) installed under `@EPREFIX_ROCM_PATH@` - then you can simply do:
 
 ```bash
 # same as 'mkdir -p build; cd build; cmake ../; cd ../'
@@ -28,8 +28,8 @@ You can also set ROCM\_PATH environment
 ### I can't find rdc!
 
 - Is RDC installed?
-- Is RDC installed under `/opt/rocm`?
-- Can you find `/opt/rocm/lib/cmake/rdc/rdcTargets.cmake`?
+- Is RDC installed under `@EPREFIX_ROCM_PATH@`?
+- Can you find `@EPREFIX_ROCM_PATH@/@LIBDIR@/cmake/rdc/rdcTargets.cmake`?
 
 
 ### Where is rdc?
diff -urp rdc-rocm-5.5.1.orig/python_binding/rdc_bootstrap.py rdc-rocm-5.5.1/python_binding/rdc_bootstrap.py
--- rdc-rocm-5.5.1.orig/python_binding/rdc_bootstrap.py	2023-02-27 09:13:11.000000000 -0800
+++ rdc-rocm-5.5.1/python_binding/rdc_bootstrap.py	2023-09-29 16:40:46.034988115 -0700
@@ -10,8 +10,7 @@ librdc = "librdc_bootstrap.so"
 # Search librdc_bootstrap.so paths
 current_folder = os.path.dirname(os.path.realpath(__file__))
 rdc_paths = [ "", # without path
-        current_folder+"/../../../lib/",   # package installation
-        current_folder+"/../../../lib64/", # package installation
+        current_folder+"/../../../@LIBDIR@/",   # package installation
         current_folder+"/../build/rdc_libs/" # build from source code
 ]
 
diff -urp rdc-rocm-5.5.1.orig/python_binding/rdc_collectd.conf rdc-rocm-5.5.1/python_binding/rdc_collectd.conf
--- rdc-rocm-5.5.1.orig/python_binding/rdc_collectd.conf	2023-02-27 09:13:11.000000000 -0800
+++ rdc-rocm-5.5.1/python_binding/rdc_collectd.conf	2023-09-29 16:40:46.034988115 -0700
@@ -1,5 +1,5 @@
  <Plugin python>
-    ModulePath "/opt/rocm/rdc/python_binding"
+    ModulePath "@EPREFIX_ROCM_PATH@/rdc/python_binding"
     LogTraces true
     Interactive false
     Import "rdc_collectd"
diff -urp rdc-rocm-5.5.1.orig/rdci/CMakeLists.txt rdc-rocm-5.5.1/rdci/CMakeLists.txt
--- rdc-rocm-5.5.1.orig/rdci/CMakeLists.txt	2023-02-27 09:13:11.000000000 -0800
+++ rdc-rocm-5.5.1/rdci/CMakeLists.txt	2023-09-29 16:40:46.034988115 -0700
@@ -32,7 +32,7 @@ message("-Pkg.-Install Prefix: " ${CPACK
 message("-CMake inst. Bindir : " ${CMAKE_INSTALL_BINDIR})
 message("--------Proj Src Dir: " ${PROJECT_SOURCE_DIR})
 message("--------Proj Bld Dir: " ${PROJECT_BINARY_DIR})
-message("--------Proj Lib Dir: " ${PROJECT_BINARY_DIR}/lib)
+message("--------Proj Lib Dir: " ${PROJECT_BINARY_DIR}/@LIBDIR@)
 message("--------Proj Exe Dir: " ${PROJECT_BINARY_DIR}/bin)
 message("--------RSMI Lib Dir: " ${RSMI_LIB_DIR})
 message("--------RSMI Inc Dir: " ${RSMI_INC_DIR})
diff -urp rdc-rocm-5.5.1.orig/rdc_libs/CMakeLists.txt rdc-rocm-5.5.1/rdc_libs/CMakeLists.txt
--- rdc-rocm-5.5.1.orig/rdc_libs/CMakeLists.txt	2023-02-27 09:13:11.000000000 -0800
+++ rdc-rocm-5.5.1/rdc_libs/CMakeLists.txt	2023-09-29 16:40:46.034988115 -0700
@@ -44,7 +44,7 @@ message("------------Compiler: " ${CMAKE
 message("-------------Version: " ${CMAKE_CXX_COMPILER_VERSION})
 message("--------Proj Src Dir: " ${PROJECT_SOURCE_DIR})
 message("--------Proj Bld Dir: " ${PROJECT_BINARY_DIR})
-message("--------Proj Lib Dir: " ${PROJECT_BINARY_DIR}/lib)
+message("--------Proj Lib Dir: " ${PROJECT_BINARY_DIR}/@LIBDIR@)
 message("--------Proj Exe Dir: " ${PROJECT_BINARY_DIR}/bin)
 message("--------RSMI Lib Dir: " ${RSMI_LIB_DIR})
 message("--------RSMI Inc Dir: " ${RSMI_INC_DIR})
diff -urp rdc-rocm-5.5.1.orig/rdc_libs/rdc/CMakeLists.txt rdc-rocm-5.5.1/rdc_libs/rdc/CMakeLists.txt
--- rdc-rocm-5.5.1.orig/rdc_libs/rdc/CMakeLists.txt	2023-02-27 09:13:11.000000000 -0800
+++ rdc-rocm-5.5.1/rdc_libs/rdc/CMakeLists.txt	2023-09-29 16:41:08.702987854 -0700
@@ -67,6 +67,7 @@ target_include_directories(${RDC_LIB} PR
     "${PROJECT_SOURCE_DIR}"
     "${PROJECT_SOURCE_DIR}/include"
     "${RSMI_INC_DIR}")
+include_directories(@EPREFIX_ROCM_PATH@/include)
 
 # Set the VERSION and SOVERSION values
 set_property(TARGET ${RDC_LIB} PROPERTY
diff -urp rdc-rocm-5.5.1.orig/rdc_libs/rdc/src/RdcRocpLib.cc rdc-rocm-5.5.1/rdc_libs/rdc/src/RdcRocpLib.cc
--- rdc-rocm-5.5.1.orig/rdc_libs/rdc/src/RdcRocpLib.cc	2023-02-27 09:13:11.000000000 -0800
+++ rdc-rocm-5.5.1/rdc_libs/rdc/src/RdcRocpLib.cc	2023-09-29 16:40:46.034988115 -0700
@@ -140,7 +140,7 @@ rdc_status_t RdcRocpLib::rdc_telemetry_f
 
 std::string RdcRocpLib::get_rocm_path() {
     // set default rocm path in case lookup fails
-    std::string rocm_path("/opt/rocm");
+    std::string rocm_path("@EPREFIX_ROCM_PATH@");
     const char* rocm_path_env = getenv("ROCM_PATH");
     if (rocm_path_env != nullptr) {
         rocm_path = rocm_path_env;
@@ -166,7 +166,7 @@ std::string RdcRocpLib::get_rocm_path()
         }
         // extract library path, drop library name
         rocm_path = line.substr(index_start, index_end - index_start);
-        // appending "../" should result in "/opt/rocm/lib/.." or similar
+        // appending "../" should result in "@EPREFIX_ROCM_PATH@/@LIBDIR@/.." or similar
         rocm_path += "..";
         return rocm_path;
     }
diff -urp rdc-rocm-5.5.1.orig/README.md rdc-rocm-5.5.1/README.md
--- rdc-rocm-5.5.1.orig/README.md	2023-02-27 09:13:11.000000000 -0800
+++ rdc-rocm-5.5.1/README.md	2023-09-29 16:40:46.034988115 -0700
@@ -67,7 +67,7 @@ Clone the RDC source code from GitHub an
 git clone https://github.com/RadeonOpenCompute/rdc
 cd rdc
 mkdir -p build
-# default installation location is /opt/rocm, specify with -DROCM_DIR or -DCMAKE_INSTALL_PREFIX
+# default installation location is @EPREFIX_ROCM_PATH@, specify with -DROCM_DIR or -DCMAKE_INSTALL_PREFIX
 cmake -B build -DGRPC_ROOT="$GRPC_ROOT"
 make -C build -j $(nproc)
 make -C build install
@@ -92,8 +92,8 @@ cmake -B build -DBUILD_ROCRTEST=off
 ## Update System Library Path
 
 ```bash
-RDC_LIB_DIR=/opt/rocm/rdc/lib
-GRPC_LIB_DIR=/opt/grpc/lib
+RDC_LIB_DIR=@EPREFIX_ROCM_PATH@/rdc/@LIBDIR@
+GRPC_LIB_DIR=/opt/grpc/@LIBDIR@
 echo -e "${GRPC_LIB_DIR}\n${GRPC_LIB_DIR}64" | sudo tee /etc/ld.so.conf.d/x86_64-librdc_client.conf
 echo -e "${RDC_LIB_DIR}\n${RDC_LIB_DIR}64" | sudo tee -a /etc/ld.so.conf.d/x86_64-librdc_client.conf
 ldconfig
@@ -110,24 +110,24 @@ For an RDC client application to monitor
 When *rdcd* is started from a command-line the *capabilities* are determined by privilege of the *user* starting *rdcd*
 
 ```bash
-## NOTE: Replace /opt/rocm with specific rocm version if needed
+## NOTE: Replace @EPREFIX_ROCM_PATH@ with specific rocm version if needed
 
 ## To run with authentication. Ensure SSL keys are setup properly
 ## version will be the version number(ex:3.10.0) of ROCm where RDC was packaged with
-/opt/rocm/rdc/bin/rdcd           ## rdcd is started with monitor-only capabilities
-sudo /opt/rocm/rdc/bin/rdcd      ## rdcd is started will full-capabilities
+@EPREFIX_ROCM_PATH@/rdc/bin/rdcd           ## rdcd is started with monitor-only capabilities
+sudo @EPREFIX_ROCM_PATH@/rdc/bin/rdcd      ## rdcd is started will full-capabilities
 
 ## To run without authentication. SSL key & certificates are not required.
 ## version will be the version number(ex:3.10.0) of ROCm where RDC was packaged with
-/opt/rocm/rdc/bin/rdcd -u        ## rdcd is started with monitor-only capabilities
-sudo /opt/rocm/rdc/bin/rdcd -u   ## rdcd is started will full-capabilities
+@EPREFIX_ROCM_PATH@/rdc/bin/rdcd -u        ## rdcd is started with monitor-only capabilities
+sudo @EPREFIX_ROCM_PATH@/rdc/bin/rdcd -u   ## rdcd is started will full-capabilities
 ```
 
 ### Start RDCD using systemd
-*rdcd* can be started by using the systemctl command. You can copy /opt/rocm/rdc/lib/rdc.service, which is installed with RDC, to the systemd folder. This file has 2 lines that control what *capabilities* with which *rdcd* will run. If left uncommented, rdcd will run with full-capabilities.
+*rdcd* can be started by using the systemctl command. You can copy @EPREFIX_ROCM_PATH@/rdc/@LIBDIR@/rdc.service, which is installed with RDC, to the systemd folder. This file has 2 lines that control what *capabilities* with which *rdcd* will run. If left uncommented, rdcd will run with full-capabilities.
 
 ```bash
-## file: /opt/rocm/rdc/lib/rdc.service
+## file: @EPREFIX_ROCM_PATH@/rdc/@LIBDIR@/rdc.service
 ## Comment the following two lines to run with monitor-only capabilities
 CapabilityBoundingSet=CAP_DAC_OVERRIDE
 AmbientCapabilities=CAP_DAC_OVERRIDE
@@ -144,9 +144,9 @@ RDCI provides command-line interface to
 ## sample rdci commands to test RDC functionality
 ## discover devices in a local or remote compute node
 ## NOTE: option -u (for unauthenticated) is required if rdcd was started in this mode
-## Assuming that rdc is installed into /opt/rocm
+## Assuming that rdc is installed into @EPREFIX_ROCM_PATH@
 
-cd /opt/rocm/rdc/bin
+cd @EPREFIX_ROCM_PATH@/rdc/bin
 ./rdci discovery -l <-u>                    ## list available GPUs in localhost
 ./rdci discovery <host> -l <-u>             ## list available GPUs in host machine
 ./rdci dmon <host> <-u> -l                  ## list most GPU counters
@@ -168,7 +168,7 @@ sudo journalctl -u rdc
 To run rdcd with debug log from command-line use
 version will be the version number(ex:3.10.0) of ROCm where RDC was packaged with
 ```bash
-RDC_LOG=DEBUG /opt/rocm/rdc/bin/rdcd
+RDC_LOG=DEBUG @EPREFIX_ROCM_PATH@/rdc/bin/rdcd
 ```
 
 RDC_LOG=DEBUG also works on rdci
diff -urp rdc-rocm-5.5.1.orig/server/CMakeLists.txt rdc-rocm-5.5.1/server/CMakeLists.txt
--- rdc-rocm-5.5.1.orig/server/CMakeLists.txt	2023-02-27 09:13:11.000000000 -0800
+++ rdc-rocm-5.5.1/server/CMakeLists.txt	2023-09-29 16:40:46.034988115 -0700
@@ -29,7 +29,7 @@ message("--------------Compiler: " ${CMA
 message("---------------Version: " ${CMAKE_CXX_COMPILER_VERSION})
 message("----------Proj Src Dir: " ${PROJECT_SOURCE_DIR})
 message("----------Proj Bld Dir: " ${PROJECT_BINARY_DIR})
-message("----------Proj Lib Dir: " ${PROJECT_BINARY_DIR}/lib)
+message("----------Proj Lib Dir: " ${PROJECT_BINARY_DIR}/@LIBDIR@)
 message("----------Proj Exe Dir: " ${PROJECT_BINARY_DIR}/bin)
 message("----------RSMI Lib Dir: " ${RSMI_LIB_DIR})
 message("----------RSMI Inc Dir: " ${RSMI_INC_DIR})
diff -urp rdc-rocm-5.5.1.orig/server/run_build.sh rdc-rocm-5.5.1/server/run_build.sh
--- rdc-rocm-5.5.1.orig/server/run_build.sh	2023-02-27 09:13:11.000000000 -0800
+++ rdc-rocm-5.5.1/server/run_build.sh	2023-09-29 16:40:46.034988115 -0700
@@ -2,7 +2,7 @@
 
 mkdir -p build
 cd build
-cmake -DROCM_DIR=/opt/rocm ..
+cmake -DROCM_DIR=@EPREFIX_ROCM_PATH@ ..
 make
 cd ..
 
diff -urp rdc-rocm-5.5.1.orig/src/header_template.hpp.in rdc-rocm-5.5.1/src/header_template.hpp.in
--- rdc-rocm-5.5.1.orig/src/header_template.hpp.in	2023-02-27 09:13:11.000000000 -0800
+++ rdc-rocm-5.5.1/src/header_template.hpp.in	2023-09-29 16:40:46.034988115 -0700
@@ -23,9 +23,9 @@
 #define @include_guard@
 
 #if defined(__GNUC__)
-#warning "This file is deprecated. Use file from include path /opt/rocm-ver/include/ and include as rdc/@header_name@"
+#warning "This file is deprecated. Use file from include path @EPREFIX_ROCM_PATH@/include/ and include as rdc/@header_name@"
 #else
-#pragma message("This file is deprecated. Use file from include path /opt/rocm-ver/include/ and include as rdc/@header_name@")
+#pragma message("This file is deprecated. Use file from include path @EPREFIX_ROCM_PATH@/include/ and include as rdc/@header_name@")
 #endif
 
 @include_statements@
diff -urp rdc-rocm-5.5.1.orig/tests/example/CMakeLists.txt rdc-rocm-5.5.1/tests/example/CMakeLists.txt
--- rdc-rocm-5.5.1.orig/tests/example/CMakeLists.txt	2023-02-27 09:13:11.000000000 -0800
+++ rdc-rocm-5.5.1/tests/example/CMakeLists.txt	2023-09-29 16:40:46.034988115 -0700
@@ -43,7 +43,7 @@ message("------------Compiler: " ${CMAKE
 message("-------------Version: " ${CMAKE_CXX_COMPILER_VERSION})
 message("--------Proj Src Dir: " ${PROJECT_SOURCE_DIR})
 message("--------Proj Bld Dir: " ${PROJECT_BINARY_DIR})
-message("--------Proj Lib Dir: " ${PROJECT_BINARY_DIR}/lib)
+message("--------Proj Lib Dir: " ${PROJECT_BINARY_DIR}/@LIBDIR@)
 message("--------Proj Exe Dir: " ${PROJECT_BINARY_DIR}/bin)
 message("--------RSMI Inc Dir: " ${RSMI_INC_DIR})
 message("")
diff -urp rdc-rocm-5.5.1.orig/tests/rdc_tests/CMakeLists.txt rdc-rocm-5.5.1/tests/rdc_tests/CMakeLists.txt
--- rdc-rocm-5.5.1.orig/tests/rdc_tests/CMakeLists.txt	2023-02-27 09:13:11.000000000 -0800
+++ rdc-rocm-5.5.1/tests/rdc_tests/CMakeLists.txt	2023-09-29 16:40:46.034988115 -0700
@@ -11,10 +11,10 @@ endif()
 option(INSTALL_GTEST "Install GTest (only useful if GTest is not already installed)" OFF)
 
 # Hack to find libraries after installation
-# /opt/rocm/share/rdc/rdctst_tests/../../../ = /opt/rocm
+# @EPREFIX_ROCM_PATH@/share/rdc/rdctst_tests/../../../ = @EPREFIX_ROCM_PATH@
 set(RDCTST_RPATH
-    "\$ORIGIN/../../../lib"
-    "\$ORIGIN/../../../lib/rdc")
+    "\$ORIGIN/../../../@LIBDIR@"
+    "\$ORIGIN/../../../@LIBDIR@/rdc")
 # replace lib with lib64
 list(TRANSFORM RDCTST_RPATH REPLACE "lib" "lib64" OUTPUT_VARIABLE RDCTST_RPATH64)
 # combine lists
@@ -39,7 +39,7 @@ message("-------------Version: " ${CMAKE
 message("------------ROCM_DIR: " ${ROCM_DIR})
 message("--------Proj Src Dir: " ${PROJECT_SOURCE_DIR})
 message("--------Proj Bld Dir: " ${PROJECT_BINARY_DIR})
-message("--------Proj Lib Dir: " ${PROJECT_BINARY_DIR}/lib)
+message("--------Proj Lib Dir: " ${PROJECT_BINARY_DIR}/@LIBDIR@)
 message("--------Proj Exe Dir: " ${PROJECT_BINARY_DIR}/bin)
 message("--------RSMI Lib Dir: " ${RSMI_LIB_DIR})
 message("--------RSMI Inc Dir: " ${RSMI_INC_DIR})
