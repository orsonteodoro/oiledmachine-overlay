Patch status:  WIP / In development
License identified for Makefile:
# SPDX-License-Identifier: GPL-2.0
License identified for scripts/Makefile.modfinal:
# SPDX-License-Identifier: GPL-2.0-only
License identified for scripts/Makefile.vmlinux_o:
# SPDX-License-Identifier: GPL-2.0-only
License identified in scripts/Makefile.vmlinux:
# SPDX-License-Identifier: GPL-2.0-only
License identified for kernel/gcov/Makefile:
# SPDX-License-Identifier: GPL-2.0
License identified in arch/x86/kernel/paravirt.c:
// SPDX-License-Identifier: GPL-2.0-or-later
--- a/Makefile.orig	2023-09-13 18:20:31.324243717 -0700
+++ b/Makefile	2023-09-13 18:21:21.272242425 -0700
@@ -762,10 +762,46 @@ endif # KBUILD_EXTMOD
 # Defaults to vmlinux, but the arch makefile usually adds further targets
 all: vmlinux
 
-CFLAGS_GCOV	:= -fprofile-arcs -ftest-coverage
-ifdef CONFIG_CC_IS_GCC
-CFLAGS_GCOV	+= -fno-tree-loop-im
+CFLAGS_GCOV	:=
+CFLAGS_GCOV_DEFAULT	:= 1
+
+ifeq ($(GCC_PGO_PHASE),GCC_PDI)
+CFLAGS_GCOV	:= -fprofile-arcs -fno-tree-loop-im
+CFLAGS_GCOV_DEFAULT	= 0
+endif
+
+ifeq ($(GCC_PGO_PHASE),GCC_PGI)
+CFLAGS_GCOV	:= -fprofile-generate -fno-tree-loop-im
+CFLAGS_GCOV_DEFAULT	= 0
+endif
+
+ifeq ($(GCC_PGO_PHASE),GCC_PGO_CFG)
+CFLAGS_GCOV	:= -fprofile-arcs -fno-tree-loop-im
+CFLAGS_GCOV_DEFAULT	= 0
+endif
+
+ifeq ($(GCC_PGO_PHASE),GCC_PDO)
+KCFLAGS	:= -fbranch-probabilities -fprofile-dir=$(GCC_PGO_PROFILE_DIR) -fprofile-correction -Wno-error=missing-profile -Wno-error=coverage-mismatch
+CFLAGS_GCOV_DEFAULT	= 0
 endif
+
+ifeq ($(GCC_PGO_PHASE),GCC_PGO)
+KCFLAGS	:= -fprofile-use -fprofile-dir=$(GCC_PGO_PROFILE_DIR) -fprofile-correction -Wno-error=missing-profile -Wno-error=coverage-mismatch
+CFLAGS_GCOV_DEFAULT	= 0
+endif
+
+ifeq ($(GCC_PGO_PHASE),GCC_PGO_CFG)
+KCFLAGS	:= -fprofile-use -fprofile-dir=$(GCC_PGO_PROFILE_DIR) -fprofile-correction -Wno-error=missing-profile -Wno-error=coverage-mismatch
+CFLAGS_GCOV_DEFAULT	= 0
+endif
+
+ifeq ($(CFLAGS_GCOV_DEFAULT),1)
+CFLAGS_GCOV	:= -fprofile-arcs -ftest-coverage
+endif
+
+$(info "GCC_PGO_PHASE:  ${GCC_PGO_PHASE}")
+$(info "CFLAGS_GCOV:  ${CFLAGS_GCOV}")
+
 export CFLAGS_GCOV
 
 # The arch Makefiles can override CC_FLAGS_FTRACE. We may also append it later.
--- a/kernel/gcov/Makefile.orig	2023-08-27 14:49:51.000000000 -0700
+++ b/kernel/gcov/Makefile	2023-09-13 15:27:37.344512036 -0700
@@ -1,4 +1,9 @@
 # SPDX-License-Identifier: GPL-2.0
+
+ifeq ($(GCC_PGO_PHASE),GCC_PGI)
+GCOV_PROFILE := n
+endif
+
 ccflags-y := -DSRCTREE='"$(srctree)"' -DOBJTREE='"$(objtree)"'
 
 obj-y := base.o fs.o
--- a/arch/x86/kernel/paravirt.c.orig	2023-08-27 14:49:51.000000000 -0700
+++ b/arch/x86/kernel/paravirt.c	2023-09-13 16:01:12.052459926 -0700
@@ -38,6 +38,7 @@
  * nop stub, which must not clobber anything *including the stack* to
  * avoid confusing the entry prologues.
  */
+//
 DEFINE_PARAVIRT_ASM(_paravirt_nop, "", .entry.text);
 
 /* stub always returning 0. */
