--- a/arch/arm/tools/syscall.tbl.orig	2021-09-22 20:51:22.960846010 -0700
+++ b/arch/arm/tools/syscall.tbl	2021-09-22 20:53:56.979851085 -0700
@@ -462,3 +462,4 @@
 446	common	landlock_restrict_self		sys_landlock_restrict_self
 447	common	futex_wait			sys_futex_wait
 448	common	futex_wake			sys_futex_wake
+449	common  futex_waitv                     sys_futex_waitv
--- a/arch/arm64/include/asm/unistd.h.orig	2021-09-22 20:51:22.961846010 -0700
+++ b/arch/arm64/include/asm/unistd.h	2021-09-22 20:53:56.979851085 -0700
@@ -38,7 +38,7 @@
 #define __ARM_NR_compat_set_tls		(__ARM_NR_COMPAT_BASE + 5)
 #define __ARM_NR_COMPAT_END		(__ARM_NR_COMPAT_BASE + 0x800)
 
-#define __NR_compat_syscalls		449
+#define __NR_compat_syscalls		450
 #endif
 
 #define __ARCH_WANT_SYS_CLONE
--- a/arch/x86/entry/syscalls/syscall_32.tbl.orig	2021-09-22 20:51:22.964846010 -0700
+++ b/arch/x86/entry/syscalls/syscall_32.tbl	2021-09-22 20:53:56.979851085 -0700
@@ -454,3 +454,4 @@
 447	i386	memfd_secret		sys_memfd_secret
 448	i386	futex_wait		sys_futex_wait
 449	i386	futex_wake		sys_futex_wake
+450	i386	futex_waitv		sys_futex_waitv			compat_sys_futex_waitv
--- a/arch/x86/entry/syscalls/syscall_64.tbl.orig	2021-09-22 20:53:56.980851085 -0700
+++ b/arch/x86/entry/syscalls/syscall_64.tbl	2021-09-22 20:54:24.287851985 -0700
@@ -371,6 +371,7 @@
 447	common	memfd_secret		sys_memfd_secret
 448	common	futex_wait		sys_futex_wait
 449	common	futex_wake		sys_futex_wake
+450	common	futex_waitv		sys_futex_waitv
 
 #
 # Due to a historical design error, certain syscalls are numbered differently
--- a/include/uapi/asm-generic/unistd.h.orig	2021-09-22 21:01:42.440866424 -0700
+++ b/include/uapi/asm-generic/unistd.h	2021-09-22 21:02:14.774867489 -0700
@@ -884,8 +884,11 @@ __SYSCALL(__NR_futex_wait, sys_futex_wai
 #define __NR_futex_wake 449
 __SYSCALL(__NR_futex_wake, sys_futex_wake)
 
+#define __NR_futex_waitv 450
+__SC_COMP(__NR_futex_waitv, sys_futex_waitv, compat_sys_futex_waitv)
+
 #undef __NR_syscalls
-#define __NR_syscalls 450
+#define __NR_syscalls 451
 
 /*
  * 32 bit systems traditionally used different
--- a/tools/include/uapi/asm-generic/unistd.h.orig	2021-09-22 20:51:22.967846010 -0700
+++ b/tools/include/uapi/asm-generic/unistd.h	2021-09-22 20:53:58.993851152 -0700
@@ -884,8 +884,11 @@ __SYSCALL(__NR_futex_wait, sys_futex_wai
 #define __NR_futex_wake 449
 __SYSCALL(__NR_futex_wake, sys_futex_wake)
 
+#define __NR_futex_waitv 450
+__SC_COMP(__NR_futex_waitv, sys_futex_waitv, compat_sys_futex_waitv)
+
 #undef __NR_syscalls
-#define __NR_syscalls 450
+#define __NR_syscalls 451
 
 /*
  * 32 bit systems traditionally used different
--- a/tools/perf/arch/x86/entry/syscalls/syscall_64.tbl.orig	2021-09-22 20:51:22.969846010 -0700
+++ b/tools/perf/arch/x86/entry/syscalls/syscall_64.tbl	2021-09-22 20:53:58.994851152 -0700
@@ -371,6 +371,7 @@
 447	common	memfd_secret		sys_memfd_secret
 448	common  futex_wait              sys_futex_wait
 449	common  futex_wake              sys_futex_wake
+450	common  futex_waitv             sys_futex_waitv
 
 #
 # Due to a historical design error, certain syscalls are numbered differently
--- a/include/linux/syscalls.h.orig	2021-09-22 20:51:23.091846014 -0700
+++ b/include/linux/syscalls.h	2021-09-22 20:59:47.790862646 -0700
@@ -71,6 +71,7 @@ struct open_how;
 struct mount_attr;
 struct landlock_ruleset_attr;
 enum landlock_rule_type;
+struct futex_waitv;
 
 #include <linux/types.h>
 #include <linux/aio_abi.h>
