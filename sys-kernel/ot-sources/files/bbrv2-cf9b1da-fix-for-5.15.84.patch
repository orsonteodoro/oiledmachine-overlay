

Header license for include/net/inet_connection_sock.h:

/* SPDX-License-Identifier: GPL-2.0-or-later */

Header license for include/uapi/linux/snmp.h:

/* SPDX-License-Identifier: GPL-2.0 WITH Linux-syscall-note */

Header license for net/ipv4/proc.c:

// SPDX-License-Identifier: GPL-2.0-or-later

Header license for net/ipv4/sysctl_net_ipv4.c:

// SPDX-License-Identifier: GPL-2.0

--- a/include/net/inet_connection_sock.h.orig	2022-12-19 19:49:26.504051707 -0800
+++ b/include/net/inet_connection_sock.h	2022-12-19 19:50:53.095477373 -0800
@@ -134,7 +134,7 @@ struct inet_connection_sock {
 	u32			  icsk_probes_tstamp;
 	u32			  icsk_user_timeout;
 
-#define ICSK_CA_PRIV_SIZE	  (216)
+#define ICSK_CA_PRIV_SIZE	  (224)
 	u64			  icsk_ca_priv[ICSK_CA_PRIV_SIZE / sizeof(u64)];
 };
 
--- a/include/uapi/linux/snmp.h.orig	2021-10-31 13:53:10.000000000 -0700
+++ b/include/uapi/linux/snmp.h	2022-12-19 19:51:15.784374953 -0800
@@ -292,6 +292,7 @@ enum
 	LINUX_MIB_TCPDSACKIGNOREDDUBIOUS,	/* TCPDSACKIgnoredDubious */
 	LINUX_MIB_TCPMIGRATEREQSUCCESS,		/* TCPMigrateReqSuccess */
 	LINUX_MIB_TCPMIGRATEREQFAILURE,		/* TCPMigrateReqFailure */
+	LINUX_MIB_TCPECNREHASH,			/* TCPECNRehash */
 	__LINUX_MIB_MAX
 };
 
--- a/net/ipv4/proc.c.orig	2022-12-19 19:48:51.298658900 -0800
+++ b/net/ipv4/proc.c	2022-12-19 19:51:38.245263505 -0800
@@ -297,6 +297,7 @@ static const struct snmp_mib snmp4_net_l
 	SNMP_MIB_ITEM("TCPDSACKIgnoredDubious", LINUX_MIB_TCPDSACKIGNOREDDUBIOUS),
 	SNMP_MIB_ITEM("TCPMigrateReqSuccess", LINUX_MIB_TCPMIGRATEREQSUCCESS),
 	SNMP_MIB_ITEM("TCPMigrateReqFailure", LINUX_MIB_TCPMIGRATEREQFAILURE),
+	SNMP_MIB_ITEM("TCPECNRehash", LINUX_MIB_TCPECNREHASH),
 	SNMP_MIB_SENTINEL
 };
 
--- a/net/ipv4/sysctl_net_ipv4.c.orig	2022-12-19 19:49:53.917136217 -0800
+++ b/net/ipv4/sysctl_net_ipv4.c	2022-12-19 19:52:01.302175627 -0800
@@ -52,6 +52,8 @@ static u32 u32_max_div_HZ = UINT_MAX / H
 static int one_day_secs = 24 * 3600;
 static u32 fib_multipath_hash_fields_all_mask __maybe_unused =
 	FIB_MULTIPATH_HASH_FIELD_ALL_MASK;
+static int tcp_plb_max_rounds = 31;
+static int tcp_plb_max_cong_thresh = 256;
 
 /* obsolete */
 static int sysctl_tcp_low_latency __read_mostly;
