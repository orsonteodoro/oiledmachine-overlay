License headers:

arch/arm64/include/asm/unistd.h:
/* SPDX-License-Identifier: GPL-2.0-only */

arch/arm64/include/asm/unistd32.h
/* SPDX-License-Identifier: GPL-2.0-only */

include/uapi/asm-generic/unistd.h:
/* SPDX-License-Identifier: GPL-2.0 WITH Linux-syscall-note */

--- a/arch/arm/tools/syscall.tbl.orig	2021-08-29 15:04:50.000000000 -0700
+++ b/arch/arm/tools/syscall.tbl	2021-09-22 20:12:45.960769659 -0700
@@ -460,3 +460,5 @@
 444	common	landlock_create_ruleset		sys_landlock_create_ruleset
 445	common	landlock_add_rule		sys_landlock_add_rule
 446	common	landlock_restrict_self		sys_landlock_restrict_self
+447	common	futex_wait			sys_futex_wait
+448	common	futex_wake			sys_futex_wake
--- a/arch/arm64/include/asm/unistd.h.orig	2021-08-29 15:04:50.000000000 -0700
+++ b/arch/arm64/include/asm/unistd.h	2021-09-22 20:13:05.045770288 -0700
@@ -38,7 +38,7 @@
 #define __ARM_NR_compat_set_tls		(__ARM_NR_COMPAT_BASE + 5)
 #define __ARM_NR_COMPAT_END		(__ARM_NR_COMPAT_BASE + 0x800)
 
-#define __NR_compat_syscalls		447
+#define __NR_compat_syscalls		449
 #endif
 
 #define __ARCH_WANT_SYS_CLONE
--- a/arch/arm64/include/asm/unistd32.h.orig	2021-08-29 15:04:50.000000000 -0700
+++ b/arch/arm64/include/asm/unistd32.h	2021-09-22 20:13:35.060771277 -0700
@@ -901,6 +901,10 @@ __SYSCALL(__NR_landlock_create_ruleset,
 __SYSCALL(__NR_landlock_add_rule, sys_landlock_add_rule)
 #define __NR_landlock_restrict_self 446
 __SYSCALL(__NR_landlock_restrict_self, sys_landlock_restrict_self)
+#define __NR_futex_wait 447
+__SYSCALL(__NR_futex_wait, sys_futex_wait)
+#define __NR_futex_wake 448
+__SYSCALL(__NR_futex_wake, sys_futex_wake)
 
 /*
  * Please add new compat syscalls above this comment and update
--- a/arch/x86/entry/syscalls/syscall_32.tbl.orig	2021-08-29 15:04:50.000000000 -0700
+++ b/arch/x86/entry/syscalls/syscall_32.tbl	2021-09-22 20:14:16.977772659 -0700
@@ -452,3 +452,5 @@
 445	i386	landlock_add_rule	sys_landlock_add_rule
 446	i386	landlock_restrict_self	sys_landlock_restrict_self
 447	i386	memfd_secret		sys_memfd_secret
+448	i386	futex_wait		sys_futex_wait
+449	i386	futex_wake		sys_futex_wake
--- a/arch/x86/entry/syscalls/syscall_64.tbl.orig	2021-08-29 15:04:50.000000000 -0700
+++ b/arch/x86/entry/syscalls/syscall_64.tbl	2021-09-22 20:14:41.840773478 -0700
@@ -369,6 +369,8 @@
 445	common	landlock_add_rule	sys_landlock_add_rule
 446	common	landlock_restrict_self	sys_landlock_restrict_self
 447	common	memfd_secret		sys_memfd_secret
+448	common	futex_wait		sys_futex_wait
+449	common	futex_wake		sys_futex_wake
 
 #
 # Due to a historical design error, certain syscalls are numbered differently
--- a/include/uapi/asm-generic/unistd.h.orig	2021-08-29 15:04:50.000000000 -0700
+++ b/include/uapi/asm-generic/unistd.h	2021-09-22 20:15:27.774774992 -0700
@@ -878,8 +878,14 @@ __SYSCALL(__NR_landlock_restrict_self, s
 __SYSCALL(__NR_memfd_secret, sys_memfd_secret)
 #endif
 
+#define __NR_futex_wait 448
+__SYSCALL(__NR_futex_wait, sys_futex_wait)
+
+#define __NR_futex_wake 449
+__SYSCALL(__NR_futex_wake, sys_futex_wake)
+
 #undef __NR_syscalls
-#define __NR_syscalls 448
+#define __NR_syscalls 450
 
 /*
  * 32 bit systems traditionally used different
--- a/tools/include/uapi/asm-generic/unistd.h.orig	2021-08-29 15:04:50.000000000 -0700
+++ b/tools/include/uapi/asm-generic/unistd.h	2021-09-22 20:16:23.227776819 -0700
@@ -878,8 +878,14 @@ __SYSCALL(__NR_landlock_restrict_self, s
 __SYSCALL(__NR_memfd_secret, sys_memfd_secret)
 #endif
 
+#define __NR_futex_wait 448
+__SYSCALL(__NR_futex_wait, sys_futex_wait)
+
+#define __NR_futex_wake 449
+__SYSCALL(__NR_futex_wake, sys_futex_wake)
+
 #undef __NR_syscalls
-#define __NR_syscalls 448
+#define __NR_syscalls 450
 
 /*
  * 32 bit systems traditionally used different
--- a/tools/perf/arch/x86/entry/syscalls/syscall_64.tbl.orig	2021-08-29 15:04:50.000000000 -0700
+++ b/tools/perf/arch/x86/entry/syscalls/syscall_64.tbl	2021-09-22 20:16:52.537777785 -0700
@@ -369,6 +369,8 @@
 445	common	landlock_add_rule	sys_landlock_add_rule
 446	common	landlock_restrict_self	sys_landlock_restrict_self
 447	common	memfd_secret		sys_memfd_secret
+448	common  futex_wait              sys_futex_wait
+449	common  futex_wake              sys_futex_wake
 
 #
 # Due to a historical design error, certain syscalls are numbered differently
