Subject: TRESOR prompt boot time panic fix for 4.14 (aesni)

Author: Orson Teodoro <orsonteodoro@hotmail.com>
Date: Jan 18, 2021 (Unix timestamp: 1611033895)

The wait fix addresses is_kthread_should_stop() boot time panic
introduced by cb6538e740d7543cd989128625cf8cac4b471e0a
with TRESOR prompt without revert.

----
diff -urp linux-4.14.216-ot.orig/arch/x86/crypto/tresor_key.c linux-4.14.216-ot/arch/x86/crypto/tresor_key.c
--- linux-4.14.216-ot.orig/arch/x86/crypto/tresor_key.c	2021-01-18 21:14:11.838475159 -0800
+++ linux-4.14.216-ot/arch/x86/crypto/tresor_key.c	2021-01-18 21:20:21.133343375 -0800
@@ -210,6 +210,7 @@ static inline int tresor_key_from_cpu0(v
 /* Print to term_fd */
 static int printf_(const char *fmt, ...)
 {
+	ssize_t ret;
 	va_list args; int col = 80; char line[col];
 
 	va_start(args, fmt);
@@ -217,7 +218,10 @@ static int printf_(const char *fmt, ...)
 	line[col-1] = 0;
 	va_end(args);
 
-	return sys_write(term_fd, line, strlen(line));
+	tresor_prompt_begin();
+	ret = sys_write(term_fd, line, strlen(line));
+	tresor_prompt_end();
+	return ret;
 }
 
 /* Erase line before printing (workaround for weird consoles) */
@@ -237,7 +241,9 @@ static int printf(const char *fmt, ...)
 static unsigned char getchar(void)
 {
 	unsigned char c;
+	tresor_prompt_begin();
 	sys_read(term_fd, &c, 1);
+	tresor_prompt_end();
 	return c;
 }
 
@@ -286,15 +292,19 @@ int tresor_readkey(const char *terminal,
 	ofs = get_fs();
 	set_fs(get_ds());
 	/* try to open terminal */
+	tresor_prompt_begin();
 	term_fd = sys_open(terminal, O_RDWR, 0);
+	tresor_prompt_end();
 	if (term_fd < 0) {
 		set_fs(ofs);
 		return term_fd;
 	}
 	/* read single characters; no echo */
+	tresor_prompt_begin();
 	sys_ioctl(term_fd, TCGETS, (long)&termios);
 	termios.c_lflag &= ~(ICANON | ECHO);
 	sys_ioctl(term_fd, TCSETSF, (long)&termios);
+	tresor_prompt_end();
 	/* initialize console */
 	cursor_enable();
 	cls();
@@ -437,7 +447,9 @@ readkey:
 		printf("\n\n");
 
 	termios.c_lflag |= (ICANON | ECHO);
+	tresor_prompt_begin();
 	sys_ioctl(term_fd, TCSETSF, (long)&termios);
+	tresor_prompt_end();
 
 	if (resume)
 		cursor_disable();
Only in linux-4.14.216-ot/arch/x86/crypto: tresor_key.c.orig
Only in linux-4.14.216-ot/arch/x86/crypto: tresor_key.c.rej
diff -urp linux-4.14.216-ot.orig/include/linux/sched.h linux-4.14.216-ot/include/linux/sched.h
--- linux-4.14.216-ot.orig/include/linux/sched.h	2021-01-18 21:13:45.853420857 -0800
+++ linux-4.14.216-ot/include/linux/sched.h	2021-01-18 21:18:29.616874285 -0800
@@ -704,6 +704,11 @@ struct task_struct {
 	/* Canary value for the -fstack-protector GCC feature: */
 	unsigned long			stack_canary;
 #endif
+
+#ifdef CONFIG_CRYPTO_TRESOR_PROMPT
+	unsigned long			tresor_reading_prompt;
+#endif
+
 	/*
 	 * Pointers to the (original) parent process, youngest child, younger sibling,
 	 * older sibling, respectively.  (p->father can be replaced with
@@ -1729,4 +1734,25 @@ extern long sched_getaffinity(pid_t pid,
 #define TASK_SIZE_OF(tsk)	TASK_SIZE
 #endif
 
+#ifdef CONFIG_CRYPTO_TRESOR_PROMPT
+#define TRESOR_PROMPT_INACTIVE 0
+static inline void tresor_prompt_begin(void)
+{
+	current->tresor_reading_prompt++;
+	barrier();
+}
+
+static inline void tresor_prompt_end(void)
+{
+	barrier();
+	current->tresor_reading_prompt--;
+}
+
+/* non-zero is reading, zero is not reading */
+static inline int tresor_prompt_active(void)
+{
+	return current->tresor_reading_prompt;
+}
+#endif
+
 #endif
Only in linux-4.14.216-ot/include/linux: sched.h.orig
diff -urp linux-4.14.216-ot.orig/kernel/sched/wait.c linux-4.14.216-ot/kernel/sched/wait.c
--- linux-4.14.216-ot.orig/kernel/sched/wait.c	2021-01-18 21:12:42.830858695 -0800
+++ linux-4.14.216-ot/kernel/sched/wait.c	2021-01-18 21:18:29.616874285 -0800
@@ -384,7 +384,12 @@ EXPORT_SYMBOL(autoremove_wake_function);
 
 static inline bool is_kthread_should_stop(void)
 {
-	return (current->flags & PF_KTHREAD) && kthread_should_stop();
+#ifdef CONFIG_CRYPTO_TRESOR_PROMPT
+	if (unlikely(tresor_prompt_active()))
+		return 0;
+	else
+#endif
+		return (current->flags & PF_KTHREAD) && kthread_should_stop();
 }
 
 /*
Only in linux-4.14.216-ot/kernel/sched: wait.c.orig
