Patch author:  Orson Teodoro <orsonteodoro@hotmail.com>
Patch status:  In Development / Testing
Date:  Mon Sep 13 04:26:55 PM PDT 2021 (Unix timestamp: 1631575615)

A problem was encountered when using llvm 13.x corresponding to gentoo's sys-devel/llvm-13.0.0.9999 package.

The resulting output in the following when doing the "llvm-profdata merge" step:

warning: /usr/src/linux/vmlinux.profraw: unsupported instrumentation profile format version
error: no profile can be merged

Modded to included LLVM_INSTR_PROF_RAW_VERSION 6 and 7 support.

The patch status will change once it is confirmed working.

diff -x '*.orig' -x '*.rej' -urpN linux-5.14.5-ot.orig/kernel/pgo/fs.c linux-5.14.5-ot/kernel/pgo/fs.c
--- linux-5.14.5-ot.orig/kernel/pgo/fs.c	2021-09-17 11:43:43.907787105 -0700
+++ linux-5.14.5-ot/kernel/pgo/fs.c	2021-09-17 13:06:58.483335160 -0700
@@ -66,9 +66,16 @@ static void prf_fill_header(void **buffe
 	header->counters_size = prf_cnts_count();
 	header->padding_bytes_after_counters = 0;
 	header->names_size = prf_names_count();
+#ifdef CONFIG_PROFRAW_V7_MAIN
+	header->counters_delta = (u64)__llvm_prf_cnts_start - (u64)__llvm_prf_data_start;
+#else
 	header->counters_delta = (u64)__llvm_prf_cnts_start;
+#endif
 	header->names_delta = (u64)__llvm_prf_names_start;
 	header->value_kind_last = LLVM_INSTR_PROF_IPVK_LAST;
+#if LLVM_INSTR_PROF_RAW_VERSION >= 6
+	header->binary_id_size = 0; /* optional */
+#endif
 
 	*buffer += sizeof(*header);
 }
diff -x '*.orig' -x '*.rej' -urpN linux-5.14.5-ot.orig/kernel/pgo/Kconfig linux-5.14.5-ot/kernel/pgo/Kconfig
--- linux-5.14.5-ot.orig/kernel/pgo/Kconfig	2021-09-17 11:43:43.889786402 -0700
+++ linux-5.14.5-ot/kernel/pgo/Kconfig	2021-09-17 13:05:40.366313333 -0700
@@ -10,6 +10,7 @@ config PGO_CLANG
 	depends on ARCH_SUPPORTS_PGO_CLANG
 	depends on CC_IS_CLANG
 	depends on !ARCH_WANTS_NO_INSTR || CC_HAS_NO_PROFILE_FN_ATTR
+	depends on PROFRAW_V7_MAIN || PROFRAW_V7_13_X || PROFRAW_V6 || PROFRAW_V5
 	help
 	  This option enables clang's PGO (Profile Guided Optimization) based
 	  code profiling to better optimize the kernel.
@@ -34,4 +35,43 @@ config PGO_CLANG
 	  Note that the debugfs filesystem has to be mounted to access
 	  profiling data.
 
+choice PGO_CLANG_LLVM_SELECT
+	prompt "LLVM version for profdata compatibility"
+	help
+	  This matches the profdata data structure to a specific version
+	  of LLVM since not enough metadata is provided.
+
+config PROFRAW_V7_MAIN
+	bool "profraw v7 (main)"
+	help
+	  The following are compatible:
+	    * LLVM main branch with the latest commit
+
+config PROFRAW_V7_13_X
+	bool "profraw v7 (13.x)"
+	help
+	  The following are compatible:
+	    * LLVM 13.x branch with the latest commit
+	    * LLVM 13 rc3 with profraw v7 only
+
+config PROFRAW_V6
+	bool "profraw v6"
+	help
+	  The following are compatible:
+	    * LLVM 14 init
+	    * LLVM 13 rc2
+	    * LLVM 13 rc1
+	    * LLVM 13.x branch with profraw v6 only
+
+config PROFRAW_V5
+	bool "profraw v5"
+	help
+	  The following are compatible:
+	    * LLVM 13.x branch with profraw v5 only
+	    * LLVM 12
+	    * LLVM 11
+	    * LLVM 10
+
+endchoice
+
 endmenu
diff -x '*.orig' -x '*.rej' -urpN linux-5.14.5-ot.orig/kernel/pgo/pgo.h linux-5.14.5-ot/kernel/pgo/pgo.h
--- linux-5.14.5-ot.orig/kernel/pgo/pgo.h	2021-09-17 11:43:43.907787105 -0700
+++ linux-5.14.5-ot/kernel/pgo/pgo.h	2021-09-17 13:05:52.627787606 -0700
@@ -43,7 +43,23 @@
 		 (u64)'R' << 8  |	\
 		 (u64)129)
 
-#define LLVM_INSTR_PROF_RAW_VERSION		5
+#ifndef CONFIG_CC_HAS_NO_PROFILE_FN_ATTR
+#  error "The compiler needs support for no_instr and the"
+#  error "no_profile_instrument_function annotations found in both 193e41c"
+#  error "a63d4f6 commits.  Update to LLVM 13 rc1 or newer or"
+#  error "backport those commits."
+#endif
+
+#if defined(CONFIG_PROFRAW_V7_MAIN) || defined (CONFIG_PROFRAW_V7_13_X)
+#  define LLVM_INSTR_PROF_RAW_VERSION	7
+#elif defined(CONFIG_PROFRAW_V6)
+#  define LLVM_INSTR_PROF_RAW_VERSION	6
+#elif defined(CONFIG_PROFRAW_V5)
+#  define LLVM_INSTR_PROF_RAW_VERSION	5
+#else
+#  error "profraw versions < 5 or > 7 are not supported."
+#endif
+
 #define LLVM_INSTR_PROF_DATA_ALIGNMENT		8
 #define LLVM_INSTR_PROF_IPVK_FIRST		0
 #define LLVM_INSTR_PROF_IPVK_LAST		1
@@ -72,6 +88,9 @@
 struct llvm_prf_header {
 	u64 magic;
 	u64 version;
+#if LLVM_INSTR_PROF_RAW_VERSION == 7
+	u64 binary_id_size;
+#endif
 	u64 data_size;
 	u64 padding_bytes_before_counters;
 	u64 counters_size;
@@ -80,6 +99,10 @@ struct llvm_prf_header {
 	u64 counters_delta;
 	u64 names_delta;
 	u64 value_kind_last;
+#if LLVM_INSTR_PROF_RAW_VERSION == 6 \
+	|| LLVM_INSTR_PROF_RAW_VERSION == 5
+	u64 binary_id_size;
+#endif
 };
 
 /**
