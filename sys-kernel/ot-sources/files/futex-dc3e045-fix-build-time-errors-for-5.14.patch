License headers:

kernel/futex.c:
// SPDX-License-Identifier: GPL-2.0-or-later

--- a/kernel/futex.c.orig	2021-09-23 14:55:32.971989566 -0700
+++ b/kernel/futex.c	2021-09-23 15:19:15.954036457 -0700
@@ -2743,11 +2743,8 @@ retry:
 		qs[i].key = FUTEX_KEY_INIT;
 		ret = get_futex_key(qs[i].uaddr, flags & FLAGS_SHARED,
 				    &qs[i].key, FUTEX_READ);
-		if (unlikely(ret)) {
-			for (--i; i >= 0; i--)
-				put_futex_key(&qs[i].key);
+		if (unlikely(ret))
 			return ret;
-		}
 	}
 
 	set_current_state(TASK_INTERRUPTIBLE);
@@ -2773,7 +2770,6 @@ retry:
 			 * Keys 0..(i-1) are implicitly put
 			 * on unqueue_multiple.
 			 */
-			put_futex_key(&q->key);
 
 			*awaken = unqueue_multiple(qs, i);
 
@@ -2803,8 +2799,6 @@ retry:
 		if (uval != q->uval) {
 			queue_unlock(hb);
 
-			put_futex_key(&qs[i].key);
-
 			/*
 			 * If something was already awaken, we can
 			 * safely ignore the error and succeed.
