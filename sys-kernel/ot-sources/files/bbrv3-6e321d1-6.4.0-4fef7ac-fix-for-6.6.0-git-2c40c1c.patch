# License identified for include/linux/tcp.h:
/* SPDX-License-Identifier: GPL-2.0-or-later */

# License identified for net/ipv4/tcp_output.c:
// SPDX-License-Identifier: GPL-2.0-only

--- a/include/linux/tcp.h.orig	2023-11-03 19:39:24.667138187 -0700
+++ b/include/linux/tcp.h	2023-11-03 19:41:53.523133406 -0700
@@ -278,7 +278,8 @@ struct tcp_sock {
 		tlp_retrans:1,	/* TLP is a retransmission */
 		tcp_usec_ts:1, /* TSval values in usec */
 		fast_ack_mode:2, /* which fast ack mode ? */
-		unused:2;
+		tlp_orig_data_app_limited:1, /* app-limited before TLP rtx? */
+		unused:1;
 	u32	chrono_start;	/* Start time in jiffies of a TCP chrono */
 	u32	chrono_stat[3];	/* Time in jiffies for chrono_stat stats */
 	u8	chrono_type:2,	/* current chronograph type */
--- a/net/ipv4/tcp_output.c.orig	2023-11-03 19:39:24.491138193 -0700
+++ b/net/ipv4/tcp_output.c	2023-11-03 19:42:21.683132502 -0700
@@ -2960,6 +2960,7 @@ void tcp_send_loss_probe(struct sock *sk
 	if (WARN_ON(!skb || !tcp_skb_pcount(skb)))
 		goto rearm_timer;
 
+	tp->tlp_orig_data_app_limited = TCP_SKB_CB(skb)->tx.is_app_limited;
 	if (__tcp_retransmit_skb(sk, skb, 1))
 		goto rearm_timer;
 
