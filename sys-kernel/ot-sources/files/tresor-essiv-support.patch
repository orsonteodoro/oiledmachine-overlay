--- a/crypto/essiv.c.orig	2020-07-05 14:54:56.736987760 -0700
+++ b/crypto/essiv.c	2020-07-05 14:55:08.911435906 -0700
@@ -66,6 +66,7 @@ static int essiv_skcipher_setkey(struct
 				 const u8 *key, unsigned int keylen)
 {
 	struct essiv_tfm_ctx *tctx = crypto_skcipher_ctx(tfm);
+	const char *inner_cipher_name = crypto_skcipher_driver_name(tfm);
 	SHASH_DESC_ON_STACK(desc, tctx->hash);
 	u8 salt[HASH_MAX_DIGESTSIZE];
 	int err;
@@ -74,6 +75,15 @@ static int essiv_skcipher_setkey(struct
 	crypto_skcipher_set_flags(tctx->u.skcipher,
 				  crypto_skcipher_get_flags(tfm) &
 				  CRYPTO_TFM_REQ_MASK);
+#ifdef CONFIG_ESSIV_TRESOR
+	if (strstr(inner_cipher_name, "ecb(tresor)")
+		|| strstr(inner_cipher_name, "cbc(tresor)")
+		|| strstr(inner_cipher_name, "ctr(tresor)")) {
+		tresor_setkey(key);
+	} else if (strstr(inner_cipher_name, "xts")) {
+			return -EINVAL;
+	}
+#endif
 	err = crypto_skcipher_setkey(tctx->u.skcipher, key, keylen);
 	if (err)
 		return err;
--- a/crypto/Kconfig.orig	2020-07-05 14:50:52.390003047 -0700
+++ b/crypto/Kconfig	2020-07-05 15:00:40.268650258 -0700
@@ -523,6 +523,18 @@ config CRYPTO_ESSIV
 	  combined with ESSIV the only feasible mode for h/w accelerated
 	  block encryption)
 
+if CRYPTO_ESSIV
+
+config CRYPTO_ESSIV_TRESOR
+	bool "ESSIV support with TRESOR"
+	depends on CRYPTO_ESSIV
+	depends on CRYPTO_TRESOR
+	default n
+	help
+	  Adds TRESOR support.  ESSIV with TRESOR-XTS is not supported.
+
+endif
+
 comment "Hash modes"
 
 config CRYPTO_CMAC
