#!/sbin/openrc-run
# This file is generated by the ot-sources package.

description="Sets I/O scheduler of each drive individually."

depend()
{
        need localmount
}

set_iosched() {
	arg="${1}"
	[[ -z "${x}" ]] && return
	if [[ -e "/sys/block/${x}/queue/scheduler" ]] ; then
		t_sched="${arg}"
		if (( "${k_major}" < 5 )) ; then
			[[ "${t_sched}" == "none" ]] && t_sched="noop"
		else
			[[ "${t_sched}" == "noop" ]] && t_sched="none"
		fi
		ioschedr="${t_sched}" # raw
		ioschedc="${t_sched}" # to be canonicalized
		if [[ "${ioschedr}" == "hdd" || "${ioschedr}" == "rotational" ]] ; then
			[[ "${IOSCHED_HDD}" == "bfq-throughput" ]] && ioschedr="bfq-throughput"
			[[ "${IOSCHED_HDD}" == "bfq-low-latency" ]] && ioschedr="bfq-low-latency"
			[[ "${IOSCHED_HDD}" == "bfq-streaming" ]] && ioschedr="bfq-streaming"
		elif [[ "${ioschedr}" == "ssd" || "${ioschedr}" == "flash" ]] ; then
			[[ "${IOSCHED_SSD}" == "bfq-throughput" ]] && ioschedr="bfq-throughput"
			[[ "${IOSCHED_SSD}" == "bfq-low-latency" ]] && ioschedr="bfq-low-latency"
			[[ "${IOSCHED_SSD}" == "bfq-streaming" ]] && ioschedr="bfq-streaming"
		fi
		[[ "${ioschedr}" =~ "bfq" ]] && ioschedc="bfq"
		[[ -z "${ioschedc}" ]] && return
		grep -q -E -e "(\[| |^)${ioschedc}(\]| |$)" "/sys/block/${x}/queue/scheduler" || return
		einfo "Setting ${ioschedr} for ${x}"
		echo "${ioschedc}" > "/sys/block/${x}/queue/scheduler"
		if [[ "${ioschedc}" == "bfq-throughput" ]] ; then
			echo "0" > "/sys/block/${x}/queue/iosched/low_latency"
			if grep -q -e "0" "/sys/block/${x}/queue/rotational" ; then
				# SSD
				echo "0" > "/sys/block/${x}/queue/iosched/slice_idle_us"
			elif [[ "${HW_RAID}" == "1" ]] ; then
				echo "0" > "/sys/block/${x}/queue/iosched/slice_idle_us"
			fi
		elif [[ "${ioschedc}" == "bfq-low-latency" ]] ; then
			echo "1" > "/sys/block/${x}/queue/iosched/low_latency"
		elif [[ "${ioschedc}" == "bfq-streaming" ]] ; then
			echo "1" > "/sys/block/${x}/queue/iosched/low_latency"
			echo "1" > "/sys/block/sdb/queue/iosched/strict_guarantees"
		fi
	fi
}

start()
{
	kv=$(cat /proc/version | cut -f 3 -d " " | sed -e "s|-${EXTRAVERSION}-.*||g")
	k_major=${kv%%.*}
	if cat /proc/version | grep -q -E -e " [0-9.]+-${EXTRAVERSION}-" ; then
		einfo "Setting I/O schedulers for the -${EXTRAVERSION} kernel"
		for x in $(ls "/sys/block/") ; do
			[[ "${x}" =~ "dm-"[0-9]+ ]] && continue
			[[ "${x}" =~ "loop"[0-9]+ ]] && continue
			if grep -q -e "1" "/sys/block/${x}/queue/rotational" ; then
				# HDD
				set_iosched "${IOSCHED_HDD}"
			fi
			if grep -q -e "0" "/sys/block/${x}/queue/rotational" || realpath "/sys/block/${x}/device" | grep -q "usb" ; then
				# SSD
				# USB flash reported as rotational.
				set_iosched "${IOSCHED_SSD}"
			fi
		done

		for x in ${IOSCHED_OVERRIDES} ; do
			[[ "${x}" =~ ";" ]] || continue
			id="${x%;*}"
			iosched="${x#*;}"
			if [[ -e "/dev/disk/by-id/${id}" ]] ; then
				p=$(realpath "/dev/disk/by-id/${id}")
				x=$(basename "${p}")
				set_iosched "${iosched}"
			fi
		done
	fi
}
