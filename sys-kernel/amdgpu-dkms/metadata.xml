<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
  <maintainer type="person">
    <email>orsonteodoro@hotmail.com</email>
    <name>Orson Teodoro</name>
  </maintainer>
  <longdescription>
    The amdgpu-dkms a package containing both the ROCK-Kernel-Driver and
    firmware (which is not installed in this package).  This package
    will build the kernel modules using the DKMS framework allowing for
    version agnostic compatibility meaning that you can compile this package
    against different kernel versions.  For example,

    For 4.x kernels use the amdgpu-dkms-19.30.x package.
    For 5.0.x to 5.2.x kernels use the amdgpu-dkms-19.50.x package.
    For 5.0.x to 5.4.x use the amdgpu-dkms-20.10.x package.
    For 5.0.x to 5.6.x use the amdgpu-dkms-20.20.x package.
    Kernel versions 5.7.x and above are not supported.

    The latest point releases of the long-term support kernels (4.14.x,
    4.19.x, 5.4.x) or the non-"End Of Life" (EOL) stable kernels are
    recommended for security update reasons.

    The amdgpu-dkms package has more GPU features like IPC related features
    (Memory sharing API, Signal sharing API); RDMA (aka Remote Device
    Programming or ROCmRDMA) to allow other PCIe kernel modules and devices
    DMA access to GPU memory, KFD (Kernel Fusion Driver) features, and
    DirectGMA (Direct Graphic Memory Access) support.  ROCk is also a core
    component of the ROCm platform.  It also adds compatibility for newer
    hardware if the kernel is old.

    This amdgpu module contains extra kernel parameters compared to the
    vanilla amdgpu module that can be used to tune ROCk, SSG, power savings,
    memory usage.  For details, do `modinfo amdgpu`.

    You must specify a AMDGPU_DKMS_KERNELS environmental variable in your
    /etc/portage/make.conf or as a per-package environmental variable.

    It must look like:

    AMDGPU_DKMS_KERNELS="5.2.17-pf 5.2.17-gentoo"

    Use:

    * to build all point releases
    Examples: 5.2.*-ot

    ^ to build only the highest point release
    Examples: 5.2.^-ot

    For the bleeding edge counterpart (or faster release cycles) to this
    package, see the rock-dkms package instead.
  </longdescription>
  <upstream>
    <bugs-to>https://www.amd.com/en/support/kb/faq/amdgpu-installation</bugs-to>
  </upstream>
  <use>
    <flag name="acpi">Checks if ACPI support is enabled in the kernel.
      Enabling ACPI may enhance multigpu detection with PowerXpress (multigpu
      laptops), provide more sysfs info, access to ACPI events for laptops,
      dynamic PCI-e frequency tuning.
      </flag>
    <flag name="build">Builds the kernel module.</flag>
    <flag name="check-gpu">Checks if the GPU(s) are supported for ROCk.</flag>
    <flag name="check-mmu-notifier">Checks if the MMU_NOTIFIER is enabled.
      </flag>
    <flag name="check-pcie">Checks if the PCIe slots are supported for ROCk.
      </flag>
    <flag name="custom-kernel">Bypass RDEPENDs check for a kernel package.</flag>
    <flag name="directgma">Checks kernel config for DirectGMA support.</flag>
    <flag name="firmware">Pulls in the firmware packaged with the same
      driver. (optional if using linux-firmware instead)</flag>
    <flag name="hybrid-graphics">Checks if kernel config for proper support
      for PowerXpress, Hybrid Graphics (i.e. IGP and dGPU on laptop).
      </flag>
    <flag name="numa">Fills the IO-LINKS' sysfs interface at
      /sys/class/kfd/topology/nodes/N/io_links/X/node_to
      using the NUMA data structure.  For more info see
      https://rocm-documentation.readthedocs.io/en/latest/ROCm_System_Managment/topo3.html#sysfsclasskfdtopologynodes0iolinks01
      https://rocm-documentation.readthedocs.io/en/latest/ROCm_System_Managment/ROCm-System-Managment.html#io-links
      </flag>
    <flag name="rock">Checks if the hardware is compatible with the ROCk
     kernel driver. (optional)</flag>
    <flag name="sign-modules">Signs the modules if necessary.</flag>
    <flag name="ssg">Checks kernel config for SSG (Solid State Graphics)
      support.</flag>
    <flag name="rt">Applies a PREEMPT_RT patch to disable preemption.
      This requires the a kernel with the rt patch already applied to complete
      the other half of the patch.
    </flag>
  </use>
</pkgmetadata>
