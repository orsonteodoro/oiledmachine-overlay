Forum: https://nikonhacker.com/viewtopic.php?f=8&t=708
Sources: https://github.com/simeonpilgrim/nikon-firmware-tools/tree/master/USB/wireshark/release
Bugzilla: https://bugs.wireshark.org/bugzilla/show_bug.cgi?id=8431
PCAP (for testing): https://bugs.wireshark.org/bugzilla/show_bug.cgi?id=8431#c5
Adds MTPz fields.
----
diff -x '*.rej' -x '*.orig' -urpN wireshark-3.4.0.orig/epan/dissectors/CMakeLists.txt wireshark-3.4.0/epan/dissectors/CMakeLists.txt
--- wireshark-3.4.0.orig/epan/dissectors/CMakeLists.txt	2020-10-29 11:55:07.000000000 -0700
+++ wireshark-3.4.0/epan/dissectors/CMakeLists.txt	2020-11-09 20:43:27.137269483 -0800
@@ -592,6 +592,7 @@ set(DISSECTOR_PUBLIC_HEADERS
 	packet-umts_rlc.h
 	packet-usb.h
 	packet-usb-hid.h
+	packet-usb-ptp.h
 	packet-usbip.h
 	packet-vxlan.h
 	packet-wap.h
@@ -1868,6 +1869,7 @@ set(DISSECTOR_SRC
 	${CMAKE_CURRENT_SOURCE_DIR}/packet-usb-i1d3.c
 	${CMAKE_CURRENT_SOURCE_DIR}/packet-usb-masstorage.c
 	${CMAKE_CURRENT_SOURCE_DIR}/packet-usb-printer.c
+	${CMAKE_CURRENT_SOURCE_DIR}/packet-usb-ptp.c
 	${CMAKE_CURRENT_SOURCE_DIR}/packet-usb-video.c
 	${CMAKE_CURRENT_SOURCE_DIR}/packet-usb.c
 	${CMAKE_CURRENT_SOURCE_DIR}/packet-usbip.c
diff -x '*.rej' -x '*.orig' -urpN wireshark-3.4.0.orig/epan/dissectors/packet-usb-ptp.c wireshark-3.4.0/epan/dissectors/packet-usb-ptp.c
--- wireshark-3.4.0.orig/epan/dissectors/packet-usb-ptp.c	1969-12-31 16:00:00.000000000 -0800
+++ wireshark-3.4.0/epan/dissectors/packet-usb-ptp.c	2020-11-09 20:42:58.486157760 -0800
@@ -0,0 +1,981 @@
+/* packet-usb-ptp.c
+ *
+ * $Id$
+ *
+ * USB Packet Dissector :
+ *     - Picture Transfer Protocol (PTP)
+ *     - Media   Transfer Protocol (MTP)
+ *
+ * (c)2015 Orson Teodoro <orsonteodoro@yahoo.com>
+ * (c)2013 Max Baker <max@warped.org>
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License
+ * as published by the Free Software Foundation; either version 2
+ * of the License, or (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
+ *
+ * Notes:
+ * 
+ *      [1] http://www.usb.org/developers/devclass_docs/usb_still_img10.pdf for protocol definition
+ * 
+ * Formatting help by : http://www.vim.org/scripts/script.php?script_id=294
+ *
+ * TODO:
+ *      - Any and all further decode of returned objects.   Requires adding more sub-dissectors for MTP and PTP objects. 
+ *          Example : dissect_usb_ptp_get_device_info
+ *        There is extensive support in libgphoto2 for these objects that can be ported over here if people want these.
+ */
+
+#include "config.h"
+
+#include <stdio.h>
+#include <stdlib.h>
+
+#include <glib.h>
+#include <epan/conversation.h>
+#include <epan/expert.h>
+#include <epan/packet.h>
+#include <epan/prefs.h>
+#include <epan/reassemble.h>
+#include "packet-usb.h"
+#include "packet-usb-ptp.h"
+#include "wmem/wmem.h"
+
+/* Handlers */
+static gint proto_usb_ptp                      = -1;
+static gint ett_usb_ptp                        = -1;
+static gint ett_usb_ptp_device_info            = -1;
+static gint ett_usb_ptp_object_array           = -1;
+static gint ett_usb_ptp_parameters             = -1;
+
+/* Header Fields */
+static gint hf_container_length                = -1;
+static gint hf_container_type                  = -1;
+static gint hf_operation_code                  = -1;
+static gint hf_response_code                   = -1;
+static gint hf_event_code                      = -1;
+static gint hf_transaction_id                  = -1;
+static gint hf_payload                         = -1;
+/* Device Info */
+static gint hf_devinfo_standardversion         = -1;
+static gint hf_devinfo_vendorextensionid       = -1;
+static gint hf_devinfo_vendorextensionversion  = -1;
+static gint hf_devinfo_vendorextensiondesc     = -1;
+static gint hf_devinfo_functionalmode          = -1;
+static gint hf_devinfo_operationsupported      = -1;
+static gint hf_devinfo_eventsupported          = -1;
+static gint hf_devinfo_devicepropertysupported = -1;
+static gint hf_devinfo_captureformat           = -1;
+static gint hf_devinfo_imageformat             = -1;
+static gint hf_devinfo_manufacturer            = -1;
+static gint hf_devinfo_model                   = -1;
+static gint hf_devinfo_deviceversion           = -1;
+static gint hf_devinfo_serialnumber            = -1;
+static gint hf_storageid                       = -1;
+/* Parameters */
+static gint hf_cmd_parameter                   = -1;
+static gint hf_response_parameter              = -1;
+static gint hf_event_parameter                 = -1;
+/* Commands */
+static gint hf_cmd_devicepropvalue             = -1;
+static gint hf_cmd_devicepropdesc              = -1;
+static gint hf_cmd_objformatcode               = -1;
+static gint hf_cmd_objpropcode                 = -1;
+static gint hf_objhandle                       = -1;
+
+static gint hf_mtpz_drmapprequest              = -1;
+static gint hf_mtpz_drmappresponse             = -1;
+static gint hf_mtpz_drmfileopsenable           = -1;
+static gint hf_mtpz_drmfileopsdisable          = -1;
+static gint hf_mtpz_drmappsessionend           = -1;
+
+static gint hf_mtpz_cert_app_cert_prefix       = -1;
+static gint hf_mtpz_cert_app_cert_length       = -1;
+static gint hf_mtpz_cert_app_cert              = -1;
+
+static int hf_msg_fragments                    = -1;
+static int hf_msg_fragment                     = -1;
+static int hf_msg_fragment_overlap             = -1;
+static int hf_msg_fragment_overlap_conflicts   = -1;
+static int hf_msg_fragment_multiple_tails      = -1;
+static int hf_msg_fragment_too_long_fragment   = -1;
+static int hf_msg_fragment_error               = -1;
+static int hf_msg_fragment_count               = -1;
+static int hf_msg_reassembled_in               = -1;
+static int hf_msg_reassembled_length           = -1;
+
+static expert_field ei_unknown_ptp_device                    = EI_INIT;
+static expert_field ei_unknown_ptp_type                      = EI_INIT;
+static expert_field ei_mtpz_drm_app_send_certificate         = EI_INIT;
+static expert_field ei_mtpz_drm_dev_resp_certificate         = EI_INIT;
+static expert_field ei_mtpz_drm_app_enable_write_operations  = EI_INIT;
+static expert_field ei_mtpz_drm_app_disable_write_operations = EI_INIT;
+
+/* Generated from convert_proto_tree_add_text.pl */
+static int hf_usb_ptp_objects_1 = -1;
+static int hf_usb_ptp_objects_2 = -1;
+static int hf_usb_ptp_device_information = -1;
+static int hf_usb_ptp_parameters = -1;
+
+static reassembly_table msg_reassembled_table;
+static gint ett_msg_fragment = -1;
+static gint ett_msg_fragments = -1;
+
+static dissector_handle_t data_handle;
+
+static const fragment_items mtp_msg_frag_items = {
+    /* Fragment subtrees */
+    &ett_msg_fragment,
+    &ett_msg_fragments,
+    /* Fragment fields */
+    &hf_msg_fragments,
+    &hf_msg_fragment,
+    &hf_msg_fragment_overlap,
+    &hf_msg_fragment_overlap_conflicts,
+    &hf_msg_fragment_multiple_tails,
+    &hf_msg_fragment_too_long_fragment,
+    &hf_msg_fragment_error,
+    &hf_msg_fragment_count,
+    /* Reassembled in field */
+    &hf_msg_reassembled_in,
+    /* Reassembled length field */
+    &hf_msg_reassembled_length,
+    /* Reassembled data field */
+    NULL,
+    /* Tag */
+    "Message fragments"
+};
+
+/* Determine which classes this device lives in */
+static guint32
+usb_ptp_flavor(usb_conv_info_t *usb_conv_info)
+{
+    guint32              flavor;
+
+    /* Put camera into different classes depending on vendor id, etc 
+     * Based on libgphoto/camlibs/ptp2/library.c:fixup_cached_deviceinfo()
+     */
+    flavor = USB_PTP_FLAVOR_ALL;
+    //usb_conv_info = (usb_conv_info_t *) pinfo->usb_conv_info;
+
+    /* Not modeled as a switch because I expect more complicated decode here for flavors, as modeled in libgphoto
+     * For example not all canon's support the PTP extensions */
+
+    if (!usb_conv_info)
+        return flavor;
+
+    if (usb_conv_info->deviceVendor==USB_PTP_VENDOR_NIKON)
+        flavor |= USB_PTP_FLAVOR_NIKON;
+
+    if (usb_conv_info->deviceVendor==USB_PTP_VENDOR_CANON)
+        flavor |= USB_PTP_FLAVOR_CANON;
+
+    if (usb_conv_info->deviceVendor==USB_PTP_VENDOR_FUJI)
+        flavor |= USB_PTP_FLAVOR_FUJI;
+
+    if (usb_conv_info->deviceVendor==USB_PTP_VENDOR_OLYMPUS)
+        flavor |= USB_PTP_FLAVOR_OLYMPUS;
+
+    if (usb_conv_info->deviceVendor==USB_PTP_VENDOR_CASIO)
+        flavor |= USB_PTP_FLAVOR_CASIO;
+
+    if (usb_conv_info->deviceVendor==USB_PTP_VENDOR_KODAK)
+        flavor |= USB_PTP_FLAVOR_KODAK;
+
+    if (usb_conv_info->deviceVendor==USB_PTP_VENDOR_MICROSOFT && usb_conv_info->deviceProduct==0x0710) //Zune
+        flavor |= USB_PTP_FLAVOR_MTP;
+
+    /* TODO: ANDROID */
+
+    return flavor;
+}
+
+static const value_string_masked_t *
+table_value_from_mask(guint32 valmask, guint32 val, const value_string_masked_t *table)
+{
+    gint i = 0;
+    guint32 mask;
+
+    if (!table) 
+        return NULL;
+
+    /* Two-pass approach here -- first we check w/out MTP mask bit set, then with
+     * the idea being that vendor codes will take precedence over MTP codes in the case of a conflict
+     * */
+
+    mask = valmask & ~USB_PTP_FLAVOR_MTP;
+    while (table[i].strptr)
+    {
+        /* Check that the value matches and the mask matches on any bit*/
+        if ( (table[i].value == val) && (table[i].mask&mask) )
+        { 
+            return &table[i];
+        }
+        i++;
+    }
+
+    /* 2nd Pass - try this w/ MTP if set */
+    mask = valmask;
+    if (mask & USB_PTP_FLAVOR_MTP)
+    {
+        i=0;
+        while (table[i].strptr)
+        {
+            /* Check that the value matches and the mask matches on any bit*/
+            if ( (table[i].value == val) && (table[i].mask&mask) )
+            { 
+                return &table[i];
+            }
+            i++;
+        }
+    }
+
+    /* No Match */
+    return NULL;
+}
+
+/* Add a value from a 16-bit masked value table */
+static void
+proto_tree_add_item_mask(packet_info *pinfo,usb_conv_info_t *usb_conv_info,proto_tree *tree, gint hf, 
+        tvbuff_t *tvb, const gint length, const gint offset, const gint add_info)
+{
+    const value_string_masked_t *vsm               = NULL;
+    usb_ptp_conv_info_t         *usb_ptp_conv_info = NULL;
+    guint16                      val;
+    header_field_info           *hfinfo;
+    const gchar                 *desc              = "";
+    value_string_masked_t       *vals;
+
+    /* If we're parsing a command paramter the paramter field is 32-bits, but we're only using 16-bits for these tables.
+     * MSBs are silently dropped  */
+    val = tvb_get_letohs(tvb,offset);
+
+	/* Lookup our vals used by this header field */
+    hfinfo = proto_registrar_get_nth(hf);
+    vals = (value_string_masked_t *) hfinfo->strings;
+
+    usb_ptp_conv_info = (usb_ptp_conv_info_t *) usb_conv_info->class_data;
+
+    /* May not have the packet annotated, and may not have any value table for this header field */
+    if (vals && usb_ptp_conv_info)
+        vsm = table_value_from_mask(usb_ptp_conv_info->flavor,val,vals);
+
+    /* Add this string onto the info column value if wanted */
+    if (add_info && vsm)
+    {
+        col_append_fstr(pinfo->cinfo, COL_INFO, " %s",vsm->strptr);
+    }
+
+    desc = vsm ? vsm->strptr : "Unknown";
+    proto_tree_add_uint_format_value(tree, hf,tvb,offset,length,val,"%s (0x%04x)",desc,val);
+}
+
+/* Add a PTP-style unicode string*/
+static gint
+usb_ptp_add_uint_string(proto_tree *tree, gint hf, tvbuff_t *tvb, gint offset, gchar* save_to)
+{
+    guint8 length;
+    gchar   *str;
+    gint lengthp;
+
+    /* First byte is the number of characters in UCS-2, including the terminating NULL */
+	length = tvb_get_guint8(tvb, offset) * 2;
+    offset += 1;
+    str = tvb_get_stringz_enc(wmem_packet_scope(), tvb, offset, &lengthp, ENC_ASCII);
+    proto_tree_add_string(tree, hf, tvb, offset, length, str);
+    offset += length;
+
+    /* Save to data structure (optional) */
+    if (save_to)
+        save_to = g_strdup(str);
+
+    return offset;
+}
+
+/* Add Indexed array of 32-bit objects (not masked) */
+static gint
+usb_ptp_add_array_il(packet_info *pinfo _U_,proto_tree *parent_tree, gint hf, tvbuff_t *tvb, gint offset, const char *str)
+{
+    guint32                      length;
+    guint32                      i;
+    proto_tree                  *tree              = NULL;
+    proto_item                  *ti                = NULL;
+
+    /* First 32-bits is the count of 16-bit objects in array */
+	length = tvb_get_letohl(tvb, offset);
+
+    /* Create Device Info Tree */
+    if (parent_tree)
+    {
+        /* Generated from convert_proto_tree_add_text.pl */
+        ti = proto_tree_add_item(parent_tree, hf_usb_ptp_objects_1, tvb, offset, ( (4*length)+4), ENC_LITTLE_ENDIAN);
+        tree = proto_item_add_subtree(ti, ett_usb_ptp_object_array);
+    }
+
+    if (ti)
+        proto_item_set_text(ti,"%s (%d)",str,length);
+    offset += 4;
+
+    if (!length)
+        return offset;
+
+    for (i=0; i<length; i++)
+    {
+        proto_tree_add_item(tree,hf,tvb,offset,4,ENC_LITTLE_ENDIAN);
+        offset+=4;
+    }
+
+    return offset;
+}
+
+/* Add Indexed array of 16-bit objects (masked)*/
+static gint
+usb_ptp_add_array_is(packet_info *pinfo,usb_conv_info_t *usb_conv_info,proto_tree *parent_tree, gint hf,  tvbuff_t *tvb, gint offset, const char *str)
+{
+    guint32                      length;
+    guint32                      i;
+    proto_tree                  *tree              = NULL;
+    proto_item                  *ti                = NULL;
+
+    /* First 32-bits is the count of 16-bit objects in array */
+	length = tvb_get_letohl(tvb, offset);
+
+    /* Create Device Info Tree */
+    if (parent_tree)
+    {
+        /* Generated from convert_proto_tree_add_text.pl */
+        ti = proto_tree_add_item(parent_tree, hf_usb_ptp_objects_2, tvb, offset, ( (2*length)+4), ENC_LITTLE_ENDIAN);
+        tree = proto_item_add_subtree(ti, ett_usb_ptp_object_array);
+    }
+
+    if (ti)
+        proto_item_set_text(ti,"%s (%d)",str,length);
+    offset += 4;
+
+    if (!length)
+        return offset;
+
+    for (i=0; i<length; i++)
+    {
+        proto_tree_add_item_mask(pinfo,usb_conv_info,tree,hf,tvb,2,offset,0);
+        offset+=2;
+    }
+
+    return offset;
+}
+
+static void
+dissect_usb_ptp_get_device_info(tvbuff_t *tvb, packet_info *pinfo, usb_conv_info_t *usb_conv_info, proto_tree *parent_tree, gint offset)
+{
+    proto_tree *tree = NULL;
+    usb_ptp_conv_info_t   *usb_ptp_conv_info;
+    usb_ptp_device_info_t *usb_ptp_device_info;
+    guint16 vendor_extension_id;
+
+    /* Create device info struct if not there already and attach it */
+    usb_ptp_conv_info   = (usb_ptp_conv_info_t *) usb_conv_info->class_data;
+    usb_ptp_device_info = usb_ptp_conv_info->device_info;
+    if (!usb_ptp_device_info)
+    {
+        usb_ptp_device_info = (usb_ptp_device_info_t *) wmem_alloc0(wmem_epan_scope(), sizeof(usb_ptp_device_info_t));
+    }
+
+    /* Create Device Info Tree */
+    if (parent_tree)
+    {
+        proto_item *ti = NULL;
+        /* Generated from convert_proto_tree_add_text.pl */
+        ti = proto_tree_add_item(parent_tree, hf_usb_ptp_device_information, tvb, offset, -1, ENC_LITTLE_ENDIAN);
+        tree = proto_item_add_subtree(ti, ett_usb_ptp_device_info);
+    }
+
+    /* Add Elements to struct and gui */
+	usb_ptp_device_info->StandardVersion = tvb_get_letohs(tvb, offset);
+    proto_tree_add_item(tree,hf_devinfo_standardversion              ,tvb,offset,2,  ENC_LITTLE_ENDIAN);
+    offset+=2;
+	usb_ptp_device_info->VendorExtensionID = tvb_get_letohl(tvb, offset);
+	vendor_extension_id = tvb_get_letohs(tvb, offset);
+    proto_tree_add_item(tree,hf_devinfo_vendorextensionid            ,tvb,offset,4,  ENC_LITTLE_ENDIAN);
+    offset+=4;
+	usb_ptp_device_info->VendorExtensionVersion = tvb_get_letohs(tvb, offset);
+    proto_tree_add_item(tree,hf_devinfo_vendorextensionversion       ,tvb,offset,2,  ENC_LITTLE_ENDIAN);
+    offset+=2;
+    offset = usb_ptp_add_uint_string(tree, hf_devinfo_vendorextensiondesc,tvb,offset,usb_ptp_device_info->VendorExtensionDesc);
+    proto_tree_add_item(tree,hf_devinfo_functionalmode               ,tvb,offset,2,  ENC_LITTLE_ENDIAN);
+    offset+=2;
+    /* TODO: Store array values in dev_info struct */
+    offset = usb_ptp_add_array_is(pinfo,usb_conv_info,tree,hf_devinfo_operationsupported     ,tvb,offset,"OPERATIONS SUPPORTED");
+    offset = usb_ptp_add_array_is(pinfo,usb_conv_info,tree,hf_devinfo_eventsupported         ,tvb,offset,"EVENTS SUPPORTED");
+    offset = usb_ptp_add_array_is(pinfo,usb_conv_info,tree,hf_devinfo_devicepropertysupported,tvb,offset,"DEVICE PROPERTIES SUPPORTED");
+    offset = usb_ptp_add_array_is(pinfo,usb_conv_info,tree,hf_devinfo_captureformat          ,tvb,offset,"CAPTURE FORMATS SUPPORTED");
+    offset = usb_ptp_add_array_is(pinfo,usb_conv_info,tree,hf_devinfo_imageformat            ,tvb,offset,"IMAGE FORMATS SUPPORTED");
+    offset = usb_ptp_add_uint_string(tree,hf_devinfo_manufacturer      ,tvb,offset,usb_ptp_device_info->Manufacturer);
+    offset = usb_ptp_add_uint_string(tree,hf_devinfo_model             ,tvb,offset,usb_ptp_device_info->Model);
+    offset = usb_ptp_add_uint_string(tree,hf_devinfo_deviceversion     ,tvb,offset,usb_ptp_device_info->DeviceVersion);
+    offset = usb_ptp_add_uint_string(tree,hf_devinfo_serialnumber      ,tvb,offset,usb_ptp_device_info->SerialNumber);
+
+    /* Post Proc of this table */
+
+    /* Enable/Disable MTP Extensions */
+    if (vendor_extension_id == USB_PTP_VENDOR_EXT_MTP) 
+    {
+        usb_ptp_conv_info->flavor |= USB_PTP_FLAVOR_MTP;
+    } else
+    {
+        usb_ptp_conv_info->flavor = usb_ptp_conv_info->flavor & ~USB_PTP_FLAVOR_MTP;
+    }
+}
+
+static void
+dissect_usb_ptp_params(tvbuff_t *tvb, packet_info *pinfo _U_, proto_tree *parent_tree, gint offset,gint hf)
+{
+    guint32 remaining;
+    proto_tree *tree = NULL;
+
+    remaining = tvb_captured_length_remaining(tvb,offset);
+
+    if (!remaining)
+        return;
+
+    if (parent_tree)
+    {
+        proto_item *ti = NULL;
+        /* Generated from convert_proto_tree_add_text.pl */
+        ti = proto_tree_add_item(parent_tree, hf_usb_ptp_parameters, tvb, offset, remaining, ENC_LITTLE_ENDIAN);
+        tree = proto_item_add_subtree(ti, ett_usb_ptp_parameters);
+    }
+
+    while (remaining >= 4)
+    {
+        proto_tree_add_item(tree,hf,tvb,offset,4,ENC_LITTLE_ENDIAN);
+        offset+=4;
+        remaining-=4;
+    }
+}
+
+static void
+dissect_usb_ptp_payload(tvbuff_t *tvb, packet_info *pinfo, usb_conv_info_t *usb_conv_info, proto_tree *tree, guint16 ptp_type,
+        guint16 ptp_code, const value_string_masked_t *vsm _U_, gint offset)
+{
+    guint length_payload;
+
+    switch(ptp_type)
+    {
+        case USB_PTP_TYPE_DATA:
+            switch (ptp_code)
+            {
+                case USB_PTP_OC_GETDEVICEINFO:
+                    dissect_usb_ptp_get_device_info(tvb,pinfo,usb_conv_info,tree,offset);
+                    return;
+                case USB_PTP_OC_GETSTORAGEIDS:
+                    offset = usb_ptp_add_array_il(pinfo,tree,hf_storageid,tvb,offset,"STORAGE IDS");
+                    break;
+                case USB_PTP_OC_GETOBJECTHANDLES:
+                    offset = usb_ptp_add_array_il(pinfo,tree,hf_objhandle,tvb,offset,"OBJECT HANDLES");
+                    break;
+                /*case USB_PTP_OC_SETDEVICEPROPVALUE: TODO
+                 *    return dissect_usb_ptp_set_device_prop_value(tvb,pinfo,tree,offset); */
+                case USB_PTP_OC_GETOBJECTPROPSSUPPORTED:
+                    offset = usb_ptp_add_array_is(pinfo,usb_conv_info,tree,hf_cmd_objpropcode,tvb,offset,"OBJECT PROPERTY CODES");
+                    return; 
+                default:
+                    break;
+            }
+            break;
+        case USB_PTP_TYPE_CMD:
+            switch (ptp_code)
+            {
+                case USB_PTP_OC_SETDEVICEPROPVALUE:
+                    proto_tree_add_item_mask(pinfo,usb_conv_info,tree,hf_cmd_devicepropvalue,tvb,4,offset,1);
+                    offset+=4;
+                    break;
+                case USB_PTP_OC_GETDEVICEPROPDESC:
+                    proto_tree_add_item_mask(pinfo,usb_conv_info,tree,hf_cmd_devicepropdesc,tvb,4,offset,1);
+                    offset+=4;
+                    break;
+                case USB_PTP_OC_GETOBJECTPROPSSUPPORTED:
+                    proto_tree_add_item_mask(pinfo,usb_conv_info,tree,hf_cmd_objformatcode,tvb,4,offset,1);
+                    offset+=4;
+                    break;
+                case USB_PTP_OC_GETOBJECTPROPDESC:
+                    proto_tree_add_item_mask(pinfo,usb_conv_info,tree,hf_cmd_objpropcode  ,tvb,4,offset,1);
+                    offset+=4;
+                    proto_tree_add_item_mask(pinfo,usb_conv_info,tree,hf_cmd_objformatcode,tvb,4,offset,1);
+                    offset+=4;
+                    break;
+                default:
+                    dissect_usb_ptp_params(tvb,pinfo,tree,offset,hf_cmd_parameter);
+                    return;
+                    break;
+            }
+        case USB_PTP_TYPE_RESPONSE:
+            dissect_usb_ptp_params(tvb,pinfo,tree,offset,hf_response_parameter);
+            return;
+        case USB_PTP_TYPE_EVENT:
+            dissect_usb_ptp_params(tvb,pinfo,tree,offset,hf_event_parameter);
+            return;
+        default:
+            break;
+    }
+    /* Default is to just label generic bytes */
+    length_payload = tvb_captured_length(tvb) - offset;
+    if ( !length_payload )
+        return;
+
+    /* TODO: Auto-detect strings -- look for string length + null char match */
+
+    proto_tree_add_item(tree, hf_payload,tvb, offset, length_payload, ENC_NA );
+}
+
+static int
+dissect_usb_ptp(tvbuff_t *tvb, packet_info *pinfo, proto_tree *parent_tree, void *data) //source
+{
+    usb_conv_info_t *usb_conv_info;
+    proto_tree *tree = NULL;
+    guint length_tvb;
+    guint32 ptp_length;
+    guint16 ptp_type;
+    guint16 ptp_code;
+    guint32 ptp_tid;
+    gint offset = 0;
+    const gchar *ptp_code_desc = "";
+    gchar *col_class;
+    gint  col_class_length=3+1;
+    usb_ptp_conv_info_t *usb_ptp_conv_info;
+    const value_string_masked_t *vsm;
+	fragment_head *head;
+	gboolean save_fragmented;
+	gboolean complete;
+    tvbuff_t *new_tvb = NULL;
+    tvbuff_t *next_tvb = NULL;	
+    gboolean ptp_data_head;
+	
+	ptp_data_head = FALSE;
+	complete = FALSE;
+
+    col_class = (gchar *) wmem_alloc(wmem_packet_scope(), col_class_length);
+    col_class[0]='\0';
+
+    col_set_str(pinfo->cinfo, COL_PROTOCOL, "USB-PTP");
+
+    /* Add our own class information to usb_conv_info */
+    usb_conv_info = (usb_conv_info_t *)data;
+    usb_ptp_conv_info = (usb_ptp_conv_info_t *) usb_conv_info->class_data;
+    if(!usb_ptp_conv_info)
+    {
+        usb_ptp_conv_info = (usb_ptp_conv_info_t *) wmem_alloc0(wmem_epan_scope(), sizeof(usb_ptp_conv_info_t));
+        usb_conv_info->class_data = usb_ptp_conv_info;
+        usb_ptp_conv_info->flavor = usb_ptp_flavor(usb_conv_info);
+    }
+
+    if (parent_tree)
+    {
+        proto_item *ti = NULL;
+        ti = proto_tree_add_protocol_format(parent_tree, proto_usb_ptp, tvb, 0, -1, "USB-PTP");
+        tree = proto_item_add_subtree(ti, ett_usb_ptp);
+    }
+
+	//zune
+    //bDeviceClass: 255
+    //bDeviceSubClass: 0
+    //bDeviceProtocol: 0
+
+    /* PTP Is defined as Class=6, SubClass=1, Protocol=1 */ 
+    /*
+    if (!(   (usb_conv_info->interfaceSubclass == IF_CLASS_IMAGE_SUBCLASS_PTP)
+          && (usb_conv_info->interfaceProtocol == IF_CLASS_IMAGE_PROTOCOL_PTP) ) ||
+        !(   (usb_conv_info->interfaceClass == 255)
+          && (usb_conv_info->interfaceSubclass == 0)
+          && (usb_conv_info->interfaceProtocol == 0) )
+         )
+    {
+        proto_tree_add_expert(tree, pinfo, &ei_unknown_ptp_device, tvb, 0, length_tvb);
+        return;
+    }*/
+
+    save_fragmented = pinfo->fragmented;
+
+	if (tvb_captured_length(tvb) >= 8) {
+		ptp_type = tvb_get_letohs(tvb,offset+4);
+		switch(ptp_type)
+		{
+			case USB_PTP_TYPE_DATA:
+				ptp_length = tvb_get_letohl(tvb,offset);
+				fragment_start_seq_check(&msg_reassembled_table, pinfo, pinfo->p2p_dir, NULL, ptp_length);
+				new_tvb = process_reassembled_data(tvb, offset, pinfo,
+					"Reassembled PTP/MTP data packet", head, &mtp_msg_frag_items,
+					NULL, tree);
+				if (tvb_captured_length(tvb) == ptp_length) {
+					pinfo->fragmented = FALSE;
+					complete = TRUE;
+				} else {
+					ptp_data_head = TRUE;
+					pinfo->fragmented = TRUE;
+				}
+				break;
+			case USB_PTP_TYPE_RESPONSE:
+			case USB_PTP_TYPE_CMD:
+			case USB_PTP_TYPE_EVENT:
+				pinfo->fragmented = FALSE;
+				complete = TRUE;
+				break;
+			default:
+				head = fragment_add_seq_next(&msg_reassembled_table, tvb, offset, pinfo, pinfo->p2p_dir, NULL, tvb_captured_length(tvb), TRUE);
+				new_tvb = process_reassembled_data(tvb, offset, pinfo,
+					"Reassembled PTP/MTP data packet", head, &mtp_msg_frag_items,
+					NULL, tree);
+
+				//col_add_fstr(pinfo->cinfo, COL_INFO, "MTP DATA FRAGMENT", 
+				//		col_class, ptp_tid, ptp_code, ptp_code_desc );
+
+				//fprintf(stderr, "tvb add length=%u\n", tvb_captured_length(tvb));
+				pinfo->fragmented = TRUE;
+				break;
+		}
+	} else {
+		//data packet
+	}
+    
+    if (new_tvb) { /* take it all */
+        next_tvb = new_tvb;
+        complete = TRUE;
+    } else { /* make a new subset */
+        next_tvb = tvb_new_subset_remaining(tvb, offset);
+    }
+
+    if (complete || ptp_data_head) {
+		//do actual parsing here
+
+		proto_tree_add_item(tree, hf_container_length, next_tvb, offset, 4, ENC_LITTLE_ENDIAN);
+		ptp_length = tvb_get_letohl(next_tvb,offset);
+		offset+=4; 
+		
+		proto_tree_add_item(tree, hf_container_type,   next_tvb, offset, 2, ENC_LITTLE_ENDIAN);
+		//ptp_type = tvb_get_letohs(next_tvb,offset);
+		offset+=2;
+
+		ptp_code = tvb_get_letohs(next_tvb,offset);
+		switch(ptp_type)
+		{
+			case USB_PTP_TYPE_DATA:
+				g_snprintf(col_class, col_class_length, "DAT");
+				/* "The Data Block will use the OperationCode from the Command Block" [1] 7.1.1 */
+				vsm = table_value_from_mask(usb_ptp_conv_info->flavor,ptp_code,usb_ptp_oc_mvals);
+				ptp_code_desc = vsm ? vsm->strptr : "UNKNOWN";
+				proto_tree_add_uint_format_value(tree, hf_operation_code,next_tvb, offset, 2, ptp_code, 
+						"%s (0x%04x)",ptp_code_desc,ptp_code);
+				pinfo->fragmented = TRUE;
+				offset+=2;
+				break;
+			case USB_PTP_TYPE_CMD:
+				g_snprintf(col_class, col_class_length, "CMD");
+				vsm = table_value_from_mask(usb_ptp_conv_info->flavor,ptp_code,usb_ptp_oc_mvals);
+				ptp_code_desc = vsm ? vsm->strptr : "UNKNOWN";
+				proto_tree_add_uint_format_value(tree, hf_operation_code,next_tvb, offset, 2, ptp_code, 
+						"%s (0x%04x)",ptp_code_desc,ptp_code);
+				if (ptp_code == 0x9214)
+					proto_tree_add_expert(tree, pinfo, &ei_mtpz_drm_app_enable_write_operations, next_tvb, offset, 2);
+				else if (ptp_code == 0x9216)
+					proto_tree_add_expert(tree, pinfo, &ei_mtpz_drm_app_disable_write_operations, next_tvb, offset, 2);
+				offset+=2;
+				break;
+			case USB_PTP_TYPE_RESPONSE:
+				g_snprintf(col_class, col_class_length, "RSP");
+				vsm = table_value_from_mask(usb_ptp_conv_info->flavor,ptp_code,usb_ptp_rc_mvals);
+				ptp_code_desc = vsm ? vsm->strptr : "UNKNOWN";
+				proto_tree_add_uint_format_value(tree, hf_response_code,next_tvb, offset, 2, ptp_code, 
+						"%s (0x%04x)",ptp_code_desc,ptp_code);
+				offset+=2;
+				break;
+			case USB_PTP_TYPE_EVENT:
+				g_snprintf(col_class, col_class_length, "EVT");
+				vsm = table_value_from_mask(usb_ptp_conv_info->flavor,ptp_code,usb_ptp_ec_mvals);
+				ptp_code_desc = vsm ? vsm->strptr : "UNKNOWN";
+				proto_tree_add_uint_format_value(tree, hf_event_code,next_tvb, offset, 2, ptp_code, 
+						"%s (0x%04x)",ptp_code_desc,ptp_code);
+				offset+=2;
+				break;
+			default:
+				g_snprintf(col_class, col_class_length, "?");
+				proto_tree_add_uint_format_value(tree, hf_event_code,next_tvb, offset, 2, ptp_code, 
+						"%s (0x%04x)",ptp_code_desc,ptp_code);
+				proto_tree_add_expert(tree, pinfo, &ei_unknown_ptp_type, next_tvb, offset, 2);
+				offset+=2;
+				break;
+		}
+
+		if (tvb_captured_length(tvb) >= 12) {
+			proto_tree_add_item(tree, hf_transaction_id, next_tvb, offset, 4, ENC_LITTLE_ENDIAN);
+			ptp_tid = tvb_get_letohl(next_tvb,offset);
+			offset+=4;
+		}
+
+		col_add_fstr(pinfo->cinfo, COL_INFO, "%s %08x (%04x) %s", 
+				col_class, ptp_tid, ptp_code, ptp_code_desc );
+
+		length_tvb = tvb_captured_length(next_tvb);
+
+		/* Pass along if we have a payload */
+		if ( (length_tvb-offset) > 0 )
+		{
+			dissect_usb_ptp_payload(next_tvb,pinfo,usb_conv_info,tree,ptp_type,ptp_code,vsm,offset);
+		}
+
+    } else {
+        /* packet fragment */
+		guint32 chunk;
+		if (tvb_captured_length(tvb) >= 4) {
+			chunk = tvb_get_letohs(tvb,offset);
+			if (chunk == 0x00010102) {
+				col_add_fstr(pinfo->cinfo, COL_INFO, "MTPZ DRM APP CERTIFICATE SENT");
+					proto_tree_add_expert(tree, pinfo, &ei_mtpz_drm_app_send_certificate, tvb, offset, 2);
+			} else if (chunk == 0x00010102) {
+				col_add_fstr(pinfo->cinfo, COL_INFO, "MTPZ DRM APP CERTIFICATE DEVICE RESPONSE");
+					proto_tree_add_expert(tree, pinfo, &ei_mtpz_drm_dev_resp_certificate, tvb, offset, 2);
+			} else {
+				col_add_fstr(pinfo->cinfo, COL_INFO, "%s PTP/MTP data fragment",
+							 (pinfo->p2p_dir==P2P_DIR_SENT) ? "Sent" : "Rcvd");
+			}
+		} else {
+			col_add_fstr(pinfo->cinfo, COL_INFO, "%s PTP/MTP data fragment",
+						 (pinfo->p2p_dir==P2P_DIR_SENT) ? "Sent" : "Rcvd");
+		}
+
+		offset+=tvb_captured_length(next_tvb);
+
+        call_dissector(data_handle, next_tvb, pinfo, tree);
+    }
+    
+	pinfo->fragmented = save_fragmented;
+
+    return offset;
+}
+
+
+void
+proto_register_usb_ptp(void)
+{
+    module_t         *module;
+    expert_module_t* expert_usb_ptp;
+    /* header field array
+    * struct header_field_info {
+    *     const char      *name;
+    *     const char      *abbrev;
+    *     enum ftenum     type;
+    *     int             display;
+    *     const void      *strings;
+    *     guint32         bitmask;
+    *     const char      *blurb;
+    *     .....
+    * };
+    */
+
+    /* NOTE: Some of the strings arguments given are value_string_masked_t[] instead of the normal value_string_t[]
+     *       These can't be used by proto_tree_add_item() directly and instead are used by proto_tree_add_item_mask etc
+     *       */
+    static hf_register_info hf[] = {
+        { &hf_mtpz_cert_app_cert_prefix                       , 
+        { "Desktop Application Certificate Prefix"            , "usb-ptp.mtpz.appcert.prefix"           , FT_BYTES   , BASE_NONE , 
+        NULL                                                  , 0x0                                     , NULL       , HFILL}}   , 
+        { &hf_mtpz_cert_app_cert_length                       , 
+        { "Desktop Application Certificate Length"            , "usb-ptp.mtpz.appcert.length"           , FT_UINT16  , BASE_DEC  , 
+        NULL                                                  , 0x0                                     , NULL       , HFILL}}   , 
+        { &hf_mtpz_cert_app_cert                              , 
+        { "Desktop Application Certificate"                   , "usb-ptp.mtpz.appcert"                  , FT_BYTES   , BASE_NONE , 
+        NULL                                                  , 0x0                                     , NULL       , HFILL}}   , 
+        { &hf_container_length                                , 
+        { "Container Length"                                  , "usb-ptp.container.length"              , FT_UINT32  , BASE_DEC  , 
+        NULL                                                  , 0x0                                     , NULL       , HFILL}}   , 
+        { &hf_container_type                                  , 
+        { "Container Type"                                    , "usb-ptp.container.type"                , FT_UINT16  , BASE_HEX  , 
+        &usb_ptp_container_type_vals                          , 0x0                                     , NULL       , HFILL}}   , 
+        { &hf_operation_code                                  , 
+        { "Operation Code"                                    , "usb-ptp.operation.code"                , FT_UINT16  , BASE_HEX  , 
+        NULL                                                  , 0x0                                     , NULL       , HFILL}}   , 
+        { &hf_event_code                                      , 
+        { "Event Code"                                        , "usb-ptp.event.code"                    , FT_UINT16  , BASE_HEX  , 
+        NULL                                                  , 0x0                                     , NULL       , HFILL}}   , 
+        { &hf_transaction_id                                  , 
+        { "Transaction ID"                                    , "usb-ptp.transaction.id"                , FT_UINT32  , BASE_HEX  , 
+        NULL                                                  , 0x0                                     , NULL       , HFILL}}   , 
+        { &hf_payload                                         , 
+        { "Payload"                                           , "usb-ptp.payload"                       , FT_BYTES   , BASE_NONE , 
+        NULL                                                  , 0x0                                     , NULL       , HFILL}}   , 
+        { &hf_cmd_parameter                                   , 
+        { "Parameter"                                         , "usb-ptp.command.parameter"             , FT_UINT32  , BASE_HEX  , 
+        NULL                                                  , 0x0                                     , NULL       , HFILL}}   , 
+        { &hf_response_code                                   , 
+        { "Response Code"                                     , "usb-ptp.response.code"                 , FT_UINT16  , BASE_HEX  , 
+        NULL                                                  , 0x0                                     , NULL       , HFILL}}   , 
+        { &hf_response_parameter                              , 
+        { "Parameter"                                         , "usb-ptp.response.parameter"            , FT_UINT32  , BASE_HEX  , 
+        NULL                                                  , 0x0                                     , NULL       , HFILL}}   , 
+        { &hf_event_parameter                                 , 
+        { "Parameter"                                         , "usb-ptp.event.parameter"               , FT_UINT32  , BASE_HEX  , 
+        NULL                                                  , 0x0                                     , NULL       , HFILL}}   , 
+        { &hf_devinfo_standardversion                         , 
+        { "Standard Version"                                  , "usb-ptp.device.standardversion"        , FT_UINT16  , BASE_HEX  , 
+        NULL                                                  , 0x0                                     , NULL       , HFILL}}   , 
+        { &hf_devinfo_vendorextensionid                       , 
+        { "Vendor Extension ID"                               , "usb-ptp.device.vendorextensionid"      , FT_UINT32  , BASE_HEX  , 
+        MVALS(&usb_ptp_devinfo_vendorextensionid_vals)        , 0x0                                     , NULL       , HFILL}}   , 
+        { &hf_devinfo_vendorextensionversion                  , 
+        { "Vendor Extension Version"                          , "usb-ptp.device.vendorextensionversion" , FT_UINT16  , BASE_HEX  , 
+        NULL                                                  , 0x0                                     , NULL       , HFILL}}   , 
+        { &hf_devinfo_vendorextensiondesc                     , 
+        { "Vendor Extension Description"                      , "usb-ptp.device.vendorextensiondesc"    , FT_STRING  , BASE_NONE , 
+        NULL                                                  , 0x0                                     , NULL       , HFILL}}   , 
+        { &hf_devinfo_functionalmode                          , 
+        { "Functional Mode"                                   , "usb-ptp.device.functionalmode"         , FT_UINT16  , BASE_HEX  , 
+        NULL                                                  , 0x0                                     , NULL       , HFILL}}   , 
+        { &hf_devinfo_operationsupported                      , 
+        { "Operation Supported"                               , "usb-ptp.device.operationssupported"    , FT_UINT16  , BASE_HEX  , 
+        MVALS(&usb_ptp_oc_mvals)                              , 0x0                                     , NULL       , HFILL}}   , 
+        { &hf_devinfo_eventsupported                          , 
+        { "Event Supported"                                   , "usb-ptp.device.eventsupported"         , FT_UINT16  , BASE_HEX  , 
+        MVALS(&usb_ptp_ec_mvals)                              , 0x0                                     , NULL       , HFILL}}   , 
+        { &hf_devinfo_devicepropertysupported                 , 
+        { "Device Property"                                   , "usb-ptp.device.propertysupported"      , FT_UINT16  , BASE_HEX  , 
+        MVALS(&usb_ptp_dpc_mvals)                             , 0x0                                     , NULL       , HFILL}}   , 
+        { &hf_devinfo_captureformat                           , 
+        { "Capture Format"                                    , "usb-ptp.device.captureformat"          , FT_UINT16  , BASE_HEX  , 
+        MVALS(&usb_ptp_ofc_mvals)                             , 0x0                                     , NULL       , HFILL}}   , 
+        { &hf_devinfo_imageformat                             , 
+        { "Image Format"                                      , "usb-ptp.device.imageformat"            , FT_UINT16  , BASE_HEX  , 
+        MVALS(&usb_ptp_ofc_mvals)                             , 0x0                                     , NULL       , HFILL}}   , 
+        { &hf_devinfo_manufacturer                            , 
+        { "Manufacturer"                                      , "usb-ptp.device.manufacturer"           , FT_STRING  , BASE_NONE , 
+        NULL                                                  , 0x0                                     , NULL       , HFILL}}   , 
+        { &hf_devinfo_model                                   , 
+        { "Model"                                             , "usb-ptp.device.model"                  , FT_STRING  , BASE_NONE , 
+        NULL                                                  , 0x0                                     , NULL       , HFILL}}   , 
+        { &hf_devinfo_deviceversion                           , 
+        { "Device Version"                                    , "usb-ptp.device.deviceversion"          , FT_STRING  , BASE_NONE , 
+        NULL                                                  , 0x0                                     , NULL       , HFILL}}   , 
+        { &hf_devinfo_serialnumber                            , 
+        { "Serial Number"                                     , "usb-ptp.device.serialnumber"           , FT_STRING  , BASE_NONE , 
+        NULL                                                  , 0x0                                     , NULL       , HFILL}}   , 
+        { &hf_cmd_devicepropvalue                             , 
+        { "Device Property"                                   , "usb-ptp.device.property"               , FT_UINT16  , BASE_HEX  , 
+        MVALS(&usb_ptp_dpc_mvals)                             , 0x0                                     , NULL       , HFILL}}   , 
+        { &hf_cmd_devicepropdesc                              , 
+        { "Device Property"                                   , "usb-ptp.device.propertydesc"           , FT_UINT16  , BASE_HEX  , 
+        MVALS(&usb_ptp_dpc_mvals)                             , 0x0                                     , NULL       , HFILL}}   , 
+        { &hf_storageid                                       , 
+        { "Storage ID"                                        , "usb-ptp.device.storageid"              , FT_UINT32  , BASE_HEX  , 
+        NULL                                                  , 0x0                                     , NULL       , HFILL}}   , 
+        { &hf_cmd_objformatcode                               , 
+        { "Object Format Code"                                , "usb-ptp.object.format"                 , FT_UINT16  , BASE_HEX  , 
+        MVALS(&usb_ptp_ofc_mvals)                             , 0x0                                     , NULL       , HFILL}}   , 
+        { &hf_cmd_objpropcode                                 , 
+        { "Object Prop Code"                                  , "usb-ptp.object.code"                   , FT_UINT16  , BASE_HEX  , 
+        MVALS(&usb_ptp_opc_mvals)                             , 0x0                                     , NULL       , HFILL}}   , 
+        { &hf_objhandle                                       , 
+        { "Object Handle"                                     , "usb-ptp.object.handle"                 , FT_UINT32  , BASE_HEX  , 
+        NULL                                                  , 0x0                                     , NULL       , HFILL}}   ,
+        { &hf_mtpz_drmapprequest                              , 
+        { "Object Format Code"                                , "usb-ptp.mtpz.drmapprequest"            , FT_UINT16  , BASE_HEX  , 
+        MVALS(&usb_ptp_oc_mvals)                              , 0x0                                     , NULL       , HFILL}}   , 
+        { &hf_mtpz_drmappresponse                             , 
+        { "Object Format Code"                                , "usb-ptp.mtpz.drmappresponse"           , FT_UINT16  , BASE_HEX  , 
+        MVALS(&usb_ptp_oc_mvals)                              , 0x0                                     , NULL       , HFILL}}   , 
+        { &hf_mtpz_drmfileopsenable                           , 
+        { "Object Format Code"                                , "usb-ptp.mtpz.drmfileopsenable"         , FT_UINT16  , BASE_HEX  , 
+        MVALS(&usb_ptp_oc_mvals)                              , 0x0                                     , NULL       , HFILL}}   , 
+        { &hf_mtpz_drmfileopsdisable                          , 
+        { "Object Format Code"                                , "usb-ptp.mtpz.drmfileopsdisable"        , FT_UINT16  , BASE_HEX  , 
+        MVALS(&usb_ptp_oc_mvals)                              , 0x0                                     , NULL       , HFILL}}   , 
+        { &hf_mtpz_drmappsessionend                           , 
+        { "Object Format Code"                                , "usb-ptp.mtpz.drmappsessionend"         , FT_UINT16  , BASE_HEX  , 
+        MVALS(&usb_ptp_oc_mvals)                              , 0x0                                     , NULL       , HFILL}}   ,
+        { &hf_msg_fragments                                   , 
+		{ "Message fragments"                                 , "usb-ptp.msg.fragments"                 , FT_NONE    , BASE_NONE ,
+		NULL                                                  , 0x0                                     , NULL       , HFILL}}   ,
+        { &hf_msg_fragment                                    , 
+		{ "Message fragment"                                  , "usb-ptp.msg.fragment"                  , FT_FRAMENUM, BASE_NONE , 
+		NULL                                                  , 0x0                                     , NULL       , HFILL}}   ,
+        { &hf_msg_fragment_overlap                            , 
+		{ "Message fragment overlap"                          , "usb-ptp.msg.fragment.overlap"          , FT_BOOLEAN , BASE_NONE , 
+		NULL                                                  , 0x0                                     , NULL       , HFILL}}   ,
+        { &hf_msg_fragment_overlap_conflicts                  , 
+		{ "Message fragment overlapping with conflicting data", "usb-ptp.msg.fragment.overlap.conflicts", FT_BOOLEAN , BASE_NONE , 
+		NULL                                                  , 0x0                                     , NULL       , HFILL}}   ,
+        { &hf_msg_fragment_multiple_tails                     , 
+		{ "Message has multiple tail fragments"               , "usb-ptp.msg.fragment.multiple_tails"   , FT_BOOLEAN , BASE_NONE , 
+		NULL                                                  , 0x0                                     , NULL       , HFILL}}   ,
+        { &hf_msg_fragment_too_long_fragment                  , 
+		{ "Message fragment too long"                         , "usb-ptp.msg.fragment.too_long_fragment", FT_BOOLEAN , BASE_NONE , 
+		NULL                                                  , 0x0                                     , NULL       , HFILL}}   ,
+        { &hf_msg_fragment_error                              , 
+		{ "Message defragmentation error"                     , "usb-ptp.msg.fragment.error"            , FT_FRAMENUM, BASE_NONE , 
+		NULL                                                  , 0x0                                     , NULL       , HFILL}}   ,
+        { &hf_msg_fragment_count                              , 
+		{ "Message fragment count"                            , "usb-ptp.msg.fragment.count"            , FT_UINT32  , BASE_DEC  , 
+		NULL                                                  , 0x0                                     , NULL       , HFILL}}   ,
+        { &hf_msg_reassembled_in                              , 
+		{ "Reassembled in"                                    , "usb-ptp.msg.reassembled.in"            , FT_FRAMENUM, BASE_NONE , 
+		NULL                                                  , 0x0                                     , NULL       , HFILL}}   ,
+        { &hf_msg_reassembled_length                          , 
+		{ "Reassembled usb-ptp length"                        , "usb-ptp.msg.reassembled.length"        , FT_UINT32  , BASE_DEC  , 
+		NULL                                                  , 0x0                                     , NULL       , HFILL}}   ,
+        /* Generated from convert_proto_tree_add_text.pl */
+        { &hf_usb_ptp_objects_1, { "Objects", "usb_ptp.objects", FT_UINT64, BASE_DEC, NULL, 0x0, NULL, HFILL }},
+        { &hf_usb_ptp_objects_2, { "Objects", "usb_ptp.objects", FT_UINT64, BASE_DEC, NULL, 0x0, NULL, HFILL }},
+        { &hf_usb_ptp_device_information, { "DEVICE INFORMATION", "usb_ptp.device_information", FT_BYTES, BASE_NONE, NULL, 0x0, NULL, HFILL }},
+        { &hf_usb_ptp_parameters, { "PARAMETERS", "usb_ptp.parameters", FT_BYTES, BASE_NONE, NULL, 0x0, NULL, HFILL }},
+        };
+
+    static gint *usb_ptp_subtrees[] = {
+		&ett_msg_fragment,
+		&ett_msg_fragments,
+        &ett_usb_ptp,
+        &ett_usb_ptp_device_info,
+        &ett_usb_ptp_object_array,
+        &ett_usb_ptp_parameters
+    };
+ 
+    static ei_register_info ei[] = {
+        { &ei_unknown_ptp_type, { "usb-ptp.expert.unknown_ptp_type",                                       PI_PROTOCOL, PI_NOTE, "Unknown ptp type", EXPFILL }},
+        { &ei_unknown_ptp_device, { "usb-ptp.expert.unknown_ptp_device",                                   PI_PROTOCOL, PI_WARN, "Unknown ptp device", EXPFILL }},
+        { &ei_mtpz_drm_app_send_certificate, { "usb-ptp.expert.mtpz_drm_app_send_certificate",             PI_PROTOCOL, PI_NOTE, "MTPZ DRM Application sent certificate to device", EXPFILL }},
+        { &ei_mtpz_drm_dev_resp_certificate, { "usb-ptp.expert.mtpz_drm_app_resp_certificate",             PI_PROTOCOL, PI_NOTE, "MTPZ DRM Device respond with encrypted blob to Application", EXPFILL }},
+        { &ei_mtpz_drm_app_enable_write_operations, { "usb-ptp.expert.mtpz_drm_enable_write_operations",   PI_PROTOCOL, PI_NOTE, "MTPZ DRM Authenticate and enable writes on device", EXPFILL }},
+        { &ei_mtpz_drm_app_disable_write_operations, { "usb-ptp.expert.mtpz_drm_enable_write_operations",  PI_PROTOCOL, PI_NOTE, "MTPZ DRM Disable device writes on device", EXPFILL }},
+    };
+
+    proto_usb_ptp = proto_register_protocol("USB Picture Transfer Protocol", "USB-PTP", "usb-ptp");
+    proto_register_field_array(proto_usb_ptp, hf, array_length(hf));
+    proto_register_subtree_array(usb_ptp_subtrees, array_length(usb_ptp_subtrees));
+    register_dissector("usb-ptp", dissect_usb_ptp, proto_usb_ptp);
+
+    expert_usb_ptp = expert_register_protocol(proto_usb_ptp);
+    expert_register_field_array(expert_usb_ptp, ei, array_length(ei));
+	
+    module = prefs_register_protocol(proto_usb_ptp, NULL);
+    prefs_register_static_text_preference(module, "version",
+            "USB PTP Specification 1.1/USB MTP Specification 1.1",
+            "Version of protocol supported by this dissector.");	
+
+    reassembly_table_init(&msg_reassembled_table, &addresses_reassembly_table_functions);
+}
+
+void
+proto_reg_handoff_usb_ptp(void) 
+{
+    dissector_handle_t usb_ptp_dissector_handle;
+    usb_ptp_dissector_handle = find_dissector("usb-ptp");
+    //dissector_add_uint("usb.bulk", IF_CLASS_IMAGE, usb_ptp_dissector_handle);
+    //dissector_add_uint("usb.bulk", IF_CLASS_VENDOR_SPECIFIC, usb_ptp_dissector_handle); //for zune
+    heur_dissector_add("usb.bulk", dissect_usb_ptp, "PTP USB bulk endpoint", "ptp_usb_bulk", proto_usb_ptp, HEURISTIC_ENABLE);
+
+    data_handle = find_dissector("data");
+}
diff -x '*.rej' -x '*.orig' -urpN wireshark-3.4.0.orig/epan/dissectors/packet-usb-ptp.h wireshark-3.4.0/epan/dissectors/packet-usb-ptp.h
--- wireshark-3.4.0.orig/epan/dissectors/packet-usb-ptp.h	1969-12-31 16:00:00.000000000 -0800
+++ wireshark-3.4.0/epan/dissectors/packet-usb-ptp.h	2020-11-09 20:42:58.496158149 -0800
@@ -0,0 +1,1694 @@
+/* packet-usb-ptp.h
+ *
+ * $Id$
+ *
+ * usb image picture transfer protocol dissector
+ * (c)2013 Max Baker <max@warped.org>
+ *
+ * Much of this adapted from libgphoto2/libgphoto2/camlibs/ptp2/
+ *
+ * Copyright (C) 2001 Mariusz Woloszyn <emsi@ipartners.pl>
+ * Copyright (C) 2003-2012 Marcus Meissner <marcus@jet.franken.de>
+ * Copyright (C) 2006-2008 Linus Walleij <triad@df.lth.se>
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License
+ * as published by the Free Software Foundation; either version 2
+ * of the License, or (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
+ *
+ * [1] http://www.usb.org/developers/devclass_docs/usb_still_img10.pdf for protocol definition
+ *
+ */
+
+#define IF_CLASS_IMAGE_SUBCLASS_PTP 0x01
+#define IF_CLASS_IMAGE_PROTOCOL_PTP 0x01
+
+/* 7.1.1 [1] */
+#define USB_PTP_TYPE_CMD        0x1
+#define USB_PTP_TYPE_DATA       0x2
+#define USB_PTP_TYPE_RESPONSE   0x3
+#define USB_PTP_TYPE_EVENT      0x4
+
+#define USB_PTP_VENDOR_EXT_MTP 0x00000006
+
+#define USB_PTP_VENDOR_CANON   0x04a9
+#define USB_PTP_VENDOR_CASIO   0x07cf
+#define USB_PTP_VENDOR_NIKON   0x04b0
+#define USB_PTP_VENDOR_FUJI    0x04cb
+#define USB_PTP_VENDOR_OLYMPUS 0x07b4
+#define USB_PTP_VENDOR_KODAK   0x040a
+#define USB_PTP_VENDOR_MICROSOFT 0x045e
+
+#define USB_PTP_OC_GETDEVICEINFO           0x1001
+#define USB_PTP_OC_GETSTORAGEIDS           0x1004
+#define USB_PTP_OC_GETOBJECTHANDLES        0x1007
+#define USB_PTP_OC_GETDEVICEPROPDESC       0x1014
+#define USB_PTP_OC_SETDEVICEPROPVALUE      0x1016
+#define USB_PTP_OC_GETOBJECTPROPSSUPPORTED 0x9801
+#define USB_PTP_OC_GETOBJECTPROPDESC       0x9802
+#define USB_PTP_OC_SENDOBJECT              0x100D
+#define USB_PTP_OC_MTP_WMDRMPD_SENDDWDRMPDAPPREQUEST	0x9212
+
+
+
+/* PTP device info structure (returned by GetDevInfo) */
+typedef struct _usb_ptp_device_info_t {
+    guint16       StandardVersion;
+    guint32       VendorExtensionID;
+    guint16       VendorExtensionVersion;
+    gchar        *VendorExtensionDesc;
+    guint16       FunctionalMode;
+    value_string *OperationsSupported;
+    value_string *EventsSupported;
+    value_string *DevicePropertiesSupported;
+    value_string *CaptureFormats;
+    value_string *ImageFormats;
+    gchar        *Manufacturer;
+    gchar        *Model;
+    gchar        *DeviceVersion;
+    gchar        *SerialNumber;
+} usb_ptp_device_info_t;
+
+/* Struct stored into usb_conv that keeps track of decoded device information 
+ *      Gets attached to *class_data in usb_conv */
+typedef struct _usb_ptp_conv_info_t {
+    guint32                flavor;
+    usb_ptp_device_info_t *device_info;
+    /*usb_ptp_object_info_t *object_info; NOT Implemened yet*/
+} usb_ptp_conv_info_t;
+
+/* Mask Definition for Value Strings */
+#define USB_PTP_FLAVOR_ALL       0x001
+#define USB_PTP_FLAVOR_ANDROID   0x002
+#define USB_PTP_FLAVOR_CANON     0x004
+#define USB_PTP_FLAVOR_CASIO     0x008
+#define USB_PTP_FLAVOR_KODAK     0x010
+#define USB_PTP_FLAVOR_FUJI      0x020
+#define USB_PTP_FLAVOR_MTP       0x040
+#define USB_PTP_FLAVOR_NIKON     0x080
+#define USB_PTP_FLAVOR_OLYMPUS   0x100
+
+static const value_string usb_ptp_container_type_vals[] = {
+    {USB_PTP_TYPE_CMD,      "Command Block"},
+    {USB_PTP_TYPE_DATA,     "Data Block"},
+    {USB_PTP_TYPE_RESPONSE, "Response Block"},
+    {USB_PTP_TYPE_EVENT,    "Event Block"},
+    {0, NULL}
+};
+
+/*
+ *
+ * SEMIAUTO-GENERATED CODE - The majority of these tables were auto-generated from tools/usb-ptp-extract-tables.pl
+ *
+ * NOTE: The tables contain additional information not in libgphoto, so you must hand merge the
+ *       output from the above to these tables.
+ *
+ */
+
+/* PTP_AC StorageInfo Access Capability */
+static const value_string_masked_t usb_ptp_ac_mvals[] = {
+    {USB_PTP_FLAVOR_ALL       , 0x0000, "ReadWrite"},
+    {USB_PTP_FLAVOR_ALL       , 0x0001, "ReadOnly"},
+    {USB_PTP_FLAVOR_ALL       , 0x0002, "ReadOnly_with_Object_Deletion"}
+};
+/* PTP_AT Association Types */
+static const value_string_masked_t usb_ptp_at_mvals[] = {
+    {USB_PTP_FLAVOR_ALL       , 0x0000, "Undefined"},
+    {USB_PTP_FLAVOR_ALL       , 0x0001, "GenericFolder"},
+    {USB_PTP_FLAVOR_ALL       , 0x0002, "Album"},
+    {USB_PTP_FLAVOR_ALL       , 0x0003, "TimeSequence"},
+    {USB_PTP_FLAVOR_ALL       , 0x0004, "HorizontalPanoramic"},
+    {USB_PTP_FLAVOR_ALL       , 0x0005, "VerticalPanoramic"},
+    {USB_PTP_FLAVOR_ALL       , 0x0006, "2DPanoramic"},
+    {USB_PTP_FLAVOR_ALL       , 0x0007, "AncillaryData"}
+};
+/* PTP_DPC Device Properties Codes */
+static const value_string_masked_t usb_ptp_dpc_mvals[] = {
+    {USB_PTP_FLAVOR_ALL       , 0x5000, "Undefined"},
+    {USB_PTP_FLAVOR_ALL       , 0x5001, "BatteryLevel"},
+    {USB_PTP_FLAVOR_ALL       , 0x5002, "FunctionalMode"},
+    {USB_PTP_FLAVOR_ALL       , 0x5003, "ImageSize"},
+    {USB_PTP_FLAVOR_ALL       , 0x5004, "CompressionSetting"},
+    {USB_PTP_FLAVOR_ALL       , 0x5005, "WhiteBalance"},
+    {USB_PTP_FLAVOR_ALL       , 0x5006, "RGBGain"},
+    {USB_PTP_FLAVOR_ALL       , 0x5007, "FNumber"},
+    {USB_PTP_FLAVOR_ALL       , 0x5008, "FocalLength"},
+    {USB_PTP_FLAVOR_ALL       , 0x5009, "FocusDistance"},
+    {USB_PTP_FLAVOR_ALL       , 0x500a, "FocusMode"},
+    {USB_PTP_FLAVOR_ALL       , 0x500b, "ExposureMeteringMode"},
+    {USB_PTP_FLAVOR_ALL       , 0x500c, "FlashMode"},
+    {USB_PTP_FLAVOR_ALL       , 0x500d, "ExposureTime"},
+    {USB_PTP_FLAVOR_ALL       , 0x500e, "ExposureProgramMode"},
+    {USB_PTP_FLAVOR_ALL       , 0x500f, "ExposureIndex"},
+    {USB_PTP_FLAVOR_ALL       , 0x5010, "ExposureBiasCompensation"},
+    {USB_PTP_FLAVOR_ALL       , 0x5011, "DateTime"},
+    {USB_PTP_FLAVOR_ALL       , 0x5012, "CaptureDelay"},
+    {USB_PTP_FLAVOR_ALL       , 0x5013, "StillCaptureMode"},
+    {USB_PTP_FLAVOR_ALL       , 0x5014, "Contrast"},
+    {USB_PTP_FLAVOR_ALL       , 0x5015, "Sharpness"},
+    {USB_PTP_FLAVOR_ALL       , 0x5016, "DigitalZoom"},
+    {USB_PTP_FLAVOR_ALL       , 0x5017, "EffectMode"},
+    {USB_PTP_FLAVOR_ALL       , 0x5018, "BurstNumber"},
+    {USB_PTP_FLAVOR_ALL       , 0x5019, "BurstInterval"},
+    {USB_PTP_FLAVOR_ALL       , 0x501a, "TimelapseNumber"},
+    {USB_PTP_FLAVOR_ALL       , 0x501b, "TimelapseInterval"},
+    {USB_PTP_FLAVOR_ALL       , 0x501c, "FocusMeteringMode"},
+    {USB_PTP_FLAVOR_ALL       , 0x501d, "UploadURL"},
+    {USB_PTP_FLAVOR_ALL       , 0x501e, "Artist"},
+    {USB_PTP_FLAVOR_ALL       , 0x501f, "CopyrightInfo"},
+    {USB_PTP_FLAVOR_ALL       , 0x5020, "SupportedStreams"},
+    {USB_PTP_FLAVOR_ALL       , 0x5021, "EnabledStreams"},
+    {USB_PTP_FLAVOR_ALL       , 0x5022, "VideoFormat"},
+    {USB_PTP_FLAVOR_ALL       , 0x5023, "VideoResolution"},
+    {USB_PTP_FLAVOR_ALL       , 0x5024, "VideoQuality"},
+    {USB_PTP_FLAVOR_ALL       , 0x5025, "VideoFrameRate"},
+    {USB_PTP_FLAVOR_ALL       , 0x5026, "VideoContrast"},
+    {USB_PTP_FLAVOR_ALL       , 0x5027, "VideoBrightness"},
+    {USB_PTP_FLAVOR_ALL       , 0x5028, "AudioFormat"},
+    {USB_PTP_FLAVOR_ALL       , 0x502a, "AudioSamplingRate"},
+    {USB_PTP_FLAVOR_ALL       , 0x502b, "AudioBitPerSample"},
+    {USB_PTP_FLAVOR_ALL       , 0x502c, "AudioVolume"},
+    {USB_PTP_FLAVOR_ALL       , 0x5029, "AudioBitrate"},
+    {USB_PTP_FLAVOR_ALL       , 0xd000, "EXTENSION"},
+    {USB_PTP_FLAVOR_KODAK     , 0xd001, "ColorTemperature"},
+    {USB_PTP_FLAVOR_CASIO     , 0xd001, "MONITOR"},
+    {USB_PTP_FLAVOR_CANON     , 0xd001, "BeepMode"},
+    {USB_PTP_FLAVOR_CANON     , 0xd002, "BatteryKind"},
+    {USB_PTP_FLAVOR_KODAK     , 0xd002, "DateTimeStampFormat"},
+    {USB_PTP_FLAVOR_CASIO     , 0xd002, "STORAGE"},
+    {USB_PTP_FLAVOR_CANON     , 0xd003, "BatteryStatus"},
+    {USB_PTP_FLAVOR_KODAK     , 0xd003, "BeepMode"},
+    {USB_PTP_FLAVOR_CANON     , 0xd004, "UILockType"},
+    {USB_PTP_FLAVOR_CASIO     , 0xd004, "UNKNOWN_1"},
+    {USB_PTP_FLAVOR_KODAK     , 0xd004, "VideoOut"},
+    {USB_PTP_FLAVOR_KODAK     , 0xd005, "PowerSaving"},
+    {USB_PTP_FLAVOR_CASIO     , 0xd005, "UNKNOWN_2"},
+    {USB_PTP_FLAVOR_CANON     , 0xd005, "CameraMode"},
+    {USB_PTP_FLAVOR_KODAK     , 0xd006, "UI_Language"},
+    {USB_PTP_FLAVOR_CANON     , 0xd006, "ImageQuality"},
+    {USB_PTP_FLAVOR_CASIO     , 0xd007, "UNKNOWN_3"},
+    {USB_PTP_FLAVOR_CANON     , 0xd007, "FullViewFileFormat"},
+    {USB_PTP_FLAVOR_CANON     , 0xd008, "ImageSize"},
+    {USB_PTP_FLAVOR_CASIO     , 0xd008, "RECORD_LIGHT"},
+    {USB_PTP_FLAVOR_CANON     , 0xd009, "SelfTime"},
+    {USB_PTP_FLAVOR_CASIO     , 0xd009, "UNKNOWN_4"},
+    {USB_PTP_FLAVOR_CASIO     , 0xd00a, "UNKNOWN_5"},
+    {USB_PTP_FLAVOR_CANON     , 0xd00a, "FlashMode"},
+    {USB_PTP_FLAVOR_CANON     , 0xd00b, "Beep"},
+    {USB_PTP_FLAVOR_CASIO     , 0xd00b, "MOVIE_MODE"},
+    {USB_PTP_FLAVOR_CANON     , 0xd00c, "ShootingMode"},
+    {USB_PTP_FLAVOR_CASIO     , 0xd00c, "HD_SETTING"},
+    {USB_PTP_FLAVOR_CASIO     , 0xd00d, "HS_SETTING"},
+    {USB_PTP_FLAVOR_CANON     , 0xd00d, "ImageMode"},
+    {USB_PTP_FLAVOR_CANON     , 0xd00e, "DriveMode"},
+    {USB_PTP_FLAVOR_CASIO     , 0xd00f, "CS_HIGH_SPEED"},
+    {USB_PTP_FLAVOR_CANON     , 0xd00f, "EZoom"},
+    {USB_PTP_FLAVOR_CASIO     , 0xd010, "CS_UPPER_LIMIT"},
+    {USB_PTP_FLAVOR_CANON     , 0xd010, "MeteringMode"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd010, "ShootingBank"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd011, "ShootingBankNameA"},
+    {USB_PTP_FLAVOR_CANON     , 0xd011, "AFDistance"},
+    {USB_PTP_FLAVOR_CASIO     , 0xd011, "CS_SHOT"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd012, "ShootingBankNameB"},
+    {USB_PTP_FLAVOR_CANON     , 0xd012, "FocusingPoint"},
+    {USB_PTP_FLAVOR_CASIO     , 0xd012, "UNKNOWN_6"},
+    {USB_PTP_FLAVOR_CANON     , 0xd013, "WhiteBalance"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd013, "ShootingBankNameC"},
+    {USB_PTP_FLAVOR_CASIO     , 0xd013, "UNKNOWN_7"},
+    {USB_PTP_FLAVOR_CANON     , 0xd014, "SlowShutterSetting"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd014, "ShootingBankNameD"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd015, "ResetBank0"},
+    {USB_PTP_FLAVOR_CANON     , 0xd015, "AFMode"},
+    {USB_PTP_FLAVOR_CASIO     , 0xd015, "UNKNOWN_8"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd016, "RawCompression"},
+    {USB_PTP_FLAVOR_CANON     , 0xd016, "ImageStabilization"},
+    {USB_PTP_FLAVOR_FUJI      , 0xd017, "ColorTemperature"},
+    {USB_PTP_FLAVOR_CANON     , 0xd017, "Contrast"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd017, "WhiteBalanceAutoBias"},
+    {USB_PTP_FLAVOR_CASIO     , 0xd017, "UNKNOWN_9"},
+    {USB_PTP_FLAVOR_CANON     , 0xd018, "ColorGain"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd018, "WhiteBalanceTungstenBias"},
+    {USB_PTP_FLAVOR_CASIO     , 0xd018, "UNKNOWN_10"},
+    {USB_PTP_FLAVOR_FUJI      , 0xd018, "Quality"},
+    {USB_PTP_FLAVOR_CASIO     , 0xd019, "UNKNOWN_11"},
+    {USB_PTP_FLAVOR_CANON     , 0xd019, "Sharpness"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd019, "WhiteBalanceFluorescentBias"},
+    {USB_PTP_FLAVOR_CANON     , 0xd01a, "Sensitivity"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd01a, "WhiteBalanceDaylightBias"},
+    {USB_PTP_FLAVOR_CASIO     , 0xd01a, "UNKNOWN_12"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd01b, "WhiteBalanceFlashBias"},
+    {USB_PTP_FLAVOR_CASIO     , 0xd01b, "UNKNOWN_13"},
+    {USB_PTP_FLAVOR_CANON     , 0xd01b, "ParameterSet"},
+    {USB_PTP_FLAVOR_CASIO     , 0xd01c, "UNKNOWN_14"},
+    {USB_PTP_FLAVOR_CANON     , 0xd01c, "ISOSpeed"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd01c, "WhiteBalanceCloudyBias"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd01d, "WhiteBalanceShadeBias"},
+    {USB_PTP_FLAVOR_CASIO     , 0xd01d, "UNKNOWN_15"},
+    {USB_PTP_FLAVOR_CANON     , 0xd01d, "Aperture"},
+    {USB_PTP_FLAVOR_CANON     , 0xd01e, "ShutterSpeed"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd01e, "WhiteBalanceColorTemperature"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd01f, "WhiteBalancePresetNo"},
+    {USB_PTP_FLAVOR_CANON     , 0xd01f, "ExpCompensation"},
+    {USB_PTP_FLAVOR_CANON     , 0xd020, "FlashCompensation"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd020, "WhiteBalancePresetName0"},
+    {USB_PTP_FLAVOR_CASIO     , 0xd020, "UNKNOWN_16"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd021, "WhiteBalancePresetName1"},
+    {USB_PTP_FLAVOR_CANON     , 0xd021, "AEBExposureCompensation"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd022, "WhiteBalancePresetName2"},
+    {USB_PTP_FLAVOR_CANON     , 0xd023, "AvOpen"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd023, "WhiteBalancePresetName3"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd024, "WhiteBalancePresetName4"},
+    {USB_PTP_FLAVOR_CANON     , 0xd024, "AvMax"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd025, "WhiteBalancePresetVal0"},
+    {USB_PTP_FLAVOR_CANON     , 0xd025, "FocalLength"},
+    {USB_PTP_FLAVOR_CANON     , 0xd026, "FocalLengthTele"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd026, "WhiteBalancePresetVal1"},
+    {USB_PTP_FLAVOR_CANON     , 0xd027, "FocalLengthWide"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd027, "WhiteBalancePresetVal2"},
+    {USB_PTP_FLAVOR_CANON     , 0xd028, "FocalLengthDenominator"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd028, "WhiteBalancePresetVal3"},
+    {USB_PTP_FLAVOR_CANON     , 0xd029, "CaptureTransferMode"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd029, "WhiteBalancePresetVal4"},
+    {USB_PTP_FLAVOR_CANON     , 0xd02a, "Zoom"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd02a, "ImageSharpening"},
+    {USB_PTP_FLAVOR_CANON     , 0xd02b, "NamePrefix"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd02b, "ToneCompensation"},
+    {USB_PTP_FLAVOR_CANON     , 0xd02c, "SizeQualityMode"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd02c, "ColorModel"},
+    {USB_PTP_FLAVOR_CANON     , 0xd02d, "SupportedThumbSize"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd02d, "HueAdjustment"},
+    {USB_PTP_FLAVOR_CANON     , 0xd02e, "SizeOfOutputDataFromCamera"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd02e, "NonCPULensDataFocalLength"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd02f, "NonCPULensDataMaximumAperture"},
+    {USB_PTP_FLAVOR_CANON     , 0xd02f, "SizeOfInputDataToCamera"},
+    {USB_PTP_FLAVOR_CANON     , 0xd030, "RemoteAPIVersion"},
+    {USB_PTP_FLAVOR_CASIO     , 0xd030, "UNKNOWN_17"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd030, "ShootingMode"},
+    {USB_PTP_FLAVOR_CANON     , 0xd031, "FirmwareVersion"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd031, "JPEG_Compression_Policy"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd032, "ColorSpace"},
+    {USB_PTP_FLAVOR_CANON     , 0xd032, "CameraModel"},
+    {USB_PTP_FLAVOR_CANON     , 0xd033, "CameraOwner"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd033, "AutoDXCrop"},
+    {USB_PTP_FLAVOR_CANON     , 0xd034, "UnixTime"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd034, "FlickerReduction"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd035, "RemoteMode"},
+    {USB_PTP_FLAVOR_CANON     , 0xd035, "CameraBodyID"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd036, "VideoMode"},
+    {USB_PTP_FLAVOR_CANON     , 0xd036, "CameraOutput"},
+    {USB_PTP_FLAVOR_CANON     , 0xd037, "DispAv"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd037, "EffectMode"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd038, "1_Mode"},
+    {USB_PTP_FLAVOR_CANON     , 0xd038, "AvOpenApex"},
+    {USB_PTP_FLAVOR_CANON     , 0xd039, "DZoomMagnification"},
+    {USB_PTP_FLAVOR_CANON     , 0xd03a, "MlSpotPos"},
+    {USB_PTP_FLAVOR_CANON     , 0xd03b, "DispAvMax"},
+    {USB_PTP_FLAVOR_CANON     , 0xd03c, "AvMaxApex"},
+    {USB_PTP_FLAVOR_CANON     , 0xd03d, "EZoomStartPosition"},
+    {USB_PTP_FLAVOR_CANON     , 0xd03e, "FocalLengthOfTele"},
+    {USB_PTP_FLAVOR_CANON     , 0xd03f, "EZoomSizeOfTele"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd040, "CSMMenuBankSelect"},
+    {USB_PTP_FLAVOR_CANON     , 0xd040, "PhotoEffect"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd041, "MenuBankNameA"},
+    {USB_PTP_FLAVOR_CANON     , 0xd041, "AssistLight"},
+    {USB_PTP_FLAVOR_CANON     , 0xd042, "FlashQuantityCount"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd042, "MenuBankNameB"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd043, "MenuBankNameC"},
+    {USB_PTP_FLAVOR_CANON     , 0xd043, "RotationAngle"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd044, "MenuBankNameD"},
+    {USB_PTP_FLAVOR_CANON     , 0xd044, "RotationScene"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd045, "ResetBank"},
+    {USB_PTP_FLAVOR_CANON     , 0xd045, "EventEmulateMode"},
+    {USB_PTP_FLAVOR_CANON     , 0xd046, "DPOFVersion"},
+    {USB_PTP_FLAVOR_CANON     , 0xd047, "TypeOfSupportedSlideShow"},
+    {USB_PTP_FLAVOR_CANON     , 0xd048, "AverageFilesizes"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd048, "A1AFCModePriority"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd049, "A2AFSModePriority"},
+    {USB_PTP_FLAVOR_CANON     , 0xd049, "ModelID"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd04a, "A3GroupDynamicAF"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd04b, "A4AFActivation"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd04c, "FocusAreaIllumManualFocus"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd04d, "FocusAreaIllumContinuous"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd04e, "FocusAreaIllumWhenSelected"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd04f, "FocusAreaWrap"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd050, "VerticalAFON"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd051, "AFLockOn"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd052, "FocusAreaZone"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd053, "EnableCopyright"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd054, "ISOAuto"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd055, "EVISOStep"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd056, "EVStep"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd057, "EVStepExposureComp"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd058, "ExposureCompensation"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd059, "CenterWeightArea"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd05a, "ExposureBaseMatrix"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd05b, "ExposureBaseCenter"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd05c, "ExposureBaseSpot"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd05d, "LiveViewAFArea"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd05e, "AELockMode"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd05f, "AELAFLMode"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd061, "LiveViewAFFocus"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd062, "MeterOff"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd063, "SelfTimer"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd064, "MonitorOff"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd065, "ImgConfTime"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd066, "AutoOffTimers"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd067, "AngleLevel"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd068, "D1ShootingSpeed"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd069, "D2MaximumShots"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd06a, "ExposureDelayMode"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd06b, "LongExposureNoiseReduction"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd06c, "FileNumberSequence"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd06d, "ControlPanelFinderRearControl"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd06e, "ControlPanelFinderViewfinder"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd06f, "D7Illumination"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd070, "NrHighISO"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd071, "SHSET_CH_GUID_DISP"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd072, "ArtistName"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd073, "CopyrightInfo"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd074, "FlashSyncSpeed"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd075, "FlashShutterSpeed"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd076, "E3AAFlashMode"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd077, "E4ModelingFlash"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd078, "BracketSet"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd079, "E6ManualModeBracketing"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd07a, "BracketOrder"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd07b, "E8AutoBracketSelection"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd07c, "BracketingSet"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd080, "F1CenterButtonShootingMode"},
+    {USB_PTP_FLAVOR_CASIO     , 0xd080, "UNKNOWN_18"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd081, "CenterButtonPlaybackMode"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd082, "F2Multiselector"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd083, "F3PhotoInfoPlayback"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd084, "F4AssignFuncButton"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd085, "F5CustomizeCommDials"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd086, "ReverseCommandDial"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd087, "ApertureSetting"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd088, "MenusAndPlayback"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd089, "F6ButtonsAndDials"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd08a, "NoCFCard"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd08b, "CenterButtonZoomRatio"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd08c, "FunctionButton2"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd08d, "AFAreaPoint"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd08e, "NormalAFOn"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd08f, "CleanImageSensor"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd090, "ImageCommentString"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd091, "ImageCommentEnable"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd092, "ImageRotation"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd093, "ManualSetLensNo"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd0a0, "MovScreenSize"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd0a1, "MovVoice"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd0a2, "MovMicrophone"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd0a3, "MovFileSlot"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd0a4, "MovRecProhibitCondition"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd0a6, "ManualMovieSetting"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd0a7, "MovQuality"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd0b2, "LiveViewScreenDisplaySetting"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd0b3, "MonitorOffDelay"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd0c0, "Bracketing"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd0c1, "AutoExposureBracketStep"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd0c2, "AutoExposureBracketProgram"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd0c3, "AutoExposureBracketCount"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd0c4, "WhiteBalanceBracketStep"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd0c5, "WhiteBalanceBracketProgram"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd0e0, "LensID"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd0e1, "LensSort"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd0e2, "LensType"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd0e3, "FocalLengthMin"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd0e4, "FocalLengthMax"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd0e5, "MaxApAtMinFocalLength"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd0e6, "MaxApAtMaxFocalLength"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd0f0, "FinderISODisp"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd0f2, "AutoOffPhoto"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd0f3, "AutoOffMenu"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd0f4, "AutoOffInfo"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd0f5, "SelfTimerShootNum"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd0f7, "VignetteCtrl"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd0f8, "AutoDistortionControl"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd0f9, "SceneMode"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd0fd, "SceneMode2"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd0fe, "SelfTimerInterval"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd100, "ExposureTime"},
+    {USB_PTP_FLAVOR_CANON     , 0xd101, "Aperture"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd101, "ACPower"},
+    {USB_PTP_FLAVOR_MTP       , 0xd101, "SecureTime"},
+    {USB_PTP_FLAVOR_OLYMPUS   , 0xd102, "ResolutionMode"},
+    {USB_PTP_FLAVOR_MTP       , 0xd102, "DeviceCertificate"},
+    {USB_PTP_FLAVOR_CANON     , 0xd102, "ShutterSpeed"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd102, "WarningStatus"},
+    {USB_PTP_FLAVOR_CANON     , 0xd103, "ISOSpeed"},
+    {USB_PTP_FLAVOR_OLYMPUS   , 0xd103, "FocusPriority"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd103, "MaximumShots"},
+    {USB_PTP_FLAVOR_MTP       , 0xd103, "RevocationInfo"},
+    {USB_PTP_FLAVOR_OLYMPUS   , 0xd104, "DriveMode"},
+    {USB_PTP_FLAVOR_CANON     , 0xd104, "ExpCompensation"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd104, "AFLockStatus"},
+    {USB_PTP_FLAVOR_CANON     , 0xd105, "AutoExposureMode"},
+    {USB_PTP_FLAVOR_OLYMPUS   , 0xd105, "DateTimeFormat"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd105, "AELockStatus"},
+    {USB_PTP_FLAVOR_CANON     , 0xd106, "DriveMode"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd106, "FVLockStatus"},
+    {USB_PTP_FLAVOR_OLYMPUS   , 0xd106, "ExposureBiasStep"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd107, "AutofocusLCDTopMode2"},
+    {USB_PTP_FLAVOR_CANON     , 0xd107, "MeteringMode"},
+    {USB_PTP_FLAVOR_OLYMPUS   , 0xd107, "WBMode"},
+    {USB_PTP_FLAVOR_CANON     , 0xd108, "FocusMode"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd108, "AutofocusArea"},
+    {USB_PTP_FLAVOR_OLYMPUS   , 0xd108, "OneTouchWB"},
+    {USB_PTP_FLAVOR_OLYMPUS   , 0xd109, "ManualWB"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd109, "FlexibleProgram"},
+    {USB_PTP_FLAVOR_CANON     , 0xd109, "WhiteBalance"},
+    {USB_PTP_FLAVOR_OLYMPUS   , 0xd10a, "ManualWBRBBias"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd10a, "LightMeter"},
+    {USB_PTP_FLAVOR_CANON     , 0xd10a, "ColorTemperature"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd10b, "RecordingMedia"},
+    {USB_PTP_FLAVOR_CANON     , 0xd10b, "WhiteBalanceAdjustA"},
+    {USB_PTP_FLAVOR_OLYMPUS   , 0xd10b, "CustomWB"},
+    {USB_PTP_FLAVOR_OLYMPUS   , 0xd10c, "CustomWBValue"},
+    {USB_PTP_FLAVOR_CANON     , 0xd10c, "WhiteBalanceAdjustB"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd10c, "USBSpeed"},
+    {USB_PTP_FLAVOR_CANON     , 0xd10d, "WhiteBalanceXA"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd10d, "CCDNumber"},
+    {USB_PTP_FLAVOR_OLYMPUS   , 0xd10d, "ExposureTimeEx"},
+    {USB_PTP_FLAVOR_OLYMPUS   , 0xd10e, "BulbMode"},
+    {USB_PTP_FLAVOR_CANON     , 0xd10e, "WhiteBalanceXB"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd10e, "CameraOrientation"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd10f, "GroupPtnType"},
+    {USB_PTP_FLAVOR_OLYMPUS   , 0xd10f, "AntiMirrorMode"},
+    {USB_PTP_FLAVOR_CANON     , 0xd10f, "ColorSpace"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd110, "FNumberLock"},
+    {USB_PTP_FLAVOR_CANON     , 0xd110, "PictureStyle"},
+    {USB_PTP_FLAVOR_OLYMPUS   , 0xd110, "AEBracketingFrame"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd111, "ExposureApertureLock"},
+    {USB_PTP_FLAVOR_CANON     , 0xd111, "BatteryPower"},
+    {USB_PTP_FLAVOR_OLYMPUS   , 0xd111, "AEBracketingStep"},
+    {USB_PTP_FLAVOR_CANON     , 0xd112, "BatterySelect"},
+    {USB_PTP_FLAVOR_OLYMPUS   , 0xd112, "WBBracketingRBFrame"},
+    {USB_PTP_FLAVOR_OLYMPUS   , 0xd112, "WBBracketingFrame"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd112, "TVLockSetting"},
+    {USB_PTP_FLAVOR_CANON     , 0xd113, "CameraTime"},
+    {USB_PTP_FLAVOR_OLYMPUS   , 0xd113, "WBBracketingRBRange"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd113, "AVLockSetting"},
+    {USB_PTP_FLAVOR_OLYMPUS   , 0xd114, "WBBracketingGMFrame"},
+    {USB_PTP_FLAVOR_CANON     , 0xd114, "AutoPowerOff"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd114, "IllumSetting"},
+    {USB_PTP_FLAVOR_OLYMPUS   , 0xd115, "WBBracketingGMRange"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd115, "FocusPointBright"},
+    {USB_PTP_FLAVOR_CANON     , 0xd115, "Owner"},
+    {USB_PTP_FLAVOR_CANON     , 0xd116, "ModelID"},
+    {USB_PTP_FLAVOR_OLYMPUS   , 0xd118, "FLBracketingFrame"},
+    {USB_PTP_FLAVOR_OLYMPUS   , 0xd119, "FLBracketingStep"},
+    {USB_PTP_FLAVOR_CANON     , 0xd119, "PTPExtensionVersion"},
+    {USB_PTP_FLAVOR_CANON     , 0xd11a, "DPOFVersion"},
+    {USB_PTP_FLAVOR_OLYMPUS   , 0xd11a, "FlashBiasCompensation"},
+    {USB_PTP_FLAVOR_CANON     , 0xd11b, "AvailableShots"},
+    {USB_PTP_FLAVOR_OLYMPUS   , 0xd11b, "ManualFocusMode"},
+    {USB_PTP_FLAVOR_CANON     , 0xd11c, "CaptureDestination"},
+    {USB_PTP_FLAVOR_OLYMPUS   , 0xd11d, "RawSaveMode"},
+    {USB_PTP_FLAVOR_CANON     , 0xd11d, "BracketMode"},
+    {USB_PTP_FLAVOR_CANON     , 0xd11e, "CurrentStorage"},
+    {USB_PTP_FLAVOR_OLYMPUS   , 0xd11e, "AUXLightMode"},
+    {USB_PTP_FLAVOR_OLYMPUS   , 0xd11f, "LensSinkMode"},
+    {USB_PTP_FLAVOR_CANON     , 0xd11f, "CurrentFolder"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd120, "ExternalFlashAttached"},
+    {USB_PTP_FLAVOR_OLYMPUS   , 0xd120, "BeepStatus"},
+    {USB_PTP_FLAVOR_CANON     , 0xd120, "ImageFormat"},
+    {USB_PTP_FLAVOR_CANON     , 0xd121, "ImageFormatCF"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd121, "ExternalFlashStatus"},
+    {USB_PTP_FLAVOR_CANON     , 0xd122, "ImageFormatSD"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd122, "ExternalFlashSort"},
+    {USB_PTP_FLAVOR_OLYMPUS   , 0xd122, "ColorSpace"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd123, "ExternalFlashMode"},
+    {USB_PTP_FLAVOR_CANON     , 0xd123, "ImageFormatExtHD"},
+    {USB_PTP_FLAVOR_OLYMPUS   , 0xd123, "ColorMatching"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd124, "ExternalFlashCompensation"},
+    {USB_PTP_FLAVOR_OLYMPUS   , 0xd124, "Saturation"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd125, "NewExternalFlashMode"},
+    {USB_PTP_FLAVOR_OLYMPUS   , 0xd126, "NoiseReductionPattern"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd126, "FlashExposureCompensation"},
+    {USB_PTP_FLAVOR_OLYMPUS   , 0xd127, "NoiseReductionRandom"},
+    {USB_PTP_FLAVOR_OLYMPUS   , 0xd129, "ShadingMode"},
+    {USB_PTP_FLAVOR_OLYMPUS   , 0xd12a, "ISOBoostMode"},
+    {USB_PTP_FLAVOR_OLYMPUS   , 0xd12b, "ExposureIndexBiasStep"},
+    {USB_PTP_FLAVOR_OLYMPUS   , 0xd12c, "FilterEffect"},
+    {USB_PTP_FLAVOR_OLYMPUS   , 0xd12d, "ColorTune"},
+    {USB_PTP_FLAVOR_OLYMPUS   , 0xd12e, "Language"},
+    {USB_PTP_FLAVOR_OLYMPUS   , 0xd12f, "LanguageCode"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd130, "HDRMode"},
+    {USB_PTP_FLAVOR_CANON     , 0xd130, "CompressionS"},
+    {USB_PTP_FLAVOR_OLYMPUS   , 0xd130, "RecviewMode"},
+    {USB_PTP_FLAVOR_CANON     , 0xd131, "CompressionM1"},
+    {USB_PTP_FLAVOR_MTP       , 0xd131, "PlaysForSureID"},
+    {USB_PTP_FLAVOR_OLYMPUS   , 0xd131, "SleepTime"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd131, "HDRHighDynamic"},
+    {USB_PTP_FLAVOR_CANON     , 0xd132, "CompressionM2"},
+    {USB_PTP_FLAVOR_MTP       , 0xd132, "ZUNE_UNKNOWN2"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd132, "HDRSmoothing"},
+    {USB_PTP_FLAVOR_OLYMPUS   , 0xd132, "ManualWBGMBias"},
+    {USB_PTP_FLAVOR_CANON     , 0xd133, "CompressionL"},
+    {USB_PTP_FLAVOR_OLYMPUS   , 0xd135, "AELAFLMode"},
+    {USB_PTP_FLAVOR_OLYMPUS   , 0xd136, "AELButtonStatus"},
+    {USB_PTP_FLAVOR_OLYMPUS   , 0xd137, "CompressionSettingEx"},
+    {USB_PTP_FLAVOR_CANON     , 0xd138, "AEModeDial"},
+    {USB_PTP_FLAVOR_OLYMPUS   , 0xd139, "ToneMode"},
+    {USB_PTP_FLAVOR_CANON     , 0xd139, "AEModeCustom"},
+    {USB_PTP_FLAVOR_CANON     , 0xd13a, "MirrorUpSetting"},
+    {USB_PTP_FLAVOR_OLYMPUS   , 0xd13a, "GradationMode"},
+    {USB_PTP_FLAVOR_CANON     , 0xd13b, "HighlightTonePriority"},
+    {USB_PTP_FLAVOR_OLYMPUS   , 0xd13b, "DevelopMode"},
+    {USB_PTP_FLAVOR_OLYMPUS   , 0xd13c, "ExtendInnerFlashMode"},
+    {USB_PTP_FLAVOR_CANON     , 0xd13c, "AFSelectFocusArea"},
+    {USB_PTP_FLAVOR_CANON     , 0xd13d, "HDRSetting"},
+    {USB_PTP_FLAVOR_OLYMPUS   , 0xd13d, "OutputDeviceMode"},
+    {USB_PTP_FLAVOR_OLYMPUS   , 0xd13e, "LiveViewMode"},
+    {USB_PTP_FLAVOR_CANON     , 0xd140, "PCWhiteBalance1"},
+    {USB_PTP_FLAVOR_OLYMPUS   , 0xd140, "LCDBacklight"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd140, "OptimizeImage"},
+    {USB_PTP_FLAVOR_OLYMPUS   , 0xd141, "CustomDevelop"},
+    {USB_PTP_FLAVOR_CANON     , 0xd141, "PCWhiteBalance2"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd142, "Saturation"},
+    {USB_PTP_FLAVOR_OLYMPUS   , 0xd142, "GradationAutoBias"},
+    {USB_PTP_FLAVOR_CANON     , 0xd142, "PCWhiteBalance3"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd143, "BW_FillerEffect"},
+    {USB_PTP_FLAVOR_OLYMPUS   , 0xd143, "FlashRCMode"},
+    {USB_PTP_FLAVOR_CANON     , 0xd143, "PCWhiteBalance4"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd144, "BW_Sharpness"},
+    {USB_PTP_FLAVOR_CANON     , 0xd144, "PCWhiteBalance5"},
+    {USB_PTP_FLAVOR_OLYMPUS   , 0xd144, "FlashRCGroupValue"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd145, "BW_Contrast"},
+    {USB_PTP_FLAVOR_OLYMPUS   , 0xd145, "FlashRCChannelValue"},
+    {USB_PTP_FLAVOR_CANON     , 0xd145, "MWhiteBalance"},
+    {USB_PTP_FLAVOR_CANON     , 0xd146, "MWhiteBalanceEx"},
+    {USB_PTP_FLAVOR_OLYMPUS   , 0xd146, "FlashRCFPMode"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd146, "BW_Setting_Type"},
+    {USB_PTP_FLAVOR_OLYMPUS   , 0xd147, "FlashRCPhotoChromicMode"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd148, "Slot2SaveMode"},
+    {USB_PTP_FLAVOR_OLYMPUS   , 0xd148, "FlashRCPhotoChromicBias"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd149, "RawBitMode"},
+    {USB_PTP_FLAVOR_OLYMPUS   , 0xd149, "FlashRCPhotoChromicManualBias"},
+    {USB_PTP_FLAVOR_OLYMPUS   , 0xd14a, "FlashRCQuantityLightLevel"},
+    {USB_PTP_FLAVOR_OLYMPUS   , 0xd14b, "FocusMeteringValue"},
+    {USB_PTP_FLAVOR_OLYMPUS   , 0xd14c, "ISOBracketingFrame"},
+    {USB_PTP_FLAVOR_CANON     , 0xd14d, "UnknownPropD14D"},
+    {USB_PTP_FLAVOR_OLYMPUS   , 0xd14d, "ISOBracketingStep"},
+    {USB_PTP_FLAVOR_OLYMPUS   , 0xd14e, "BulbMFMode"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd14e, "ActiveDLighting"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd14f, "FlourescentType"},
+    {USB_PTP_FLAVOR_OLYMPUS   , 0xd14f, "BurstFPSValue"},
+    {USB_PTP_FLAVOR_CANON     , 0xd150, "PictureStyleStandard"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd150, "TuneColourTemperature"},
+    {USB_PTP_FLAVOR_OLYMPUS   , 0xd150, "ISOAutoBaseValue"},
+    {USB_PTP_FLAVOR_CANON     , 0xd151, "PictureStylePortrait"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd151, "TunePreset0"},
+    {USB_PTP_FLAVOR_OLYMPUS   , 0xd151, "ISOAutoMaxValue"},
+    {USB_PTP_FLAVOR_OLYMPUS   , 0xd152, "BulbLimiterValue"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd152, "TunePreset1"},
+    {USB_PTP_FLAVOR_CANON     , 0xd152, "PictureStyleLandscape"},
+    {USB_PTP_FLAVOR_OLYMPUS   , 0xd153, "DPIMode"},
+    {USB_PTP_FLAVOR_CANON     , 0xd153, "PictureStyleNeutral"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd153, "TunePreset2"},
+    {USB_PTP_FLAVOR_OLYMPUS   , 0xd154, "DPICustomValue"},
+    {USB_PTP_FLAVOR_CANON     , 0xd154, "PictureStyleFaithful"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd154, "TunePreset3"},
+    {USB_PTP_FLAVOR_CANON     , 0xd155, "PictureStyleBlackWhite"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd155, "TunePreset4"},
+    {USB_PTP_FLAVOR_OLYMPUS   , 0xd155, "ResolutionValueSetting"},
+    {USB_PTP_FLAVOR_CANON     , 0xd156, "PictureStyleAuto"},
+    {USB_PTP_FLAVOR_OLYMPUS   , 0xd157, "AFTargetSize"},
+    {USB_PTP_FLAVOR_OLYMPUS   , 0xd158, "LightSensorMode"},
+    {USB_PTP_FLAVOR_OLYMPUS   , 0xd159, "AEBracket"},
+    {USB_PTP_FLAVOR_OLYMPUS   , 0xd15a, "WBRBBracket"},
+    {USB_PTP_FLAVOR_OLYMPUS   , 0xd15b, "WBGMBracket"},
+    {USB_PTP_FLAVOR_OLYMPUS   , 0xd15c, "FlashBracket"},
+    {USB_PTP_FLAVOR_OLYMPUS   , 0xd15d, "ISOBracket"},
+    {USB_PTP_FLAVOR_OLYMPUS   , 0xd15e, "MyModeStatus"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd160, "BeepOff"},
+    {USB_PTP_FLAVOR_CANON     , 0xd160, "PictureStyleUserSet1"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd161, "AutofocusMode"},
+    {USB_PTP_FLAVOR_CANON     , 0xd161, "PictureStyleUserSet2"},
+    {USB_PTP_FLAVOR_CANON     , 0xd162, "PictureStyleUserSet3"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd163, "AFAssist"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd164, "PADVPMode"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd165, "ImageReview"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd166, "AFAreaIllumination"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd167, "FlashMode"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd168, "FlashCommanderMode"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd169, "FlashSign"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd16a, "ISO_Auto"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd16b, "RemoteTimeout"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd16c, "GridDisplay"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd16d, "FlashModeManualPower"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd16e, "FlashModeCommanderPower"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd16f, "AutoFP"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd170, "DateImprintSetting"},
+    {USB_PTP_FLAVOR_CANON     , 0xd170, "PictureStyleParam1"},
+    {USB_PTP_FLAVOR_CANON     , 0xd171, "PictureStyleParam2"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd171, "DateCounterSelect"},
+    {USB_PTP_FLAVOR_CANON     , 0xd172, "PictureStyleParam3"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd172, "DateCountData"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd173, "DateCountDisplaySetting"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd174, "RangeFinderSetting"},
+    {USB_PTP_FLAVOR_CANON     , 0xd178, "HighISOSettingNoiseReduction"},
+    {USB_PTP_FLAVOR_CANON     , 0xd179, "MovieServoAF"},
+    {USB_PTP_FLAVOR_CANON     , 0xd17a, "ContinuousAFValid"},
+    {USB_PTP_FLAVOR_CANON     , 0xd17b, "Attenuator"},
+    {USB_PTP_FLAVOR_CANON     , 0xd17c, "UTCTime"},
+    {USB_PTP_FLAVOR_CANON     , 0xd17d, "Timezone"},
+    {USB_PTP_FLAVOR_CANON     , 0xd17e, "Summertime"},
+    {USB_PTP_FLAVOR_CANON     , 0xd17f, "FlavorLUTParams"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd180, "CSMMenu"},
+    {USB_PTP_FLAVOR_CANON     , 0xd180, "CustomFunc1"},
+    {USB_PTP_FLAVOR_MTP       , 0xd181, "Zune_UnknownVersion"},
+    {USB_PTP_FLAVOR_MTP       , 0xd181, "ZUNE_UNKNOWN1"},
+    {USB_PTP_FLAVOR_CANON     , 0xd181, "CustomFunc2"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd181, "WarningDisplay"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd182, "BatteryCellKind"},
+    {USB_PTP_FLAVOR_CANON     , 0xd182, "CustomFunc3"},
+    {USB_PTP_FLAVOR_CANON     , 0xd183, "CustomFunc4"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd183, "ISOAutoHiLimit"},
+    {USB_PTP_FLAVOR_CANON     , 0xd184, "CustomFunc5"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd184, "DynamicAFArea"},
+    {USB_PTP_FLAVOR_CANON     , 0xd185, "CustomFunc6"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd186, "ContinuousSpeedHigh"},
+    {USB_PTP_FLAVOR_CANON     , 0xd186, "CustomFunc7"},
+    {USB_PTP_FLAVOR_CANON     , 0xd187, "CustomFunc8"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd187, "InfoDispSetting"},
+    {USB_PTP_FLAVOR_CANON     , 0xd188, "CustomFunc9"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd189, "PreviewButton"},
+    {USB_PTP_FLAVOR_CANON     , 0xd189, "CustomFunc10"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd18a, "PreviewButton2"},
+    {USB_PTP_FLAVOR_CANON     , 0xd18a, "CustomFunc11"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd18b, "AEAFLockButton2"},
+    {USB_PTP_FLAVOR_CANON     , 0xd18b, "CustomFunc12"},
+    {USB_PTP_FLAVOR_CANON     , 0xd18c, "CustomFunc13"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd18d, "IndicatorDisp"},
+    {USB_PTP_FLAVOR_CANON     , 0xd18d, "CustomFunc14"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd18e, "CellKindPriority"},
+    {USB_PTP_FLAVOR_CANON     , 0xd18e, "CustomFunc15"},
+    {USB_PTP_FLAVOR_CANON     , 0xd18f, "CustomFunc16"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd190, "BracketingFramesAndSteps"},
+    {USB_PTP_FLAVOR_CANON     , 0xd190, "CustomFunc17"},
+    {USB_PTP_FLAVOR_CANON     , 0xd191, "CustomFunc18"},
+    {USB_PTP_FLAVOR_CANON     , 0xd192, "CustomFunc19"},
+    {USB_PTP_FLAVOR_CANON     , 0xd193, "InnerDevelop"},
+    {USB_PTP_FLAVOR_CANON     , 0xd194, "MultiAspect"},
+    {USB_PTP_FLAVOR_CANON     , 0xd195, "MovieSoundRecord"},
+    {USB_PTP_FLAVOR_CANON     , 0xd196, "MovieRecordVolume"},
+    {USB_PTP_FLAVOR_CANON     , 0xd197, "WindCut"},
+    {USB_PTP_FLAVOR_CANON     , 0xd198, "ExtenderType"},
+    {USB_PTP_FLAVOR_CANON     , 0xd199, "OLCInfoVersion"},
+    {USB_PTP_FLAVOR_CANON     , 0xd19a, "UnknownPropD19A"},
+    {USB_PTP_FLAVOR_CANON     , 0xd19c, "UnknownPropD19C"},
+    {USB_PTP_FLAVOR_CANON     , 0xd19d, "UnknownPropD19D"},
+    {USB_PTP_FLAVOR_CANON     , 0xd1a0, "CustomFuncEx"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd1a0, "LiveViewMode"},
+    {USB_PTP_FLAVOR_CANON     , 0xd1a1, "MyMenu"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd1a1, "LiveViewDriveMode"},
+    {USB_PTP_FLAVOR_CANON     , 0xd1a2, "MyMenuList"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd1a2, "LiveViewStatus"},
+    {USB_PTP_FLAVOR_CANON     , 0xd1a3, "WftStatus"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd1a3, "LiveViewImageZoomRatio"},
+    {USB_PTP_FLAVOR_CANON     , 0xd1a4, "WftInputTransmission"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd1a4, "LiveViewProhibitCondition"},
+    {USB_PTP_FLAVOR_CANON     , 0xd1a5, "HDDirectoryStructure"},
+    {USB_PTP_FLAVOR_CANON     , 0xd1a6, "BatteryInfo"},
+    {USB_PTP_FLAVOR_CANON     , 0xd1a7, "AdapterInfo"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd1a8, "MovieShutterSpeed"},
+    {USB_PTP_FLAVOR_CANON     , 0xd1a8, "LensStatus"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd1a9, "MovieFNumber"},
+    {USB_PTP_FLAVOR_CANON     , 0xd1a9, "QuickReviewTime"},
+    {USB_PTP_FLAVOR_CANON     , 0xd1aa, "CardExtension"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd1aa, "MovieISO"},
+    {USB_PTP_FLAVOR_CANON     , 0xd1ab, "TempStatus"},
+    {USB_PTP_FLAVOR_CANON     , 0xd1ac, "ShutterCounter"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd1ac, "LiveViewMovieMode"},
+    {USB_PTP_FLAVOR_CANON     , 0xd1ad, "SpecialOption"},
+    {USB_PTP_FLAVOR_CANON     , 0xd1ae, "PhotoStudioMode"},
+    {USB_PTP_FLAVOR_CANON     , 0xd1af, "SerialNumber"},
+    {USB_PTP_FLAVOR_CANON     , 0xd1b0, "EVFOutputDevice"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd1b0, "ExposureDisplayStatus"},
+    {USB_PTP_FLAVOR_CANON     , 0xd1b1, "EVFMode"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd1b1, "ExposureIndicateStatus"},
+    {USB_PTP_FLAVOR_CANON     , 0xd1b2, "DepthOfFieldPreview"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd1b2, "InfoDispErrStatus"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd1b3, "ExposureIndicateLightup"},
+    {USB_PTP_FLAVOR_CANON     , 0xd1b3, "EVFSharpness"},
+    {USB_PTP_FLAVOR_CANON     , 0xd1b4, "EVFWBMode"},
+    {USB_PTP_FLAVOR_CANON     , 0xd1b5, "EVFClickWBCoeffs"},
+    {USB_PTP_FLAVOR_CANON     , 0xd1b6, "EVFColorTemp"},
+    {USB_PTP_FLAVOR_CANON     , 0xd1b7, "ExposureSimMode"},
+    {USB_PTP_FLAVOR_CANON     , 0xd1b8, "EVFRecordStatus"},
+    {USB_PTP_FLAVOR_CANON     , 0xd1ba, "LvAfSystem"},
+    {USB_PTP_FLAVOR_CANON     , 0xd1bb, "MovSize"},
+    {USB_PTP_FLAVOR_CANON     , 0xd1bc, "LvViewTypeSelect"},
+    {USB_PTP_FLAVOR_CANON     , 0xd1bd, "MirrorDownStatus"},
+    {USB_PTP_FLAVOR_CANON     , 0xd1be, "MovieParam"},
+    {USB_PTP_FLAVOR_CANON     , 0xd1bf, "MirrorLockupState"},
+    {USB_PTP_FLAVOR_CANON     , 0xd1c0, "FlashChargingState"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd1c0, "FlashOpen"},
+    {USB_PTP_FLAVOR_CANON     , 0xd1c1, "AloMode"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd1c1, "FlashCharged"},
+    {USB_PTP_FLAVOR_CANON     , 0xd1c2, "FixedMovie"},
+    {USB_PTP_FLAVOR_CANON     , 0xd1c3, "OneShotRawOn"},
+    {USB_PTP_FLAVOR_CANON     , 0xd1c4, "ErrorForDisplay"},
+    {USB_PTP_FLAVOR_CANON     , 0xd1c5, "AEModeMovie"},
+    {USB_PTP_FLAVOR_CANON     , 0xd1c6, "BuiltinStroboMode"},
+    {USB_PTP_FLAVOR_CANON     , 0xd1c7, "StroboDispState"},
+    {USB_PTP_FLAVOR_CANON     , 0xd1c8, "StroboETTL2Metering"},
+    {USB_PTP_FLAVOR_CANON     , 0xd1c9, "ContinousAFMode"},
+    {USB_PTP_FLAVOR_CANON     , 0xd1ca, "MovieParam2"},
+    {USB_PTP_FLAVOR_CANON     , 0xd1cb, "StroboSettingExpComposition"},
+    {USB_PTP_FLAVOR_CANON     , 0xd1cc, "MovieParam3"},
+    {USB_PTP_FLAVOR_CANON     , 0xd1cf, "LVMedicalRotate"},
+    {USB_PTP_FLAVOR_CANON     , 0xd1d0, "Artist"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd1d0, "FlashMRepeatValue"},
+    {USB_PTP_FLAVOR_CANON     , 0xd1d1, "Copyright"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd1d1, "FlashMRepeatCount"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd1d2, "FlashMRepeatInterval"},
+    {USB_PTP_FLAVOR_CANON     , 0xd1d2, "BracketValue"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd1d3, "FlashCommandChannel"},
+    {USB_PTP_FLAVOR_CANON     , 0xd1d3, "FocusInfoEx"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd1d4, "FlashCommandSelfMode"},
+    {USB_PTP_FLAVOR_CANON     , 0xd1d4, "DepthOfField"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd1d5, "FlashCommandSelfCompensation"},
+    {USB_PTP_FLAVOR_CANON     , 0xd1d5, "Brightness"},
+    {USB_PTP_FLAVOR_CANON     , 0xd1d6, "LensAdjustParams"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd1d6, "FlashCommandSelfValue"},
+    {USB_PTP_FLAVOR_CANON     , 0xd1d7, "EFComp"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd1d7, "FlashCommandAMode"},
+    {USB_PTP_FLAVOR_CANON     , 0xd1d8, "LensName"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd1d8, "FlashCommandACompensation"},
+    {USB_PTP_FLAVOR_CANON     , 0xd1d9, "AEB"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd1d9, "FlashCommandAValue"},
+    {USB_PTP_FLAVOR_CANON     , 0xd1da, "StroboSetting"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd1da, "FlashCommandBMode"},
+    {USB_PTP_FLAVOR_CANON     , 0xd1db, "StroboWirelessSetting"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd1db, "FlashCommandBCompensation"},
+    {USB_PTP_FLAVOR_CANON     , 0xd1dc, "StroboFiring"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd1dc, "FlashCommandBValue"},
+    {USB_PTP_FLAVOR_CANON     , 0xd1dd, "LensID"},
+    {USB_PTP_FLAVOR_CANON     , 0xd1de, "LCDBrightness"},
+    {USB_PTP_FLAVOR_CANON     , 0xd1df, "CADarkBright"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd1f0, "ApplicationMode"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd1f2, "ActiveSlot"},
+    {USB_PTP_FLAVOR_ALL       , 0xd200, "SONY_DPCCompensation"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd200, "ActivePicCtrlItem"},
+    {USB_PTP_FLAVOR_ALL       , 0xd201, "SONY_DRangeOptimize"},
+    {USB_PTP_FLAVOR_FUJI      , 0xd201, "ReleaseMode"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd201, "ChangePicCtrlItem"},
+    {USB_PTP_FLAVOR_ALL       , 0xd203, "SONY_ImageSize"},
+    {USB_PTP_FLAVOR_FUJI      , 0xd206, "FocusAreas"},
+    {USB_PTP_FLAVOR_ALL       , 0xd20d, "SONY_ShutterSpeed"},
+    {USB_PTP_FLAVOR_ALL       , 0xd20f, "SONY_ColorTemp"},
+    {USB_PTP_FLAVOR_ALL       , 0xd210, "SONY_CCFilter"},
+    {USB_PTP_FLAVOR_ALL       , 0xd211, "SONY_AspectRatio"},
+    {USB_PTP_FLAVOR_FUJI      , 0xd213, "AELock"},
+    {USB_PTP_FLAVOR_MTP       , 0xd215, "ZUNE_UNKNOWN3"},
+    {USB_PTP_FLAVOR_MTP       , 0xd216, "ZUNE_UNKNOWN4"},
+    {USB_PTP_FLAVOR_ALL       , 0xd216, "SONY_ExposeIndex"},
+    {USB_PTP_FLAVOR_FUJI      , 0xd218, "Aperture"},
+    {USB_PTP_FLAVOR_FUJI      , 0xd219, "ShutterSpeed"},
+    {USB_PTP_FLAVOR_ALL       , 0xd21b, "SONY_PictureEffect"},
+    {USB_PTP_FLAVOR_ALL       , 0xd21c, "SONY_ABFilter"},
+    {USB_PTP_FLAVOR_ALL       , 0xd21e, "SONY_ISO"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd236, "MovieNrHighISO"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd241, "D241"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd244, "D244"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd247, "D247"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd24f, "GUID"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd250, "D250"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd251, "D251"},
+    {USB_PTP_FLAVOR_ALL       , 0xd2c7, "SONY_StillImage"},
+    {USB_PTP_FLAVOR_ALL       , 0xd2c8, "SONY_Movie"},
+    {USB_PTP_FLAVOR_MTP       , 0xd401, "SynchronizationPartner"},
+    {USB_PTP_FLAVOR_MTP       , 0xd402, "DeviceFriendlyName"},
+    {USB_PTP_FLAVOR_MTP       , 0xd403, "VolumeLevel"},
+    {USB_PTP_FLAVOR_MTP       , 0xd405, "DeviceIcon"},
+    {USB_PTP_FLAVOR_MTP       , 0xd406, "SessionInitiatorInfo"},
+    {USB_PTP_FLAVOR_MTP       , 0xd407, "PerceivedDeviceType"},
+    {USB_PTP_FLAVOR_MTP       , 0xd410, "PlaybackRate"},
+    {USB_PTP_FLAVOR_MTP       , 0xd411, "PlaybackObject"},
+    {USB_PTP_FLAVOR_MTP       , 0xd412, "PlaybackContainerIndex"},
+    {USB_PTP_FLAVOR_MTP       , 0xd413, "PlaybackPosition"},
+    {USB_PTP_FLAVOR_ALL       , 0xf000, "EXTENSION_MASK"},
+    {USB_PTP_FLAVOR_NIKON     , 0xf002, "1_ISO"},
+    {USB_PTP_FLAVOR_NIKON     , 0xf009, "1_ImageCompression"},
+    {USB_PTP_FLAVOR_NIKON     , 0xf00a, "1_ImageSize"},
+    {USB_PTP_FLAVOR_NIKON     , 0xf00c, "1_WhiteBalance"},
+    {USB_PTP_FLAVOR_NIKON     , 0xf00d, "1_LongExposureNoiseReduction"},
+    {USB_PTP_FLAVOR_NIKON     , 0xf00e, "1_HiISONoiseReduction"},
+    {USB_PTP_FLAVOR_NIKON     , 0xf00f, "1_ActiveDLighting"},
+    {USB_PTP_FLAVOR_NIKON     , 0xf01c, "1_MovQuality"}
+};
+/* PTP_DPFF Device Property Form Flag */
+static const value_string_masked_t usb_ptp_dpff_mvals[] = {
+    {USB_PTP_FLAVOR_ALL       , 0x00, "None"},
+    {USB_PTP_FLAVOR_ALL       , 0x01, "Range"},
+    {USB_PTP_FLAVOR_ALL       , 0x02, "Enumeration"}
+};
+/* PTP_DPGS Device Property GetSet type */
+static const value_string_masked_t usb_ptp_dpgs_mvals[] = {
+    {USB_PTP_FLAVOR_ALL       , 0x00, "Get"},
+    {USB_PTP_FLAVOR_ALL       , 0x01, "GetSet"}
+};
+/* PTP_DTC Data Type Codes */
+static const value_string_masked_t usb_ptp_dtc_mvals[] = {
+    {USB_PTP_FLAVOR_ALL       , 0x4001, "AINT128"},
+    {USB_PTP_FLAVOR_ALL       , 0x4002, "AINT16"},
+    {USB_PTP_FLAVOR_ALL       , 0x4003, "AINT32"},
+    {USB_PTP_FLAVOR_ALL       , 0x4004, "AINT64"},
+    {USB_PTP_FLAVOR_ALL       , 0x4005, "AINT8"},
+    {USB_PTP_FLAVOR_ALL       , 0x4006, "AUINT128"},
+    {USB_PTP_FLAVOR_ALL       , 0x4007, "AUINT16"},
+    {USB_PTP_FLAVOR_ALL       , 0x4008, "AUINT32"},
+    {USB_PTP_FLAVOR_ALL       , 0x4009, "AUINT64"},
+    {USB_PTP_FLAVOR_ALL       , 0x400a, "AUINT8"},
+    {USB_PTP_FLAVOR_ALL       , 0x0000, "UNDEF"},
+    {USB_PTP_FLAVOR_ALL       , 0x0001, "INT8"},
+    {USB_PTP_FLAVOR_ALL       , 0x0002, "UINT8"},
+    {USB_PTP_FLAVOR_ALL       , 0x0003, "INT16"},
+    {USB_PTP_FLAVOR_ALL       , 0x0004, "UINT16"},
+    {USB_PTP_FLAVOR_ALL       , 0x0005, "INT32"},
+    {USB_PTP_FLAVOR_ALL       , 0x0006, "UINT32"},
+    {USB_PTP_FLAVOR_ALL       , 0x0007, "INT64"},
+    {USB_PTP_FLAVOR_ALL       , 0x0008, "UINT64"},
+    {USB_PTP_FLAVOR_ALL       , 0x0009, "INT128"},
+    {USB_PTP_FLAVOR_ALL       , 0x000a, "UINT128"},
+    {USB_PTP_FLAVOR_ALL       , 0x4000, "ARRAY_MASK"},
+    {USB_PTP_FLAVOR_ALL       , 0xffff, "STR"}
+};
+/* PTP_EC Event Codes */
+static const value_string_masked_t usb_ptp_ec_mvals[] = {
+    {USB_PTP_FLAVOR_ALL       , 0x4000, "Undefined"},
+    {USB_PTP_FLAVOR_ALL       , 0x4001, "CancelTransaction"},
+    {USB_PTP_FLAVOR_ALL       , 0x4002, "ObjectAdded"},
+    {USB_PTP_FLAVOR_ALL       , 0x4003, "ObjectRemoved"},
+    {USB_PTP_FLAVOR_ALL       , 0x4004, "StoreAdded"},
+    {USB_PTP_FLAVOR_ALL       , 0x4005, "StoreRemoved"},
+    {USB_PTP_FLAVOR_ALL       , 0x4006, "DevicePropChanged"},
+    {USB_PTP_FLAVOR_ALL       , 0x4007, "ObjectInfoChanged"},
+    {USB_PTP_FLAVOR_ALL       , 0x4008, "DeviceInfoChanged"},
+    {USB_PTP_FLAVOR_ALL       , 0x4009, "RequestObjectTransfer"},
+    {USB_PTP_FLAVOR_ALL       , 0x400a, "StoreFull"},
+    {USB_PTP_FLAVOR_ALL       , 0x400b, "DeviceReset"},
+    {USB_PTP_FLAVOR_ALL       , 0x400c, "StorageInfoChanged"},
+    {USB_PTP_FLAVOR_ALL       , 0x400d, "CaptureComplete"},
+    {USB_PTP_FLAVOR_ALL       , 0x400e, "UnreportedStatus"},
+    {USB_PTP_FLAVOR_CANON     , 0xc005, "ExtendedErrorcode"},
+    {USB_PTP_FLAVOR_CANON     , 0xc008, "ObjectInfoChanged"},
+    {USB_PTP_FLAVOR_CANON     , 0xc009, "RequestObjectTransfer"},
+    {USB_PTP_FLAVOR_CANON     , 0xc00b, "ShutterButtonPressed0"},
+    {USB_PTP_FLAVOR_CANON     , 0xc00c, "CameraModeChanged"},
+    {USB_PTP_FLAVOR_CANON     , 0xc00e, "ShutterButtonPressed1"},
+    {USB_PTP_FLAVOR_CANON     , 0xc011, "StartDirectTransfer"},
+    {USB_PTP_FLAVOR_CANON     , 0xc013, "StopDirectTransfer"},
+    {USB_PTP_FLAVOR_CANON     , 0xc101, "RequestGetEvent"},
+    {USB_PTP_FLAVOR_NIKON     , 0xc101, "ObjectAddedInSDRAM"},
+    {USB_PTP_FLAVOR_NIKON     , 0xc102, "CaptureCompleteRecInSdram"},
+    {USB_PTP_FLAVOR_OLYMPUS   , 0xc102, "PropertyChanged"},
+    {USB_PTP_FLAVOR_OLYMPUS   , 0xc103, "CaptureComplete"},
+    {USB_PTP_FLAVOR_NIKON     , 0xc103, "AdvancedTransfer"},
+    {USB_PTP_FLAVOR_NIKON     , 0xc104, "PreviewImageAdded"},
+    {USB_PTP_FLAVOR_CANON     , 0xc181, "ObjectAddedEx"},
+    {USB_PTP_FLAVOR_CANON     , 0xc182, "ObjectRemoved"},
+    {USB_PTP_FLAVOR_CANON     , 0xc183, "RequestGetObjectInfoEx"},
+    {USB_PTP_FLAVOR_CANON     , 0xc184, "StorageStatusChanged"},
+    {USB_PTP_FLAVOR_CANON     , 0xc185, "StorageInfoChanged"},
+    {USB_PTP_FLAVOR_CANON     , 0xc186, "RequestObjectTransfer"},
+    {USB_PTP_FLAVOR_CANON     , 0xc187, "ObjectInfoChangedEx"},
+    {USB_PTP_FLAVOR_CANON     , 0xc188, "ObjectContentChanged"},
+    {USB_PTP_FLAVOR_CANON     , 0xc189, "PropValueChanged"},
+    {USB_PTP_FLAVOR_CANON     , 0xc18a, "AvailListChanged"},
+    {USB_PTP_FLAVOR_CANON     , 0xc18b, "CameraStatusChanged"},
+    {USB_PTP_FLAVOR_CANON     , 0xc18d, "WillSoonShutdown"},
+    {USB_PTP_FLAVOR_CANON     , 0xc18e, "ShutdownTimerUpdated"},
+    {USB_PTP_FLAVOR_CANON     , 0xc18f, "RequestCancelTransfer"},
+    {USB_PTP_FLAVOR_CANON     , 0xc190, "RequestObjectTransferDT"},
+    {USB_PTP_FLAVOR_CANON     , 0xc191, "RequestCancelTransferDT"},
+    {USB_PTP_FLAVOR_CANON     , 0xc192, "StoreAdded"},
+    {USB_PTP_FLAVOR_CANON     , 0xc193, "StoreRemoved"},
+    {USB_PTP_FLAVOR_CANON     , 0xc194, "BulbExposureTime"},
+    {USB_PTP_FLAVOR_CANON     , 0xc195, "RecordingTime"},
+    {USB_PTP_FLAVOR_CANON     , 0xc1a2, "RequestObjectTransferTS"},
+    {USB_PTP_FLAVOR_CANON     , 0xc1a3, "AfResult"},
+    {USB_PTP_FLAVOR_CANON     , 0xc1a4, "CTGInfoCheckComplete"},
+    {USB_PTP_FLAVOR_CANON     , 0xc1a5, "OLCInfoChanged"},
+    {USB_PTP_FLAVOR_CANON     , 0xc1f1, "RequestObjectTransferFTP"},
+    {USB_PTP_FLAVOR_ALL       , 0xc201, "Sony_ObjectAdded"},
+    {USB_PTP_FLAVOR_ALL       , 0xc203, "Sony_PropertyChanged"},
+    {USB_PTP_FLAVOR_MTP       , 0xc801, "ObjectPropChanged"},
+    {USB_PTP_FLAVOR_MTP       , 0xc802, "ObjectPropDescChanged"},
+    {USB_PTP_FLAVOR_MTP       , 0xc803, "ObjectReferencesChanged"}
+};
+/* PTP_FLAVOR Vendor IDs */
+static const value_string_masked_t usb_ptp_flavor_mvals[] = {
+
+};
+/* PTP_FST FilesystemType Values */
+static const value_string_masked_t usb_ptp_fst_mvals[] = {
+    {USB_PTP_FLAVOR_ALL       , 0x0000, "Undefined"},
+    {USB_PTP_FLAVOR_ALL       , 0x0001, "GenericFlat"},
+    {USB_PTP_FLAVOR_ALL       , 0x0002, "GenericHierarchical"},
+    {USB_PTP_FLAVOR_ALL       , 0x0003, "DCF"}
+};
+/* PTP_GOH GetObjectHandles */
+static const value_string_masked_t usb_ptp_goh_mvals[] = {
+    {USB_PTP_FLAVOR_ALL       , 0x00000000, "ALL_FORMATS"},
+    {USB_PTP_FLAVOR_ALL       , 0x00000000, "ALL_ASSOCS"},
+    {USB_PTP_FLAVOR_ALL       , 0xffffffff, "ROOT_PARENT"},
+    {USB_PTP_FLAVOR_ALL       , 0xffffffff, "ALL_STORAGE"}
+};
+/* PTP_OC Operation Codes */
+static const value_string_masked_t usb_ptp_oc_mvals[] = {
+    {USB_PTP_FLAVOR_ALL       , 0x1000, "Undefined"},
+    {USB_PTP_FLAVOR_ALL       , 0x1001, "GetDeviceInfo"},
+    {USB_PTP_FLAVOR_ALL       , 0x1002, "OpenSession"},
+    {USB_PTP_FLAVOR_ALL       , 0x1003, "CloseSession"},
+    {USB_PTP_FLAVOR_ALL       , 0x1004, "GetStorageIDs"},
+    {USB_PTP_FLAVOR_ALL       , 0x1005, "GetStorageInfo"},
+    {USB_PTP_FLAVOR_ALL       , 0x1006, "GetNumObjects"},
+    {USB_PTP_FLAVOR_ALL       , 0x1007, "GetObjectHandles"},
+    {USB_PTP_FLAVOR_ALL       , 0x1008, "GetObjectInfo"},
+    {USB_PTP_FLAVOR_ALL       , 0x1009, "GetObject"},
+    {USB_PTP_FLAVOR_ALL       , 0x100a, "GetThumb"},
+    {USB_PTP_FLAVOR_ALL       , 0x100b, "DeleteObject"},
+    {USB_PTP_FLAVOR_ALL       , 0x100c, "SendObjectInfo"},
+    {USB_PTP_FLAVOR_ALL       , 0x100d, "SendObject"},
+    {USB_PTP_FLAVOR_ALL       , 0x100e, "InitiateCapture"},
+    {USB_PTP_FLAVOR_ALL       , 0x100f, "FormatStore"},
+    {USB_PTP_FLAVOR_ALL       , 0x1010, "ResetDevice"},
+    {USB_PTP_FLAVOR_ALL       , 0x1011, "SelfTest"},
+    {USB_PTP_FLAVOR_ALL       , 0x1012, "SetObjectProtection"},
+    {USB_PTP_FLAVOR_ALL       , 0x1013, "PowerDown"},
+    {USB_PTP_FLAVOR_ALL       , 0x1014, "GetDevicePropDesc"},
+    {USB_PTP_FLAVOR_ALL       , 0x1015, "GetDevicePropValue"},
+    {USB_PTP_FLAVOR_ALL       , 0x1016, "SetDevicePropValue"},
+    {USB_PTP_FLAVOR_ALL       , 0x1017, "ResetDevicePropValue"},
+    {USB_PTP_FLAVOR_ALL       , 0x1018, "TerminateOpenCapture"},
+    {USB_PTP_FLAVOR_ALL       , 0x1019, "MoveObject"},
+    {USB_PTP_FLAVOR_ALL       , 0x101a, "CopyObject"},
+    {USB_PTP_FLAVOR_ALL       , 0x101b, "GetPartialObject"},
+    {USB_PTP_FLAVOR_ALL       , 0x101c, "InitiateOpenCapture"},
+    {USB_PTP_FLAVOR_ALL       , 0x101d, "StartEnumHandles"},
+    {USB_PTP_FLAVOR_ALL       , 0x101e, "EnumHandles"},
+    {USB_PTP_FLAVOR_ALL       , 0x101f, "StopEnumHandles"},
+    {USB_PTP_FLAVOR_ALL       , 0x1020, "GetVendorExtensionMaps"},
+    {USB_PTP_FLAVOR_ALL       , 0x1021, "GetVendorDeviceInfo"},
+    {USB_PTP_FLAVOR_ALL       , 0x1022, "GetResizedImageObject"},
+    {USB_PTP_FLAVOR_ALL       , 0x1023, "GetFilesystemManifest"},
+    {USB_PTP_FLAVOR_ALL       , 0x1024, "GetStreamInfo"},
+    {USB_PTP_FLAVOR_ALL       , 0x1025, "GetStream"},
+    {USB_PTP_FLAVOR_ALL       , 0x9000, "EXTENSION"},
+    {USB_PTP_FLAVOR_ALL       , 0x9001, "LEICA_SetCameraSettings"},
+    {USB_PTP_FLAVOR_CANON     , 0x9001, "GetPartialObjectInfo"},
+    {USB_PTP_FLAVOR_CASIO     , 0x9001, "STILL_START"},
+    {USB_PTP_FLAVOR_CANON     , 0x9002, "SetObjectArchive"},
+    {USB_PTP_FLAVOR_CASIO     , 0x9002, "STILL_STOP"},
+    {USB_PTP_FLAVOR_ALL       , 0x9002, "LEICA_GetCameraSettings"},
+    {USB_PTP_FLAVOR_KODAK     , 0x9003, "GetSerial"},
+    {USB_PTP_FLAVOR_ALL       , 0x9003, "LEICA_GetLensParameter"},
+    {USB_PTP_FLAVOR_CANON     , 0x9003, "KeepDeviceOn"},
+    {USB_PTP_FLAVOR_KODAK     , 0x9004, "SetSerial"},
+    {USB_PTP_FLAVOR_ALL       , 0x9004, "LEICA_Release"},
+    {USB_PTP_FLAVOR_CANON     , 0x9004, "LockDeviceUI"},
+    {USB_PTP_FLAVOR_CANON     , 0x9005, "UnlockDeviceUI"},
+    {USB_PTP_FLAVOR_KODAK     , 0x9005, "SendFileObjectInfo"},
+    {USB_PTP_FLAVOR_ALL       , 0x9005, "LEICA_OpenLESession"},
+    {USB_PTP_FLAVOR_CANON     , 0x9006, "GetObjectHandleByName"},
+    {USB_PTP_FLAVOR_ALL       , 0x9006, "LEICA_CloseLESession"},
+    {USB_PTP_FLAVOR_KODAK     , 0x9006, "SendFileObject"},
+    {USB_PTP_FLAVOR_NIKON     , 0x9006, "GetProfileAllData"},
+    {USB_PTP_FLAVOR_ALL       , 0x9007, "LEICA_RequestObjectTransferReady"},
+    {USB_PTP_FLAVOR_NIKON     , 0x9007, "SendProfileData"},
+    {USB_PTP_FLAVOR_CASIO     , 0x9007, "FOCUS"},
+    {USB_PTP_FLAVOR_NIKON     , 0x9008, "DeleteProfile"},
+    {USB_PTP_FLAVOR_CANON     , 0x9008, "InitiateReleaseControl"},
+    {USB_PTP_FLAVOR_KODAK     , 0x9008, "SetText"},
+    {USB_PTP_FLAVOR_CASIO     , 0x9009, "CF_PRESS"},
+    {USB_PTP_FLAVOR_CANON     , 0x9009, "TerminateReleaseControl"},
+    {USB_PTP_FLAVOR_NIKON     , 0x9009, "SetProfileData"},
+    {USB_PTP_FLAVOR_CASIO     , 0x900a, "CF_RELEASE"},
+    {USB_PTP_FLAVOR_CANON     , 0x900a, "TerminatePlaybackMode"},
+    {USB_PTP_FLAVOR_CANON     , 0x900b, "ViewfinderOn"},
+    {USB_PTP_FLAVOR_CANON     , 0x900c, "ViewfinderOff"},
+    {USB_PTP_FLAVOR_CASIO     , 0x900c, "GET_OBJECT_INFO"},
+    {USB_PTP_FLAVOR_CANON     , 0x900d, "DoAeAfAwb"},
+    {USB_PTP_FLAVOR_CANON     , 0x900e, "GetCustomizeSpec"},
+    {USB_PTP_FLAVOR_CANON     , 0x900f, "GetCustomizeItemInfo"},
+    {USB_PTP_FLAVOR_CANON     , 0x9010, "GetCustomizeData"},
+    {USB_PTP_FLAVOR_NIKON     , 0x9010, "AdvancedTransfer"},
+    {USB_PTP_FLAVOR_NIKON     , 0x9011, "GetFileInfoInBlock"},
+    {USB_PTP_FLAVOR_CANON     , 0x9012, "GetCaptureStatus"},
+    {USB_PTP_FLAVOR_CANON     , 0x9013, "CheckEvent"},
+    {USB_PTP_FLAVOR_CANON     , 0x9014, "FocusLock"},
+    {USB_PTP_FLAVOR_CANON     , 0x9015, "FocusUnlock"},
+    {USB_PTP_FLAVOR_CANON     , 0x9016, "GetLocalReleaseParam"},
+    {USB_PTP_FLAVOR_CANON     , 0x9017, "SetLocalReleaseParam"},
+    {USB_PTP_FLAVOR_CANON     , 0x9018, "AskAboutPcEvf"},
+    {USB_PTP_FLAVOR_CANON     , 0x9019, "SendPartialObject"},
+    {USB_PTP_FLAVOR_CANON     , 0x901a, "InitiateCaptureInMemory"},
+    {USB_PTP_FLAVOR_CANON     , 0x901b, "GetPartialObjectEx"},
+    {USB_PTP_FLAVOR_CANON     , 0x901c, "SetObjectTime"},
+    {USB_PTP_FLAVOR_CANON     , 0x901d, "GetViewfinderImage"},
+    {USB_PTP_FLAVOR_CANON     , 0x901e, "GetObjectAttributes"},
+    {USB_PTP_FLAVOR_CANON     , 0x901f, "ChangeUSBProtocol"},
+    {USB_PTP_FLAVOR_CANON     , 0x9020, "GetChanges"},
+    {USB_PTP_FLAVOR_CANON     , 0x9021, "GetObjectInfoEx"},
+    {USB_PTP_FLAVOR_CANON     , 0x9022, "InitiateDirectTransfer"},
+    {USB_PTP_FLAVOR_CANON     , 0x9023, "TerminateDirectTransfer"},
+    {USB_PTP_FLAVOR_CASIO     , 0x9024, "SHUTTER"},
+    {USB_PTP_FLAVOR_CANON     , 0x9024, "SendObjectInfoByPath"},
+    {USB_PTP_FLAVOR_CASIO     , 0x9025, "GET_OBJECT"},
+    {USB_PTP_FLAVOR_CANON     , 0x9025, "SendObjectByPath"},
+    {USB_PTP_FLAVOR_CASIO     , 0x9026, "GET_THUMBNAIL"},
+    {USB_PTP_FLAVOR_CANON     , 0x9026, "InitiateDirectTansferEx"},
+    {USB_PTP_FLAVOR_CANON     , 0x9027, "GetAncillaryObjectHandles"},
+    {USB_PTP_FLAVOR_CASIO     , 0x9027, "GET_STILL_HANDLES"},
+    {USB_PTP_FLAVOR_CANON     , 0x9028, "GetTreeInfo"},
+    {USB_PTP_FLAVOR_CASIO     , 0x9028, "STILL_RESET"},
+    {USB_PTP_FLAVOR_CANON     , 0x9011, "SetCustomizeData"},
+    {USB_PTP_FLAVOR_CASIO     , 0x9029, "HALF_PRESS"},
+    {USB_PTP_FLAVOR_CANON     , 0x9029, "GetTreeSize"},
+    {USB_PTP_FLAVOR_CANON     , 0x902a, "NotifyProgress"},
+    {USB_PTP_FLAVOR_CASIO     , 0x902a, "HALF_RELEASE"},
+    {USB_PTP_FLAVOR_CANON     , 0x902b, "NotifyCancelAccepted"},
+    {USB_PTP_FLAVOR_CASIO     , 0x902b, "CS_PRESS"},
+    {USB_PTP_FLAVOR_CASIO     , 0x902c, "CS_RELEASE"},
+    {USB_PTP_FLAVOR_CANON     , 0x902c, "902C"},
+    {USB_PTP_FLAVOR_CANON     , 0x902d, "GetDirectory"},
+    {USB_PTP_FLAVOR_CASIO     , 0x902d, "ZOOM"},
+    {USB_PTP_FLAVOR_CASIO     , 0x902e, "CZ_PRESS"},
+    {USB_PTP_FLAVOR_CANON     , 0x902e, "902E"},
+    {USB_PTP_FLAVOR_CASIO     , 0x902f, "CZ_RELEASE"},
+    {USB_PTP_FLAVOR_CANON     , 0x9030, "SetPairingInfo"},
+    {USB_PTP_FLAVOR_CANON     , 0x9031, "GetPairingInfo"},
+    {USB_PTP_FLAVOR_CANON     , 0x9032, "DeletePairingInfo"},
+    {USB_PTP_FLAVOR_CANON     , 0x9033, "GetMACAddress"},
+    {USB_PTP_FLAVOR_CANON     , 0x9034, "SetDisplayMonitor"},
+    {USB_PTP_FLAVOR_CANON     , 0x9035, "PairingComplete"},
+    {USB_PTP_FLAVOR_CANON     , 0x9036, "GetWirelessMAXChannel"},
+    {USB_PTP_FLAVOR_CASIO     , 0x9041, "MOVIE_START"},
+    {USB_PTP_FLAVOR_CASIO     , 0x9042, "MOVIE_STOP"},
+    {USB_PTP_FLAVOR_CASIO     , 0x9043, "MOVIE_PRESS"},
+    {USB_PTP_FLAVOR_CASIO     , 0x9044, "MOVIE_RELEASE"},
+    {USB_PTP_FLAVOR_CASIO     , 0x9045, "GET_MOVIE_HANDLES"},
+    {USB_PTP_FLAVOR_CASIO     , 0x9046, "MOVIE_RESET"},
+    {USB_PTP_FLAVOR_CANON     , 0x9068, "GetWebServiceSpec"},
+    {USB_PTP_FLAVOR_CANON     , 0x9069, "GetWebServiceData"},
+    {USB_PTP_FLAVOR_CANON     , 0x906b, "SetWebServiceData"},
+    {USB_PTP_FLAVOR_CANON     , 0x906c, "GetRootCertificateSpec"},
+    {USB_PTP_FLAVOR_CANON     , 0x906d, "GetRootCertificateData"},
+    {USB_PTP_FLAVOR_CANON     , 0x906f, "SetRootCertificateData"},
+    {USB_PTP_FLAVOR_NIKON     , 0x90c0, "Capture"},
+    {USB_PTP_FLAVOR_NIKON     , 0x90c1, "AfDrive"},
+    {USB_PTP_FLAVOR_NIKON     , 0x90c2, "SetControlMode"},
+    {USB_PTP_FLAVOR_NIKON     , 0x90c3, "DelImageSDRAM"},
+    {USB_PTP_FLAVOR_NIKON     , 0x90c4, "GetLargeThumb"},
+    {USB_PTP_FLAVOR_NIKON     , 0x90c5, "CurveDownload"},
+    {USB_PTP_FLAVOR_NIKON     , 0x90c6, "CurveUpload"},
+    {USB_PTP_FLAVOR_NIKON     , 0x90c7, "CheckEvent"},
+    {USB_PTP_FLAVOR_NIKON     , 0x90c8, "DeviceReady"},
+    {USB_PTP_FLAVOR_NIKON     , 0x90c9, "SetPreWBData"},
+    {USB_PTP_FLAVOR_NIKON     , 0x90ca, "GetVendorPropCodes"},
+    {USB_PTP_FLAVOR_NIKON     , 0x90cb, "AfCaptureSDRAM"},
+    {USB_PTP_FLAVOR_NIKON     , 0x90cc, "GetPictCtrlData"},
+    {USB_PTP_FLAVOR_NIKON     , 0x90cd, "SetPictCtrlData"},
+    {USB_PTP_FLAVOR_NIKON     , 0x90ce, "DelCstPicCtrl"},
+    {USB_PTP_FLAVOR_NIKON     , 0x90cf, "GetPicCtrlCapability"},
+    {USB_PTP_FLAVOR_NIKON     , 0x90e0, "GetDevicePTPIPInfo"},
+    {USB_PTP_FLAVOR_OLYMPUS   , 0x9101, "Capture"},
+    {USB_PTP_FLAVOR_MTP       , 0x9101, "WMDRMPD_GetSecureTimeChallenge"},
+    {USB_PTP_FLAVOR_CANON     , 0x9101, "GetStorageIDs"},
+    {USB_PTP_FLAVOR_MTP       , 0x9102, "WMDRMPD_GetSecureTimeResponse"},
+    {USB_PTP_FLAVOR_CANON     , 0x9102, "GetStorageInfo"},
+    {USB_PTP_FLAVOR_CANON     , 0x9103, "GetObjectInfo"},
+    {USB_PTP_FLAVOR_MTP       , 0x9103, "WMDRMPD_SetLicenseResponse"},
+    {USB_PTP_FLAVOR_OLYMPUS   , 0x9103, "SelfCleaning"},
+    {USB_PTP_FLAVOR_MTP       , 0x9104, "WMDRMPD_GetSyncList"},
+    {USB_PTP_FLAVOR_CANON     , 0x9104, "GetObject"},
+    {USB_PTP_FLAVOR_MTP       , 0x9105, "WMDRMPD_SendMeterChallengeQuery"},
+    {USB_PTP_FLAVOR_CANON     , 0x9105, "DeleteObject"},
+    {USB_PTP_FLAVOR_OLYMPUS   , 0x9106, "SetRGBGain"},
+    {USB_PTP_FLAVOR_MTP       , 0x9106, "WMDRMPD_GetMeterChallenge"},
+    {USB_PTP_FLAVOR_CANON     , 0x9106, "FormatStore"},
+    {USB_PTP_FLAVOR_MTP       , 0x9107, "WMDRMPD_SetMeterResponse"},
+    {USB_PTP_FLAVOR_CANON     , 0x9107, "GetPartialObject"},
+    {USB_PTP_FLAVOR_OLYMPUS   , 0x9107, "SetPresetMode"},
+    {USB_PTP_FLAVOR_CANON     , 0x9108, "GetDeviceInfoEx"},
+    {USB_PTP_FLAVOR_MTP       , 0x9108, "WMDRMPD_CleanDataStore"},
+    {USB_PTP_FLAVOR_OLYMPUS   , 0x9108, "SetWBBiasAll"},
+    {USB_PTP_FLAVOR_CANON     , 0x9109, "GetObjectInfoEx"},
+    {USB_PTP_FLAVOR_MTP       , 0x9109, "WMDRMPD_GetLicenseState"},
+    {USB_PTP_FLAVOR_MTP       , 0x910a, "WMDRMPD_SendWMDRMPDCommand"},
+    {USB_PTP_FLAVOR_CANON     , 0x910a, "GetThumbEx"},
+    {USB_PTP_FLAVOR_OLYMPUS   , 0x910a, "GetCameraControlMode"},
+    {USB_PTP_FLAVOR_MTP       , 0x910b, "WMDRMPD_SendWMDRMPDRequest"},
+    {USB_PTP_FLAVOR_CANON     , 0x910b, "SendPartialObject"},
+    {USB_PTP_FLAVOR_OLYMPUS   , 0x910b, "SetCameraControlMode"},
+    {USB_PTP_FLAVOR_OLYMPUS   , 0x910c, "SetWBRGBGain"},
+    {USB_PTP_FLAVOR_CANON     , 0x910c, "SetObjectAttributes"},
+    {USB_PTP_FLAVOR_CANON     , 0x910d, "GetObjectTime"},
+    {USB_PTP_FLAVOR_CANON     , 0x910e, "SetObjectTime"},
+    {USB_PTP_FLAVOR_CANON     , 0x910f, "RemoteRelease"},
+    {USB_PTP_FLAVOR_CANON     , 0x9110, "SetDevicePropValueEx"},
+    {USB_PTP_FLAVOR_CANON     , 0x9113, "GetRemoteMode"},
+    {USB_PTP_FLAVOR_CANON     , 0x9114, "SetRemoteMode"},
+    {USB_PTP_FLAVOR_CANON     , 0x9115, "SetEventMode"},
+    {USB_PTP_FLAVOR_CANON     , 0x9116, "GetEvent"},
+    {USB_PTP_FLAVOR_CANON     , 0x9117, "TransferComplete"},
+    {USB_PTP_FLAVOR_CANON     , 0x9118, "CancelTransfer"},
+    {USB_PTP_FLAVOR_CANON     , 0x9119, "ResetTransfer"},
+    {USB_PTP_FLAVOR_CANON     , 0x911a, "PCHDDCapacity"},
+    {USB_PTP_FLAVOR_CANON     , 0x911b, "SetUILock"},
+    {USB_PTP_FLAVOR_CANON     , 0x911c, "ResetUILock"},
+    {USB_PTP_FLAVOR_CANON     , 0x911d, "KeepDeviceOn"},
+    {USB_PTP_FLAVOR_CANON     , 0x911e, "SetNullPacketMode"},
+    {USB_PTP_FLAVOR_CANON     , 0x911f, "UpdateFirmware"},
+    {USB_PTP_FLAVOR_CANON     , 0x9120, "TransferCompleteDT"},
+    {USB_PTP_FLAVOR_CANON     , 0x9121, "CancelTransferDT"},
+    {USB_PTP_FLAVOR_CANON     , 0x9122, "SetWftProfile"},
+    {USB_PTP_FLAVOR_MTP       , 0x9122, "WPDWCN_ProcessWFCObject"},
+    {USB_PTP_FLAVOR_CANON     , 0x9123, "GetWftProfile"},
+    {USB_PTP_FLAVOR_CANON     , 0x9124, "SetProfileToWft"},
+    {USB_PTP_FLAVOR_CANON     , 0x9125, "BulbStart"},
+    {USB_PTP_FLAVOR_CANON     , 0x9126, "BulbEnd"},
+    {USB_PTP_FLAVOR_CANON     , 0x9127, "RequestDevicePropValue"},
+    {USB_PTP_FLAVOR_CANON     , 0x9128, "RemoteReleaseOn"},
+    {USB_PTP_FLAVOR_CANON     , 0x9129, "RemoteReleaseOff"},
+    {USB_PTP_FLAVOR_CANON     , 0x912a, "RegistBackgroundImage"},
+    {USB_PTP_FLAVOR_CANON     , 0x912b, "ChangePhotoStudioMode"},
+    {USB_PTP_FLAVOR_CANON     , 0x912c, "GetPartialObjectEx"},
+    {USB_PTP_FLAVOR_CANON     , 0x9130, "ResetMirrorLockupState"},
+    {USB_PTP_FLAVOR_CANON     , 0x9131, "PopupBuiltinFlash"},
+    {USB_PTP_FLAVOR_CANON     , 0x9132, "EndGetPartialObjectEx"},
+    {USB_PTP_FLAVOR_CANON     , 0x9133, "MovieSelectSWOn"},
+    {USB_PTP_FLAVOR_CANON     , 0x9134, "MovieSelectSWOff"},
+    {USB_PTP_FLAVOR_CANON     , 0x9135, "GetCTGInfo"},
+    {USB_PTP_FLAVOR_CANON     , 0x9136, "GetLensAdjust"},
+    {USB_PTP_FLAVOR_CANON     , 0x9137, "SetLensAdjust"},
+    {USB_PTP_FLAVOR_CANON     , 0x9138, "GetMusicInfo"},
+    {USB_PTP_FLAVOR_CANON     , 0x9139, "CreateHandle"},
+    {USB_PTP_FLAVOR_CANON     , 0x913a, "SendPartialObjectEx"},
+    {USB_PTP_FLAVOR_CANON     , 0x913b, "EndSendPartialObjectEx"},
+    {USB_PTP_FLAVOR_CANON     , 0x913c, "SetCTGInfo"},
+    {USB_PTP_FLAVOR_CANON     , 0x913d, "SetRequestOLCInfoGroup"},
+    {USB_PTP_FLAVOR_CANON     , 0x913e, "SetRequestRollingPitchingLevel"},
+    {USB_PTP_FLAVOR_CANON     , 0x913f, "GetCameraSupport"},
+    {USB_PTP_FLAVOR_CANON     , 0x9140, "SetRating"},
+    {USB_PTP_FLAVOR_CANON     , 0x9141, "RequestInnerDevelopStart"},
+    {USB_PTP_FLAVOR_CANON     , 0x9142, "RequestInnerDevelopParamChange"},
+    {USB_PTP_FLAVOR_CANON     , 0x9143, "RequestInnerDevelopEnd"},
+    {USB_PTP_FLAVOR_CANON     , 0x9144, "GpsLoggingDataMode"},
+    {USB_PTP_FLAVOR_CANON     , 0x9145, "GetGpsLogCurrentHandle"},
+    {USB_PTP_FLAVOR_CANON     , 0x9151, "InitiateViewfinder"},
+    {USB_PTP_FLAVOR_CANON     , 0x9152, "TerminateViewfinder"},
+    {USB_PTP_FLAVOR_CANON     , 0x9153, "GetViewFinderData"},
+    {USB_PTP_FLAVOR_CANON     , 0x9154, "DoAf"},
+    {USB_PTP_FLAVOR_CANON     , 0x9155, "DriveLens"},
+    {USB_PTP_FLAVOR_CANON     , 0x9156, "DepthOfFieldPreview"},
+    {USB_PTP_FLAVOR_CANON     , 0x9157, "ClickWB"},
+    {USB_PTP_FLAVOR_CANON     , 0x9158, "Zoom"},
+    {USB_PTP_FLAVOR_CANON     , 0x9159, "ZoomPosition"},
+    {USB_PTP_FLAVOR_CANON     , 0x915a, "SetLiveAfFrame"},
+    {USB_PTP_FLAVOR_CANON     , 0x915b, "TouchAfPosition"},
+    {USB_PTP_FLAVOR_CANON     , 0x915c, "SetLvPcFlavoreditMode"},
+    {USB_PTP_FLAVOR_CANON     , 0x915d, "SetLvPcFlavoreditParam"},
+    {USB_PTP_FLAVOR_CANON     , 0x9160, "AfCancel"},
+    {USB_PTP_FLAVOR_MTP       , 0x9170, "AAVT_OpenMediaSession"},
+    {USB_PTP_FLAVOR_MTP       , 0x9171, "AAVT_CloseMediaSession"},
+    {USB_PTP_FLAVOR_MTP       , 0x9172, "AAVT_GetNextDataBlock"},
+    {USB_PTP_FLAVOR_MTP       , 0x9173, "AAVT_SetCurrentTimePosition"},
+    {USB_PTP_FLAVOR_MTP       , 0x9180, "WMDRMND_SendRegistrationRequest"},
+    {USB_PTP_FLAVOR_MTP       , 0x9181, "WMDRMND_GetRegistrationResponse"},
+    {USB_PTP_FLAVOR_MTP       , 0x9182, "WMDRMND_GetProximityChallenge"},
+    {USB_PTP_FLAVOR_MTP       , 0x9183, "WMDRMND_SendProximityResponse"},
+    {USB_PTP_FLAVOR_MTP       , 0x9184, "WMDRMND_SendWMDRMNDLicenseRequest"},
+    {USB_PTP_FLAVOR_MTP       , 0x9185, "WMDRMND_GetWMDRMNDLicenseResponse"},
+    {USB_PTP_FLAVOR_CANON     , 0x91be, "SetDefaultCameraSetting"},
+    {USB_PTP_FLAVOR_CANON     , 0x91bf, "GetAEData"},
+    {USB_PTP_FLAVOR_CANON     , 0x91e8, "NotifyNetworkError"},
+    {USB_PTP_FLAVOR_CANON     , 0x91e9, "AdapterTransferProgress"},
+    {USB_PTP_FLAVOR_CANON     , 0x91f0, "TransferComplete2"},
+    {USB_PTP_FLAVOR_CANON     , 0x91f1, "CancelTransfer2"},
+    {USB_PTP_FLAVOR_CANON     , 0x91fe, "FAPIMessageTX"},
+    {USB_PTP_FLAVOR_CANON     , 0x91ff, "FAPIMessageRX"},
+    {USB_PTP_FLAVOR_NIKON     , 0x9200, "GetPreviewImg"},
+    {USB_PTP_FLAVOR_MTP       , 0x9201, "WMPPD_ReportAddedDeletedItems"},
+    {USB_PTP_FLAVOR_ALL       , 0x9201, "SONY_SDIOConnect"},
+    {USB_PTP_FLAVOR_NIKON     , 0x9201, "StartLiveView"},
+    {USB_PTP_FLAVOR_NIKON     , 0x9202, "EndLiveView"},
+    {USB_PTP_FLAVOR_MTP       , 0x9202, "WMPPD_ReportAcquiredItems"},
+    {USB_PTP_FLAVOR_ALL       , 0x9202, "SONY_GetSDIOGetExtDeviceInfo"},
+    {USB_PTP_FLAVOR_MTP       , 0x9203, "WMPPD_PlaylistObjectPref"},
+    {USB_PTP_FLAVOR_NIKON     , 0x9203, "GetLiveViewImg"},
+    {USB_PTP_FLAVOR_ALL       , 0x9203, "SONY_GetDevicePropdesc"},
+    {USB_PTP_FLAVOR_MTP       , 0x9204, "ZUNE_GETUNDEFINED001"},
+    {USB_PTP_FLAVOR_ALL       , 0x9204, "SONY_GetDevicePropertyValue"},
+    {USB_PTP_FLAVOR_NIKON     , 0x9204, "MfDrive"},
+    {USB_PTP_FLAVOR_NIKON     , 0x9205, "ChangeAfArea"},
+    {USB_PTP_FLAVOR_ALL       , 0x9205, "SONY_SetControlDeviceA"},
+    {USB_PTP_FLAVOR_NIKON     , 0x9206, "AfDriveCancel"},
+    {USB_PTP_FLAVOR_ALL       , 0x9206, "SONY_GetControlDeviceDesc"},
+    {USB_PTP_FLAVOR_NIKON     , 0x9207, "InitiateCaptureRecInMedia"},
+    {USB_PTP_FLAVOR_ALL       , 0x9207, "SONY_SetControlDeviceB"},
+    {USB_PTP_FLAVOR_ALL       , 0x9209, "SONY_GetAllDevicePropData"},
+    {USB_PTP_FLAVOR_NIKON     , 0x9209, "GetVendorStorageIDs"},
+    {USB_PTP_FLAVOR_NIKON     , 0x920a, "StartMovieRecInCard"},
+    {USB_PTP_FLAVOR_NIKON     , 0x920b, "EndMovieRec"},
+    {USB_PTP_FLAVOR_NIKON     , 0x920c, "TerminateCapture"},
+    {USB_PTP_FLAVOR_MTP       , 0x9212, "WMDRMPD_SendWMDRMPDAppRequest"},
+    {USB_PTP_FLAVOR_MTP       , 0x9213, "WMDRMPD_GetWMDRMPDAppResponse"},
+    {USB_PTP_FLAVOR_MTP       , 0x9214, "WMDRMPD_EnableTrustedFilesOperations"},
+    {USB_PTP_FLAVOR_MTP       , 0x9215, "WMDRMPD_DisableTrustedFilesOperations"},
+    {USB_PTP_FLAVOR_MTP       , 0x9216, "WMDRMPD_EndTrustedAppSession"},
+    {USB_PTP_FLAVOR_OLYMPUS   , 0x9301, "GetDeviceInfo"},
+    {USB_PTP_FLAVOR_OLYMPUS   , 0x9302, "OpenSession"},
+    {USB_PTP_FLAVOR_NIKON     , 0x9400, "GetPartialObjectHiSpeed"},
+    {USB_PTP_FLAVOR_OLYMPUS   , 0x9402, "SetDateTime"},
+    {USB_PTP_FLAVOR_OLYMPUS   , 0x9482, "GetDateTime"},
+    {USB_PTP_FLAVOR_OLYMPUS   , 0x9501, "SetCameraID"},
+    {USB_PTP_FLAVOR_NIKON     , 0x9504, "GetDevicePropEx"},
+    {USB_PTP_FLAVOR_OLYMPUS   , 0x9581, "GetCameraID"},
+    {USB_PTP_FLAVOR_ANDROID   , 0x95c1, "GetPartialObject64"},
+    {USB_PTP_FLAVOR_ANDROID   , 0x95c2, "SendPartialObject"},
+    {USB_PTP_FLAVOR_ANDROID   , 0x95c3, "TruncateObject"},
+    {USB_PTP_FLAVOR_ANDROID   , 0x95c4, "BeginEditObject"},
+    {USB_PTP_FLAVOR_ANDROID   , 0x95c5, "EndEditObject"},
+    {USB_PTP_FLAVOR_MTP       , 0x9801, "GetObjectPropsSupported"},
+    {USB_PTP_FLAVOR_MTP       , 0x9802, "GetObjectPropDesc"},
+    {USB_PTP_FLAVOR_MTP       , 0x9803, "GetObjectPropValue"},
+    {USB_PTP_FLAVOR_MTP       , 0x9804, "SetObjectPropValue"},
+    {USB_PTP_FLAVOR_MTP       , 0x9805, "GetObjPropList"},
+    {USB_PTP_FLAVOR_MTP       , 0x9806, "SetObjPropList"},
+    {USB_PTP_FLAVOR_MTP       , 0x9807, "GetInterdependendPropdesc"},
+    {USB_PTP_FLAVOR_MTP       , 0x9808, "SendObjectPropList"},
+    {USB_PTP_FLAVOR_MTP       , 0x9810, "GetObjectReferences"},
+    {USB_PTP_FLAVOR_MTP       , 0x9811, "SetObjectReferences"},
+    {USB_PTP_FLAVOR_MTP       , 0x9812, "UpdateDeviceFirmware"},
+    {USB_PTP_FLAVOR_MTP       , 0x9820, "Skip"},
+    {USB_PTP_FLAVOR_ALL       , 0x9999, "CHDK"},
+    {USB_PTP_FLAVOR_ALL       , 0xf000, "EXTENSION_MASK"}
+};
+/* PTP_OFC Object Format Codes */
+static const value_string_masked_t usb_ptp_ofc_mvals[] = {
+    {USB_PTP_FLAVOR_ALL       , 0x3000, "Undefined"},
+    {USB_PTP_FLAVOR_ALL       , 0x3001, "Association"},
+    {USB_PTP_FLAVOR_ALL       , 0x3002, "Script"},
+    {USB_PTP_FLAVOR_ALL       , 0x3003, "Executable"},
+    {USB_PTP_FLAVOR_ALL       , 0x3004, "Text"},
+    {USB_PTP_FLAVOR_ALL       , 0x3005, "HTML"},
+    {USB_PTP_FLAVOR_ALL       , 0x3006, "DPOF"},
+    {USB_PTP_FLAVOR_ALL       , 0x3007, "AIFF"},
+    {USB_PTP_FLAVOR_ALL       , 0x3008, "WAV"},
+    {USB_PTP_FLAVOR_ALL       , 0x3009, "MP3"},
+    {USB_PTP_FLAVOR_ALL       , 0x300a, "AVI"},
+    {USB_PTP_FLAVOR_ALL       , 0x300b, "MPEG"},
+    {USB_PTP_FLAVOR_ALL       , 0x300c, "ASF"},
+    {USB_PTP_FLAVOR_ALL       , 0x300d, "QT"},
+    {USB_PTP_FLAVOR_ALL       , 0x3800, "Defined"},
+    {USB_PTP_FLAVOR_ALL       , 0x3801, "EXIF_JPEG"},
+    {USB_PTP_FLAVOR_ALL       , 0x3802, "TIFF_EP"},
+    {USB_PTP_FLAVOR_ALL       , 0x3803, "FlashPix"},
+    {USB_PTP_FLAVOR_ALL       , 0x3804, "BMP"},
+    {USB_PTP_FLAVOR_ALL       , 0x3805, "CIFF"},
+    {USB_PTP_FLAVOR_ALL       , 0x3806, "Undefined_0x3806"},
+    {USB_PTP_FLAVOR_ALL       , 0x3807, "GIF"},
+    {USB_PTP_FLAVOR_ALL       , 0x3808, "JFIF"},
+    {USB_PTP_FLAVOR_ALL       , 0x3809, "PCD"},
+    {USB_PTP_FLAVOR_ALL       , 0x380a, "PICT"},
+    {USB_PTP_FLAVOR_ALL       , 0x380b, "PNG"},
+    {USB_PTP_FLAVOR_ALL       , 0x380c, "Undefined_0x380C"},
+    {USB_PTP_FLAVOR_ALL       , 0x380d, "TIFF"},
+    {USB_PTP_FLAVOR_ALL       , 0x380e, "TIFF_IT"},
+    {USB_PTP_FLAVOR_ALL       , 0x380f, "JP2"},
+    {USB_PTP_FLAVOR_ALL       , 0x3810, "JPX"},
+    {USB_PTP_FLAVOR_ALL       , 0x3811, "DNG"},
+    {USB_PTP_FLAVOR_KODAK     , 0xb002, "M3U"},
+    {USB_PTP_FLAVOR_CANON     , 0xb101, "CRW"},
+    {USB_PTP_FLAVOR_ALL       , 0xb101, "SONY_RAW"},
+    {USB_PTP_FLAVOR_CANON     , 0xb103, "CRW3"},
+    {USB_PTP_FLAVOR_CANON     , 0xb104, "MOV"},
+    {USB_PTP_FLAVOR_CANON     , 0xb105, "MOV2"},
+    {USB_PTP_FLAVOR_CANON     , 0xb1ff, "CHDK_CRW"},
+    {USB_PTP_FLAVOR_MTP       , 0xb211, "MediaCard"},
+    {USB_PTP_FLAVOR_MTP       , 0xb212, "MediaCardGroup"},
+    {USB_PTP_FLAVOR_MTP       , 0xb213, "Encounter"},
+    {USB_PTP_FLAVOR_MTP       , 0xb214, "EncounterBox"},
+    {USB_PTP_FLAVOR_MTP       , 0xb215, "M4A"},
+    {USB_PTP_FLAVOR_MTP       , 0xb217, "ZUNEUNDEFINED"},
+    {USB_PTP_FLAVOR_MTP       , 0xb802, "Firmware"},
+    {USB_PTP_FLAVOR_MTP       , 0xb881, "WindowsImageFormat"},
+    {USB_PTP_FLAVOR_MTP       , 0xb900, "UndefinedAudio"},
+    {USB_PTP_FLAVOR_MTP       , 0xb901, "WMA"},
+    {USB_PTP_FLAVOR_MTP       , 0xb902, "OGG"},
+    {USB_PTP_FLAVOR_MTP       , 0xb903, "AAC"},
+    {USB_PTP_FLAVOR_MTP       , 0xb904, "AudibleCodec"},
+    {USB_PTP_FLAVOR_MTP       , 0xb906, "FLAC"},
+    {USB_PTP_FLAVOR_MTP       , 0xb909, "SamsungPlaylist"},
+    {USB_PTP_FLAVOR_MTP       , 0xb980, "UndefinedVideo"},
+    {USB_PTP_FLAVOR_MTP       , 0xb981, "WMV"},
+    {USB_PTP_FLAVOR_MTP       , 0xb982, "MP4"},
+    {USB_PTP_FLAVOR_MTP       , 0xb983, "MP2"},
+    {USB_PTP_FLAVOR_MTP       , 0xb984, "3GP"},
+    {USB_PTP_FLAVOR_MTP       , 0xba00, "UndefinedCollection"},
+    {USB_PTP_FLAVOR_MTP       , 0xba01, "AbstractMultimediaAlbum"},
+    {USB_PTP_FLAVOR_MTP       , 0xba02, "AbstractImageAlbum"},
+    {USB_PTP_FLAVOR_MTP       , 0xba03, "AbstractAudioAlbum"},
+    {USB_PTP_FLAVOR_MTP       , 0xba04, "AbstractVideoAlbum"},
+    {USB_PTP_FLAVOR_MTP       , 0xba05, "AbstractAudioVideoPlaylist"},
+    {USB_PTP_FLAVOR_MTP       , 0xba06, "AbstractContactGroup"},
+    {USB_PTP_FLAVOR_MTP       , 0xba07, "AbstractMessageFolder"},
+    {USB_PTP_FLAVOR_MTP       , 0xba08, "AbstractChapteredProduction"},
+    {USB_PTP_FLAVOR_MTP       , 0xba09, "AbstractAudioPlaylist"},
+    {USB_PTP_FLAVOR_MTP       , 0xba0a, "AbstractVideoPlaylist"},
+    {USB_PTP_FLAVOR_MTP       , 0xba0b, "AbstractMediacast"},
+    {USB_PTP_FLAVOR_MTP       , 0xba10, "WPLPlaylist"},
+    {USB_PTP_FLAVOR_MTP       , 0xba11, "M3UPlaylist"},
+    {USB_PTP_FLAVOR_MTP       , 0xba12, "MPLPlaylist"},
+    {USB_PTP_FLAVOR_MTP       , 0xba13, "ASXPlaylist"},
+    {USB_PTP_FLAVOR_MTP       , 0xba14, "PLSPlaylist"},
+    {USB_PTP_FLAVOR_MTP       , 0xba80, "UndefinedDocument"},
+    {USB_PTP_FLAVOR_MTP       , 0xba81, "AbstractDocument"},
+    {USB_PTP_FLAVOR_MTP       , 0xba82, "XMLDocument"},
+    {USB_PTP_FLAVOR_MTP       , 0xba83, "MSWordDocument"},
+    {USB_PTP_FLAVOR_MTP       , 0xba84, "MHTCompiledHTMLDocument"},
+    {USB_PTP_FLAVOR_MTP       , 0xba85, "MSExcelSpreadsheetXLS"},
+    {USB_PTP_FLAVOR_MTP       , 0xba86, "MSPowerpointPresentationPPT"},
+    {USB_PTP_FLAVOR_MTP       , 0xbb00, "UndefinedMessage"},
+    {USB_PTP_FLAVOR_MTP       , 0xbb01, "AbstractMessage"},
+    {USB_PTP_FLAVOR_MTP       , 0xbb80, "UndefinedContact"},
+    {USB_PTP_FLAVOR_MTP       , 0xbb81, "AbstractContact"},
+    {USB_PTP_FLAVOR_MTP       , 0xbb82, "vCard2"},
+    {USB_PTP_FLAVOR_MTP       , 0xbb83, "vCard3"},
+    {USB_PTP_FLAVOR_MTP       , 0xbe00, "UndefinedCalendarItem"},
+    {USB_PTP_FLAVOR_MTP       , 0xbe01, "AbstractCalendarItem"},
+    {USB_PTP_FLAVOR_MTP       , 0xbe02, "vCalendar1"},
+    {USB_PTP_FLAVOR_MTP       , 0xbe03, "vCalendar2"},
+    {USB_PTP_FLAVOR_MTP       , 0xbe80, "UndefinedWindowsExecutable"},
+    {USB_PTP_FLAVOR_MTP       , 0xbe81, "MediaCast"},
+    {USB_PTP_FLAVOR_MTP       , 0xbe82, "Section"}
+};
+/* PTP_OPC MTP Object Properties */
+static const value_string_masked_t usb_ptp_opc_mvals[] = {
+    {USB_PTP_FLAVOR_ALL       , 0xb104, "WirelessConfigurationFile"},
+    {USB_PTP_FLAVOR_ALL       , 0xd901, "BuyFlag"},
+    {USB_PTP_FLAVOR_ALL       , 0xdc01, "StorageID"},
+    {USB_PTP_FLAVOR_ALL       , 0xdc02, "ObjectFormat"},
+    {USB_PTP_FLAVOR_ALL       , 0xdc03, "ProtectionStatus"},
+    {USB_PTP_FLAVOR_ALL       , 0xdc04, "ObjectSize"},
+    {USB_PTP_FLAVOR_ALL       , 0xdc05, "AssociationType"},
+    {USB_PTP_FLAVOR_ALL       , 0xdc06, "AssociationDesc"},
+    {USB_PTP_FLAVOR_ALL       , 0xdc07, "ObjectFileName"},
+    {USB_PTP_FLAVOR_ALL       , 0xdc08, "DateCreated"},
+    {USB_PTP_FLAVOR_ALL       , 0xdc09, "DateModified"},
+    {USB_PTP_FLAVOR_ALL       , 0xdc0a, "Keywords"},
+    {USB_PTP_FLAVOR_ALL       , 0xdc0b, "ParentObject"},
+    {USB_PTP_FLAVOR_ALL       , 0xdc0c, "AllowedFolderContents"},
+    {USB_PTP_FLAVOR_ALL       , 0xdc0d, "Hidden"},
+    {USB_PTP_FLAVOR_ALL       , 0xdc0e, "SystemObject"},
+    {USB_PTP_FLAVOR_ALL       , 0xdc41, "PersistantUniqueObjectIdentifier"},
+    {USB_PTP_FLAVOR_ALL       , 0xdc42, "SyncID"},
+    {USB_PTP_FLAVOR_ALL       , 0xdc43, "PropertyBag"},
+    {USB_PTP_FLAVOR_ALL       , 0xdc44, "Name"},
+    {USB_PTP_FLAVOR_ALL       , 0xdc45, "CreatedBy"},
+    {USB_PTP_FLAVOR_ALL       , 0xdc46, "Artist"},
+    {USB_PTP_FLAVOR_ALL       , 0xdc47, "DateAuthored"},
+    {USB_PTP_FLAVOR_ALL       , 0xdc48, "Description"},
+    {USB_PTP_FLAVOR_ALL       , 0xdc49, "URLReference"},
+    {USB_PTP_FLAVOR_ALL       , 0xdc4a, "LanguageLocale"},
+    {USB_PTP_FLAVOR_ALL       , 0xdc4b, "CopyrightInformation"},
+    {USB_PTP_FLAVOR_ALL       , 0xdc4c, "Source"},
+    {USB_PTP_FLAVOR_ALL       , 0xdc4d, "OriginLocation"},
+    {USB_PTP_FLAVOR_ALL       , 0xdc4e, "DateAdded"},
+    {USB_PTP_FLAVOR_ALL       , 0xdc4f, "NonConsumable"},
+    {USB_PTP_FLAVOR_ALL       , 0xdc50, "CorruptOrUnplayable"},
+    {USB_PTP_FLAVOR_ALL       , 0xdc51, "ProducerSerialNumber"},
+    {USB_PTP_FLAVOR_ALL       , 0xdc81, "RepresentativeSampleFormat"},
+    {USB_PTP_FLAVOR_ALL       , 0xdc82, "RepresentativeSampleSize"},
+    {USB_PTP_FLAVOR_ALL       , 0xdc83, "RepresentativeSampleHeight"},
+    {USB_PTP_FLAVOR_ALL       , 0xdc84, "RepresentativeSampleWidth"},
+    {USB_PTP_FLAVOR_ALL       , 0xdc85, "RepresentativeSampleDuration"},
+    {USB_PTP_FLAVOR_ALL       , 0xdc86, "RepresentativeSampleData"},
+    {USB_PTP_FLAVOR_ALL       , 0xdc87, "Width"},
+    {USB_PTP_FLAVOR_ALL       , 0xdc88, "Height"},
+    {USB_PTP_FLAVOR_ALL       , 0xdc89, "Duration"},
+    {USB_PTP_FLAVOR_ALL       , 0xdc8a, "Rating"},
+    {USB_PTP_FLAVOR_ALL       , 0xdc8b, "Track"},
+    {USB_PTP_FLAVOR_ALL       , 0xdc8c, "Genre"},
+    {USB_PTP_FLAVOR_ALL       , 0xdc8d, "Credits"},
+    {USB_PTP_FLAVOR_ALL       , 0xdc8e, "Lyrics"},
+    {USB_PTP_FLAVOR_ALL       , 0xdc8f, "SubscriptionContentID"},
+    {USB_PTP_FLAVOR_ALL       , 0xdc90, "ProducedBy"},
+    {USB_PTP_FLAVOR_ALL       , 0xdc91, "UseCount"},
+    {USB_PTP_FLAVOR_ALL       , 0xdc92, "SkipCount"},
+    {USB_PTP_FLAVOR_ALL       , 0xdc93, "LastAccessed"},
+    {USB_PTP_FLAVOR_ALL       , 0xdc94, "ParentalRating"},
+    {USB_PTP_FLAVOR_ALL       , 0xdc95, "MetaGenre"},
+    {USB_PTP_FLAVOR_ALL       , 0xdc96, "Composer"},
+    {USB_PTP_FLAVOR_ALL       , 0xdc97, "EffectiveRating"},
+    {USB_PTP_FLAVOR_ALL       , 0xdc98, "Subtitle"},
+    {USB_PTP_FLAVOR_ALL       , 0xdc99, "OriginalReleaseDate"},
+    {USB_PTP_FLAVOR_ALL       , 0xdc9a, "AlbumName"},
+    {USB_PTP_FLAVOR_ALL       , 0xdc9b, "AlbumArtist"},
+    {USB_PTP_FLAVOR_ALL       , 0xdc9c, "Mood"},
+    {USB_PTP_FLAVOR_ALL       , 0xdc9d, "DRMStatus"},
+    {USB_PTP_FLAVOR_ALL       , 0xdc9e, "SubDescription"},
+    {USB_PTP_FLAVOR_ALL       , 0xdcd1, "IsCropped"},
+    {USB_PTP_FLAVOR_ALL       , 0xdcd2, "IsColorCorrected"},
+    {USB_PTP_FLAVOR_ALL       , 0xdcd3, "ImageBitDepth"},
+    {USB_PTP_FLAVOR_ALL       , 0xdcd4, "Fnumber"},
+    {USB_PTP_FLAVOR_ALL       , 0xdcd5, "ExposureTime"},
+    {USB_PTP_FLAVOR_ALL       , 0xdcd6, "ExposureIndex"},
+    {USB_PTP_FLAVOR_ALL       , 0xdce0, "DisplayName"},
+    {USB_PTP_FLAVOR_ALL       , 0xdce1, "BodyText"},
+    {USB_PTP_FLAVOR_ALL       , 0xdce2, "Subject"},
+    {USB_PTP_FLAVOR_ALL       , 0xdce3, "Priority"},
+    {USB_PTP_FLAVOR_ALL       , 0xdd00, "GivenName"},
+    {USB_PTP_FLAVOR_ALL       , 0xdd01, "MiddleNames"},
+    {USB_PTP_FLAVOR_ALL       , 0xdd02, "FamilyName"},
+    {USB_PTP_FLAVOR_ALL       , 0xdd03, "Prefix"},
+    {USB_PTP_FLAVOR_ALL       , 0xdd04, "Suffix"},
+    {USB_PTP_FLAVOR_ALL       , 0xdd05, "PhoneticGivenName"},
+    {USB_PTP_FLAVOR_ALL       , 0xdd06, "PhoneticFamilyName"},
+    {USB_PTP_FLAVOR_ALL       , 0xdd07, "EmailPrimary"},
+    {USB_PTP_FLAVOR_ALL       , 0xdd08, "EmailPersonal1"},
+    {USB_PTP_FLAVOR_ALL       , 0xdd09, "EmailPersonal2"},
+    {USB_PTP_FLAVOR_ALL       , 0xdd0a, "EmailBusiness1"},
+    {USB_PTP_FLAVOR_ALL       , 0xdd0b, "EmailBusiness2"},
+    {USB_PTP_FLAVOR_ALL       , 0xdd0c, "EmailOthers"},
+    {USB_PTP_FLAVOR_ALL       , 0xdd0d, "PhoneNumberPrimary"},
+    {USB_PTP_FLAVOR_ALL       , 0xdd0e, "PhoneNumberPersonal"},
+    {USB_PTP_FLAVOR_ALL       , 0xdd0f, "PhoneNumberPersonal2"},
+    {USB_PTP_FLAVOR_ALL       , 0xdd10, "PhoneNumberBusiness"},
+    {USB_PTP_FLAVOR_ALL       , 0xdd11, "PhoneNumberBusiness2"},
+    {USB_PTP_FLAVOR_ALL       , 0xdd12, "PhoneNumberMobile"},
+    {USB_PTP_FLAVOR_ALL       , 0xdd13, "PhoneNumberMobile2"},
+    {USB_PTP_FLAVOR_ALL       , 0xdd14, "FaxNumberPrimary"},
+    {USB_PTP_FLAVOR_ALL       , 0xdd15, "FaxNumberPersonal"},
+    {USB_PTP_FLAVOR_ALL       , 0xdd16, "FaxNumberBusiness"},
+    {USB_PTP_FLAVOR_ALL       , 0xdd17, "PagerNumber"},
+    {USB_PTP_FLAVOR_ALL       , 0xdd18, "PhoneNumberOthers"},
+    {USB_PTP_FLAVOR_ALL       , 0xdd19, "PrimaryWebAddress"},
+    {USB_PTP_FLAVOR_ALL       , 0xdd1a, "PersonalWebAddress"},
+    {USB_PTP_FLAVOR_ALL       , 0xdd1b, "BusinessWebAddress"},
+    {USB_PTP_FLAVOR_ALL       , 0xdd1c, "InstantMessengerAddress"},
+    {USB_PTP_FLAVOR_ALL       , 0xdd1d, "InstantMessengerAddress2"},
+    {USB_PTP_FLAVOR_ALL       , 0xdd1e, "InstantMessengerAddress3"},
+    {USB_PTP_FLAVOR_ALL       , 0xdd1f, "PostalAddressPersonalFull"},
+    {USB_PTP_FLAVOR_ALL       , 0xdd20, "PostalAddressPersonalFullLine1"},
+    {USB_PTP_FLAVOR_ALL       , 0xdd21, "PostalAddressPersonalFullLine2"},
+    {USB_PTP_FLAVOR_ALL       , 0xdd22, "PostalAddressPersonalFullCity"},
+    {USB_PTP_FLAVOR_ALL       , 0xdd23, "PostalAddressPersonalFullRegion"},
+    {USB_PTP_FLAVOR_ALL       , 0xdd24, "PostalAddressPersonalFullPostalCode"},
+    {USB_PTP_FLAVOR_ALL       , 0xdd25, "PostalAddressPersonalFullCountry"},
+    {USB_PTP_FLAVOR_ALL       , 0xdd26, "PostalAddressBusinessFull"},
+    {USB_PTP_FLAVOR_ALL       , 0xdd27, "PostalAddressBusinessLine1"},
+    {USB_PTP_FLAVOR_ALL       , 0xdd28, "PostalAddressBusinessLine2"},
+    {USB_PTP_FLAVOR_ALL       , 0xdd29, "PostalAddressBusinessCity"},
+    {USB_PTP_FLAVOR_ALL       , 0xdd2a, "PostalAddressBusinessRegion"},
+    {USB_PTP_FLAVOR_ALL       , 0xdd2b, "PostalAddressBusinessPostalCode"},
+    {USB_PTP_FLAVOR_ALL       , 0xdd2c, "PostalAddressBusinessCountry"},
+    {USB_PTP_FLAVOR_ALL       , 0xdd2d, "PostalAddressOtherFull"},
+    {USB_PTP_FLAVOR_ALL       , 0xdd2e, "PostalAddressOtherLine1"},
+    {USB_PTP_FLAVOR_ALL       , 0xdd2f, "PostalAddressOtherLine2"},
+    {USB_PTP_FLAVOR_ALL       , 0xdd30, "PostalAddressOtherCity"},
+    {USB_PTP_FLAVOR_ALL       , 0xdd31, "PostalAddressOtherRegion"},
+    {USB_PTP_FLAVOR_ALL       , 0xdd32, "PostalAddressOtherPostalCode"},
+    {USB_PTP_FLAVOR_ALL       , 0xdd33, "PostalAddressOtherCountry"},
+    {USB_PTP_FLAVOR_ALL       , 0xdd34, "OrganizationName"},
+    {USB_PTP_FLAVOR_ALL       , 0xdd35, "PhoneticOrganizationName"},
+    {USB_PTP_FLAVOR_ALL       , 0xdd36, "Role"},
+    {USB_PTP_FLAVOR_ALL       , 0xdd37, "Birthdate"},
+    {USB_PTP_FLAVOR_ALL       , 0xdd40, "MessageTo"},
+    {USB_PTP_FLAVOR_ALL       , 0xdd41, "MessageCC"},
+    {USB_PTP_FLAVOR_ALL       , 0xdd42, "MessageBCC"},
+    {USB_PTP_FLAVOR_ALL       , 0xdd43, "MessageRead"},
+    {USB_PTP_FLAVOR_ALL       , 0xdd44, "MessageReceivedTime"},
+    {USB_PTP_FLAVOR_ALL       , 0xdd45, "MessageSender"},
+    {USB_PTP_FLAVOR_ALL       , 0xdd50, "ActivityBeginTime"},
+    {USB_PTP_FLAVOR_ALL       , 0xdd51, "ActivityEndTime"},
+    {USB_PTP_FLAVOR_ALL       , 0xdd52, "ActivityLocation"},
+    {USB_PTP_FLAVOR_ALL       , 0xdd54, "ActivityRequiredAttendees"},
+    {USB_PTP_FLAVOR_ALL       , 0xdd55, "ActivityOptionalAttendees"},
+    {USB_PTP_FLAVOR_ALL       , 0xdd56, "ActivityResources"},
+    {USB_PTP_FLAVOR_ALL       , 0xdd57, "ActivityAccepted"},
+    {USB_PTP_FLAVOR_ALL       , 0xdd5d, "Owner"},
+    {USB_PTP_FLAVOR_ALL       , 0xdd5e, "Editor"},
+    {USB_PTP_FLAVOR_ALL       , 0xdd5f, "Webmaster"},
+    {USB_PTP_FLAVOR_ALL       , 0xdd60, "URLSource"},
+    {USB_PTP_FLAVOR_ALL       , 0xdd61, "URLDestination"},
+    {USB_PTP_FLAVOR_ALL       , 0xdd62, "TimeBookmark"},
+    {USB_PTP_FLAVOR_ALL       , 0xdd63, "ObjectBookmark"},
+    {USB_PTP_FLAVOR_ALL       , 0xdd64, "ByteBookmark"},
+    {USB_PTP_FLAVOR_ALL       , 0xdd70, "LastBuildDate"},
+    {USB_PTP_FLAVOR_ALL       , 0xdd71, "TimetoLive"},
+    {USB_PTP_FLAVOR_ALL       , 0xdd72, "MediaGUID"},
+    {USB_PTP_FLAVOR_ALL       , 0xde91, "TotalBitRate"},
+    {USB_PTP_FLAVOR_ALL       , 0xde92, "BitRateType"},
+    {USB_PTP_FLAVOR_ALL       , 0xde93, "SampleRate"},
+    {USB_PTP_FLAVOR_ALL       , 0xde94, "NumberOfChannels"},
+    {USB_PTP_FLAVOR_ALL       , 0xde95, "AudioBitDepth"},
+    {USB_PTP_FLAVOR_ALL       , 0xde97, "ScanDepth"},
+    {USB_PTP_FLAVOR_ALL       , 0xde99, "AudioWAVECodec"},
+    {USB_PTP_FLAVOR_ALL       , 0xde9a, "AudioBitRate"},
+    {USB_PTP_FLAVOR_ALL       , 0xde9b, "VideoFourCCCodec"},
+    {USB_PTP_FLAVOR_ALL       , 0xde9c, "VideoBitRate"},
+    {USB_PTP_FLAVOR_ALL       , 0xde9d, "FramesPerThousandSeconds"},
+    {USB_PTP_FLAVOR_ALL       , 0xde9e, "KeyFrameDistance"},
+    {USB_PTP_FLAVOR_ALL       , 0xde9f, "BufferSize"},
+    {USB_PTP_FLAVOR_ALL       , 0xdea0, "EncodingQuality"},
+    {USB_PTP_FLAVOR_ALL       , 0xdea1, "EncodingProfile"}
+};
+/* PTP_OPFF MTP Device Property Codes */
+static const value_string_masked_t usb_ptp_opff_mvals[] = {
+    {USB_PTP_FLAVOR_ALL       , 0x00, "None"},
+    {USB_PTP_FLAVOR_ALL       , 0x01, "Range"},
+    {USB_PTP_FLAVOR_ALL       , 0x02, "Enumeration"},
+    {USB_PTP_FLAVOR_ALL       , 0x03, "DateTime"},
+    {USB_PTP_FLAVOR_ALL       , 0x04, "FixedLengthArray"},
+    {USB_PTP_FLAVOR_ALL       , 0x05, "RegularExpression"},
+    {USB_PTP_FLAVOR_ALL       , 0x06, "ByteArray"},
+    {USB_PTP_FLAVOR_ALL       , 0xff, "LongString"}
+};
+/* PTP_PS Protection Status */
+static const value_string_masked_t usb_ptp_ps_mvals[] = {
+    {USB_PTP_FLAVOR_ALL       , 0x0000, "NoProtection"},
+    {USB_PTP_FLAVOR_ALL       , 0x0001, "ReadOnly"},
+    {USB_PTP_FLAVOR_MTP       , 0x8002, "ReadOnlyData"},
+    {USB_PTP_FLAVOR_MTP       , 0x8003, "NonTransferableData"}
+};
+/* PTP_RC Response Codes */
+static const value_string_masked_t usb_ptp_rc_mvals[] = {
+    {USB_PTP_FLAVOR_ALL       , 0x2000, "Undefined"},
+    {USB_PTP_FLAVOR_ALL       , 0x2001, "OK"},
+    {USB_PTP_FLAVOR_ALL       , 0x2002, "GeneralError"},
+    {USB_PTP_FLAVOR_ALL       , 0x2003, "SessionNotOpen"},
+    {USB_PTP_FLAVOR_ALL       , 0x2004, "InvalidTransactionID"},
+    {USB_PTP_FLAVOR_ALL       , 0x2005, "OperationNotSupported"},
+    {USB_PTP_FLAVOR_ALL       , 0x2006, "ParameterNotSupported"},
+    {USB_PTP_FLAVOR_ALL       , 0x2007, "IncompleteTransfer"},
+    {USB_PTP_FLAVOR_ALL       , 0x2008, "InvalidStorageId"},
+    {USB_PTP_FLAVOR_ALL       , 0x2009, "InvalidObjectHandle"},
+    {USB_PTP_FLAVOR_ALL       , 0x200a, "DevicePropNotSupported"},
+    {USB_PTP_FLAVOR_ALL       , 0x200b, "InvalidObjectFormatCode"},
+    {USB_PTP_FLAVOR_ALL       , 0x200c, "StoreFull"},
+    {USB_PTP_FLAVOR_ALL       , 0x200d, "ObjectWriteProtected"},
+    {USB_PTP_FLAVOR_ALL       , 0x200e, "StoreReadOnly"},
+    {USB_PTP_FLAVOR_ALL       , 0x200f, "AccessDenied"},
+    {USB_PTP_FLAVOR_ALL       , 0x2010, "NoThumbnailPresent"},
+    {USB_PTP_FLAVOR_ALL       , 0x2011, "SelfTestFailed"},
+    {USB_PTP_FLAVOR_ALL       , 0x2012, "PartialDeletion"},
+    {USB_PTP_FLAVOR_ALL       , 0x2013, "StoreNotAvailable"},
+    {USB_PTP_FLAVOR_ALL       , 0x2014, "SpecificationByFormatUnsupported"},
+    {USB_PTP_FLAVOR_ALL       , 0x2015, "NoValidObjectInfo"},
+    {USB_PTP_FLAVOR_ALL       , 0x2016, "InvalidCodeFormat"},
+    {USB_PTP_FLAVOR_ALL       , 0x2017, "UnknownVendorCode"},
+    {USB_PTP_FLAVOR_ALL       , 0x2018, "CaptureAlreadyTerminated"},
+    {USB_PTP_FLAVOR_ALL       , 0x2019, "DeviceBusy"},
+    {USB_PTP_FLAVOR_ALL       , 0x201a, "InvalidParentObject"},
+    {USB_PTP_FLAVOR_ALL       , 0x201b, "InvalidDevicePropFormat"},
+    {USB_PTP_FLAVOR_ALL       , 0x201c, "InvalidDevicePropValue"},
+    {USB_PTP_FLAVOR_ALL       , 0x201d, "InvalidParameter"},
+    {USB_PTP_FLAVOR_ALL       , 0x201e, "SessionAlreadyOpened"},
+    {USB_PTP_FLAVOR_ALL       , 0x201f, "TransactionCanceled"},
+    {USB_PTP_FLAVOR_ALL       , 0x2020, "SpecificationOfDestinationUnsupported"},
+    {USB_PTP_FLAVOR_ALL       , 0x2021, "InvalidEnumHandle"},
+    {USB_PTP_FLAVOR_ALL       , 0x2022, "NoStreamEnabled"},
+    {USB_PTP_FLAVOR_ALL       , 0x2023, "InvalidDataSet"},
+    {USB_PTP_FLAVOR_NIKON     , 0xa001, "HardwareError"},
+    {USB_PTP_FLAVOR_KODAK     , 0xa001, "FilenameRequired"},
+    {USB_PTP_FLAVOR_CANON     , 0xa001, "UNKNOWN_COMMAND"},
+    {USB_PTP_FLAVOR_KODAK     , 0xa002, "FilenameConflicts"},
+    {USB_PTP_FLAVOR_NIKON     , 0xa002, "OutOfFocus"},
+    {USB_PTP_FLAVOR_KODAK     , 0xa003, "FilenameInvalid"},
+    {USB_PTP_FLAVOR_NIKON     , 0xa003, "ChangeCameraModeFailed"},
+    {USB_PTP_FLAVOR_NIKON     , 0xa004, "InvalidStatus"},
+    {USB_PTP_FLAVOR_NIKON     , 0xa005, "SetPropertyNotSupported"},
+    {USB_PTP_FLAVOR_CANON     , 0xa005, "OPERATION_REFUSED"},
+    {USB_PTP_FLAVOR_CANON     , 0xa006, "LENS_COVER"},
+    {USB_PTP_FLAVOR_NIKON     , 0xa006, "WbResetError"},
+    {USB_PTP_FLAVOR_NIKON     , 0xa007, "DustReferenceError"},
+    {USB_PTP_FLAVOR_NIKON     , 0xa008, "ShutterSpeedBulb"},
+    {USB_PTP_FLAVOR_CANON     , 0xa009, "A009"},
+    {USB_PTP_FLAVOR_NIKON     , 0xa009, "MirrorUpSequence"},
+    {USB_PTP_FLAVOR_NIKON     , 0xa00a, "CameraModeNotAdjustFNumber"},
+    {USB_PTP_FLAVOR_NIKON     , 0xa00b, "NotLiveView"},
+    {USB_PTP_FLAVOR_NIKON     , 0xa00c, "MfDriveStepEnd"},
+    {USB_PTP_FLAVOR_NIKON     , 0xa00e, "MfDriveStepInsufficiency"},
+    {USB_PTP_FLAVOR_NIKON     , 0xa022, "AdvancedTransferCancel"},
+    {USB_PTP_FLAVOR_CANON     , 0xa101, "BATTERY_LOW"},
+    {USB_PTP_FLAVOR_CANON     , 0xa102, "NOT_READY"},
+    {USB_PTP_FLAVOR_MTP       , 0xa121, "Invalid_WFC_Syntax"},
+    {USB_PTP_FLAVOR_MTP       , 0xa122, "WFC_Version_Not_Supported"},
+    {USB_PTP_FLAVOR_MTP       , 0xa170, "Invalid_Media_Session_ID"},
+    {USB_PTP_FLAVOR_MTP       , 0xa171, "Media_Session_Limit_Reached"},
+    {USB_PTP_FLAVOR_MTP       , 0xa172, "No_More_Data"},
+    {USB_PTP_FLAVOR_MTP       , 0xa800, "Undefined"},
+    {USB_PTP_FLAVOR_MTP       , 0xa801, "Invalid_ObjectPropCode"},
+    {USB_PTP_FLAVOR_MTP       , 0xa802, "Invalid_ObjectProp_Format"},
+    {USB_PTP_FLAVOR_MTP       , 0xa803, "Invalid_ObjectProp_Value"},
+    {USB_PTP_FLAVOR_MTP       , 0xa804, "Invalid_ObjectReference"},
+    {USB_PTP_FLAVOR_MTP       , 0xa806, "Invalid_Dataset"},
+    {USB_PTP_FLAVOR_MTP       , 0xa807, "Specification_By_Group_Unsupported"},
+    {USB_PTP_FLAVOR_MTP       , 0xa808, "Specification_By_Depth_Unsupported"},
+    {USB_PTP_FLAVOR_MTP       , 0xa809, "Object_Too_Large"},
+    {USB_PTP_FLAVOR_MTP       , 0xa80a, "ObjectProp_Not_Supported"}
+};
+/* PTP_ST Storage Types */
+static const value_string_masked_t usb_ptp_st_mvals[] = {
+    {USB_PTP_FLAVOR_ALL       , 0x0000, "Undefined"},
+    {USB_PTP_FLAVOR_ALL       , 0x0001, "FixedROM"},
+    {USB_PTP_FLAVOR_ALL       , 0x0002, "RemovableROM"},
+    {USB_PTP_FLAVOR_ALL       , 0x0003, "FixedRAM"},
+    {USB_PTP_FLAVOR_ALL       , 0x0004, "RemovableRAM"}
+};
+
+/* END SEMI-AUTO Generated Code */
+
+/* PTP_VENDOR Vendor IDs */
+static const value_string usb_ptp_devinfo_vendorextensionid_vals[] = {
+    {0x00000001,"EASTMAN_KODAK"},
+    {0x00000002,"SEIKO_EPSON"},
+    {0x00000003,"AGILENT"},
+    {0x00000004,"POLAROID"},
+    {0x00000005,"AGFA_GEVAERT"},
+    {0x00000006,"MTP"}, /* MICROSOFT */
+    {0x00000007,"EQUINOX"},
+    {0x00000008,"VIEWQUEST"},
+    {0x00000009,"STMICROELECTRONICS"},
+    {0x0000000A,"NIKON"},
+    {0x0000000B,"CANON"},
+    {0x0000000C,"FOTONATION"},
+    {0x0000000D,"PENTAX"},
+    {0x0000000E,"FUJI"},
+    {0xffffffff,"MTP"}
+};
diff -x '*.rej' -x '*.orig' -urpN wireshark-3.4.0.orig/tools/usb-ptp-extract-models.pl wireshark-3.4.0/tools/usb-ptp-extract-models.pl
--- wireshark-3.4.0.orig/tools/usb-ptp-extract-models.pl	2020-10-29 11:55:07.000000000 -0700
+++ wireshark-3.4.0/tools/usb-ptp-extract-models.pl	2020-11-09 20:42:58.506158537 -0800
@@ -10,14 +10,16 @@
 # 
 # SPDX-License-Identifier: GPL-2.0-or-later
 
-my $path = shift @ARGV || '.';
 
 $re_hex = '0x[0-9a-f]+';
 
-parse_file("$path/library.c",1);
-parse_file("$path/music-players.h",0);
+my $result1 = `wget -q -O library.c http://sourceforge.net/p/gphoto/code/HEAD/tree/trunk/libgphoto2/camlibs/ptp2/library.c?format=raw`;
+my $result2 = `wget -q -O music-players.h http://sourceforge.net/p/gphoto/code/HEAD/tree/trunk/libgphoto2/camlibs/ptp2/music-players.h?format=raw`;
 
-open (O,"> tools/usb-ptp-extract-models.txt") or die $!;
+parse_file("./library.c",1);
+parse_file("./music-players.h",0);
+
+open (O,"> ./usb-ptp-extract-models.txt") or die $!;
 
 foreach my $vendor (sort {hex($a) <=> hex($b)} keys %devices) {
     my $p = $devices{$vendor};
diff -x '*.rej' -x '*.orig' -urpN wireshark-3.4.0.orig/tools/usb-ptp-extract-tables.pl wireshark-3.4.0/tools/usb-ptp-extract-tables.pl
--- wireshark-3.4.0.orig/tools/usb-ptp-extract-tables.pl	1969-12-31 16:00:00.000000000 -0800
+++ wireshark-3.4.0/tools/usb-ptp-extract-tables.pl	2020-11-09 20:42:58.506158537 -0800
@@ -0,0 +1,124 @@
+#!/usr/bin/perl -w
+# 
+# $Id$
+# 
+# USB PTP Dissector
+#    Extracts PTP response codes from libgphoto2
+#  This is then hand-merged into packet-usb-ptp.h
+# 
+# (c)2013 Max Baker <max@warped.org>
+# 
+# This program is free software; you can redistribute it and/or
+# modify it under the terms of the GNU General Public License
+# as published by the Free Software Foundation; either version 2
+# of the License, or (at your option) any later version.
+# 
+# This program is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+# 
+# You should have received a copy of the GNU General Public License
+# along with this program; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
+
+my $result = `wget -q -O ptp.h http://sourceforge.net/p/gphoto/code/HEAD/tree/trunk/libgphoto2/camlibs/ptp2/ptp.h?format=raw`;
+$file = 'ptp.h';
+
+%tables = (
+'PTP_AC' => 'StorageInfo Access Capability',
+'PTP_AT' => 'Association Types',
+'PTP_DPC' => 'Device Properties Codes',
+'PTP_DPFF' => 'Device Property Form Flag',
+'PTP_DPGS' => 'Device Property GetSet type',
+'PTP_DTC' => 'Data Type Codes',
+'PTP_EC' => 'Event Codes',
+'PTP_FST' => 'FilesystemType Values',
+'PTP_GOH' => 'GetObjectHandles',
+'PTP_OC' => 'Operation Codes',
+'PTP_OFC' => 'Object Format Codes',
+'PTP_OPC' => 'MTP Object Properties',
+'PTP_OPFF' => 'MTP Device Property Codes',
+'PTP_PS' => 'Protection Status',
+'PTP_RC' => 'Response Codes',
+'PTP_ST' => 'Storage Types',
+'PTP_FLAVOR' => 'Vendor IDs',
+);
+
+%Flavors = qw/
+ANDROID     USB_PTP_FLAVOR_ANDROID
+CANON       USB_PTP_FLAVOR_CANON
+CANON_EOS   USB_PTP_FLAVOR_CANON
+CASIO       USB_PTP_FLAVOR_CASIO
+EK          USB_PTP_FLAVOR_KODAK
+FUJI        USB_PTP_FLAVOR_FUJI
+MTP         USB_PTP_FLAVOR_MTP
+NIKON       USB_PTP_FLAVOR_NIKON
+OLYMPUS     USB_PTP_FLAVOR_OLYMPUS
+/;
+
+$re_hex = '0x[0-9a-f]+';
+
+open (H,"<$file") or die;
+while (<H>) {
+    chomp;
+
+    next unless /^\s*#define\s+(\S+)\s+(.*)$/;
+    
+    my ($define,$val) = ($1,$2);
+    # strip c-style comment
+    $val =~ s,/\*.*\*/,,;
+    $val =~ s,//.*,,;
+    $val =~ s/^\s*//g;
+    $val =~ s/\s*$//g;
+
+    #print "$define=$val\n";
+    $D{$define}=$val;
+}
+
+close H;
+
+# Output tables
+foreach my $table (sort keys %tables) {
+    output_table($table, $tables{$table});
+}
+
+sub output_table {
+    my ($table,$desc) = @_;
+
+    my $id = lc($table);
+    $id =~ s/^PTP_//i;
+
+    print "/* $table $desc */\n";
+    print "static const value_string_masked usb_ptp_${id}_mvals\[\] = {\n";
+    my @vals;
+    DEFINE:
+    foreach my $define (sort sort_D keys %D) {
+        next unless $define =~ /^${table}_(.*)/i;
+        my $subdefine = $1;
+
+        my $type = 'USB_PTP_FLAVOR_ALL';
+        foreach my $flavor (sort {length($b) <=> length($a)} keys %Flavors) {
+            next unless $subdefine =~ s/^${flavor}_//i;
+            $type = $Flavors{$flavor}
+        }
+
+        # Ok, not a subflavor
+        push @vals, sprintf("    {%-25s, %s, \"%s\"}",$type,lc($D{$define}),$subdefine);
+    }
+    print join(",\n",@vals),"\n";
+    print "};\n";
+}
+
+
+sub sort_D {
+    my $aa = $D{$a};
+    $aa = hex($aa) if $aa=~/^${re_hex}$/i;
+    $bb = $D{$b} || $b;
+    $bb = hex($bb) if $bb=~/^${re_hex}$/i;
+
+    if ($aa =~ /^\d+$/ and $bb=~/^\d+$/) {
+        return $aa <=> $bb;
+    }
+    return $aa cmp $bb;
+}
diff -x '*.rej' -x '*.orig' -urpN wireshark-3.4.0.orig/tools/usb-ptp-extract-tables.txt wireshark-3.4.0/tools/usb-ptp-extract-tables.txt
--- wireshark-3.4.0.orig/tools/usb-ptp-extract-tables.txt	1969-12-31 16:00:00.000000000 -0800
+++ wireshark-3.4.0/tools/usb-ptp-extract-tables.txt	2020-11-09 20:42:58.506158537 -0800
@@ -0,0 +1,1557 @@
+/* PTP_AC StorageInfo Access Capability */
+static const value_string_masked usb_ptp_ac_mvals[] = {
+    {USB_PTP_FLAVOR_ALL       , 0x0000, "ReadWrite"},
+    {USB_PTP_FLAVOR_ALL       , 0x0001, "ReadOnly"},
+    {USB_PTP_FLAVOR_ALL       , 0x0002, "ReadOnly_with_Object_Deletion"}
+};
+/* PTP_AT Association Types */
+static const value_string_masked usb_ptp_at_mvals[] = {
+    {USB_PTP_FLAVOR_ALL       , 0x0000, "Undefined"},
+    {USB_PTP_FLAVOR_ALL       , 0x0001, "GenericFolder"},
+    {USB_PTP_FLAVOR_ALL       , 0x0002, "Album"},
+    {USB_PTP_FLAVOR_ALL       , 0x0003, "TimeSequence"},
+    {USB_PTP_FLAVOR_ALL       , 0x0004, "HorizontalPanoramic"},
+    {USB_PTP_FLAVOR_ALL       , 0x0005, "VerticalPanoramic"},
+    {USB_PTP_FLAVOR_ALL       , 0x0006, "2DPanoramic"},
+    {USB_PTP_FLAVOR_ALL       , 0x0007, "AncillaryData"}
+};
+/* PTP_DPC Device Properties Codes */
+static const value_string_masked usb_ptp_dpc_mvals[] = {
+    {USB_PTP_FLAVOR_ALL       , 0x5000, "Undefined"},
+    {USB_PTP_FLAVOR_ALL       , 0x5001, "BatteryLevel"},
+    {USB_PTP_FLAVOR_ALL       , 0x5002, "FunctionalMode"},
+    {USB_PTP_FLAVOR_ALL       , 0x5003, "ImageSize"},
+    {USB_PTP_FLAVOR_ALL       , 0x5004, "CompressionSetting"},
+    {USB_PTP_FLAVOR_ALL       , 0x5005, "WhiteBalance"},
+    {USB_PTP_FLAVOR_ALL       , 0x5006, "RGBGain"},
+    {USB_PTP_FLAVOR_ALL       , 0x5007, "FNumber"},
+    {USB_PTP_FLAVOR_ALL       , 0x5008, "FocalLength"},
+    {USB_PTP_FLAVOR_ALL       , 0x5009, "FocusDistance"},
+    {USB_PTP_FLAVOR_ALL       , 0x500a, "FocusMode"},
+    {USB_PTP_FLAVOR_ALL       , 0x500b, "ExposureMeteringMode"},
+    {USB_PTP_FLAVOR_ALL       , 0x500c, "FlashMode"},
+    {USB_PTP_FLAVOR_ALL       , 0x500d, "ExposureTime"},
+    {USB_PTP_FLAVOR_ALL       , 0x500e, "ExposureProgramMode"},
+    {USB_PTP_FLAVOR_ALL       , 0x500f, "ExposureIndex"},
+    {USB_PTP_FLAVOR_ALL       , 0x5010, "ExposureBiasCompensation"},
+    {USB_PTP_FLAVOR_ALL       , 0x5011, "DateTime"},
+    {USB_PTP_FLAVOR_ALL       , 0x5012, "CaptureDelay"},
+    {USB_PTP_FLAVOR_ALL       , 0x5013, "StillCaptureMode"},
+    {USB_PTP_FLAVOR_ALL       , 0x5014, "Contrast"},
+    {USB_PTP_FLAVOR_ALL       , 0x5015, "Sharpness"},
+    {USB_PTP_FLAVOR_ALL       , 0x5016, "DigitalZoom"},
+    {USB_PTP_FLAVOR_ALL       , 0x5017, "EffectMode"},
+    {USB_PTP_FLAVOR_ALL       , 0x5018, "BurstNumber"},
+    {USB_PTP_FLAVOR_ALL       , 0x5019, "BurstInterval"},
+    {USB_PTP_FLAVOR_ALL       , 0x501a, "TimelapseNumber"},
+    {USB_PTP_FLAVOR_ALL       , 0x501b, "TimelapseInterval"},
+    {USB_PTP_FLAVOR_ALL       , 0x501c, "FocusMeteringMode"},
+    {USB_PTP_FLAVOR_ALL       , 0x501d, "UploadURL"},
+    {USB_PTP_FLAVOR_ALL       , 0x501e, "Artist"},
+    {USB_PTP_FLAVOR_ALL       , 0x501f, "CopyrightInfo"},
+    {USB_PTP_FLAVOR_ALL       , 0x5020, "SupportedStreams"},
+    {USB_PTP_FLAVOR_ALL       , 0x5021, "EnabledStreams"},
+    {USB_PTP_FLAVOR_ALL       , 0x5022, "VideoFormat"},
+    {USB_PTP_FLAVOR_ALL       , 0x5023, "VideoResolution"},
+    {USB_PTP_FLAVOR_ALL       , 0x5024, "VideoQuality"},
+    {USB_PTP_FLAVOR_ALL       , 0x5025, "VideoFrameRate"},
+    {USB_PTP_FLAVOR_ALL       , 0x5026, "VideoContrast"},
+    {USB_PTP_FLAVOR_ALL       , 0x5027, "VideoBrightness"},
+    {USB_PTP_FLAVOR_ALL       , 0x5028, "AudioFormat"},
+    {USB_PTP_FLAVOR_ALL       , 0x502a, "AudioSamplingRate"},
+    {USB_PTP_FLAVOR_ALL       , 0x502b, "AudioBitPerSample"},
+    {USB_PTP_FLAVOR_ALL       , 0x502c, "AudioVolume"},
+    {USB_PTP_FLAVOR_ALL       , 0x5029, "AudioBitrate"},
+    {USB_PTP_FLAVOR_ALL       , 0xd000, "EXTENSION"},
+    {USB_PTP_FLAVOR_KODAK     , 0xd001, "ColorTemperature"},
+    {USB_PTP_FLAVOR_CASIO     , 0xd001, "MONITOR"},
+    {USB_PTP_FLAVOR_CANON     , 0xd001, "BeepMode"},
+    {USB_PTP_FLAVOR_CANON     , 0xd002, "BatteryKind"},
+    {USB_PTP_FLAVOR_KODAK     , 0xd002, "DateTimeStampFormat"},
+    {USB_PTP_FLAVOR_CASIO     , 0xd002, "STORAGE"},
+    {USB_PTP_FLAVOR_CANON     , 0xd003, "BatteryStatus"},
+    {USB_PTP_FLAVOR_KODAK     , 0xd003, "BeepMode"},
+    {USB_PTP_FLAVOR_CANON     , 0xd004, "UILockType"},
+    {USB_PTP_FLAVOR_CASIO     , 0xd004, "UNKNOWN_1"},
+    {USB_PTP_FLAVOR_KODAK     , 0xd004, "VideoOut"},
+    {USB_PTP_FLAVOR_KODAK     , 0xd005, "PowerSaving"},
+    {USB_PTP_FLAVOR_CASIO     , 0xd005, "UNKNOWN_2"},
+    {USB_PTP_FLAVOR_CANON     , 0xd005, "CameraMode"},
+    {USB_PTP_FLAVOR_KODAK     , 0xd006, "UI_Language"},
+    {USB_PTP_FLAVOR_CANON     , 0xd006, "ImageQuality"},
+    {USB_PTP_FLAVOR_CASIO     , 0xd007, "UNKNOWN_3"},
+    {USB_PTP_FLAVOR_CANON     , 0xd007, "FullViewFileFormat"},
+    {USB_PTP_FLAVOR_CANON     , 0xd008, "ImageSize"},
+    {USB_PTP_FLAVOR_CASIO     , 0xd008, "RECORD_LIGHT"},
+    {USB_PTP_FLAVOR_CANON     , 0xd009, "SelfTime"},
+    {USB_PTP_FLAVOR_CASIO     , 0xd009, "UNKNOWN_4"},
+    {USB_PTP_FLAVOR_CASIO     , 0xd00a, "UNKNOWN_5"},
+    {USB_PTP_FLAVOR_CANON     , 0xd00a, "FlashMode"},
+    {USB_PTP_FLAVOR_CANON     , 0xd00b, "Beep"},
+    {USB_PTP_FLAVOR_CASIO     , 0xd00b, "MOVIE_MODE"},
+    {USB_PTP_FLAVOR_CANON     , 0xd00c, "ShootingMode"},
+    {USB_PTP_FLAVOR_CASIO     , 0xd00c, "HD_SETTING"},
+    {USB_PTP_FLAVOR_CASIO     , 0xd00d, "HS_SETTING"},
+    {USB_PTP_FLAVOR_CANON     , 0xd00d, "ImageMode"},
+    {USB_PTP_FLAVOR_CANON     , 0xd00e, "DriveMode"},
+    {USB_PTP_FLAVOR_CASIO     , 0xd00f, "CS_HIGH_SPEED"},
+    {USB_PTP_FLAVOR_CANON     , 0xd00f, "EZoom"},
+    {USB_PTP_FLAVOR_CASIO     , 0xd010, "CS_UPPER_LIMIT"},
+    {USB_PTP_FLAVOR_CANON     , 0xd010, "MeteringMode"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd010, "ShootingBank"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd011, "ShootingBankNameA"},
+    {USB_PTP_FLAVOR_CANON     , 0xd011, "AFDistance"},
+    {USB_PTP_FLAVOR_CASIO     , 0xd011, "CS_SHOT"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd012, "ShootingBankNameB"},
+    {USB_PTP_FLAVOR_CANON     , 0xd012, "FocusingPoint"},
+    {USB_PTP_FLAVOR_CASIO     , 0xd012, "UNKNOWN_6"},
+    {USB_PTP_FLAVOR_CANON     , 0xd013, "WhiteBalance"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd013, "ShootingBankNameC"},
+    {USB_PTP_FLAVOR_CASIO     , 0xd013, "UNKNOWN_7"},
+    {USB_PTP_FLAVOR_CANON     , 0xd014, "SlowShutterSetting"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd014, "ShootingBankNameD"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd015, "ResetBank0"},
+    {USB_PTP_FLAVOR_CANON     , 0xd015, "AFMode"},
+    {USB_PTP_FLAVOR_CASIO     , 0xd015, "UNKNOWN_8"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd016, "RawCompression"},
+    {USB_PTP_FLAVOR_CANON     , 0xd016, "ImageStabilization"},
+    {USB_PTP_FLAVOR_FUJI      , 0xd017, "ColorTemperature"},
+    {USB_PTP_FLAVOR_CANON     , 0xd017, "Contrast"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd017, "WhiteBalanceAutoBias"},
+    {USB_PTP_FLAVOR_CASIO     , 0xd017, "UNKNOWN_9"},
+    {USB_PTP_FLAVOR_CANON     , 0xd018, "ColorGain"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd018, "WhiteBalanceTungstenBias"},
+    {USB_PTP_FLAVOR_CASIO     , 0xd018, "UNKNOWN_10"},
+    {USB_PTP_FLAVOR_FUJI      , 0xd018, "Quality"},
+    {USB_PTP_FLAVOR_CASIO     , 0xd019, "UNKNOWN_11"},
+    {USB_PTP_FLAVOR_CANON     , 0xd019, "Sharpness"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd019, "WhiteBalanceFluorescentBias"},
+    {USB_PTP_FLAVOR_CANON     , 0xd01a, "Sensitivity"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd01a, "WhiteBalanceDaylightBias"},
+    {USB_PTP_FLAVOR_CASIO     , 0xd01a, "UNKNOWN_12"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd01b, "WhiteBalanceFlashBias"},
+    {USB_PTP_FLAVOR_CASIO     , 0xd01b, "UNKNOWN_13"},
+    {USB_PTP_FLAVOR_CANON     , 0xd01b, "ParameterSet"},
+    {USB_PTP_FLAVOR_CASIO     , 0xd01c, "UNKNOWN_14"},
+    {USB_PTP_FLAVOR_CANON     , 0xd01c, "ISOSpeed"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd01c, "WhiteBalanceCloudyBias"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd01d, "WhiteBalanceShadeBias"},
+    {USB_PTP_FLAVOR_CASIO     , 0xd01d, "UNKNOWN_15"},
+    {USB_PTP_FLAVOR_CANON     , 0xd01d, "Aperture"},
+    {USB_PTP_FLAVOR_CANON     , 0xd01e, "ShutterSpeed"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd01e, "WhiteBalanceColorTemperature"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd01f, "WhiteBalancePresetNo"},
+    {USB_PTP_FLAVOR_CANON     , 0xd01f, "ExpCompensation"},
+    {USB_PTP_FLAVOR_CANON     , 0xd020, "FlashCompensation"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd020, "WhiteBalancePresetName0"},
+    {USB_PTP_FLAVOR_CASIO     , 0xd020, "UNKNOWN_16"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd021, "WhiteBalancePresetName1"},
+    {USB_PTP_FLAVOR_CANON     , 0xd021, "AEBExposureCompensation"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd022, "WhiteBalancePresetName2"},
+    {USB_PTP_FLAVOR_CANON     , 0xd023, "AvOpen"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd023, "WhiteBalancePresetName3"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd024, "WhiteBalancePresetName4"},
+    {USB_PTP_FLAVOR_CANON     , 0xd024, "AvMax"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd025, "WhiteBalancePresetVal0"},
+    {USB_PTP_FLAVOR_CANON     , 0xd025, "FocalLength"},
+    {USB_PTP_FLAVOR_CANON     , 0xd026, "FocalLengthTele"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd026, "WhiteBalancePresetVal1"},
+    {USB_PTP_FLAVOR_CANON     , 0xd027, "FocalLengthWide"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd027, "WhiteBalancePresetVal2"},
+    {USB_PTP_FLAVOR_CANON     , 0xd028, "FocalLengthDenominator"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd028, "WhiteBalancePresetVal3"},
+    {USB_PTP_FLAVOR_CANON     , 0xd029, "CaptureTransferMode"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd029, "WhiteBalancePresetVal4"},
+    {USB_PTP_FLAVOR_CANON     , 0xd02a, "Zoom"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd02a, "ImageSharpening"},
+    {USB_PTP_FLAVOR_CANON     , 0xd02b, "NamePrefix"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd02b, "ToneCompensation"},
+    {USB_PTP_FLAVOR_CANON     , 0xd02c, "SizeQualityMode"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd02c, "ColorModel"},
+    {USB_PTP_FLAVOR_CANON     , 0xd02d, "SupportedThumbSize"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd02d, "HueAdjustment"},
+    {USB_PTP_FLAVOR_CANON     , 0xd02e, "SizeOfOutputDataFromCamera"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd02e, "NonCPULensDataFocalLength"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd02f, "NonCPULensDataMaximumAperture"},
+    {USB_PTP_FLAVOR_CANON     , 0xd02f, "SizeOfInputDataToCamera"},
+    {USB_PTP_FLAVOR_CANON     , 0xd030, "RemoteAPIVersion"},
+    {USB_PTP_FLAVOR_CASIO     , 0xd030, "UNKNOWN_17"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd030, "ShootingMode"},
+    {USB_PTP_FLAVOR_CANON     , 0xd031, "FirmwareVersion"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd031, "JPEG_Compression_Policy"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd032, "ColorSpace"},
+    {USB_PTP_FLAVOR_CANON     , 0xd032, "CameraModel"},
+    {USB_PTP_FLAVOR_CANON     , 0xd033, "CameraOwner"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd033, "AutoDXCrop"},
+    {USB_PTP_FLAVOR_CANON     , 0xd034, "UnixTime"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd034, "FlickerReduction"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd035, "RemoteMode"},
+    {USB_PTP_FLAVOR_CANON     , 0xd035, "CameraBodyID"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd036, "VideoMode"},
+    {USB_PTP_FLAVOR_CANON     , 0xd036, "CameraOutput"},
+    {USB_PTP_FLAVOR_CANON     , 0xd037, "DispAv"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd037, "EffectMode"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd038, "1_Mode"},
+    {USB_PTP_FLAVOR_CANON     , 0xd038, "AvOpenApex"},
+    {USB_PTP_FLAVOR_CANON     , 0xd039, "DZoomMagnification"},
+    {USB_PTP_FLAVOR_CANON     , 0xd03a, "MlSpotPos"},
+    {USB_PTP_FLAVOR_CANON     , 0xd03b, "DispAvMax"},
+    {USB_PTP_FLAVOR_CANON     , 0xd03c, "AvMaxApex"},
+    {USB_PTP_FLAVOR_CANON     , 0xd03d, "EZoomStartPosition"},
+    {USB_PTP_FLAVOR_CANON     , 0xd03e, "FocalLengthOfTele"},
+    {USB_PTP_FLAVOR_CANON     , 0xd03f, "EZoomSizeOfTele"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd040, "CSMMenuBankSelect"},
+    {USB_PTP_FLAVOR_CANON     , 0xd040, "PhotoEffect"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd041, "MenuBankNameA"},
+    {USB_PTP_FLAVOR_CANON     , 0xd041, "AssistLight"},
+    {USB_PTP_FLAVOR_CANON     , 0xd042, "FlashQuantityCount"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd042, "MenuBankNameB"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd043, "MenuBankNameC"},
+    {USB_PTP_FLAVOR_CANON     , 0xd043, "RotationAngle"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd044, "MenuBankNameD"},
+    {USB_PTP_FLAVOR_CANON     , 0xd044, "RotationScene"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd045, "ResetBank"},
+    {USB_PTP_FLAVOR_CANON     , 0xd045, "EventEmulateMode"},
+    {USB_PTP_FLAVOR_CANON     , 0xd046, "DPOFVersion"},
+    {USB_PTP_FLAVOR_CANON     , 0xd047, "TypeOfSupportedSlideShow"},
+    {USB_PTP_FLAVOR_CANON     , 0xd048, "AverageFilesizes"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd048, "A1AFCModePriority"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd049, "A2AFSModePriority"},
+    {USB_PTP_FLAVOR_CANON     , 0xd049, "ModelID"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd04a, "A3GroupDynamicAF"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd04b, "A4AFActivation"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd04c, "FocusAreaIllumManualFocus"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd04d, "FocusAreaIllumContinuous"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd04e, "FocusAreaIllumWhenSelected"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd04f, "FocusAreaWrap"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd050, "VerticalAFON"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd051, "AFLockOn"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd052, "FocusAreaZone"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd053, "EnableCopyright"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd054, "ISOAuto"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd055, "EVISOStep"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd056, "EVStep"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd057, "EVStepExposureComp"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd058, "ExposureCompensation"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd059, "CenterWeightArea"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd05a, "ExposureBaseMatrix"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd05b, "ExposureBaseCenter"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd05c, "ExposureBaseSpot"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd05d, "LiveViewAFArea"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd05e, "AELockMode"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd05f, "AELAFLMode"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd061, "LiveViewAFFocus"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd062, "MeterOff"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd063, "SelfTimer"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd064, "MonitorOff"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd065, "ImgConfTime"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd066, "AutoOffTimers"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd067, "AngleLevel"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd068, "D1ShootingSpeed"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd069, "D2MaximumShots"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd06a, "ExposureDelayMode"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd06b, "LongExposureNoiseReduction"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd06c, "FileNumberSequence"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd06d, "ControlPanelFinderRearControl"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd06e, "ControlPanelFinderViewfinder"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd06f, "D7Illumination"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd070, "NrHighISO"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd071, "SHSET_CH_GUID_DISP"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd072, "ArtistName"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd073, "CopyrightInfo"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd074, "FlashSyncSpeed"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd075, "FlashShutterSpeed"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd076, "E3AAFlashMode"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd077, "E4ModelingFlash"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd078, "BracketSet"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd079, "E6ManualModeBracketing"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd07a, "BracketOrder"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd07b, "E8AutoBracketSelection"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd07c, "BracketingSet"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd080, "F1CenterButtonShootingMode"},
+    {USB_PTP_FLAVOR_CASIO     , 0xd080, "UNKNOWN_18"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd081, "CenterButtonPlaybackMode"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd082, "F2Multiselector"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd083, "F3PhotoInfoPlayback"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd084, "F4AssignFuncButton"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd085, "F5CustomizeCommDials"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd086, "ReverseCommandDial"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd087, "ApertureSetting"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd088, "MenusAndPlayback"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd089, "F6ButtonsAndDials"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd08a, "NoCFCard"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd08b, "CenterButtonZoomRatio"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd08c, "FunctionButton2"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd08d, "AFAreaPoint"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd08e, "NormalAFOn"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd08f, "CleanImageSensor"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd090, "ImageCommentString"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd091, "ImageCommentEnable"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd092, "ImageRotation"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd093, "ManualSetLensNo"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd0a0, "MovScreenSize"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd0a1, "MovVoice"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd0a2, "MovMicrophone"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd0a3, "MovFileSlot"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd0a4, "MovRecProhibitCondition"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd0a6, "ManualMovieSetting"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd0a7, "MovQuality"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd0b2, "LiveViewScreenDisplaySetting"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd0b3, "MonitorOffDelay"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd0c0, "Bracketing"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd0c1, "AutoExposureBracketStep"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd0c2, "AutoExposureBracketProgram"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd0c3, "AutoExposureBracketCount"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd0c4, "WhiteBalanceBracketStep"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd0c5, "WhiteBalanceBracketProgram"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd0e0, "LensID"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd0e1, "LensSort"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd0e2, "LensType"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd0e3, "FocalLengthMin"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd0e4, "FocalLengthMax"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd0e5, "MaxApAtMinFocalLength"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd0e6, "MaxApAtMaxFocalLength"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd0f0, "FinderISODisp"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd0f2, "AutoOffPhoto"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd0f3, "AutoOffMenu"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd0f4, "AutoOffInfo"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd0f5, "SelfTimerShootNum"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd0f7, "VignetteCtrl"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd0f8, "AutoDistortionControl"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd0f9, "SceneMode"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd0fd, "SceneMode2"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd0fe, "SelfTimerInterval"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd100, "ExposureTime"},
+    {USB_PTP_FLAVOR_CANON     , 0xd101, "Aperture"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd101, "ACPower"},
+    {USB_PTP_FLAVOR_MTP       , 0xd101, "SecureTime"},
+    {USB_PTP_FLAVOR_OLYMPUS   , 0xd102, "ResolutionMode"},
+    {USB_PTP_FLAVOR_MTP       , 0xd102, "DeviceCertificate"},
+    {USB_PTP_FLAVOR_CANON     , 0xd102, "ShutterSpeed"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd102, "WarningStatus"},
+    {USB_PTP_FLAVOR_CANON     , 0xd103, "ISOSpeed"},
+    {USB_PTP_FLAVOR_OLYMPUS   , 0xd103, "FocusPriority"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd103, "MaximumShots"},
+    {USB_PTP_FLAVOR_MTP       , 0xd103, "RevocationInfo"},
+    {USB_PTP_FLAVOR_OLYMPUS   , 0xd104, "DriveMode"},
+    {USB_PTP_FLAVOR_CANON     , 0xd104, "ExpCompensation"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd104, "AFLockStatus"},
+    {USB_PTP_FLAVOR_CANON     , 0xd105, "AutoExposureMode"},
+    {USB_PTP_FLAVOR_OLYMPUS   , 0xd105, "DateTimeFormat"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd105, "AELockStatus"},
+    {USB_PTP_FLAVOR_CANON     , 0xd106, "DriveMode"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd106, "FVLockStatus"},
+    {USB_PTP_FLAVOR_OLYMPUS   , 0xd106, "ExposureBiasStep"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd107, "AutofocusLCDTopMode2"},
+    {USB_PTP_FLAVOR_CANON     , 0xd107, "MeteringMode"},
+    {USB_PTP_FLAVOR_OLYMPUS   , 0xd107, "WBMode"},
+    {USB_PTP_FLAVOR_CANON     , 0xd108, "FocusMode"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd108, "AutofocusArea"},
+    {USB_PTP_FLAVOR_OLYMPUS   , 0xd108, "OneTouchWB"},
+    {USB_PTP_FLAVOR_OLYMPUS   , 0xd109, "ManualWB"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd109, "FlexibleProgram"},
+    {USB_PTP_FLAVOR_CANON     , 0xd109, "WhiteBalance"},
+    {USB_PTP_FLAVOR_OLYMPUS   , 0xd10a, "ManualWBRBBias"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd10a, "LightMeter"},
+    {USB_PTP_FLAVOR_CANON     , 0xd10a, "ColorTemperature"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd10b, "RecordingMedia"},
+    {USB_PTP_FLAVOR_CANON     , 0xd10b, "WhiteBalanceAdjustA"},
+    {USB_PTP_FLAVOR_OLYMPUS   , 0xd10b, "CustomWB"},
+    {USB_PTP_FLAVOR_OLYMPUS   , 0xd10c, "CustomWBValue"},
+    {USB_PTP_FLAVOR_CANON     , 0xd10c, "WhiteBalanceAdjustB"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd10c, "USBSpeed"},
+    {USB_PTP_FLAVOR_CANON     , 0xd10d, "WhiteBalanceXA"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd10d, "CCDNumber"},
+    {USB_PTP_FLAVOR_OLYMPUS   , 0xd10d, "ExposureTimeEx"},
+    {USB_PTP_FLAVOR_OLYMPUS   , 0xd10e, "BulbMode"},
+    {USB_PTP_FLAVOR_CANON     , 0xd10e, "WhiteBalanceXB"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd10e, "CameraOrientation"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd10f, "GroupPtnType"},
+    {USB_PTP_FLAVOR_OLYMPUS   , 0xd10f, "AntiMirrorMode"},
+    {USB_PTP_FLAVOR_CANON     , 0xd10f, "ColorSpace"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd110, "FNumberLock"},
+    {USB_PTP_FLAVOR_CANON     , 0xd110, "PictureStyle"},
+    {USB_PTP_FLAVOR_OLYMPUS   , 0xd110, "AEBracketingFrame"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd111, "ExposureApertureLock"},
+    {USB_PTP_FLAVOR_CANON     , 0xd111, "BatteryPower"},
+    {USB_PTP_FLAVOR_OLYMPUS   , 0xd111, "AEBracketingStep"},
+    {USB_PTP_FLAVOR_CANON     , 0xd112, "BatterySelect"},
+    {USB_PTP_FLAVOR_OLYMPUS   , 0xd112, "WBBracketingRBFrame"},
+    {USB_PTP_FLAVOR_OLYMPUS   , 0xd112, "WBBracketingFrame"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd112, "TVLockSetting"},
+    {USB_PTP_FLAVOR_CANON     , 0xd113, "CameraTime"},
+    {USB_PTP_FLAVOR_OLYMPUS   , 0xd113, "WBBracketingRBRange"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd113, "AVLockSetting"},
+    {USB_PTP_FLAVOR_OLYMPUS   , 0xd114, "WBBracketingGMFrame"},
+    {USB_PTP_FLAVOR_CANON     , 0xd114, "AutoPowerOff"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd114, "IllumSetting"},
+    {USB_PTP_FLAVOR_OLYMPUS   , 0xd115, "WBBracketingGMRange"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd115, "FocusPointBright"},
+    {USB_PTP_FLAVOR_CANON     , 0xd115, "Owner"},
+    {USB_PTP_FLAVOR_CANON     , 0xd116, "ModelID"},
+    {USB_PTP_FLAVOR_OLYMPUS   , 0xd118, "FLBracketingFrame"},
+    {USB_PTP_FLAVOR_OLYMPUS   , 0xd119, "FLBracketingStep"},
+    {USB_PTP_FLAVOR_CANON     , 0xd119, "PTPExtensionVersion"},
+    {USB_PTP_FLAVOR_CANON     , 0xd11a, "DPOFVersion"},
+    {USB_PTP_FLAVOR_OLYMPUS   , 0xd11a, "FlashBiasCompensation"},
+    {USB_PTP_FLAVOR_CANON     , 0xd11b, "AvailableShots"},
+    {USB_PTP_FLAVOR_OLYMPUS   , 0xd11b, "ManualFocusMode"},
+    {USB_PTP_FLAVOR_CANON     , 0xd11c, "CaptureDestination"},
+    {USB_PTP_FLAVOR_OLYMPUS   , 0xd11d, "RawSaveMode"},
+    {USB_PTP_FLAVOR_CANON     , 0xd11d, "BracketMode"},
+    {USB_PTP_FLAVOR_CANON     , 0xd11e, "CurrentStorage"},
+    {USB_PTP_FLAVOR_OLYMPUS   , 0xd11e, "AUXLightMode"},
+    {USB_PTP_FLAVOR_OLYMPUS   , 0xd11f, "LensSinkMode"},
+    {USB_PTP_FLAVOR_CANON     , 0xd11f, "CurrentFolder"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd120, "ExternalFlashAttached"},
+    {USB_PTP_FLAVOR_OLYMPUS   , 0xd120, "BeepStatus"},
+    {USB_PTP_FLAVOR_CANON     , 0xd120, "ImageFormat"},
+    {USB_PTP_FLAVOR_CANON     , 0xd121, "ImageFormatCF"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd121, "ExternalFlashStatus"},
+    {USB_PTP_FLAVOR_CANON     , 0xd122, "ImageFormatSD"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd122, "ExternalFlashSort"},
+    {USB_PTP_FLAVOR_OLYMPUS   , 0xd122, "ColorSpace"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd123, "ExternalFlashMode"},
+    {USB_PTP_FLAVOR_CANON     , 0xd123, "ImageFormatExtHD"},
+    {USB_PTP_FLAVOR_OLYMPUS   , 0xd123, "ColorMatching"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd124, "ExternalFlashCompensation"},
+    {USB_PTP_FLAVOR_OLYMPUS   , 0xd124, "Saturation"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd125, "NewExternalFlashMode"},
+    {USB_PTP_FLAVOR_OLYMPUS   , 0xd126, "NoiseReductionPattern"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd126, "FlashExposureCompensation"},
+    {USB_PTP_FLAVOR_OLYMPUS   , 0xd127, "NoiseReductionRandom"},
+    {USB_PTP_FLAVOR_OLYMPUS   , 0xd129, "ShadingMode"},
+    {USB_PTP_FLAVOR_OLYMPUS   , 0xd12a, "ISOBoostMode"},
+    {USB_PTP_FLAVOR_OLYMPUS   , 0xd12b, "ExposureIndexBiasStep"},
+    {USB_PTP_FLAVOR_OLYMPUS   , 0xd12c, "FilterEffect"},
+    {USB_PTP_FLAVOR_OLYMPUS   , 0xd12d, "ColorTune"},
+    {USB_PTP_FLAVOR_OLYMPUS   , 0xd12e, "Language"},
+    {USB_PTP_FLAVOR_OLYMPUS   , 0xd12f, "LanguageCode"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd130, "HDRMode"},
+    {USB_PTP_FLAVOR_CANON     , 0xd130, "CompressionS"},
+    {USB_PTP_FLAVOR_OLYMPUS   , 0xd130, "RecviewMode"},
+    {USB_PTP_FLAVOR_CANON     , 0xd131, "CompressionM1"},
+    {USB_PTP_FLAVOR_MTP       , 0xd131, "PlaysForSureID"},
+    {USB_PTP_FLAVOR_OLYMPUS   , 0xd131, "SleepTime"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd131, "HDRHighDynamic"},
+    {USB_PTP_FLAVOR_CANON     , 0xd132, "CompressionM2"},
+    {USB_PTP_FLAVOR_MTP       , 0xd132, "ZUNE_UNKNOWN2"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd132, "HDRSmoothing"},
+    {USB_PTP_FLAVOR_OLYMPUS   , 0xd132, "ManualWBGMBias"},
+    {USB_PTP_FLAVOR_CANON     , 0xd133, "CompressionL"},
+    {USB_PTP_FLAVOR_OLYMPUS   , 0xd135, "AELAFLMode"},
+    {USB_PTP_FLAVOR_OLYMPUS   , 0xd136, "AELButtonStatus"},
+    {USB_PTP_FLAVOR_OLYMPUS   , 0xd137, "CompressionSettingEx"},
+    {USB_PTP_FLAVOR_CANON     , 0xd138, "AEModeDial"},
+    {USB_PTP_FLAVOR_OLYMPUS   , 0xd139, "ToneMode"},
+    {USB_PTP_FLAVOR_CANON     , 0xd139, "AEModeCustom"},
+    {USB_PTP_FLAVOR_CANON     , 0xd13a, "MirrorUpSetting"},
+    {USB_PTP_FLAVOR_OLYMPUS   , 0xd13a, "GradationMode"},
+    {USB_PTP_FLAVOR_CANON     , 0xd13b, "HighlightTonePriority"},
+    {USB_PTP_FLAVOR_OLYMPUS   , 0xd13b, "DevelopMode"},
+    {USB_PTP_FLAVOR_OLYMPUS   , 0xd13c, "ExtendInnerFlashMode"},
+    {USB_PTP_FLAVOR_CANON     , 0xd13c, "AFSelectFocusArea"},
+    {USB_PTP_FLAVOR_CANON     , 0xd13d, "HDRSetting"},
+    {USB_PTP_FLAVOR_OLYMPUS   , 0xd13d, "OutputDeviceMode"},
+    {USB_PTP_FLAVOR_OLYMPUS   , 0xd13e, "LiveViewMode"},
+    {USB_PTP_FLAVOR_CANON     , 0xd140, "PCWhiteBalance1"},
+    {USB_PTP_FLAVOR_OLYMPUS   , 0xd140, "LCDBacklight"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd140, "OptimizeImage"},
+    {USB_PTP_FLAVOR_OLYMPUS   , 0xd141, "CustomDevelop"},
+    {USB_PTP_FLAVOR_CANON     , 0xd141, "PCWhiteBalance2"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd142, "Saturation"},
+    {USB_PTP_FLAVOR_OLYMPUS   , 0xd142, "GradationAutoBias"},
+    {USB_PTP_FLAVOR_CANON     , 0xd142, "PCWhiteBalance3"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd143, "BW_FillerEffect"},
+    {USB_PTP_FLAVOR_OLYMPUS   , 0xd143, "FlashRCMode"},
+    {USB_PTP_FLAVOR_CANON     , 0xd143, "PCWhiteBalance4"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd144, "BW_Sharpness"},
+    {USB_PTP_FLAVOR_CANON     , 0xd144, "PCWhiteBalance5"},
+    {USB_PTP_FLAVOR_OLYMPUS   , 0xd144, "FlashRCGroupValue"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd145, "BW_Contrast"},
+    {USB_PTP_FLAVOR_OLYMPUS   , 0xd145, "FlashRCChannelValue"},
+    {USB_PTP_FLAVOR_CANON     , 0xd145, "MWhiteBalance"},
+    {USB_PTP_FLAVOR_CANON     , 0xd146, "MWhiteBalanceEx"},
+    {USB_PTP_FLAVOR_OLYMPUS   , 0xd146, "FlashRCFPMode"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd146, "BW_Setting_Type"},
+    {USB_PTP_FLAVOR_OLYMPUS   , 0xd147, "FlashRCPhotoChromicMode"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd148, "Slot2SaveMode"},
+    {USB_PTP_FLAVOR_OLYMPUS   , 0xd148, "FlashRCPhotoChromicBias"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd149, "RawBitMode"},
+    {USB_PTP_FLAVOR_OLYMPUS   , 0xd149, "FlashRCPhotoChromicManualBias"},
+    {USB_PTP_FLAVOR_OLYMPUS   , 0xd14a, "FlashRCQuantityLightLevel"},
+    {USB_PTP_FLAVOR_OLYMPUS   , 0xd14b, "FocusMeteringValue"},
+    {USB_PTP_FLAVOR_OLYMPUS   , 0xd14c, "ISOBracketingFrame"},
+    {USB_PTP_FLAVOR_CANON     , 0xd14d, "UnknownPropD14D"},
+    {USB_PTP_FLAVOR_OLYMPUS   , 0xd14d, "ISOBracketingStep"},
+    {USB_PTP_FLAVOR_OLYMPUS   , 0xd14e, "BulbMFMode"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd14e, "ActiveDLighting"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd14f, "FlourescentType"},
+    {USB_PTP_FLAVOR_OLYMPUS   , 0xd14f, "BurstFPSValue"},
+    {USB_PTP_FLAVOR_CANON     , 0xd150, "PictureStyleStandard"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd150, "TuneColourTemperature"},
+    {USB_PTP_FLAVOR_OLYMPUS   , 0xd150, "ISOAutoBaseValue"},
+    {USB_PTP_FLAVOR_CANON     , 0xd151, "PictureStylePortrait"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd151, "TunePreset0"},
+    {USB_PTP_FLAVOR_OLYMPUS   , 0xd151, "ISOAutoMaxValue"},
+    {USB_PTP_FLAVOR_OLYMPUS   , 0xd152, "BulbLimiterValue"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd152, "TunePreset1"},
+    {USB_PTP_FLAVOR_CANON     , 0xd152, "PictureStyleLandscape"},
+    {USB_PTP_FLAVOR_OLYMPUS   , 0xd153, "DPIMode"},
+    {USB_PTP_FLAVOR_CANON     , 0xd153, "PictureStyleNeutral"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd153, "TunePreset2"},
+    {USB_PTP_FLAVOR_OLYMPUS   , 0xd154, "DPICustomValue"},
+    {USB_PTP_FLAVOR_CANON     , 0xd154, "PictureStyleFaithful"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd154, "TunePreset3"},
+    {USB_PTP_FLAVOR_CANON     , 0xd155, "PictureStyleBlackWhite"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd155, "TunePreset4"},
+    {USB_PTP_FLAVOR_OLYMPUS   , 0xd155, "ResolutionValueSetting"},
+    {USB_PTP_FLAVOR_CANON     , 0xd156, "PictureStyleAuto"},
+    {USB_PTP_FLAVOR_OLYMPUS   , 0xd157, "AFTargetSize"},
+    {USB_PTP_FLAVOR_OLYMPUS   , 0xd158, "LightSensorMode"},
+    {USB_PTP_FLAVOR_OLYMPUS   , 0xd159, "AEBracket"},
+    {USB_PTP_FLAVOR_OLYMPUS   , 0xd15a, "WBRBBracket"},
+    {USB_PTP_FLAVOR_OLYMPUS   , 0xd15b, "WBGMBracket"},
+    {USB_PTP_FLAVOR_OLYMPUS   , 0xd15c, "FlashBracket"},
+    {USB_PTP_FLAVOR_OLYMPUS   , 0xd15d, "ISOBracket"},
+    {USB_PTP_FLAVOR_OLYMPUS   , 0xd15e, "MyModeStatus"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd160, "BeepOff"},
+    {USB_PTP_FLAVOR_CANON     , 0xd160, "PictureStyleUserSet1"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd161, "AutofocusMode"},
+    {USB_PTP_FLAVOR_CANON     , 0xd161, "PictureStyleUserSet2"},
+    {USB_PTP_FLAVOR_CANON     , 0xd162, "PictureStyleUserSet3"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd163, "AFAssist"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd164, "PADVPMode"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd165, "ImageReview"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd166, "AFAreaIllumination"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd167, "FlashMode"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd168, "FlashCommanderMode"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd169, "FlashSign"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd16a, "ISO_Auto"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd16b, "RemoteTimeout"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd16c, "GridDisplay"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd16d, "FlashModeManualPower"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd16e, "FlashModeCommanderPower"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd16f, "AutoFP"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd170, "DateImprintSetting"},
+    {USB_PTP_FLAVOR_CANON     , 0xd170, "PictureStyleParam1"},
+    {USB_PTP_FLAVOR_CANON     , 0xd171, "PictureStyleParam2"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd171, "DateCounterSelect"},
+    {USB_PTP_FLAVOR_CANON     , 0xd172, "PictureStyleParam3"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd172, "DateCountData"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd173, "DateCountDisplaySetting"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd174, "RangeFinderSetting"},
+    {USB_PTP_FLAVOR_CANON     , 0xd178, "HighISOSettingNoiseReduction"},
+    {USB_PTP_FLAVOR_CANON     , 0xd179, "MovieServoAF"},
+    {USB_PTP_FLAVOR_CANON     , 0xd17a, "ContinuousAFValid"},
+    {USB_PTP_FLAVOR_CANON     , 0xd17b, "Attenuator"},
+    {USB_PTP_FLAVOR_CANON     , 0xd17c, "UTCTime"},
+    {USB_PTP_FLAVOR_CANON     , 0xd17d, "Timezone"},
+    {USB_PTP_FLAVOR_CANON     , 0xd17e, "Summertime"},
+    {USB_PTP_FLAVOR_CANON     , 0xd17f, "FlavorLUTParams"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd180, "CSMMenu"},
+    {USB_PTP_FLAVOR_CANON     , 0xd180, "CustomFunc1"},
+    {USB_PTP_FLAVOR_MTP       , 0xd181, "Zune_UnknownVersion"},
+    {USB_PTP_FLAVOR_MTP       , 0xd181, "ZUNE_UNKNOWN1"},
+    {USB_PTP_FLAVOR_CANON     , 0xd181, "CustomFunc2"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd181, "WarningDisplay"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd182, "BatteryCellKind"},
+    {USB_PTP_FLAVOR_CANON     , 0xd182, "CustomFunc3"},
+    {USB_PTP_FLAVOR_CANON     , 0xd183, "CustomFunc4"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd183, "ISOAutoHiLimit"},
+    {USB_PTP_FLAVOR_CANON     , 0xd184, "CustomFunc5"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd184, "DynamicAFArea"},
+    {USB_PTP_FLAVOR_CANON     , 0xd185, "CustomFunc6"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd186, "ContinuousSpeedHigh"},
+    {USB_PTP_FLAVOR_CANON     , 0xd186, "CustomFunc7"},
+    {USB_PTP_FLAVOR_CANON     , 0xd187, "CustomFunc8"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd187, "InfoDispSetting"},
+    {USB_PTP_FLAVOR_CANON     , 0xd188, "CustomFunc9"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd189, "PreviewButton"},
+    {USB_PTP_FLAVOR_CANON     , 0xd189, "CustomFunc10"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd18a, "PreviewButton2"},
+    {USB_PTP_FLAVOR_CANON     , 0xd18a, "CustomFunc11"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd18b, "AEAFLockButton2"},
+    {USB_PTP_FLAVOR_CANON     , 0xd18b, "CustomFunc12"},
+    {USB_PTP_FLAVOR_CANON     , 0xd18c, "CustomFunc13"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd18d, "IndicatorDisp"},
+    {USB_PTP_FLAVOR_CANON     , 0xd18d, "CustomFunc14"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd18e, "CellKindPriority"},
+    {USB_PTP_FLAVOR_CANON     , 0xd18e, "CustomFunc15"},
+    {USB_PTP_FLAVOR_CANON     , 0xd18f, "CustomFunc16"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd190, "BracketingFramesAndSteps"},
+    {USB_PTP_FLAVOR_CANON     , 0xd190, "CustomFunc17"},
+    {USB_PTP_FLAVOR_CANON     , 0xd191, "CustomFunc18"},
+    {USB_PTP_FLAVOR_CANON     , 0xd192, "CustomFunc19"},
+    {USB_PTP_FLAVOR_CANON     , 0xd193, "InnerDevelop"},
+    {USB_PTP_FLAVOR_CANON     , 0xd194, "MultiAspect"},
+    {USB_PTP_FLAVOR_CANON     , 0xd195, "MovieSoundRecord"},
+    {USB_PTP_FLAVOR_CANON     , 0xd196, "MovieRecordVolume"},
+    {USB_PTP_FLAVOR_CANON     , 0xd197, "WindCut"},
+    {USB_PTP_FLAVOR_CANON     , 0xd198, "ExtenderType"},
+    {USB_PTP_FLAVOR_CANON     , 0xd199, "OLCInfoVersion"},
+    {USB_PTP_FLAVOR_CANON     , 0xd19a, "UnknownPropD19A"},
+    {USB_PTP_FLAVOR_CANON     , 0xd19c, "UnknownPropD19C"},
+    {USB_PTP_FLAVOR_CANON     , 0xd19d, "UnknownPropD19D"},
+    {USB_PTP_FLAVOR_CANON     , 0xd1a0, "CustomFuncEx"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd1a0, "LiveViewMode"},
+    {USB_PTP_FLAVOR_CANON     , 0xd1a1, "MyMenu"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd1a1, "LiveViewDriveMode"},
+    {USB_PTP_FLAVOR_CANON     , 0xd1a2, "MyMenuList"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd1a2, "LiveViewStatus"},
+    {USB_PTP_FLAVOR_CANON     , 0xd1a3, "WftStatus"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd1a3, "LiveViewImageZoomRatio"},
+    {USB_PTP_FLAVOR_CANON     , 0xd1a4, "WftInputTransmission"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd1a4, "LiveViewProhibitCondition"},
+    {USB_PTP_FLAVOR_CANON     , 0xd1a5, "HDDirectoryStructure"},
+    {USB_PTP_FLAVOR_CANON     , 0xd1a6, "BatteryInfo"},
+    {USB_PTP_FLAVOR_CANON     , 0xd1a7, "AdapterInfo"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd1a8, "MovieShutterSpeed"},
+    {USB_PTP_FLAVOR_CANON     , 0xd1a8, "LensStatus"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd1a9, "MovieFNumber"},
+    {USB_PTP_FLAVOR_CANON     , 0xd1a9, "QuickReviewTime"},
+    {USB_PTP_FLAVOR_CANON     , 0xd1aa, "CardExtension"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd1aa, "MovieISO"},
+    {USB_PTP_FLAVOR_CANON     , 0xd1ab, "TempStatus"},
+    {USB_PTP_FLAVOR_CANON     , 0xd1ac, "ShutterCounter"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd1ac, "LiveViewMovieMode"},
+    {USB_PTP_FLAVOR_CANON     , 0xd1ad, "SpecialOption"},
+    {USB_PTP_FLAVOR_CANON     , 0xd1ae, "PhotoStudioMode"},
+    {USB_PTP_FLAVOR_CANON     , 0xd1af, "SerialNumber"},
+    {USB_PTP_FLAVOR_CANON     , 0xd1b0, "EVFOutputDevice"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd1b0, "ExposureDisplayStatus"},
+    {USB_PTP_FLAVOR_CANON     , 0xd1b1, "EVFMode"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd1b1, "ExposureIndicateStatus"},
+    {USB_PTP_FLAVOR_CANON     , 0xd1b2, "DepthOfFieldPreview"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd1b2, "InfoDispErrStatus"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd1b3, "ExposureIndicateLightup"},
+    {USB_PTP_FLAVOR_CANON     , 0xd1b3, "EVFSharpness"},
+    {USB_PTP_FLAVOR_CANON     , 0xd1b4, "EVFWBMode"},
+    {USB_PTP_FLAVOR_CANON     , 0xd1b5, "EVFClickWBCoeffs"},
+    {USB_PTP_FLAVOR_CANON     , 0xd1b6, "EVFColorTemp"},
+    {USB_PTP_FLAVOR_CANON     , 0xd1b7, "ExposureSimMode"},
+    {USB_PTP_FLAVOR_CANON     , 0xd1b8, "EVFRecordStatus"},
+    {USB_PTP_FLAVOR_CANON     , 0xd1ba, "LvAfSystem"},
+    {USB_PTP_FLAVOR_CANON     , 0xd1bb, "MovSize"},
+    {USB_PTP_FLAVOR_CANON     , 0xd1bc, "LvViewTypeSelect"},
+    {USB_PTP_FLAVOR_CANON     , 0xd1bd, "MirrorDownStatus"},
+    {USB_PTP_FLAVOR_CANON     , 0xd1be, "MovieParam"},
+    {USB_PTP_FLAVOR_CANON     , 0xd1bf, "MirrorLockupState"},
+    {USB_PTP_FLAVOR_CANON     , 0xd1c0, "FlashChargingState"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd1c0, "FlashOpen"},
+    {USB_PTP_FLAVOR_CANON     , 0xd1c1, "AloMode"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd1c1, "FlashCharged"},
+    {USB_PTP_FLAVOR_CANON     , 0xd1c2, "FixedMovie"},
+    {USB_PTP_FLAVOR_CANON     , 0xd1c3, "OneShotRawOn"},
+    {USB_PTP_FLAVOR_CANON     , 0xd1c4, "ErrorForDisplay"},
+    {USB_PTP_FLAVOR_CANON     , 0xd1c5, "AEModeMovie"},
+    {USB_PTP_FLAVOR_CANON     , 0xd1c6, "BuiltinStroboMode"},
+    {USB_PTP_FLAVOR_CANON     , 0xd1c7, "StroboDispState"},
+    {USB_PTP_FLAVOR_CANON     , 0xd1c8, "StroboETTL2Metering"},
+    {USB_PTP_FLAVOR_CANON     , 0xd1c9, "ContinousAFMode"},
+    {USB_PTP_FLAVOR_CANON     , 0xd1ca, "MovieParam2"},
+    {USB_PTP_FLAVOR_CANON     , 0xd1cb, "StroboSettingExpComposition"},
+    {USB_PTP_FLAVOR_CANON     , 0xd1cc, "MovieParam3"},
+    {USB_PTP_FLAVOR_CANON     , 0xd1cf, "LVMedicalRotate"},
+    {USB_PTP_FLAVOR_CANON     , 0xd1d0, "Artist"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd1d0, "FlashMRepeatValue"},
+    {USB_PTP_FLAVOR_CANON     , 0xd1d1, "Copyright"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd1d1, "FlashMRepeatCount"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd1d2, "FlashMRepeatInterval"},
+    {USB_PTP_FLAVOR_CANON     , 0xd1d2, "BracketValue"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd1d3, "FlashCommandChannel"},
+    {USB_PTP_FLAVOR_CANON     , 0xd1d3, "FocusInfoEx"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd1d4, "FlashCommandSelfMode"},
+    {USB_PTP_FLAVOR_CANON     , 0xd1d4, "DepthOfField"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd1d5, "FlashCommandSelfCompensation"},
+    {USB_PTP_FLAVOR_CANON     , 0xd1d5, "Brightness"},
+    {USB_PTP_FLAVOR_CANON     , 0xd1d6, "LensAdjustParams"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd1d6, "FlashCommandSelfValue"},
+    {USB_PTP_FLAVOR_CANON     , 0xd1d7, "EFComp"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd1d7, "FlashCommandAMode"},
+    {USB_PTP_FLAVOR_CANON     , 0xd1d8, "LensName"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd1d8, "FlashCommandACompensation"},
+    {USB_PTP_FLAVOR_CANON     , 0xd1d9, "AEB"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd1d9, "FlashCommandAValue"},
+    {USB_PTP_FLAVOR_CANON     , 0xd1da, "StroboSetting"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd1da, "FlashCommandBMode"},
+    {USB_PTP_FLAVOR_CANON     , 0xd1db, "StroboWirelessSetting"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd1db, "FlashCommandBCompensation"},
+    {USB_PTP_FLAVOR_CANON     , 0xd1dc, "StroboFiring"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd1dc, "FlashCommandBValue"},
+    {USB_PTP_FLAVOR_CANON     , 0xd1dd, "LensID"},
+    {USB_PTP_FLAVOR_CANON     , 0xd1de, "LCDBrightness"},
+    {USB_PTP_FLAVOR_CANON     , 0xd1df, "CADarkBright"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd1f0, "ApplicationMode"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd1f2, "ActiveSlot"},
+    {USB_PTP_FLAVOR_ALL       , 0xd200, "SONY_DPCCompensation"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd200, "ActivePicCtrlItem"},
+    {USB_PTP_FLAVOR_ALL       , 0xd201, "SONY_DRangeOptimize"},
+    {USB_PTP_FLAVOR_FUJI      , 0xd201, "ReleaseMode"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd201, "ChangePicCtrlItem"},
+    {USB_PTP_FLAVOR_ALL       , 0xd203, "SONY_ImageSize"},
+    {USB_PTP_FLAVOR_FUJI      , 0xd206, "FocusAreas"},
+    {USB_PTP_FLAVOR_ALL       , 0xd20d, "SONY_ShutterSpeed"},
+    {USB_PTP_FLAVOR_ALL       , 0xd20f, "SONY_ColorTemp"},
+    {USB_PTP_FLAVOR_ALL       , 0xd210, "SONY_CCFilter"},
+    {USB_PTP_FLAVOR_ALL       , 0xd211, "SONY_AspectRatio"},
+    {USB_PTP_FLAVOR_FUJI      , 0xd213, "AELock"},
+    {USB_PTP_FLAVOR_MTP       , 0xd215, "ZUNE_UNKNOWN3"},
+    {USB_PTP_FLAVOR_MTP       , 0xd216, "ZUNE_UNKNOWN4"},
+    {USB_PTP_FLAVOR_ALL       , 0xd216, "SONY_ExposeIndex"},
+    {USB_PTP_FLAVOR_FUJI      , 0xd218, "Aperture"},
+    {USB_PTP_FLAVOR_FUJI      , 0xd219, "ShutterSpeed"},
+    {USB_PTP_FLAVOR_ALL       , 0xd21b, "SONY_PictureEffect"},
+    {USB_PTP_FLAVOR_ALL       , 0xd21c, "SONY_ABFilter"},
+    {USB_PTP_FLAVOR_ALL       , 0xd21e, "SONY_ISO"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd236, "MovieNrHighISO"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd241, "D241"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd244, "D244"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd247, "D247"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd24f, "GUID"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd250, "D250"},
+    {USB_PTP_FLAVOR_NIKON     , 0xd251, "D251"},
+    {USB_PTP_FLAVOR_ALL       , 0xd2c7, "SONY_StillImage"},
+    {USB_PTP_FLAVOR_ALL       , 0xd2c8, "SONY_Movie"},
+    {USB_PTP_FLAVOR_MTP       , 0xd401, "SynchronizationPartner"},
+    {USB_PTP_FLAVOR_MTP       , 0xd402, "DeviceFriendlyName"},
+    {USB_PTP_FLAVOR_MTP       , 0xd403, "VolumeLevel"},
+    {USB_PTP_FLAVOR_MTP       , 0xd405, "DeviceIcon"},
+    {USB_PTP_FLAVOR_MTP       , 0xd406, "SessionInitiatorInfo"},
+    {USB_PTP_FLAVOR_MTP       , 0xd407, "PerceivedDeviceType"},
+    {USB_PTP_FLAVOR_MTP       , 0xd410, "PlaybackRate"},
+    {USB_PTP_FLAVOR_MTP       , 0xd411, "PlaybackObject"},
+    {USB_PTP_FLAVOR_MTP       , 0xd412, "PlaybackContainerIndex"},
+    {USB_PTP_FLAVOR_MTP       , 0xd413, "PlaybackPosition"},
+    {USB_PTP_FLAVOR_ALL       , 0xf000, "EXTENSION_MASK"},
+    {USB_PTP_FLAVOR_NIKON     , 0xf002, "1_ISO"},
+    {USB_PTP_FLAVOR_NIKON     , 0xf009, "1_ImageCompression"},
+    {USB_PTP_FLAVOR_NIKON     , 0xf00a, "1_ImageSize"},
+    {USB_PTP_FLAVOR_NIKON     , 0xf00c, "1_WhiteBalance"},
+    {USB_PTP_FLAVOR_NIKON     , 0xf00d, "1_LongExposureNoiseReduction"},
+    {USB_PTP_FLAVOR_NIKON     , 0xf00e, "1_HiISONoiseReduction"},
+    {USB_PTP_FLAVOR_NIKON     , 0xf00f, "1_ActiveDLighting"},
+    {USB_PTP_FLAVOR_NIKON     , 0xf01c, "1_MovQuality"}
+};
+/* PTP_DPFF Device Property Form Flag */
+static const value_string_masked usb_ptp_dpff_mvals[] = {
+    {USB_PTP_FLAVOR_ALL       , 0x00, "None"},
+    {USB_PTP_FLAVOR_ALL       , 0x01, "Range"},
+    {USB_PTP_FLAVOR_ALL       , 0x02, "Enumeration"}
+};
+/* PTP_DPGS Device Property GetSet type */
+static const value_string_masked usb_ptp_dpgs_mvals[] = {
+    {USB_PTP_FLAVOR_ALL       , 0x00, "Get"},
+    {USB_PTP_FLAVOR_ALL       , 0x01, "GetSet"}
+};
+/* PTP_DTC Data Type Codes */
+static const value_string_masked usb_ptp_dtc_mvals[] = {
+    {USB_PTP_FLAVOR_ALL       , (ptp_dtc_array_mask | ptp_dtc_int128), "AINT128"},
+    {USB_PTP_FLAVOR_ALL       , (ptp_dtc_array_mask | ptp_dtc_int16), "AINT16"},
+    {USB_PTP_FLAVOR_ALL       , (ptp_dtc_array_mask | ptp_dtc_int32), "AINT32"},
+    {USB_PTP_FLAVOR_ALL       , (ptp_dtc_array_mask | ptp_dtc_int64), "AINT64"},
+    {USB_PTP_FLAVOR_ALL       , (ptp_dtc_array_mask | ptp_dtc_int8), "AINT8"},
+    {USB_PTP_FLAVOR_ALL       , (ptp_dtc_array_mask | ptp_dtc_uint128), "AUINT128"},
+    {USB_PTP_FLAVOR_ALL       , (ptp_dtc_array_mask | ptp_dtc_uint16), "AUINT16"},
+    {USB_PTP_FLAVOR_ALL       , (ptp_dtc_array_mask | ptp_dtc_uint32), "AUINT32"},
+    {USB_PTP_FLAVOR_ALL       , (ptp_dtc_array_mask | ptp_dtc_uint64), "AUINT64"},
+    {USB_PTP_FLAVOR_ALL       , (ptp_dtc_array_mask | ptp_dtc_uint8), "AUINT8"},
+    {USB_PTP_FLAVOR_ALL       , 0x0000, "UNDEF"},
+    {USB_PTP_FLAVOR_ALL       , 0x0001, "INT8"},
+    {USB_PTP_FLAVOR_ALL       , 0x0002, "UINT8"},
+    {USB_PTP_FLAVOR_ALL       , 0x0003, "INT16"},
+    {USB_PTP_FLAVOR_ALL       , 0x0004, "UINT16"},
+    {USB_PTP_FLAVOR_ALL       , 0x0005, "INT32"},
+    {USB_PTP_FLAVOR_ALL       , 0x0006, "UINT32"},
+    {USB_PTP_FLAVOR_ALL       , 0x0007, "INT64"},
+    {USB_PTP_FLAVOR_ALL       , 0x0008, "UINT64"},
+    {USB_PTP_FLAVOR_ALL       , 0x0009, "INT128"},
+    {USB_PTP_FLAVOR_ALL       , 0x000a, "UINT128"},
+    {USB_PTP_FLAVOR_ALL       , 0x4000, "ARRAY_MASK"},
+    {USB_PTP_FLAVOR_ALL       , 0xffff, "STR"}
+};
+/* PTP_EC Event Codes */
+static const value_string_masked usb_ptp_ec_mvals[] = {
+    {USB_PTP_FLAVOR_ALL       , 0x4000, "Undefined"},
+    {USB_PTP_FLAVOR_ALL       , 0x4001, "CancelTransaction"},
+    {USB_PTP_FLAVOR_ALL       , 0x4002, "ObjectAdded"},
+    {USB_PTP_FLAVOR_ALL       , 0x4003, "ObjectRemoved"},
+    {USB_PTP_FLAVOR_ALL       , 0x4004, "StoreAdded"},
+    {USB_PTP_FLAVOR_ALL       , 0x4005, "StoreRemoved"},
+    {USB_PTP_FLAVOR_ALL       , 0x4006, "DevicePropChanged"},
+    {USB_PTP_FLAVOR_ALL       , 0x4007, "ObjectInfoChanged"},
+    {USB_PTP_FLAVOR_ALL       , 0x4008, "DeviceInfoChanged"},
+    {USB_PTP_FLAVOR_ALL       , 0x4009, "RequestObjectTransfer"},
+    {USB_PTP_FLAVOR_ALL       , 0x400a, "StoreFull"},
+    {USB_PTP_FLAVOR_ALL       , 0x400b, "DeviceReset"},
+    {USB_PTP_FLAVOR_ALL       , 0x400c, "StorageInfoChanged"},
+    {USB_PTP_FLAVOR_ALL       , 0x400d, "CaptureComplete"},
+    {USB_PTP_FLAVOR_ALL       , 0x400e, "UnreportedStatus"},
+    {USB_PTP_FLAVOR_CANON     , 0xc005, "ExtendedErrorcode"},
+    {USB_PTP_FLAVOR_CANON     , 0xc008, "ObjectInfoChanged"},
+    {USB_PTP_FLAVOR_CANON     , 0xc009, "RequestObjectTransfer"},
+    {USB_PTP_FLAVOR_CANON     , 0xc00b, "ShutterButtonPressed0"},
+    {USB_PTP_FLAVOR_CANON     , 0xc00c, "CameraModeChanged"},
+    {USB_PTP_FLAVOR_CANON     , 0xc00e, "ShutterButtonPressed1"},
+    {USB_PTP_FLAVOR_CANON     , 0xc011, "StartDirectTransfer"},
+    {USB_PTP_FLAVOR_CANON     , 0xc013, "StopDirectTransfer"},
+    {USB_PTP_FLAVOR_CANON     , 0xc101, "RequestGetEvent"},
+    {USB_PTP_FLAVOR_NIKON     , 0xc101, "ObjectAddedInSDRAM"},
+    {USB_PTP_FLAVOR_NIKON     , 0xc102, "CaptureCompleteRecInSdram"},
+    {USB_PTP_FLAVOR_OLYMPUS   , 0xc102, "PropertyChanged"},
+    {USB_PTP_FLAVOR_OLYMPUS   , 0xc103, "CaptureComplete"},
+    {USB_PTP_FLAVOR_NIKON     , 0xc103, "AdvancedTransfer"},
+    {USB_PTP_FLAVOR_NIKON     , 0xc104, "PreviewImageAdded"},
+    {USB_PTP_FLAVOR_CANON     , 0xc181, "ObjectAddedEx"},
+    {USB_PTP_FLAVOR_CANON     , 0xc182, "ObjectRemoved"},
+    {USB_PTP_FLAVOR_CANON     , 0xc183, "RequestGetObjectInfoEx"},
+    {USB_PTP_FLAVOR_CANON     , 0xc184, "StorageStatusChanged"},
+    {USB_PTP_FLAVOR_CANON     , 0xc185, "StorageInfoChanged"},
+    {USB_PTP_FLAVOR_CANON     , 0xc186, "RequestObjectTransfer"},
+    {USB_PTP_FLAVOR_CANON     , 0xc187, "ObjectInfoChangedEx"},
+    {USB_PTP_FLAVOR_CANON     , 0xc188, "ObjectContentChanged"},
+    {USB_PTP_FLAVOR_CANON     , 0xc189, "PropValueChanged"},
+    {USB_PTP_FLAVOR_CANON     , 0xc18a, "AvailListChanged"},
+    {USB_PTP_FLAVOR_CANON     , 0xc18b, "CameraStatusChanged"},
+    {USB_PTP_FLAVOR_CANON     , 0xc18d, "WillSoonShutdown"},
+    {USB_PTP_FLAVOR_CANON     , 0xc18e, "ShutdownTimerUpdated"},
+    {USB_PTP_FLAVOR_CANON     , 0xc18f, "RequestCancelTransfer"},
+    {USB_PTP_FLAVOR_CANON     , 0xc190, "RequestObjectTransferDT"},
+    {USB_PTP_FLAVOR_CANON     , 0xc191, "RequestCancelTransferDT"},
+    {USB_PTP_FLAVOR_CANON     , 0xc192, "StoreAdded"},
+    {USB_PTP_FLAVOR_CANON     , 0xc193, "StoreRemoved"},
+    {USB_PTP_FLAVOR_CANON     , 0xc194, "BulbExposureTime"},
+    {USB_PTP_FLAVOR_CANON     , 0xc195, "RecordingTime"},
+    {USB_PTP_FLAVOR_CANON     , 0xc1a2, "RequestObjectTransferTS"},
+    {USB_PTP_FLAVOR_CANON     , 0xc1a3, "AfResult"},
+    {USB_PTP_FLAVOR_CANON     , 0xc1a4, "CTGInfoCheckComplete"},
+    {USB_PTP_FLAVOR_CANON     , 0xc1a5, "OLCInfoChanged"},
+    {USB_PTP_FLAVOR_CANON     , 0xc1f1, "RequestObjectTransferFTP"},
+    {USB_PTP_FLAVOR_ALL       , 0xc201, "Sony_ObjectAdded"},
+    {USB_PTP_FLAVOR_ALL       , 0xc203, "Sony_PropertyChanged"},
+    {USB_PTP_FLAVOR_MTP       , 0xc801, "ObjectPropChanged"},
+    {USB_PTP_FLAVOR_MTP       , 0xc802, "ObjectPropDescChanged"},
+    {USB_PTP_FLAVOR_MTP       , 0xc803, "ObjectReferencesChanged"}
+};
+/* PTP_FLAVOR Vendor IDs */
+static const value_string_masked usb_ptp_flavor_mvals[] = {
+
+};
+/* PTP_FST FilesystemType Values */
+static const value_string_masked usb_ptp_fst_mvals[] = {
+    {USB_PTP_FLAVOR_ALL       , 0x0000, "Undefined"},
+    {USB_PTP_FLAVOR_ALL       , 0x0001, "GenericFlat"},
+    {USB_PTP_FLAVOR_ALL       , 0x0002, "GenericHierarchical"},
+    {USB_PTP_FLAVOR_ALL       , 0x0003, "DCF"}
+};
+/* PTP_GOH GetObjectHandles */
+static const value_string_masked usb_ptp_goh_mvals[] = {
+    {USB_PTP_FLAVOR_ALL       , 0x00000000, "ALL_FORMATS"},
+    {USB_PTP_FLAVOR_ALL       , 0x00000000, "ALL_ASSOCS"},
+    {USB_PTP_FLAVOR_ALL       , 0xffffffff, "ROOT_PARENT"},
+    {USB_PTP_FLAVOR_ALL       , 0xffffffff, "ALL_STORAGE"}
+};
+/* PTP_OC Operation Codes */
+static const value_string_masked usb_ptp_oc_mvals[] = {
+    {USB_PTP_FLAVOR_ALL       , 0x1000, "Undefined"},
+    {USB_PTP_FLAVOR_ALL       , 0x1001, "GetDeviceInfo"},
+    {USB_PTP_FLAVOR_ALL       , 0x1002, "OpenSession"},
+    {USB_PTP_FLAVOR_ALL       , 0x1003, "CloseSession"},
+    {USB_PTP_FLAVOR_ALL       , 0x1004, "GetStorageIDs"},
+    {USB_PTP_FLAVOR_ALL       , 0x1005, "GetStorageInfo"},
+    {USB_PTP_FLAVOR_ALL       , 0x1006, "GetNumObjects"},
+    {USB_PTP_FLAVOR_ALL       , 0x1007, "GetObjectHandles"},
+    {USB_PTP_FLAVOR_ALL       , 0x1008, "GetObjectInfo"},
+    {USB_PTP_FLAVOR_ALL       , 0x1009, "GetObject"},
+    {USB_PTP_FLAVOR_ALL       , 0x100a, "GetThumb"},
+    {USB_PTP_FLAVOR_ALL       , 0x100b, "DeleteObject"},
+    {USB_PTP_FLAVOR_ALL       , 0x100c, "SendObjectInfo"},
+    {USB_PTP_FLAVOR_ALL       , 0x100d, "SendObject"},
+    {USB_PTP_FLAVOR_ALL       , 0x100e, "InitiateCapture"},
+    {USB_PTP_FLAVOR_ALL       , 0x100f, "FormatStore"},
+    {USB_PTP_FLAVOR_ALL       , 0x1010, "ResetDevice"},
+    {USB_PTP_FLAVOR_ALL       , 0x1011, "SelfTest"},
+    {USB_PTP_FLAVOR_ALL       , 0x1012, "SetObjectProtection"},
+    {USB_PTP_FLAVOR_ALL       , 0x1013, "PowerDown"},
+    {USB_PTP_FLAVOR_ALL       , 0x1014, "GetDevicePropDesc"},
+    {USB_PTP_FLAVOR_ALL       , 0x1015, "GetDevicePropValue"},
+    {USB_PTP_FLAVOR_ALL       , 0x1016, "SetDevicePropValue"},
+    {USB_PTP_FLAVOR_ALL       , 0x1017, "ResetDevicePropValue"},
+    {USB_PTP_FLAVOR_ALL       , 0x1018, "TerminateOpenCapture"},
+    {USB_PTP_FLAVOR_ALL       , 0x1019, "MoveObject"},
+    {USB_PTP_FLAVOR_ALL       , 0x101a, "CopyObject"},
+    {USB_PTP_FLAVOR_ALL       , 0x101b, "GetPartialObject"},
+    {USB_PTP_FLAVOR_ALL       , 0x101c, "InitiateOpenCapture"},
+    {USB_PTP_FLAVOR_ALL       , 0x101d, "StartEnumHandles"},
+    {USB_PTP_FLAVOR_ALL       , 0x101e, "EnumHandles"},
+    {USB_PTP_FLAVOR_ALL       , 0x101f, "StopEnumHandles"},
+    {USB_PTP_FLAVOR_ALL       , 0x1020, "GetVendorExtensionMaps"},
+    {USB_PTP_FLAVOR_ALL       , 0x1021, "GetVendorDeviceInfo"},
+    {USB_PTP_FLAVOR_ALL       , 0x1022, "GetResizedImageObject"},
+    {USB_PTP_FLAVOR_ALL       , 0x1023, "GetFilesystemManifest"},
+    {USB_PTP_FLAVOR_ALL       , 0x1024, "GetStreamInfo"},
+    {USB_PTP_FLAVOR_ALL       , 0x1025, "GetStream"},
+    {USB_PTP_FLAVOR_ALL       , 0x9000, "EXTENSION"},
+    {USB_PTP_FLAVOR_ALL       , 0x9001, "LEICA_SetCameraSettings"},
+    {USB_PTP_FLAVOR_CANON     , 0x9001, "GetPartialObjectInfo"},
+    {USB_PTP_FLAVOR_CASIO     , 0x9001, "STILL_START"},
+    {USB_PTP_FLAVOR_CANON     , 0x9002, "SetObjectArchive"},
+    {USB_PTP_FLAVOR_CASIO     , 0x9002, "STILL_STOP"},
+    {USB_PTP_FLAVOR_ALL       , 0x9002, "LEICA_GetCameraSettings"},
+    {USB_PTP_FLAVOR_KODAK     , 0x9003, "GetSerial"},
+    {USB_PTP_FLAVOR_ALL       , 0x9003, "LEICA_GetLensParameter"},
+    {USB_PTP_FLAVOR_CANON     , 0x9003, "KeepDeviceOn"},
+    {USB_PTP_FLAVOR_KODAK     , 0x9004, "SetSerial"},
+    {USB_PTP_FLAVOR_ALL       , 0x9004, "LEICA_Release"},
+    {USB_PTP_FLAVOR_CANON     , 0x9004, "LockDeviceUI"},
+    {USB_PTP_FLAVOR_CANON     , 0x9005, "UnlockDeviceUI"},
+    {USB_PTP_FLAVOR_KODAK     , 0x9005, "SendFileObjectInfo"},
+    {USB_PTP_FLAVOR_ALL       , 0x9005, "LEICA_OpenLESession"},
+    {USB_PTP_FLAVOR_CANON     , 0x9006, "GetObjectHandleByName"},
+    {USB_PTP_FLAVOR_ALL       , 0x9006, "LEICA_CloseLESession"},
+    {USB_PTP_FLAVOR_KODAK     , 0x9006, "SendFileObject"},
+    {USB_PTP_FLAVOR_NIKON     , 0x9006, "GetProfileAllData"},
+    {USB_PTP_FLAVOR_ALL       , 0x9007, "LEICA_RequestObjectTransferReady"},
+    {USB_PTP_FLAVOR_NIKON     , 0x9007, "SendProfileData"},
+    {USB_PTP_FLAVOR_CASIO     , 0x9007, "FOCUS"},
+    {USB_PTP_FLAVOR_NIKON     , 0x9008, "DeleteProfile"},
+    {USB_PTP_FLAVOR_CANON     , 0x9008, "InitiateReleaseControl"},
+    {USB_PTP_FLAVOR_KODAK     , 0x9008, "SetText"},
+    {USB_PTP_FLAVOR_CASIO     , 0x9009, "CF_PRESS"},
+    {USB_PTP_FLAVOR_CANON     , 0x9009, "TerminateReleaseControl"},
+    {USB_PTP_FLAVOR_NIKON     , 0x9009, "SetProfileData"},
+    {USB_PTP_FLAVOR_CASIO     , 0x900a, "CF_RELEASE"},
+    {USB_PTP_FLAVOR_CANON     , 0x900a, "TerminatePlaybackMode"},
+    {USB_PTP_FLAVOR_CANON     , 0x900b, "ViewfinderOn"},
+    {USB_PTP_FLAVOR_CANON     , 0x900c, "ViewfinderOff"},
+    {USB_PTP_FLAVOR_CASIO     , 0x900c, "GET_OBJECT_INFO"},
+    {USB_PTP_FLAVOR_CANON     , 0x900d, "DoAeAfAwb"},
+    {USB_PTP_FLAVOR_CANON     , 0x900e, "GetCustomizeSpec"},
+    {USB_PTP_FLAVOR_CANON     , 0x900f, "GetCustomizeItemInfo"},
+    {USB_PTP_FLAVOR_CANON     , 0x9010, "GetCustomizeData"},
+    {USB_PTP_FLAVOR_NIKON     , 0x9010, "AdvancedTransfer"},
+    {USB_PTP_FLAVOR_NIKON     , 0x9011, "GetFileInfoInBlock"},
+    {USB_PTP_FLAVOR_CANON     , 0x9012, "GetCaptureStatus"},
+    {USB_PTP_FLAVOR_CANON     , 0x9013, "CheckEvent"},
+    {USB_PTP_FLAVOR_CANON     , 0x9014, "FocusLock"},
+    {USB_PTP_FLAVOR_CANON     , 0x9015, "FocusUnlock"},
+    {USB_PTP_FLAVOR_CANON     , 0x9016, "GetLocalReleaseParam"},
+    {USB_PTP_FLAVOR_CANON     , 0x9017, "SetLocalReleaseParam"},
+    {USB_PTP_FLAVOR_CANON     , 0x9018, "AskAboutPcEvf"},
+    {USB_PTP_FLAVOR_CANON     , 0x9019, "SendPartialObject"},
+    {USB_PTP_FLAVOR_CANON     , 0x901a, "InitiateCaptureInMemory"},
+    {USB_PTP_FLAVOR_CANON     , 0x901b, "GetPartialObjectEx"},
+    {USB_PTP_FLAVOR_CANON     , 0x901c, "SetObjectTime"},
+    {USB_PTP_FLAVOR_CANON     , 0x901d, "GetViewfinderImage"},
+    {USB_PTP_FLAVOR_CANON     , 0x901e, "GetObjectAttributes"},
+    {USB_PTP_FLAVOR_CANON     , 0x901f, "ChangeUSBProtocol"},
+    {USB_PTP_FLAVOR_CANON     , 0x9020, "GetChanges"},
+    {USB_PTP_FLAVOR_CANON     , 0x9021, "GetObjectInfoEx"},
+    {USB_PTP_FLAVOR_CANON     , 0x9022, "InitiateDirectTransfer"},
+    {USB_PTP_FLAVOR_CANON     , 0x9023, "TerminateDirectTransfer"},
+    {USB_PTP_FLAVOR_CASIO     , 0x9024, "SHUTTER"},
+    {USB_PTP_FLAVOR_CANON     , 0x9024, "SendObjectInfoByPath"},
+    {USB_PTP_FLAVOR_CASIO     , 0x9025, "GET_OBJECT"},
+    {USB_PTP_FLAVOR_CANON     , 0x9025, "SendObjectByPath"},
+    {USB_PTP_FLAVOR_CASIO     , 0x9026, "GET_THUMBNAIL"},
+    {USB_PTP_FLAVOR_CANON     , 0x9026, "InitiateDirectTansferEx"},
+    {USB_PTP_FLAVOR_CANON     , 0x9027, "GetAncillaryObjectHandles"},
+    {USB_PTP_FLAVOR_CASIO     , 0x9027, "GET_STILL_HANDLES"},
+    {USB_PTP_FLAVOR_CANON     , 0x9028, "GetTreeInfo"},
+    {USB_PTP_FLAVOR_CASIO     , 0x9028, "STILL_RESET"},
+    {USB_PTP_FLAVOR_CANON     , 0x9011, "SetCustomizeData"},
+    {USB_PTP_FLAVOR_CASIO     , 0x9029, "HALF_PRESS"},
+    {USB_PTP_FLAVOR_CANON     , 0x9029, "GetTreeSize"},
+    {USB_PTP_FLAVOR_CANON     , 0x902a, "NotifyProgress"},
+    {USB_PTP_FLAVOR_CASIO     , 0x902a, "HALF_RELEASE"},
+    {USB_PTP_FLAVOR_CANON     , 0x902b, "NotifyCancelAccepted"},
+    {USB_PTP_FLAVOR_CASIO     , 0x902b, "CS_PRESS"},
+    {USB_PTP_FLAVOR_CASIO     , 0x902c, "CS_RELEASE"},
+    {USB_PTP_FLAVOR_CANON     , 0x902c, "902C"},
+    {USB_PTP_FLAVOR_CANON     , 0x902d, "GetDirectory"},
+    {USB_PTP_FLAVOR_CASIO     , 0x902d, "ZOOM"},
+    {USB_PTP_FLAVOR_CASIO     , 0x902e, "CZ_PRESS"},
+    {USB_PTP_FLAVOR_CANON     , 0x902e, "902E"},
+    {USB_PTP_FLAVOR_CASIO     , 0x902f, "CZ_RELEASE"},
+    {USB_PTP_FLAVOR_CANON     , 0x9030, "SetPairingInfo"},
+    {USB_PTP_FLAVOR_CANON     , 0x9031, "GetPairingInfo"},
+    {USB_PTP_FLAVOR_CANON     , 0x9032, "DeletePairingInfo"},
+    {USB_PTP_FLAVOR_CANON     , 0x9033, "GetMACAddress"},
+    {USB_PTP_FLAVOR_CANON     , 0x9034, "SetDisplayMonitor"},
+    {USB_PTP_FLAVOR_CANON     , 0x9035, "PairingComplete"},
+    {USB_PTP_FLAVOR_CANON     , 0x9036, "GetWirelessMAXChannel"},
+    {USB_PTP_FLAVOR_CASIO     , 0x9041, "MOVIE_START"},
+    {USB_PTP_FLAVOR_CASIO     , 0x9042, "MOVIE_STOP"},
+    {USB_PTP_FLAVOR_CASIO     , 0x9043, "MOVIE_PRESS"},
+    {USB_PTP_FLAVOR_CASIO     , 0x9044, "MOVIE_RELEASE"},
+    {USB_PTP_FLAVOR_CASIO     , 0x9045, "GET_MOVIE_HANDLES"},
+    {USB_PTP_FLAVOR_CASIO     , 0x9046, "MOVIE_RESET"},
+    {USB_PTP_FLAVOR_CANON     , 0x9068, "GetWebServiceSpec"},
+    {USB_PTP_FLAVOR_CANON     , 0x9069, "GetWebServiceData"},
+    {USB_PTP_FLAVOR_CANON     , 0x906b, "SetWebServiceData"},
+    {USB_PTP_FLAVOR_CANON     , 0x906c, "GetRootCertificateSpec"},
+    {USB_PTP_FLAVOR_CANON     , 0x906d, "GetRootCertificateData"},
+    {USB_PTP_FLAVOR_CANON     , 0x906f, "SetRootCertificateData"},
+    {USB_PTP_FLAVOR_NIKON     , 0x90c0, "Capture"},
+    {USB_PTP_FLAVOR_NIKON     , 0x90c1, "AfDrive"},
+    {USB_PTP_FLAVOR_NIKON     , 0x90c2, "SetControlMode"},
+    {USB_PTP_FLAVOR_NIKON     , 0x90c3, "DelImageSDRAM"},
+    {USB_PTP_FLAVOR_NIKON     , 0x90c4, "GetLargeThumb"},
+    {USB_PTP_FLAVOR_NIKON     , 0x90c5, "CurveDownload"},
+    {USB_PTP_FLAVOR_NIKON     , 0x90c6, "CurveUpload"},
+    {USB_PTP_FLAVOR_NIKON     , 0x90c7, "CheckEvent"},
+    {USB_PTP_FLAVOR_NIKON     , 0x90c8, "DeviceReady"},
+    {USB_PTP_FLAVOR_NIKON     , 0x90c9, "SetPreWBData"},
+    {USB_PTP_FLAVOR_NIKON     , 0x90ca, "GetVendorPropCodes"},
+    {USB_PTP_FLAVOR_NIKON     , 0x90cb, "AfCaptureSDRAM"},
+    {USB_PTP_FLAVOR_NIKON     , 0x90cc, "GetPictCtrlData"},
+    {USB_PTP_FLAVOR_NIKON     , 0x90cd, "SetPictCtrlData"},
+    {USB_PTP_FLAVOR_NIKON     , 0x90ce, "DelCstPicCtrl"},
+    {USB_PTP_FLAVOR_NIKON     , 0x90cf, "GetPicCtrlCapability"},
+    {USB_PTP_FLAVOR_NIKON     , 0x90e0, "GetDevicePTPIPInfo"},
+    {USB_PTP_FLAVOR_OLYMPUS   , 0x9101, "Capture"},
+    {USB_PTP_FLAVOR_MTP       , 0x9101, "WMDRMPD_GetSecureTimeChallenge"},
+    {USB_PTP_FLAVOR_CANON     , 0x9101, "GetStorageIDs"},
+    {USB_PTP_FLAVOR_MTP       , 0x9102, "WMDRMPD_GetSecureTimeResponse"},
+    {USB_PTP_FLAVOR_CANON     , 0x9102, "GetStorageInfo"},
+    {USB_PTP_FLAVOR_CANON     , 0x9103, "GetObjectInfo"},
+    {USB_PTP_FLAVOR_MTP       , 0x9103, "WMDRMPD_SetLicenseResponse"},
+    {USB_PTP_FLAVOR_OLYMPUS   , 0x9103, "SelfCleaning"},
+    {USB_PTP_FLAVOR_MTP       , 0x9104, "WMDRMPD_GetSyncList"},
+    {USB_PTP_FLAVOR_CANON     , 0x9104, "GetObject"},
+    {USB_PTP_FLAVOR_MTP       , 0x9105, "WMDRMPD_SendMeterChallengeQuery"},
+    {USB_PTP_FLAVOR_CANON     , 0x9105, "DeleteObject"},
+    {USB_PTP_FLAVOR_OLYMPUS   , 0x9106, "SetRGBGain"},
+    {USB_PTP_FLAVOR_MTP       , 0x9106, "WMDRMPD_GetMeterChallenge"},
+    {USB_PTP_FLAVOR_CANON     , 0x9106, "FormatStore"},
+    {USB_PTP_FLAVOR_MTP       , 0x9107, "WMDRMPD_SetMeterResponse"},
+    {USB_PTP_FLAVOR_CANON     , 0x9107, "GetPartialObject"},
+    {USB_PTP_FLAVOR_OLYMPUS   , 0x9107, "SetPresetMode"},
+    {USB_PTP_FLAVOR_CANON     , 0x9108, "GetDeviceInfoEx"},
+    {USB_PTP_FLAVOR_MTP       , 0x9108, "WMDRMPD_CleanDataStore"},
+    {USB_PTP_FLAVOR_OLYMPUS   , 0x9108, "SetWBBiasAll"},
+    {USB_PTP_FLAVOR_CANON     , 0x9109, "GetObjectInfoEx"},
+    {USB_PTP_FLAVOR_MTP       , 0x9109, "WMDRMPD_GetLicenseState"},
+    {USB_PTP_FLAVOR_MTP       , 0x910a, "WMDRMPD_SendWMDRMPDCommand"},
+    {USB_PTP_FLAVOR_CANON     , 0x910a, "GetThumbEx"},
+    {USB_PTP_FLAVOR_OLYMPUS   , 0x910a, "GetCameraControlMode"},
+    {USB_PTP_FLAVOR_MTP       , 0x910b, "WMDRMPD_SendWMDRMPDRequest"},
+    {USB_PTP_FLAVOR_CANON     , 0x910b, "SendPartialObject"},
+    {USB_PTP_FLAVOR_OLYMPUS   , 0x910b, "SetCameraControlMode"},
+    {USB_PTP_FLAVOR_OLYMPUS   , 0x910c, "SetWBRGBGain"},
+    {USB_PTP_FLAVOR_CANON     , 0x910c, "SetObjectAttributes"},
+    {USB_PTP_FLAVOR_CANON     , 0x910d, "GetObjectTime"},
+    {USB_PTP_FLAVOR_CANON     , 0x910e, "SetObjectTime"},
+    {USB_PTP_FLAVOR_CANON     , 0x910f, "RemoteRelease"},
+    {USB_PTP_FLAVOR_CANON     , 0x9110, "SetDevicePropValueEx"},
+    {USB_PTP_FLAVOR_CANON     , 0x9113, "GetRemoteMode"},
+    {USB_PTP_FLAVOR_CANON     , 0x9114, "SetRemoteMode"},
+    {USB_PTP_FLAVOR_CANON     , 0x9115, "SetEventMode"},
+    {USB_PTP_FLAVOR_CANON     , 0x9116, "GetEvent"},
+    {USB_PTP_FLAVOR_CANON     , 0x9117, "TransferComplete"},
+    {USB_PTP_FLAVOR_CANON     , 0x9118, "CancelTransfer"},
+    {USB_PTP_FLAVOR_CANON     , 0x9119, "ResetTransfer"},
+    {USB_PTP_FLAVOR_CANON     , 0x911a, "PCHDDCapacity"},
+    {USB_PTP_FLAVOR_CANON     , 0x911b, "SetUILock"},
+    {USB_PTP_FLAVOR_CANON     , 0x911c, "ResetUILock"},
+    {USB_PTP_FLAVOR_CANON     , 0x911d, "KeepDeviceOn"},
+    {USB_PTP_FLAVOR_CANON     , 0x911e, "SetNullPacketMode"},
+    {USB_PTP_FLAVOR_CANON     , 0x911f, "UpdateFirmware"},
+    {USB_PTP_FLAVOR_CANON     , 0x9120, "TransferCompleteDT"},
+    {USB_PTP_FLAVOR_CANON     , 0x9121, "CancelTransferDT"},
+    {USB_PTP_FLAVOR_CANON     , 0x9122, "SetWftProfile"},
+    {USB_PTP_FLAVOR_MTP       , 0x9122, "WPDWCN_ProcessWFCObject"},
+    {USB_PTP_FLAVOR_CANON     , 0x9123, "GetWftProfile"},
+    {USB_PTP_FLAVOR_CANON     , 0x9124, "SetProfileToWft"},
+    {USB_PTP_FLAVOR_CANON     , 0x9125, "BulbStart"},
+    {USB_PTP_FLAVOR_CANON     , 0x9126, "BulbEnd"},
+    {USB_PTP_FLAVOR_CANON     , 0x9127, "RequestDevicePropValue"},
+    {USB_PTP_FLAVOR_CANON     , 0x9128, "RemoteReleaseOn"},
+    {USB_PTP_FLAVOR_CANON     , 0x9129, "RemoteReleaseOff"},
+    {USB_PTP_FLAVOR_CANON     , 0x912a, "RegistBackgroundImage"},
+    {USB_PTP_FLAVOR_CANON     , 0x912b, "ChangePhotoStudioMode"},
+    {USB_PTP_FLAVOR_CANON     , 0x912c, "GetPartialObjectEx"},
+    {USB_PTP_FLAVOR_CANON     , 0x9130, "ResetMirrorLockupState"},
+    {USB_PTP_FLAVOR_CANON     , 0x9131, "PopupBuiltinFlash"},
+    {USB_PTP_FLAVOR_CANON     , 0x9132, "EndGetPartialObjectEx"},
+    {USB_PTP_FLAVOR_CANON     , 0x9133, "MovieSelectSWOn"},
+    {USB_PTP_FLAVOR_CANON     , 0x9134, "MovieSelectSWOff"},
+    {USB_PTP_FLAVOR_CANON     , 0x9135, "GetCTGInfo"},
+    {USB_PTP_FLAVOR_CANON     , 0x9136, "GetLensAdjust"},
+    {USB_PTP_FLAVOR_CANON     , 0x9137, "SetLensAdjust"},
+    {USB_PTP_FLAVOR_CANON     , 0x9138, "GetMusicInfo"},
+    {USB_PTP_FLAVOR_CANON     , 0x9139, "CreateHandle"},
+    {USB_PTP_FLAVOR_CANON     , 0x913a, "SendPartialObjectEx"},
+    {USB_PTP_FLAVOR_CANON     , 0x913b, "EndSendPartialObjectEx"},
+    {USB_PTP_FLAVOR_CANON     , 0x913c, "SetCTGInfo"},
+    {USB_PTP_FLAVOR_CANON     , 0x913d, "SetRequestOLCInfoGroup"},
+    {USB_PTP_FLAVOR_CANON     , 0x913e, "SetRequestRollingPitchingLevel"},
+    {USB_PTP_FLAVOR_CANON     , 0x913f, "GetCameraSupport"},
+    {USB_PTP_FLAVOR_CANON     , 0x9140, "SetRating"},
+    {USB_PTP_FLAVOR_CANON     , 0x9141, "RequestInnerDevelopStart"},
+    {USB_PTP_FLAVOR_CANON     , 0x9142, "RequestInnerDevelopParamChange"},
+    {USB_PTP_FLAVOR_CANON     , 0x9143, "RequestInnerDevelopEnd"},
+    {USB_PTP_FLAVOR_CANON     , 0x9144, "GpsLoggingDataMode"},
+    {USB_PTP_FLAVOR_CANON     , 0x9145, "GetGpsLogCurrentHandle"},
+    {USB_PTP_FLAVOR_CANON     , 0x9151, "InitiateViewfinder"},
+    {USB_PTP_FLAVOR_CANON     , 0x9152, "TerminateViewfinder"},
+    {USB_PTP_FLAVOR_CANON     , 0x9153, "GetViewFinderData"},
+    {USB_PTP_FLAVOR_CANON     , 0x9154, "DoAf"},
+    {USB_PTP_FLAVOR_CANON     , 0x9155, "DriveLens"},
+    {USB_PTP_FLAVOR_CANON     , 0x9156, "DepthOfFieldPreview"},
+    {USB_PTP_FLAVOR_CANON     , 0x9157, "ClickWB"},
+    {USB_PTP_FLAVOR_CANON     , 0x9158, "Zoom"},
+    {USB_PTP_FLAVOR_CANON     , 0x9159, "ZoomPosition"},
+    {USB_PTP_FLAVOR_CANON     , 0x915a, "SetLiveAfFrame"},
+    {USB_PTP_FLAVOR_CANON     , 0x915b, "TouchAfPosition"},
+    {USB_PTP_FLAVOR_CANON     , 0x915c, "SetLvPcFlavoreditMode"},
+    {USB_PTP_FLAVOR_CANON     , 0x915d, "SetLvPcFlavoreditParam"},
+    {USB_PTP_FLAVOR_CANON     , 0x9160, "AfCancel"},
+    {USB_PTP_FLAVOR_MTP       , 0x9170, "AAVT_OpenMediaSession"},
+    {USB_PTP_FLAVOR_MTP       , 0x9171, "AAVT_CloseMediaSession"},
+    {USB_PTP_FLAVOR_MTP       , 0x9172, "AAVT_GetNextDataBlock"},
+    {USB_PTP_FLAVOR_MTP       , 0x9173, "AAVT_SetCurrentTimePosition"},
+    {USB_PTP_FLAVOR_MTP       , 0x9180, "WMDRMND_SendRegistrationRequest"},
+    {USB_PTP_FLAVOR_MTP       , 0x9181, "WMDRMND_GetRegistrationResponse"},
+    {USB_PTP_FLAVOR_MTP       , 0x9182, "WMDRMND_GetProximityChallenge"},
+    {USB_PTP_FLAVOR_MTP       , 0x9183, "WMDRMND_SendProximityResponse"},
+    {USB_PTP_FLAVOR_MTP       , 0x9184, "WMDRMND_SendWMDRMNDLicenseRequest"},
+    {USB_PTP_FLAVOR_MTP       , 0x9185, "WMDRMND_GetWMDRMNDLicenseResponse"},
+    {USB_PTP_FLAVOR_CANON     , 0x91be, "SetDefaultCameraSetting"},
+    {USB_PTP_FLAVOR_CANON     , 0x91bf, "GetAEData"},
+    {USB_PTP_FLAVOR_CANON     , 0x91e8, "NotifyNetworkError"},
+    {USB_PTP_FLAVOR_CANON     , 0x91e9, "AdapterTransferProgress"},
+    {USB_PTP_FLAVOR_CANON     , 0x91f0, "TransferComplete2"},
+    {USB_PTP_FLAVOR_CANON     , 0x91f1, "CancelTransfer2"},
+    {USB_PTP_FLAVOR_CANON     , 0x91fe, "FAPIMessageTX"},
+    {USB_PTP_FLAVOR_CANON     , 0x91ff, "FAPIMessageRX"},
+    {USB_PTP_FLAVOR_NIKON     , 0x9200, "GetPreviewImg"},
+    {USB_PTP_FLAVOR_MTP       , 0x9201, "WMPPD_ReportAddedDeletedItems"},
+    {USB_PTP_FLAVOR_ALL       , 0x9201, "SONY_SDIOConnect"},
+    {USB_PTP_FLAVOR_NIKON     , 0x9201, "StartLiveView"},
+    {USB_PTP_FLAVOR_NIKON     , 0x9202, "EndLiveView"},
+    {USB_PTP_FLAVOR_MTP       , 0x9202, "WMPPD_ReportAcquiredItems"},
+    {USB_PTP_FLAVOR_ALL       , 0x9202, "SONY_GetSDIOGetExtDeviceInfo"},
+    {USB_PTP_FLAVOR_MTP       , 0x9203, "WMPPD_PlaylistObjectPref"},
+    {USB_PTP_FLAVOR_NIKON     , 0x9203, "GetLiveViewImg"},
+    {USB_PTP_FLAVOR_ALL       , 0x9203, "SONY_GetDevicePropdesc"},
+    {USB_PTP_FLAVOR_MTP       , 0x9204, "ZUNE_GETUNDEFINED001"},
+    {USB_PTP_FLAVOR_ALL       , 0x9204, "SONY_GetDevicePropertyValue"},
+    {USB_PTP_FLAVOR_NIKON     , 0x9204, "MfDrive"},
+    {USB_PTP_FLAVOR_NIKON     , 0x9205, "ChangeAfArea"},
+    {USB_PTP_FLAVOR_ALL       , 0x9205, "SONY_SetControlDeviceA"},
+    {USB_PTP_FLAVOR_NIKON     , 0x9206, "AfDriveCancel"},
+    {USB_PTP_FLAVOR_ALL       , 0x9206, "SONY_GetControlDeviceDesc"},
+    {USB_PTP_FLAVOR_NIKON     , 0x9207, "InitiateCaptureRecInMedia"},
+    {USB_PTP_FLAVOR_ALL       , 0x9207, "SONY_SetControlDeviceB"},
+    {USB_PTP_FLAVOR_ALL       , 0x9209, "SONY_GetAllDevicePropData"},
+    {USB_PTP_FLAVOR_NIKON     , 0x9209, "GetVendorStorageIDs"},
+    {USB_PTP_FLAVOR_NIKON     , 0x920a, "StartMovieRecInCard"},
+    {USB_PTP_FLAVOR_NIKON     , 0x920b, "EndMovieRec"},
+    {USB_PTP_FLAVOR_NIKON     , 0x920c, "TerminateCapture"},
+    {USB_PTP_FLAVOR_MTP       , 0x9212, "WMDRMPD_SendWMDRMPDAppRequest"},
+    {USB_PTP_FLAVOR_MTP       , 0x9213, "WMDRMPD_GetWMDRMPDAppResponse"},
+    {USB_PTP_FLAVOR_MTP       , 0x9214, "WMDRMPD_EnableTrustedFilesOperations"},
+    {USB_PTP_FLAVOR_MTP       , 0x9215, "WMDRMPD_DisableTrustedFilesOperations"},
+    {USB_PTP_FLAVOR_MTP       , 0x9216, "WMDRMPD_EndTrustedAppSession"},
+    {USB_PTP_FLAVOR_OLYMPUS   , 0x9301, "GetDeviceInfo"},
+    {USB_PTP_FLAVOR_OLYMPUS   , 0x9302, "OpenSession"},
+    {USB_PTP_FLAVOR_NIKON     , 0x9400, "GetPartialObjectHiSpeed"},
+    {USB_PTP_FLAVOR_OLYMPUS   , 0x9402, "SetDateTime"},
+    {USB_PTP_FLAVOR_OLYMPUS   , 0x9482, "GetDateTime"},
+    {USB_PTP_FLAVOR_OLYMPUS   , 0x9501, "SetCameraID"},
+    {USB_PTP_FLAVOR_NIKON     , 0x9504, "GetDevicePropEx"},
+    {USB_PTP_FLAVOR_OLYMPUS   , 0x9581, "GetCameraID"},
+    {USB_PTP_FLAVOR_ANDROID   , 0x95c1, "GetPartialObject64"},
+    {USB_PTP_FLAVOR_ANDROID   , 0x95c2, "SendPartialObject"},
+    {USB_PTP_FLAVOR_ANDROID   , 0x95c3, "TruncateObject"},
+    {USB_PTP_FLAVOR_ANDROID   , 0x95c4, "BeginEditObject"},
+    {USB_PTP_FLAVOR_ANDROID   , 0x95c5, "EndEditObject"},
+    {USB_PTP_FLAVOR_MTP       , 0x9801, "GetObjectPropsSupported"},
+    {USB_PTP_FLAVOR_MTP       , 0x9802, "GetObjectPropDesc"},
+    {USB_PTP_FLAVOR_MTP       , 0x9803, "GetObjectPropValue"},
+    {USB_PTP_FLAVOR_MTP       , 0x9804, "SetObjectPropValue"},
+    {USB_PTP_FLAVOR_MTP       , 0x9805, "GetObjPropList"},
+    {USB_PTP_FLAVOR_MTP       , 0x9806, "SetObjPropList"},
+    {USB_PTP_FLAVOR_MTP       , 0x9807, "GetInterdependendPropdesc"},
+    {USB_PTP_FLAVOR_MTP       , 0x9808, "SendObjectPropList"},
+    {USB_PTP_FLAVOR_MTP       , 0x9810, "GetObjectReferences"},
+    {USB_PTP_FLAVOR_MTP       , 0x9811, "SetObjectReferences"},
+    {USB_PTP_FLAVOR_MTP       , 0x9812, "UpdateDeviceFirmware"},
+    {USB_PTP_FLAVOR_MTP       , 0x9820, "Skip"},
+    {USB_PTP_FLAVOR_ALL       , 0x9999, "CHDK"},
+    {USB_PTP_FLAVOR_ALL       , 0xf000, "EXTENSION_MASK"}
+};
+/* PTP_OFC Object Format Codes */
+static const value_string_masked usb_ptp_ofc_mvals[] = {
+    {USB_PTP_FLAVOR_ALL       , 0x3000, "Undefined"},
+    {USB_PTP_FLAVOR_ALL       , 0x3001, "Association"},
+    {USB_PTP_FLAVOR_ALL       , 0x3002, "Script"},
+    {USB_PTP_FLAVOR_ALL       , 0x3003, "Executable"},
+    {USB_PTP_FLAVOR_ALL       , 0x3004, "Text"},
+    {USB_PTP_FLAVOR_ALL       , 0x3005, "HTML"},
+    {USB_PTP_FLAVOR_ALL       , 0x3006, "DPOF"},
+    {USB_PTP_FLAVOR_ALL       , 0x3007, "AIFF"},
+    {USB_PTP_FLAVOR_ALL       , 0x3008, "WAV"},
+    {USB_PTP_FLAVOR_ALL       , 0x3009, "MP3"},
+    {USB_PTP_FLAVOR_ALL       , 0x300a, "AVI"},
+    {USB_PTP_FLAVOR_ALL       , 0x300b, "MPEG"},
+    {USB_PTP_FLAVOR_ALL       , 0x300c, "ASF"},
+    {USB_PTP_FLAVOR_ALL       , 0x300d, "QT"},
+    {USB_PTP_FLAVOR_ALL       , 0x3800, "Defined"},
+    {USB_PTP_FLAVOR_ALL       , 0x3801, "EXIF_JPEG"},
+    {USB_PTP_FLAVOR_ALL       , 0x3802, "TIFF_EP"},
+    {USB_PTP_FLAVOR_ALL       , 0x3803, "FlashPix"},
+    {USB_PTP_FLAVOR_ALL       , 0x3804, "BMP"},
+    {USB_PTP_FLAVOR_ALL       , 0x3805, "CIFF"},
+    {USB_PTP_FLAVOR_ALL       , 0x3806, "Undefined_0x3806"},
+    {USB_PTP_FLAVOR_ALL       , 0x3807, "GIF"},
+    {USB_PTP_FLAVOR_ALL       , 0x3808, "JFIF"},
+    {USB_PTP_FLAVOR_ALL       , 0x3809, "PCD"},
+    {USB_PTP_FLAVOR_ALL       , 0x380a, "PICT"},
+    {USB_PTP_FLAVOR_ALL       , 0x380b, "PNG"},
+    {USB_PTP_FLAVOR_ALL       , 0x380c, "Undefined_0x380C"},
+    {USB_PTP_FLAVOR_ALL       , 0x380d, "TIFF"},
+    {USB_PTP_FLAVOR_ALL       , 0x380e, "TIFF_IT"},
+    {USB_PTP_FLAVOR_ALL       , 0x380f, "JP2"},
+    {USB_PTP_FLAVOR_ALL       , 0x3810, "JPX"},
+    {USB_PTP_FLAVOR_ALL       , 0x3811, "DNG"},
+    {USB_PTP_FLAVOR_KODAK     , 0xb002, "M3U"},
+    {USB_PTP_FLAVOR_CANON     , 0xb101, "CRW"},
+    {USB_PTP_FLAVOR_ALL       , 0xb101, "SONY_RAW"},
+    {USB_PTP_FLAVOR_CANON     , 0xb103, "CRW3"},
+    {USB_PTP_FLAVOR_CANON     , 0xb104, "MOV"},
+    {USB_PTP_FLAVOR_CANON     , 0xb105, "MOV2"},
+    {USB_PTP_FLAVOR_CANON     , 0xb1ff, "CHDK_CRW"},
+    {USB_PTP_FLAVOR_MTP       , 0xb211, "MediaCard"},
+    {USB_PTP_FLAVOR_MTP       , 0xb212, "MediaCardGroup"},
+    {USB_PTP_FLAVOR_MTP       , 0xb213, "Encounter"},
+    {USB_PTP_FLAVOR_MTP       , 0xb214, "EncounterBox"},
+    {USB_PTP_FLAVOR_MTP       , 0xb215, "M4A"},
+    {USB_PTP_FLAVOR_MTP       , 0xb217, "ZUNEUNDEFINED"},
+    {USB_PTP_FLAVOR_MTP       , 0xb802, "Firmware"},
+    {USB_PTP_FLAVOR_MTP       , 0xb881, "WindowsImageFormat"},
+    {USB_PTP_FLAVOR_MTP       , 0xb900, "UndefinedAudio"},
+    {USB_PTP_FLAVOR_MTP       , 0xb901, "WMA"},
+    {USB_PTP_FLAVOR_MTP       , 0xb902, "OGG"},
+    {USB_PTP_FLAVOR_MTP       , 0xb903, "AAC"},
+    {USB_PTP_FLAVOR_MTP       , 0xb904, "AudibleCodec"},
+    {USB_PTP_FLAVOR_MTP       , 0xb906, "FLAC"},
+    {USB_PTP_FLAVOR_MTP       , 0xb909, "SamsungPlaylist"},
+    {USB_PTP_FLAVOR_MTP       , 0xb980, "UndefinedVideo"},
+    {USB_PTP_FLAVOR_MTP       , 0xb981, "WMV"},
+    {USB_PTP_FLAVOR_MTP       , 0xb982, "MP4"},
+    {USB_PTP_FLAVOR_MTP       , 0xb983, "MP2"},
+    {USB_PTP_FLAVOR_MTP       , 0xb984, "3GP"},
+    {USB_PTP_FLAVOR_MTP       , 0xba00, "UndefinedCollection"},
+    {USB_PTP_FLAVOR_MTP       , 0xba01, "AbstractMultimediaAlbum"},
+    {USB_PTP_FLAVOR_MTP       , 0xba02, "AbstractImageAlbum"},
+    {USB_PTP_FLAVOR_MTP       , 0xba03, "AbstractAudioAlbum"},
+    {USB_PTP_FLAVOR_MTP       , 0xba04, "AbstractVideoAlbum"},
+    {USB_PTP_FLAVOR_MTP       , 0xba05, "AbstractAudioVideoPlaylist"},
+    {USB_PTP_FLAVOR_MTP       , 0xba06, "AbstractContactGroup"},
+    {USB_PTP_FLAVOR_MTP       , 0xba07, "AbstractMessageFolder"},
+    {USB_PTP_FLAVOR_MTP       , 0xba08, "AbstractChapteredProduction"},
+    {USB_PTP_FLAVOR_MTP       , 0xba09, "AbstractAudioPlaylist"},
+    {USB_PTP_FLAVOR_MTP       , 0xba0a, "AbstractVideoPlaylist"},
+    {USB_PTP_FLAVOR_MTP       , 0xba0b, "AbstractMediacast"},
+    {USB_PTP_FLAVOR_MTP       , 0xba10, "WPLPlaylist"},
+    {USB_PTP_FLAVOR_MTP       , 0xba11, "M3UPlaylist"},
+    {USB_PTP_FLAVOR_MTP       , 0xba12, "MPLPlaylist"},
+    {USB_PTP_FLAVOR_MTP       , 0xba13, "ASXPlaylist"},
+    {USB_PTP_FLAVOR_MTP       , 0xba14, "PLSPlaylist"},
+    {USB_PTP_FLAVOR_MTP       , 0xba80, "UndefinedDocument"},
+    {USB_PTP_FLAVOR_MTP       , 0xba81, "AbstractDocument"},
+    {USB_PTP_FLAVOR_MTP       , 0xba82, "XMLDocument"},
+    {USB_PTP_FLAVOR_MTP       , 0xba83, "MSWordDocument"},
+    {USB_PTP_FLAVOR_MTP       , 0xba84, "MHTCompiledHTMLDocument"},
+    {USB_PTP_FLAVOR_MTP       , 0xba85, "MSExcelSpreadsheetXLS"},
+    {USB_PTP_FLAVOR_MTP       , 0xba86, "MSPowerpointPresentationPPT"},
+    {USB_PTP_FLAVOR_MTP       , 0xbb00, "UndefinedMessage"},
+    {USB_PTP_FLAVOR_MTP       , 0xbb01, "AbstractMessage"},
+    {USB_PTP_FLAVOR_MTP       , 0xbb80, "UndefinedContact"},
+    {USB_PTP_FLAVOR_MTP       , 0xbb81, "AbstractContact"},
+    {USB_PTP_FLAVOR_MTP       , 0xbb82, "vCard2"},
+    {USB_PTP_FLAVOR_MTP       , 0xbb83, "vCard3"},
+    {USB_PTP_FLAVOR_MTP       , 0xbe00, "UndefinedCalendarItem"},
+    {USB_PTP_FLAVOR_MTP       , 0xbe01, "AbstractCalendarItem"},
+    {USB_PTP_FLAVOR_MTP       , 0xbe02, "vCalendar1"},
+    {USB_PTP_FLAVOR_MTP       , 0xbe03, "vCalendar2"},
+    {USB_PTP_FLAVOR_MTP       , 0xbe80, "UndefinedWindowsExecutable"},
+    {USB_PTP_FLAVOR_MTP       , 0xbe81, "MediaCast"},
+    {USB_PTP_FLAVOR_MTP       , 0xbe82, "Section"}
+};
+/* PTP_OPC MTP Object Properties */
+static const value_string_masked usb_ptp_opc_mvals[] = {
+    {USB_PTP_FLAVOR_ALL       , 0xb104, "WirelessConfigurationFile"},
+    {USB_PTP_FLAVOR_ALL       , 0xd901, "BuyFlag"},
+    {USB_PTP_FLAVOR_ALL       , 0xdc01, "StorageID"},
+    {USB_PTP_FLAVOR_ALL       , 0xdc02, "ObjectFormat"},
+    {USB_PTP_FLAVOR_ALL       , 0xdc03, "ProtectionStatus"},
+    {USB_PTP_FLAVOR_ALL       , 0xdc04, "ObjectSize"},
+    {USB_PTP_FLAVOR_ALL       , 0xdc05, "AssociationType"},
+    {USB_PTP_FLAVOR_ALL       , 0xdc06, "AssociationDesc"},
+    {USB_PTP_FLAVOR_ALL       , 0xdc07, "ObjectFileName"},
+    {USB_PTP_FLAVOR_ALL       , 0xdc08, "DateCreated"},
+    {USB_PTP_FLAVOR_ALL       , 0xdc09, "DateModified"},
+    {USB_PTP_FLAVOR_ALL       , 0xdc0a, "Keywords"},
+    {USB_PTP_FLAVOR_ALL       , 0xdc0b, "ParentObject"},
+    {USB_PTP_FLAVOR_ALL       , 0xdc0c, "AllowedFolderContents"},
+    {USB_PTP_FLAVOR_ALL       , 0xdc0d, "Hidden"},
+    {USB_PTP_FLAVOR_ALL       , 0xdc0e, "SystemObject"},
+    {USB_PTP_FLAVOR_ALL       , 0xdc41, "PersistantUniqueObjectIdentifier"},
+    {USB_PTP_FLAVOR_ALL       , 0xdc42, "SyncID"},
+    {USB_PTP_FLAVOR_ALL       , 0xdc43, "PropertyBag"},
+    {USB_PTP_FLAVOR_ALL       , 0xdc44, "Name"},
+    {USB_PTP_FLAVOR_ALL       , 0xdc45, "CreatedBy"},
+    {USB_PTP_FLAVOR_ALL       , 0xdc46, "Artist"},
+    {USB_PTP_FLAVOR_ALL       , 0xdc47, "DateAuthored"},
+    {USB_PTP_FLAVOR_ALL       , 0xdc48, "Description"},
+    {USB_PTP_FLAVOR_ALL       , 0xdc49, "URLReference"},
+    {USB_PTP_FLAVOR_ALL       , 0xdc4a, "LanguageLocale"},
+    {USB_PTP_FLAVOR_ALL       , 0xdc4b, "CopyrightInformation"},
+    {USB_PTP_FLAVOR_ALL       , 0xdc4c, "Source"},
+    {USB_PTP_FLAVOR_ALL       , 0xdc4d, "OriginLocation"},
+    {USB_PTP_FLAVOR_ALL       , 0xdc4e, "DateAdded"},
+    {USB_PTP_FLAVOR_ALL       , 0xdc4f, "NonConsumable"},
+    {USB_PTP_FLAVOR_ALL       , 0xdc50, "CorruptOrUnplayable"},
+    {USB_PTP_FLAVOR_ALL       , 0xdc51, "ProducerSerialNumber"},
+    {USB_PTP_FLAVOR_ALL       , 0xdc81, "RepresentativeSampleFormat"},
+    {USB_PTP_FLAVOR_ALL       , 0xdc82, "RepresentativeSampleSize"},
+    {USB_PTP_FLAVOR_ALL       , 0xdc83, "RepresentativeSampleHeight"},
+    {USB_PTP_FLAVOR_ALL       , 0xdc84, "RepresentativeSampleWidth"},
+    {USB_PTP_FLAVOR_ALL       , 0xdc85, "RepresentativeSampleDuration"},
+    {USB_PTP_FLAVOR_ALL       , 0xdc86, "RepresentativeSampleData"},
+    {USB_PTP_FLAVOR_ALL       , 0xdc87, "Width"},
+    {USB_PTP_FLAVOR_ALL       , 0xdc88, "Height"},
+    {USB_PTP_FLAVOR_ALL       , 0xdc89, "Duration"},
+    {USB_PTP_FLAVOR_ALL       , 0xdc8a, "Rating"},
+    {USB_PTP_FLAVOR_ALL       , 0xdc8b, "Track"},
+    {USB_PTP_FLAVOR_ALL       , 0xdc8c, "Genre"},
+    {USB_PTP_FLAVOR_ALL       , 0xdc8d, "Credits"},
+    {USB_PTP_FLAVOR_ALL       , 0xdc8e, "Lyrics"},
+    {USB_PTP_FLAVOR_ALL       , 0xdc8f, "SubscriptionContentID"},
+    {USB_PTP_FLAVOR_ALL       , 0xdc90, "ProducedBy"},
+    {USB_PTP_FLAVOR_ALL       , 0xdc91, "UseCount"},
+    {USB_PTP_FLAVOR_ALL       , 0xdc92, "SkipCount"},
+    {USB_PTP_FLAVOR_ALL       , 0xdc93, "LastAccessed"},
+    {USB_PTP_FLAVOR_ALL       , 0xdc94, "ParentalRating"},
+    {USB_PTP_FLAVOR_ALL       , 0xdc95, "MetaGenre"},
+    {USB_PTP_FLAVOR_ALL       , 0xdc96, "Composer"},
+    {USB_PTP_FLAVOR_ALL       , 0xdc97, "EffectiveRating"},
+    {USB_PTP_FLAVOR_ALL       , 0xdc98, "Subtitle"},
+    {USB_PTP_FLAVOR_ALL       , 0xdc99, "OriginalReleaseDate"},
+    {USB_PTP_FLAVOR_ALL       , 0xdc9a, "AlbumName"},
+    {USB_PTP_FLAVOR_ALL       , 0xdc9b, "AlbumArtist"},
+    {USB_PTP_FLAVOR_ALL       , 0xdc9c, "Mood"},
+    {USB_PTP_FLAVOR_ALL       , 0xdc9d, "DRMStatus"},
+    {USB_PTP_FLAVOR_ALL       , 0xdc9e, "SubDescription"},
+    {USB_PTP_FLAVOR_ALL       , 0xdcd1, "IsCropped"},
+    {USB_PTP_FLAVOR_ALL       , 0xdcd2, "IsColorCorrected"},
+    {USB_PTP_FLAVOR_ALL       , 0xdcd3, "ImageBitDepth"},
+    {USB_PTP_FLAVOR_ALL       , 0xdcd4, "Fnumber"},
+    {USB_PTP_FLAVOR_ALL       , 0xdcd5, "ExposureTime"},
+    {USB_PTP_FLAVOR_ALL       , 0xdcd6, "ExposureIndex"},
+    {USB_PTP_FLAVOR_ALL       , 0xdce0, "DisplayName"},
+    {USB_PTP_FLAVOR_ALL       , 0xdce1, "BodyText"},
+    {USB_PTP_FLAVOR_ALL       , 0xdce2, "Subject"},
+    {USB_PTP_FLAVOR_ALL       , 0xdce3, "Priority"},
+    {USB_PTP_FLAVOR_ALL       , 0xdd00, "GivenName"},
+    {USB_PTP_FLAVOR_ALL       , 0xdd01, "MiddleNames"},
+    {USB_PTP_FLAVOR_ALL       , 0xdd02, "FamilyName"},
+    {USB_PTP_FLAVOR_ALL       , 0xdd03, "Prefix"},
+    {USB_PTP_FLAVOR_ALL       , 0xdd04, "Suffix"},
+    {USB_PTP_FLAVOR_ALL       , 0xdd05, "PhoneticGivenName"},
+    {USB_PTP_FLAVOR_ALL       , 0xdd06, "PhoneticFamilyName"},
+    {USB_PTP_FLAVOR_ALL       , 0xdd07, "EmailPrimary"},
+    {USB_PTP_FLAVOR_ALL       , 0xdd08, "EmailPersonal1"},
+    {USB_PTP_FLAVOR_ALL       , 0xdd09, "EmailPersonal2"},
+    {USB_PTP_FLAVOR_ALL       , 0xdd0a, "EmailBusiness1"},
+    {USB_PTP_FLAVOR_ALL       , 0xdd0b, "EmailBusiness2"},
+    {USB_PTP_FLAVOR_ALL       , 0xdd0c, "EmailOthers"},
+    {USB_PTP_FLAVOR_ALL       , 0xdd0d, "PhoneNumberPrimary"},
+    {USB_PTP_FLAVOR_ALL       , 0xdd0e, "PhoneNumberPersonal"},
+    {USB_PTP_FLAVOR_ALL       , 0xdd0f, "PhoneNumberPersonal2"},
+    {USB_PTP_FLAVOR_ALL       , 0xdd10, "PhoneNumberBusiness"},
+    {USB_PTP_FLAVOR_ALL       , 0xdd11, "PhoneNumberBusiness2"},
+    {USB_PTP_FLAVOR_ALL       , 0xdd12, "PhoneNumberMobile"},
+    {USB_PTP_FLAVOR_ALL       , 0xdd13, "PhoneNumberMobile2"},
+    {USB_PTP_FLAVOR_ALL       , 0xdd14, "FaxNumberPrimary"},
+    {USB_PTP_FLAVOR_ALL       , 0xdd15, "FaxNumberPersonal"},
+    {USB_PTP_FLAVOR_ALL       , 0xdd16, "FaxNumberBusiness"},
+    {USB_PTP_FLAVOR_ALL       , 0xdd17, "PagerNumber"},
+    {USB_PTP_FLAVOR_ALL       , 0xdd18, "PhoneNumberOthers"},
+    {USB_PTP_FLAVOR_ALL       , 0xdd19, "PrimaryWebAddress"},
+    {USB_PTP_FLAVOR_ALL       , 0xdd1a, "PersonalWebAddress"},
+    {USB_PTP_FLAVOR_ALL       , 0xdd1b, "BusinessWebAddress"},
+    {USB_PTP_FLAVOR_ALL       , 0xdd1c, "InstantMessengerAddress"},
+    {USB_PTP_FLAVOR_ALL       , 0xdd1d, "InstantMessengerAddress2"},
+    {USB_PTP_FLAVOR_ALL       , 0xdd1e, "InstantMessengerAddress3"},
+    {USB_PTP_FLAVOR_ALL       , 0xdd1f, "PostalAddressPersonalFull"},
+    {USB_PTP_FLAVOR_ALL       , 0xdd20, "PostalAddressPersonalFullLine1"},
+    {USB_PTP_FLAVOR_ALL       , 0xdd21, "PostalAddressPersonalFullLine2"},
+    {USB_PTP_FLAVOR_ALL       , 0xdd22, "PostalAddressPersonalFullCity"},
+    {USB_PTP_FLAVOR_ALL       , 0xdd23, "PostalAddressPersonalFullRegion"},
+    {USB_PTP_FLAVOR_ALL       , 0xdd24, "PostalAddressPersonalFullPostalCode"},
+    {USB_PTP_FLAVOR_ALL       , 0xdd25, "PostalAddressPersonalFullCountry"},
+    {USB_PTP_FLAVOR_ALL       , 0xdd26, "PostalAddressBusinessFull"},
+    {USB_PTP_FLAVOR_ALL       , 0xdd27, "PostalAddressBusinessLine1"},
+    {USB_PTP_FLAVOR_ALL       , 0xdd28, "PostalAddressBusinessLine2"},
+    {USB_PTP_FLAVOR_ALL       , 0xdd29, "PostalAddressBusinessCity"},
+    {USB_PTP_FLAVOR_ALL       , 0xdd2a, "PostalAddressBusinessRegion"},
+    {USB_PTP_FLAVOR_ALL       , 0xdd2b, "PostalAddressBusinessPostalCode"},
+    {USB_PTP_FLAVOR_ALL       , 0xdd2c, "PostalAddressBusinessCountry"},
+    {USB_PTP_FLAVOR_ALL       , 0xdd2d, "PostalAddressOtherFull"},
+    {USB_PTP_FLAVOR_ALL       , 0xdd2e, "PostalAddressOtherLine1"},
+    {USB_PTP_FLAVOR_ALL       , 0xdd2f, "PostalAddressOtherLine2"},
+    {USB_PTP_FLAVOR_ALL       , 0xdd30, "PostalAddressOtherCity"},
+    {USB_PTP_FLAVOR_ALL       , 0xdd31, "PostalAddressOtherRegion"},
+    {USB_PTP_FLAVOR_ALL       , 0xdd32, "PostalAddressOtherPostalCode"},
+    {USB_PTP_FLAVOR_ALL       , 0xdd33, "PostalAddressOtherCountry"},
+    {USB_PTP_FLAVOR_ALL       , 0xdd34, "OrganizationName"},
+    {USB_PTP_FLAVOR_ALL       , 0xdd35, "PhoneticOrganizationName"},
+    {USB_PTP_FLAVOR_ALL       , 0xdd36, "Role"},
+    {USB_PTP_FLAVOR_ALL       , 0xdd37, "Birthdate"},
+    {USB_PTP_FLAVOR_ALL       , 0xdd40, "MessageTo"},
+    {USB_PTP_FLAVOR_ALL       , 0xdd41, "MessageCC"},
+    {USB_PTP_FLAVOR_ALL       , 0xdd42, "MessageBCC"},
+    {USB_PTP_FLAVOR_ALL       , 0xdd43, "MessageRead"},
+    {USB_PTP_FLAVOR_ALL       , 0xdd44, "MessageReceivedTime"},
+    {USB_PTP_FLAVOR_ALL       , 0xdd45, "MessageSender"},
+    {USB_PTP_FLAVOR_ALL       , 0xdd50, "ActivityBeginTime"},
+    {USB_PTP_FLAVOR_ALL       , 0xdd51, "ActivityEndTime"},
+    {USB_PTP_FLAVOR_ALL       , 0xdd52, "ActivityLocation"},
+    {USB_PTP_FLAVOR_ALL       , 0xdd54, "ActivityRequiredAttendees"},
+    {USB_PTP_FLAVOR_ALL       , 0xdd55, "ActivityOptionalAttendees"},
+    {USB_PTP_FLAVOR_ALL       , 0xdd56, "ActivityResources"},
+    {USB_PTP_FLAVOR_ALL       , 0xdd57, "ActivityAccepted"},
+    {USB_PTP_FLAVOR_ALL       , 0xdd5d, "Owner"},
+    {USB_PTP_FLAVOR_ALL       , 0xdd5e, "Editor"},
+    {USB_PTP_FLAVOR_ALL       , 0xdd5f, "Webmaster"},
+    {USB_PTP_FLAVOR_ALL       , 0xdd60, "URLSource"},
+    {USB_PTP_FLAVOR_ALL       , 0xdd61, "URLDestination"},
+    {USB_PTP_FLAVOR_ALL       , 0xdd62, "TimeBookmark"},
+    {USB_PTP_FLAVOR_ALL       , 0xdd63, "ObjectBookmark"},
+    {USB_PTP_FLAVOR_ALL       , 0xdd64, "ByteBookmark"},
+    {USB_PTP_FLAVOR_ALL       , 0xdd70, "LastBuildDate"},
+    {USB_PTP_FLAVOR_ALL       , 0xdd71, "TimetoLive"},
+    {USB_PTP_FLAVOR_ALL       , 0xdd72, "MediaGUID"},
+    {USB_PTP_FLAVOR_ALL       , 0xde91, "TotalBitRate"},
+    {USB_PTP_FLAVOR_ALL       , 0xde92, "BitRateType"},
+    {USB_PTP_FLAVOR_ALL       , 0xde93, "SampleRate"},
+    {USB_PTP_FLAVOR_ALL       , 0xde94, "NumberOfChannels"},
+    {USB_PTP_FLAVOR_ALL       , 0xde95, "AudioBitDepth"},
+    {USB_PTP_FLAVOR_ALL       , 0xde97, "ScanDepth"},
+    {USB_PTP_FLAVOR_ALL       , 0xde99, "AudioWAVECodec"},
+    {USB_PTP_FLAVOR_ALL       , 0xde9a, "AudioBitRate"},
+    {USB_PTP_FLAVOR_ALL       , 0xde9b, "VideoFourCCCodec"},
+    {USB_PTP_FLAVOR_ALL       , 0xde9c, "VideoBitRate"},
+    {USB_PTP_FLAVOR_ALL       , 0xde9d, "FramesPerThousandSeconds"},
+    {USB_PTP_FLAVOR_ALL       , 0xde9e, "KeyFrameDistance"},
+    {USB_PTP_FLAVOR_ALL       , 0xde9f, "BufferSize"},
+    {USB_PTP_FLAVOR_ALL       , 0xdea0, "EncodingQuality"},
+    {USB_PTP_FLAVOR_ALL       , 0xdea1, "EncodingProfile"}
+};
+/* PTP_OPFF MTP Device Property Codes */
+static const value_string_masked usb_ptp_opff_mvals[] = {
+    {USB_PTP_FLAVOR_ALL       , 0x00, "None"},
+    {USB_PTP_FLAVOR_ALL       , 0x01, "Range"},
+    {USB_PTP_FLAVOR_ALL       , 0x02, "Enumeration"},
+    {USB_PTP_FLAVOR_ALL       , 0x03, "DateTime"},
+    {USB_PTP_FLAVOR_ALL       , 0x04, "FixedLengthArray"},
+    {USB_PTP_FLAVOR_ALL       , 0x05, "RegularExpression"},
+    {USB_PTP_FLAVOR_ALL       , 0x06, "ByteArray"},
+    {USB_PTP_FLAVOR_ALL       , 0xff, "LongString"}
+};
+/* PTP_PS Protection Status */
+static const value_string_masked usb_ptp_ps_mvals[] = {
+    {USB_PTP_FLAVOR_ALL       , 0x0000, "NoProtection"},
+    {USB_PTP_FLAVOR_ALL       , 0x0001, "ReadOnly"},
+    {USB_PTP_FLAVOR_MTP       , 0x8002, "ReadOnlyData"},
+    {USB_PTP_FLAVOR_MTP       , 0x8003, "NonTransferableData"}
+};
+/* PTP_RC Response Codes */
+static const value_string_masked usb_ptp_rc_mvals[] = {
+    {USB_PTP_FLAVOR_ALL       , 0x2000, "Undefined"},
+    {USB_PTP_FLAVOR_ALL       , 0x2001, "OK"},
+    {USB_PTP_FLAVOR_ALL       , 0x2002, "GeneralError"},
+    {USB_PTP_FLAVOR_ALL       , 0x2003, "SessionNotOpen"},
+    {USB_PTP_FLAVOR_ALL       , 0x2004, "InvalidTransactionID"},
+    {USB_PTP_FLAVOR_ALL       , 0x2005, "OperationNotSupported"},
+    {USB_PTP_FLAVOR_ALL       , 0x2006, "ParameterNotSupported"},
+    {USB_PTP_FLAVOR_ALL       , 0x2007, "IncompleteTransfer"},
+    {USB_PTP_FLAVOR_ALL       , 0x2008, "InvalidStorageId"},
+    {USB_PTP_FLAVOR_ALL       , 0x2009, "InvalidObjectHandle"},
+    {USB_PTP_FLAVOR_ALL       , 0x200a, "DevicePropNotSupported"},
+    {USB_PTP_FLAVOR_ALL       , 0x200b, "InvalidObjectFormatCode"},
+    {USB_PTP_FLAVOR_ALL       , 0x200c, "StoreFull"},
+    {USB_PTP_FLAVOR_ALL       , 0x200d, "ObjectWriteProtected"},
+    {USB_PTP_FLAVOR_ALL       , 0x200e, "StoreReadOnly"},
+    {USB_PTP_FLAVOR_ALL       , 0x200f, "AccessDenied"},
+    {USB_PTP_FLAVOR_ALL       , 0x2010, "NoThumbnailPresent"},
+    {USB_PTP_FLAVOR_ALL       , 0x2011, "SelfTestFailed"},
+    {USB_PTP_FLAVOR_ALL       , 0x2012, "PartialDeletion"},
+    {USB_PTP_FLAVOR_ALL       , 0x2013, "StoreNotAvailable"},
+    {USB_PTP_FLAVOR_ALL       , 0x2014, "SpecificationByFormatUnsupported"},
+    {USB_PTP_FLAVOR_ALL       , 0x2015, "NoValidObjectInfo"},
+    {USB_PTP_FLAVOR_ALL       , 0x2016, "InvalidCodeFormat"},
+    {USB_PTP_FLAVOR_ALL       , 0x2017, "UnknownVendorCode"},
+    {USB_PTP_FLAVOR_ALL       , 0x2018, "CaptureAlreadyTerminated"},
+    {USB_PTP_FLAVOR_ALL       , 0x2019, "DeviceBusy"},
+    {USB_PTP_FLAVOR_ALL       , 0x201a, "InvalidParentObject"},
+    {USB_PTP_FLAVOR_ALL       , 0x201b, "InvalidDevicePropFormat"},
+    {USB_PTP_FLAVOR_ALL       , 0x201c, "InvalidDevicePropValue"},
+    {USB_PTP_FLAVOR_ALL       , 0x201d, "InvalidParameter"},
+    {USB_PTP_FLAVOR_ALL       , 0x201e, "SessionAlreadyOpened"},
+    {USB_PTP_FLAVOR_ALL       , 0x201f, "TransactionCanceled"},
+    {USB_PTP_FLAVOR_ALL       , 0x2020, "SpecificationOfDestinationUnsupported"},
+    {USB_PTP_FLAVOR_ALL       , 0x2021, "InvalidEnumHandle"},
+    {USB_PTP_FLAVOR_ALL       , 0x2022, "NoStreamEnabled"},
+    {USB_PTP_FLAVOR_ALL       , 0x2023, "InvalidDataSet"},
+    {USB_PTP_FLAVOR_NIKON     , 0xa001, "HardwareError"},
+    {USB_PTP_FLAVOR_KODAK     , 0xa001, "FilenameRequired"},
+    {USB_PTP_FLAVOR_CANON     , 0xa001, "UNKNOWN_COMMAND"},
+    {USB_PTP_FLAVOR_KODAK     , 0xa002, "FilenameConflicts"},
+    {USB_PTP_FLAVOR_NIKON     , 0xa002, "OutOfFocus"},
+    {USB_PTP_FLAVOR_KODAK     , 0xa003, "FilenameInvalid"},
+    {USB_PTP_FLAVOR_NIKON     , 0xa003, "ChangeCameraModeFailed"},
+    {USB_PTP_FLAVOR_NIKON     , 0xa004, "InvalidStatus"},
+    {USB_PTP_FLAVOR_NIKON     , 0xa005, "SetPropertyNotSupported"},
+    {USB_PTP_FLAVOR_CANON     , 0xa005, "OPERATION_REFUSED"},
+    {USB_PTP_FLAVOR_CANON     , 0xa006, "LENS_COVER"},
+    {USB_PTP_FLAVOR_NIKON     , 0xa006, "WbResetError"},
+    {USB_PTP_FLAVOR_NIKON     , 0xa007, "DustReferenceError"},
+    {USB_PTP_FLAVOR_NIKON     , 0xa008, "ShutterSpeedBulb"},
+    {USB_PTP_FLAVOR_CANON     , 0xa009, "A009"},
+    {USB_PTP_FLAVOR_NIKON     , 0xa009, "MirrorUpSequence"},
+    {USB_PTP_FLAVOR_NIKON     , 0xa00a, "CameraModeNotAdjustFNumber"},
+    {USB_PTP_FLAVOR_NIKON     , 0xa00b, "NotLiveView"},
+    {USB_PTP_FLAVOR_NIKON     , 0xa00c, "MfDriveStepEnd"},
+    {USB_PTP_FLAVOR_NIKON     , 0xa00e, "MfDriveStepInsufficiency"},
+    {USB_PTP_FLAVOR_NIKON     , 0xa022, "AdvancedTransferCancel"},
+    {USB_PTP_FLAVOR_CANON     , 0xa101, "BATTERY_LOW"},
+    {USB_PTP_FLAVOR_CANON     , 0xa102, "NOT_READY"},
+    {USB_PTP_FLAVOR_MTP       , 0xa121, "Invalid_WFC_Syntax"},
+    {USB_PTP_FLAVOR_MTP       , 0xa122, "WFC_Version_Not_Supported"},
+    {USB_PTP_FLAVOR_MTP       , 0xa170, "Invalid_Media_Session_ID"},
+    {USB_PTP_FLAVOR_MTP       , 0xa171, "Media_Session_Limit_Reached"},
+    {USB_PTP_FLAVOR_MTP       , 0xa172, "No_More_Data"},
+    {USB_PTP_FLAVOR_MTP       , 0xa800, "Undefined"},
+    {USB_PTP_FLAVOR_MTP       , 0xa801, "Invalid_ObjectPropCode"},
+    {USB_PTP_FLAVOR_MTP       , 0xa802, "Invalid_ObjectProp_Format"},
+    {USB_PTP_FLAVOR_MTP       , 0xa803, "Invalid_ObjectProp_Value"},
+    {USB_PTP_FLAVOR_MTP       , 0xa804, "Invalid_ObjectReference"},
+    {USB_PTP_FLAVOR_MTP       , 0xa806, "Invalid_Dataset"},
+    {USB_PTP_FLAVOR_MTP       , 0xa807, "Specification_By_Group_Unsupported"},
+    {USB_PTP_FLAVOR_MTP       , 0xa808, "Specification_By_Depth_Unsupported"},
+    {USB_PTP_FLAVOR_MTP       , 0xa809, "Object_Too_Large"},
+    {USB_PTP_FLAVOR_MTP       , 0xa80a, "ObjectProp_Not_Supported"}
+};
+/* PTP_ST Storage Types */
+static const value_string_masked usb_ptp_st_mvals[] = {
+    {USB_PTP_FLAVOR_ALL       , 0x0000, "Undefined"},
+    {USB_PTP_FLAVOR_ALL       , 0x0001, "FixedROM"},
+    {USB_PTP_FLAVOR_ALL       , 0x0002, "RemovableROM"},
+    {USB_PTP_FLAVOR_ALL       , 0x0003, "FixedRAM"},
+    {USB_PTP_FLAVOR_ALL       , 0x0004, "RemovableRAM"}
+};
