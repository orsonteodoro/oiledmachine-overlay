Subject: Make regression test optional

Patch Author: Orson Teodoro <orsonteodoro@hotmail.com>
Date: Jun 11, 2021 (unix timestamp: 1623458519)
diff -urp libsoup-2.99.8.orig/meson.build libsoup-2.99.8/meson.build
--- libsoup-2.99.8.orig/meson.build	2021-06-04 08:16:06.000000000 -0700
+++ libsoup-2.99.8/meson.build	2021-06-11 17:59:18.720772272 -0700
@@ -232,56 +232,59 @@ endif
 #
 # The summary is that for the configuration parsing we will use the apachectl,
 # but for running the tests we will use the httpd binary.
-apachectl = find_program('apachectl', '/sbin/apachectl', '/usr/sbin/apachectl', required : false)
-# This abomination is a result of https://github.com/mesonbuild/meson/issues/1576
-apache_httpd2 = find_program('httpd2', 'httpd', 'apache2', 'apache',
-             '/sbin/httpd2', '/sbin/httpd', '/sbin/apache2', '/sbin/apache',
-             '/usr/sbin/httpd2', '/usr/sbin/httpd', '/usr/sbin/apache2', '/usr/sbin/apache',
-             required : false)
-have_apache=false
-apache_httpd2_version = ''
-if apache_httpd2.found() and apachectl.found()
-  apache_httpd2_version_raw = run_command(apachectl.path(), '-v')
-  # It seems that from version 2.4.39 apachectl doesn't take arguments, fallback
-  # to calling apache directly just in case.
-  if apache_httpd2_version_raw.returncode() != 0
-    apache_httpd2_version_raw = run_command(apache_httpd2.path(), '-v')
-  endif
-  if apache_httpd2_version_raw.returncode() == 0
-    apache_httpd2_version = apache_httpd2_version_raw.stdout().split('\n')[0]
-    apache_httpd2_version = apache_httpd2_version.split('/')[1].split(' ')[0]
-    if apache_httpd2_version.version_compare('>=2.4')
-      have_apache = true
-      cdata.set_quoted('APACHE_HTTPD', apache_httpd2.path())
-    else
-      message('Found ' + apache_httpd2_version + ', but at least 2.4 is needed - ignoring')
+have_apache = false
+if get_option('regression_tests').enabled()
+  apachectl = find_program('apachectl', '/sbin/apachectl', '/usr/sbin/apachectl', required : false)
+  # This abomination is a result of https://github.com/mesonbuild/meson/issues/1576
+  apache_httpd2 = find_program('httpd2', 'httpd', 'apache2', 'apache',
+               '/sbin/httpd2', '/sbin/httpd', '/sbin/apache2', '/sbin/apache',
+               '/usr/sbin/httpd2', '/usr/sbin/httpd', '/usr/sbin/apache2', '/usr/sbin/apache',
+               required : false)
+  have_apache=false
+  apache_httpd2_version = ''
+  if apache_httpd2.found() and apachectl.found()
+    apache_httpd2_version_raw = run_command(apachectl.path(), '-v')
+    # It seems that from version 2.4.39 apachectl doesn't take arguments, fallback
+    # to calling apache directly just in case.
+    if apache_httpd2_version_raw.returncode() != 0
+      apache_httpd2_version_raw = run_command(apache_httpd2.path(), '-v')
+    endif
+    if apache_httpd2_version_raw.returncode() == 0
+      apache_httpd2_version = apache_httpd2_version_raw.stdout().split('\n')[0]
+      apache_httpd2_version = apache_httpd2_version.split('/')[1].split(' ')[0]
+      if apache_httpd2_version.version_compare('>=2.4')
+        have_apache = true
+        cdata.set_quoted('APACHE_HTTPD', apache_httpd2.path())
+      else
+        message('Found ' + apache_httpd2_version + ', but at least 2.4 is needed - ignoring')
+      endif
     endif
   endif
-endif
 
-if have_apache
-  apache_modules_dirs_out = run_command('get_apache_modules_dirs.py', apachectl.path())
-  have_apache = (apache_modules_dirs_out.returncode() == 0)
-  # Same as above, using apachectl might fail, try apache directly.
-  if not have_apache
-    apache_modules_dirs_out = run_command('get_apache_modules_dirs.py', apache_httpd2.path())
-    have_apache = (apache_modules_dirs_out.returncode() == 0)
-  endif
   if have_apache
-    apache_modules_dirs = apache_modules_dirs_out.stdout().split(':')
-    message('Apache modules directory: ' + apache_modules_dirs[0])
-    cdata.set('APACHE_MODULE_DIR', apache_modules_dirs[0])
-    message('Apache SSL module directory: ' + apache_modules_dirs[1])
-    cdata.set('APACHE_SSL_MODULE_DIR', apache_modules_dirs[1])
-    message('Apache PHP module file: ' + apache_modules_dirs[2])
-    cdata.set('APACHE_PHP_MODULE_FILE', apache_modules_dirs[2])
-    message('Apache mod_unixd module directory: ' + (apache_modules_dirs[3] != '' ? apache_modules_dirs[3] : '(none)'))
-    cdata.set('IF_HAVE_MOD_UNIXD', apache_modules_dirs[3] != '' ? '' : '#')
-    cdata.set('HAVE_APACHE', have_apache)
-  else
-    message('Failed to locate necessary Apache modules for full test coverage')
-    message('stdout: ' + apache_modules_dirs_out.stdout())
-    message('stderr: ' + apache_modules_dirs_out.stderr())
+    apache_modules_dirs_out = run_command('get_apache_modules_dirs.py', apachectl.path())
+    have_apache = (apache_modules_dirs_out.returncode() == 0)
+    # Same as above, using apachectl might fail, try apache directly.
+    if not have_apache
+      apache_modules_dirs_out = run_command('get_apache_modules_dirs.py', apache_httpd2.path())
+      have_apache = (apache_modules_dirs_out.returncode() == 0)
+    endif
+    if have_apache
+      apache_modules_dirs = apache_modules_dirs_out.stdout().split(':')
+      message('Apache modules directory: ' + apache_modules_dirs[0])
+      cdata.set('APACHE_MODULE_DIR', apache_modules_dirs[0])
+      message('Apache SSL module directory: ' + apache_modules_dirs[1])
+      cdata.set('APACHE_SSL_MODULE_DIR', apache_modules_dirs[1])
+      message('Apache PHP module file: ' + apache_modules_dirs[2])
+      cdata.set('APACHE_PHP_MODULE_FILE', apache_modules_dirs[2])
+      message('Apache mod_unixd module directory: ' + (apache_modules_dirs[3] != '' ? apache_modules_dirs[3] : '(none)'))
+      cdata.set('IF_HAVE_MOD_UNIXD', apache_modules_dirs[3] != '' ? '' : '#')
+      cdata.set('HAVE_APACHE', have_apache)
+    else
+      message('Failed to locate necessary Apache modules for full test coverage')
+      message('stdout: ' + apache_modules_dirs_out.stdout())
+      message('stderr: ' + apache_modules_dirs_out.stderr())
+    endif
   endif
 endif
 
diff -urp libsoup-2.99.8.orig/meson_options.txt libsoup-2.99.8/meson_options.txt
--- libsoup-2.99.8.orig/meson_options.txt	2021-06-04 08:16:06.000000000 -0700
+++ libsoup-2.99.8/meson_options.txt	2021-06-11 18:01:15.775438823 -0700
@@ -94,3 +94,9 @@ option('pkcs11_tests',
   value: 'auto',
   description: 'enable PKCS #11 tests depending on gnutls'
 )
+
+option('regression_tests',
+  type: 'feature',
+  value: 'auto',
+  description: 'enable regression tests'
+)
