<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
  <maintainer type="project">
    <!-- Ebuild fork on the oiledmachine overlay -->
    <email>orsonteodoro@hotmail.com</email>
    <name>Orson Teodoro</name>
  </maintainer>
  <maintainer type="project">
    <!-- Ebuild originator -->
    <email>gnome@gentoo.org</email>
    <name>Gentoo GNOME Desktop</name>
  </maintainer>
  <!--

    oiledmachine-overlay notes:

    The purpose of this ebuild fork was originally to provide multilib support
    for the ebuild fork for the surf web browser on the oiledmachine-overlay.
    Currently the motivations are to provide latest stable as quickly as possible
    for security reasons and expose more options related to performance or next
    generation of web standards.


    Release branches

    2.42.x - Stable branch (A new minor version every 6 months for even minor versions)
    2.43.x - Unstable branch (Preview for odd minor versions)
    2.43.90+ - Unstable branch (Undergoing stabilization)


    Build time environment variables:

    CUSTOM_PAGE_SIZE - Sets the page size for JavaScriptCore (JSC).

      Valid values:

        4, 8, 16, 32, 64, 256 - the exact page size in KB which varies depending on architecture
        "kconfig" - discovered from /usr/bin/linux/.config when not cross-compiling
        "getconf" - discovered from $(getconf PAGE_SIZE)/1024 when not cross-compiling

      Additional notes:   

        If CUSTOM_PAGE_SIZE is not set, it will use a best guess strategy that
        upstream provides (either 4, 16, 64), which pages may not perfectly align
        or may crash.

        Based on the assert, it is safe to have the current memory page size in
        the kernel config less than or equal to CUSTOM_PAGE_SIZE.  If the
        current page size is greater than CUSTOM_PAGE_SIZE do a planned crash if
        asserts are enabled.  It should be the same CHOST that will run these
        libraries if cross compiling.  For more details, see

          https://github.com/WebKit/WebKit/blob/webkitgtk-2.43.2/Source/WTF/wtf/PageBlock.h#L33
          https://github.com/WebKit/WebKit/blob/webkitgtk-2.43.2/Source/WTF/wtf/PageBlock.cpp#L65
          https://wiki.gentoo.org/wiki//etc/portage/package.env

        Increasing the memory page size may also decrease security.

    ULIMIT - Sets the maximum open file limit.
    Default values:  Mold - 16384, BFD/LLD - 1024


    MITIGATION_USE_CASE - Sets the safety period for ebuild (re-)installs.  If
    the duration exceeds, the ebuild will not (re-)install until a newer point
    release is provided by upstream.
    Valid values:
      donations - 1 week
      email     - 1 week
      legal     - 1 week
      money     - 1 week
      shopping  - 1 week
      socials   - 2 weeks
      default   - 60 days (ebuild default)
    Examples:
      MITIGATION_USE_CASE="money"              # The ebuild is (re-)installable for 1 week from release date.
      MITIGATION_USE_CASE="donations socials"  # The ebuild is (re-)installable for 1 week from release date.
      MITIGATION_USE_CASE="socials"            # The ebuild is (re-)installable for 2 weeks from release date.
      MITIGATION_USE_CASE="default"            # The ebuild is (re-)installable for 60 days from release date but may likely contain vulnerabilities.


    For PGO details, see

      https://github.com/WebKit/WebKit/commit/790a01a3ec741d8752990a809d1ab489d9637e3d


    Proposed ebuild changes

    Investigate shuffle-sections linker option for ROP mitigation.

  -->
  <upstream>
    <remote-id type="cpe">cpe:/a:webkitgtk:webkitgtk</remote-id>
  </upstream>
  <use>
    <flag name="64kb-page-block">
      Enables support for 64 KB page block systems with a big penalty on
      JavaScript performance.
    </flag>
    <flag name="alsa">
      Enables ALSA sound support.
    </flag>
    <flag name="avif">
      Enables AVIF image support.
    </flag>
    <flag name="bmalloc">
      Prefer the built in dynamic memory allocator improve overall performance
      and security isolation, and type confusion mitigation.

      Disable to use the system dynamic memory allocaton that is less secure.
    </flag>
    <flag name="cache-partitioning">
      Enable cache parititioning to block third party tracking
    </flag>
    <flag name="coverage">
      Enable code coverage support
    </flag>
    <flag name="eme">
      Enable Encrypted Media Extensions support (ClearKey CDM only).
    </flag>
    <flag name="egl">
      Enable EGL support.
    </flag>
    <flag name="examples">
      Install the MiniBrowser example application.
    </flag>
    <flag name="gamepad">
      Enable gamepad input support via <pkg>dev-libs/libmanette</pkg>.
    </flag>
    <flag name="gbm">
      Enable hardware rasterization for painting the completed WebGL frame on
      the page.
    </flag>
    <flag name="geolocation">
      Enable geolocation support through <pkg>app-misc/geoclue</pkg>.
    </flag>
    <flag name="gles2">
      Enable GLESv2 support.
    </flag>
    <flag name="gstreamer">
      Enables gstreamer support for video and audio playback.

      Using this flag allows access to VA-API hardware encoding or decoding if
      supported by the GPU.
    </flag>
    <flag name="gstwebrtc">
      Uses GstWebRTC as the backend for WebRTC.  Disabled by default through
      web view settings.
    </flag>
    <flag name="journald">
      Enables Journald logging
    </flag>
    <flag name="hardened">
      Ensures less problems with hardened build.
    </flag>
    <flag name="jit">
      Enables JIT support for JavaScriptCore for significantly faster code
      execution.  Disable for increased compatibility on alternative ARCHs and
      ABIs.
    </flag>
    <flag name="libbacktrace">
      Enables backtracing to list what last function(s) may caused the crash.
    </flag>
    <flag name="libsoup3">
      Link to libsoup3.  It consequently enables HTTP/2 by default when libsoup3
      is 2.99.8 or newer.
    </flag>
    <flag name="libwebrtc">
      Uses libwebrtc as a backend for WebRTC.
    </flag>
    <flag name="mediarecorder">
      Enables support for MediaRecorder API
    </flag>
    <flag name="mediastream">
      Enables support for MediaStream API (IN DEVELOPMENT / DRAFT).
    </flag>
    <flag name="mold">
      Use the Mold linker to reduce linking times.
    </flag>
    <flag name="nsplugin">
      Enable full nsplugin support (GTK2 plugins).
    </flag>
    <flag name="openmp">
      Use OpenMP to accelerate SVG filters.
    </flag>
    <flag name="proprietary-codecs">
      Enables use of non-free patent-encumbered audio formats, video formats,
      and network protocols.
    </flag>
    <flag name="proprietary-codecs-disable">
      (USE FLAG IN DEVELOPMENT)

      If enabled, it will disable codecs or network protocols with a patent
      status that is not free in this ebuild fork.

      With this flag enabled, this may break dependencies that assume previous
      unpatched behavior.

      In general a codec is allowed to be built into disabled proprietary-codecs
      build if the patent status is one of the following:

        (1) Expired patent, typically 20 years.  (e.g. MP3)
        (2) Similar perpetual royalty-free freedoms like the
            Grant of Patent License in the Apache 2.0. (e.g. libvpx, libaom)

      AND

        The code is free with a widely used compatible open source license.

      AND CONDITIONALLY

        The codec may allowed in this ebuild fork if it doesn't require a
        non-free developer license in a case-by-case basis.

    </flag>
    <flag name="proprietary-codecs-disable-developer">
      (USE FLAG IN DEVELOPMENT)

      If enabled, it will disable codecs or network protocols with a patent
      status that is not free in this ebuild fork for codec developers for
      non-commericial use.

      With this flag enabled, this may break dependencies that assume previous
      unpatched behavior.

      In general a codec is allowed to be built into disabled proprietary-codecs
      build if the patent status is one of the following:

        (1) Expired patent, typically 20 years.  (e.g. MP3)
        (2) Similar perpetual royalty-free freedoms like the
            Grant of Patent License in the Apache 2.0. (e.g. libvpx, libaom)

      AND

        The code is free with a widely used compatible open source license.

      AND CONDITIONALLY

        The codec may allowed in this ebuild fork if it doesn't require a
        non-free developer license in a case-by-case basis.

    </flag>
    <flag name="proprietary-codecs-disable-user">
      (USE FLAG IN DEVELOPMENT)

      If enabled, it will disable codecs or network protocols with a patent
      status that is not free in this ebuild fork for non codec developers
      for non-commercial use.

      With this flag enabled, this may break dependencies that assume previous
      unpatched behavior.

      In general a codec is allowed to be built into disabled proprietary-codecs
      build if the patent status is one of the following:

        (1) Expired patent, typically 20 years.  (e.g. MP3)
        (2) Similar perpetual royalty-free freedoms like the
            Grant of Patent License in the Apache 2.0. (e.g. libvpx, libaom)

      AND

        The code is free with a widely used compatible open source license.

      AND CONDITIONALLY

        The codec may allowed in this ebuild fork if it doesn't require a
        non-free developer license in a case-by-case basis.

    </flag>
    <flag name="pulseaudio">
      Adds PulseAudio and microphone support.

      You may need <pkg>media-sound/pulseaudio-daemon[alsa]</pkg> to hear sound.
    </flag>
    <flag name="thunder">
      Links to a framework with pluginable CDM (content decryption module) support.
    </flag>
    <flag name="unified-build">
      Reduces the build time by half by parsing the headers once
    </flag>
    <flag name="v4l">
      Adds and checks for proper v4l camera support.
    </flag>
    <flag name="variation-fonts">
      Check dependencies for variation font support.
    </flag>
    <flag name="webgl">
      Build support for the WebGL HTML API using <pkg>virtual/opengl</pkg>.
    </flag>
    <flag name="webassembly">
      Enables support for WebAssembly used for example in web games.

      Disable the webassembly USE flag to decrease the attack surface.
    </flag>
    <flag name="webdriver">
      Enable WebDriver support for Selenium.  This allows for automated testing
      or controlling the web browser through scripting.
    </flag>
    <flag name="webcrypto">
      Enables WebCrypto SubtleCrypto API support for low level cryptographic
      fuctions.
    </flag>
    <flag name="webm-eme">
      Enable support for decrypting protected WebM files.  (It may require a
      license, the proprietary SDK, and a corresponding proprietary OCDM plugin.)
    </flag>
    <flag name="webxr">
      Builds WebXR support.  (EXPERIMENTAL / IN DEVELOPMENT)
    </flag>
    <flag name="webvtt">
      Used for in-band text tracks support with WebVTT used as a cue format
      for subtitles or captions.
    </flag>
    <flag name="webrtc">
      Enables WebRTC support for audio or video communication.  (WebKitGTK
      EXPERIMENTAL, WebKit supported)
    </flag>
    <flag name="woff2">
      Builds support for WOFF2 Web Fonts
    </flag>

    <!-- Protocols -->
    <flag name="dash">
      Support for the DASH streaming protocol
    </flag>
    <flag name="hls">
      Support for the HLS streaming protocol (possible issues, deprecated
      plugin)
    </flag>

    <!-- Codecs -->
    <flag name="a52">
      Support for decoding AC-3 audio.
    </flag>
    <flag name="aac">
      Support for decoding AAC audio.
    </flag>
    <flag name="aom">
      Support for CPU based AV1 video encoding and fallback as a decoder.

      This reference implementation is not recommended for decoding.
    </flag>
    <flag name="dav1d">
      Fallback support for CPU based AV1 video decoding.

      Recommended as the fallback for AV1 decoding.
    </flag>
    <flag name="flac">
      Support for decoding FLAC audio.
    </flag>
    <flag name="g722">
      Support for G722 encoding for GstWebRTC audio streams.
    </flag>
    <flag name="openh264">
      Support for CPU based H.264 decoding.
    </flag>
    <flag name="libde265">
      Fallback support for the CPU based H.265 video decoder using libde265.
    </flag>
    <flag name="mp3">
      Support for decoding MP1/2/3 audio.
    </flag>
    <flag name="ogg">
      Support for Ogg container files.
    </flag>
    <flag name="opus">
      Support for encoding or decoding Opus audio and for GstWebRTC RTP audio
      streams.
    </flag>
    <flag name="speex">
      Support for decoding Speex speech files.

      You may consider adding ogg container support (via USE=ogg) if a website
      uses ogg files containing speex encoded content.
    </flag>
    <flag name="theora">
      Support for decoding Theora video.
    </flag>
    <flag name="x264">
      Use x264 as a fallback CPU based H.264 video encoder.
    </flag>
    <flag name="vaapi-stateless-decoding">
      Use stateless VA-API decoding only support to avoid rendering issues.
    </flag>
    <flag name="vaapi">
      Use VA-API for hardware accelerated encoding if supported.

      If USE=-vaapi-stateless-decoding, then use the legacy plugin for hardware
      accelerated decoding.  Otherwise, use VA-API stateless decoding.
    </flag>
    <flag name="vorbis">
      Support for encoding and decoding Vorbis audio.
    </flag>
    <flag name="vpx">
      Use vpx as a fallback CPU based VP8/9 video encoder or decoder.
    </flag>
  </use>
  <slots>
    <slot name="4">
      Built with GTK+3 or GTK+2 with HTTP/1.1 support
    </slot>
    <slot name="4.1">
      Built with GTK+3 with HTTP/2 support
    </slot>
    <slot name="5">
      Built with GTK 4 with HTTP/2 support
    </slot>
    <slot name="6">
      Built with GTK 4 with HTTP/2 support with inner versioning changes
    </slot>
    <subslots>
      Corresponds to the SOVERSION
    </subslots>
  </slots>
</pkgmetadata>
