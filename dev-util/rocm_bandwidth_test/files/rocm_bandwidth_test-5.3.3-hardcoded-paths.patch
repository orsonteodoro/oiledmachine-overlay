diff '--color=auto' -urp rocm_bandwidth_test-rocm-5.3.3.orig/CMakeLists.txt rocm_bandwidth_test-rocm-5.3.3/CMakeLists.txt
--- rocm_bandwidth_test-rocm-5.3.3.orig/CMakeLists.txt	2022-07-28 12:15:25.000000000 -0700
+++ rocm_bandwidth_test-rocm-5.3.3/CMakeLists.txt	2024-07-10 19:44:43.251548621 -0700
@@ -133,7 +133,7 @@ include(utils)
 # Using find_package(has-runtime64 to find required header and library files
 # This scheme could fail when using older builds of ROCm. In such a case the
 # build system relies on user defined locations to find header and library files
-find_package(hsa-runtime64 PATHS /opt/rocm )
+find_package(hsa-runtime64 PATHS /opt/rocm-@ROCM_VERSION@ )
 if(${hsa-runtime64_FOUND})
   # hsa-runtime config files will provide the include path via INSTALL_INTERFACE
   message("hsa-runtime64 found @  ${hsa-runtime64_DIR} ")
@@ -163,11 +163,11 @@ else()
 
   # Search for ROCr header file in user defined locations
   # Since the search is for hsa/hsa.h and the default include is "hsa/hsa.h", this will support all version of rocm
-  find_path(ROCR_HDR hsa/hsa.h PATHS ${ROCR_INC_DIR} "/opt/rocm" PATH_SUFFIXES include REQUIRED)
+  find_path(ROCR_HDR hsa/hsa.h PATHS ${ROCR_INC_DIR} "/opt/rocm-@ROCM_VERSION@" PATH_SUFFIXES include REQUIRED)
   INCLUDE_DIRECTORIES(${ROCR_HDR})
 
   # Search for ROCr library file in user defined locations
-  find_library(ROCR_LIB ${CORE_RUNTIME_TARGET} PATHS ${ROCR_LIB_DIR} "/opt/rocm" PATH_SUFFIXES lib lib64 REQUIRED)
+  find_library(ROCR_LIB ${CORE_RUNTIME_TARGET} PATHS ${ROCR_LIB_DIR} "/opt/rocm-@ROCM_VERSION@" PATH_SUFFIXES lib lib64 REQUIRED)
 endif()
 
 #
Only in rocm_bandwidth_test-rocm-5.3.3: CMakeLists.txt.orig
Only in rocm_bandwidth_test-rocm-5.3.3: CMakeLists.txt.rej
