diff '--color=auto' -urp rocm_bandwidth_test-rocm-4.1.0.orig/CMakeLists.txt rocm_bandwidth_test-rocm-4.1.0/CMakeLists.txt
--- rocm_bandwidth_test-rocm-4.1.0.orig/CMakeLists.txt	2020-12-09 17:45:09.000000000 -0800
+++ rocm_bandwidth_test-rocm-4.1.0/CMakeLists.txt	2024-08-02 20:57:22.749072243 -0700
@@ -123,17 +123,17 @@ include(utils)
 # When find_package fails, then using old method of find_libraries for
 # searching the required libs for building RBT
 find_package(hsa-runtime64
-   PATHS  /opt/rocm )
+   PATHS  /opt/rocm-@ROCM_VERSION@ )
 if(${hsa-runtime64_FOUND})
   message("hsa-runtime64 found @  ${hsa-runtime64_DIR} ")
 else()
   message("hsa-runtime64 NOT found Resolving to OLD Way")
-  find_path(ROCR_HDR hsa.h PATHS "/opt/rocm" PATH_SUFFIXES include/hsa  REQUIRED)
+  find_path(ROCR_HDR hsa.h PATHS "/opt/rocm-@ROCM_VERSION@" PATH_SUFFIXES include/hsa  REQUIRED)
   INCLUDE_DIRECTORIES(${ROCR_HDR})
   # Search for ROCr library file
-  find_library(ROCR_LIB ${CORE_RUNTIME_TARGET} PATHS "/opt/rocm" PATH_SUFFIXES lib lib64 REQUIRED)
+  find_library(ROCR_LIB ${CORE_RUNTIME_TARGET} PATHS "/opt/rocm-@ROCM_VERSION@" PATH_SUFFIXES lib lib64 REQUIRED)
   # Search for ROCt library file
-  find_library(ROCT_LIB ${ROC_THUNK_NAME} PATHS "/opt/rocm" PATH_SUFFIXES lib lib64 REQUIRED)
+  find_library(ROCT_LIB ${ROC_THUNK_NAME} PATHS "/opt/rocm-@ROCM_VERSION@" PATH_SUFFIXES lib lib64 REQUIRED)
 endif()
 
 #
Only in rocm_bandwidth_test-rocm-4.1.0: CMakeLists.txt.orig
Only in rocm_bandwidth_test-rocm-4.1.0: CMakeLists.txt.rej
