diff '--color=auto' -urp rocm_bandwidth_test-rocm-5.1.3.orig/CMakeLists.txt rocm_bandwidth_test-rocm-5.1.3/CMakeLists.txt
--- rocm_bandwidth_test-rocm-5.1.3.orig/CMakeLists.txt	2022-01-26 09:06:27.000000000 -0800
+++ rocm_bandwidth_test-rocm-5.1.3/CMakeLists.txt	2024-07-10 19:41:30.330066900 -0700
@@ -133,7 +133,7 @@ include(utils)
 # Using find_package(has-runtime64 to find required header and library files
 # This scheme could fail when using older builds of ROCm. In such a case the
 # build system relies on user defined locations to find header and library files
-find_package(hsa-runtime64 PATHS /opt/rocm )
+find_package(hsa-runtime64 PATHS /opt/rocm-@ROCM_VERSION@ )
 if(${hsa-runtime64_FOUND})
   message("hsa-runtime64 found @  ${hsa-runtime64_DIR} ")
 else()
@@ -142,11 +142,11 @@ else()
   message("Looking for library files in ${ROCR_LIB_DIR}")
 
   # Search for ROCr header file in user defined locations
-  find_path(ROCR_HDR hsa.h PATHS ${ROCR_INC_DIR} "/opt/rocm" PATH_SUFFIXES include/hsa REQUIRED)
+  find_path(ROCR_HDR hsa.h PATHS ${ROCR_INC_DIR} "/opt/rocm-@ROCM_VERSION@" PATH_SUFFIXES include/hsa REQUIRED)
   INCLUDE_DIRECTORIES(${ROCR_HDR})
   
   # Search for ROCr library file in user defined locations
-  find_library(ROCR_LIB ${CORE_RUNTIME_TARGET} PATHS ${ROCR_LIB_DIR} "/opt/rocm" PATH_SUFFIXES lib lib64 REQUIRED)
+  find_library(ROCR_LIB ${CORE_RUNTIME_TARGET} PATHS ${ROCR_LIB_DIR} "/opt/rocm-@ROCM_VERSION@" PATH_SUFFIXES lib lib64 REQUIRED)
 endif()
 
 #
