diff -urp HIP-rocm-5.6.0.orig/cmake/FindHIP.cmake HIP-rocm-5.6.0/cmake/FindHIP.cmake
--- HIP-rocm-5.6.0.orig/cmake/FindHIP.cmake	2023-06-12 13:47:00.000000000 -0700
+++ HIP-rocm-5.6.0/cmake/FindHIP.cmake	2023-08-30 15:02:32.070793767 -0700
@@ -255,27 +255,29 @@ elseif("${HIP_COMPILER}" STREQUAL "clang
     if("x${HIP_CLANG_PATH}" STREQUAL "x")
       # IF HIP_CLANG_INSTALL_DIR is Found
       if( HIP_CLANG_INSTALL_DIR )
-        set(HIP_CLANG_PATH ${HIP_CLANG_INSTALL_DIR})
+        set(HIP_CLANG_PATH "${HIP_CLANG_INSTALL_DIR}/bin")
       else() # IF HIP_CLANG_INSTALL_DIR is not found
         if(DEFINED ENV{HIP_CLANG_PATH})
             set(HIP_CLANG_PATH $ENV{HIP_CLANG_PATH})
         elseif(DEFINED ENV{ROCM_PATH})
-            set(HIP_CLANG_PATH "$ENV{ROCM_PATH}/llvm/bin")
+            set(HIP_CLANG_PATH "$ENV{ROCM_PATH}/lib/llvm/@LLVM_SLOT@/bin")
         elseif(DEFINED ENV{HIP_PATH})
-            if(EXISTS "$ENV{HIP_PATH}/llvm/bin") #File Reorg backward compatibility
-                set(HIP_CLANG_PATH "$ENV{HIP_PATH}/llvm/bin")
+            if(EXISTS "$ENV{HIP_PATH}/lib/llvm/@LLVM_SLOT@/bin") #File Reorg backward compatibility
+                set(HIP_CLANG_PATH "$ENV{HIP_PATH}/lib/llvm/@LLVM_SLOT@/bin")
             else()
-                set(HIP_CLANG_PATH "$ENV{HIP_PATH}/../llvm/bin")
+                set(HIP_CLANG_PATH "$ENV{HIP_PATH}/../lib/llvm/@LLVM_SLOT@/bin")
             endif()
         elseif(DEFINED HIP_PATH)
-            if(EXISTS "${HIP_PATH}/llvm/bin") #File Reorg backward compatibility
-                set(HIP_CLANG_PATH "${HIP_PATH}/llvm/bin")
+            if(EXISTS "${HIP_PATH}/lib/llvm/@LLVM_SLOT@/bin") #File Reorg backward compatibility
+                set(HIP_CLANG_PATH "${HIP_PATH}/lib/llvm/@LLVM_SLOT@/bin")
             else()
-                set(HIP_CLANG_PATH "${HIP_PATH}/../llvm/bin")
+                set(HIP_CLANG_PATH "${HIP_PATH}/../lib/llvm/@LLVM_SLOT@/bin")
             endif()
         # Handle the case where ROCM_PATH is defined and not set in ENV
         elseif(DEFINED ROCM_PATH)
-            set(HIP_CLANG_PATH "${ROCM_PATH}/llvm/bin")
+            set(HIP_CLANG_PATH "${ROCM_PATH}/lib/llvm/@LLVM_SLOT@/bin")
+        elseif(EXISTS "@ESYSROOT@/usr/lib/llvm/@LLVM_SLOT@/bin")
+            set(HIP_CLANG_PATH "@ESYSROOT@/usr/lib/llvm/@LLVM_SLOT@/bin")
         else()
             message(FATAL_ERROR "Unable to find the clang compiler path. Set ROCM_PATH or HIP_PATH in env ")
         endif()
@@ -696,22 +698,24 @@ macro(HIP_ADD_EXECUTABLE hip_target)
             if(DEFINED ENV{HIP_CLANG_PATH})
                 set(HIP_CLANG_PATH $ENV{HIP_CLANG_PATH})
             elseif(DEFINED ENV{ROCM_PATH})
-                set(HIP_CLANG_PATH "$ENV{ROCM_PATH}/llvm/bin")
+                set(HIP_CLANG_PATH "$ENV{ROCM_PATH}/lib/llvm/@LLVM_SLOT@/bin")
             elseif(DEFINED ENV{HIP_PATH})
-                if(EXISTS "$ENV{HIP_PATH}/llvm/bin") #file reorg backward compatibility
-                    set(HIP_CLANG_PATH "$ENV{HIP_PATH}/llvm/bin")
+                if(EXISTS "$ENV{HIP_PATH}/lib/llvm/@LLVM_SLOT@/bin") #file reorg backward compatibility
+                    set(HIP_CLANG_PATH "$ENV{HIP_PATH}/lib/llvm/@LLVM_SLOT@/bin")
                 else()
-                    set(HIP_CLANG_PATH "$ENV{HIP_PATH}/../llvm/bin")
+                    set(HIP_CLANG_PATH "$ENV{HIP_PATH}/../lib/llvm/@LLVM_SLOT@/bin")
                 endif()
             elseif(DEFINED HIP_PATH)
-                if(EXISTS "${HIP_PATH}/llvm/bin") #file reorg backward compatibility
-                    set(HIP_CLANG_PATH "${HIP_PATH}/llvm/bin")
+                if(EXISTS "${HIP_PATH}/lib/llvm/@LLVM_SLOT@/bin") #file reorg backward compatibility
+                    set(HIP_CLANG_PATH "${HIP_PATH}/lib/llvm/@LLVM_SLOT@/bin")
                 else()
-                    set(HIP_CLANG_PATH "${HIP_PATH}/../llvm/bin")
+                    set(HIP_CLANG_PATH "${HIP_PATH}/../lib/llvm/@LLVM_SLOT@/bin")
                 endif()
             # Handle  the case where ROCM_PATH is defined and not set in ENV
             elseif(DEFINED ROCM_PATH)
-                set(HIP_CLANG_PATH "${ROCM_PATH}/llvm/bin")
+                set(HIP_CLANG_PATH "${ROCM_PATH}/lib/llvm/@LLVM_SLOT@/bin")
+            elseif(EXISTS "@ESYSROOT@/usr/lib/llvm/@LLVM_SLOT@/bin")
+                set(HIP_CLANG_PATH "@ESYSROOT@/usr/lib/llvm/@LLVM_SLOT@/bin")
             else()
                 message(FATAL_ERROR "Unable to find the clang compiler path. Set ROCM_PATH or HIP_PATH in env")
             endif()
diff -urp HIP-rocm-5.6.0.orig/docs/developer_guide/build.md HIP-rocm-5.6.0/docs/developer_guide/build.md
--- HIP-rocm-5.6.0.orig/docs/developer_guide/build.md	2023-06-12 13:47:00.000000000 -0700
+++ HIP-rocm-5.6.0/docs/developer_guide/build.md	2023-08-30 15:03:04.130794413 -0700
@@ -34,7 +34,7 @@ export ROCM_BRANCH=rocm-5.6.x
 ```
 Similiar format for future branches.
 
-`ROCM_PATH` is path where ROCM is installed. BY default `ROCM_PATH` is at `/opt/rocm`.
+`ROCM_PATH` is path where ROCM is installed. BY default `ROCM_PATH` is at `@ESYSROOT_ROCM_PATH@`.
 
 
 ## Build HIP on AMD platform
@@ -75,7 +75,7 @@ make -j4
 ```shell
 cd "$CLR_DIR"
 mkdir -p build; cd build
-cmake -DHIP_COMMON_DIR=$HIP_DIR -DHIP_PLATFORM=amd -DCMAKE_PREFIX_PATH="/opt/rocm/" -DCMAKE_INSTALL_PREFIX=$PWD/install -DHIPCC_BIN_DIR=$HIPCC_DIR/build -DHIP_CATCH_TEST=0 -DCLR_BUILD_HIP=ON -DCLR_BUILD_OCL=OFF ..
+cmake -DHIP_COMMON_DIR=$HIP_DIR -DHIP_PLATFORM=amd -DCMAKE_PREFIX_PATH="@ESYSROOT_ROCM_PATH@/" -DCMAKE_INSTALL_PREFIX=$PWD/install -DHIPCC_BIN_DIR=$HIPCC_DIR/build -DHIP_CATCH_TEST=0 -DCLR_BUILD_HIP=ON -DCLR_BUILD_OCL=OFF ..
 
 make -j$(nproc)
 sudo make install
@@ -86,10 +86,10 @@ By default, release version of HIP is bu
 
 ### Default paths and environment variables
 
-   * By default HIP looks for HSA in `<ROCM_PATH>/hsa` (can be overridden by setting `HSA_PATH` environment variable).
-   * By default HIP is installed into `<ROCM_PATH>/hip` (can be overridden by setting HIP_PATH environment variable).
-   * By default HIP looks for clang in `<ROCM_PATH>/llvm/bin` (can be overridden by setting `HIP_CLANG_PATH` environment variable)
-   * By default HIP looks for device library in `<ROCM_PATH>/lib` (can be overridden by setting `DEVICE_LIB_PATH` environment variable).
+   * By default HIP looks for HSA in `<ROCM_PATH>` (can be overridden by setting `HSA_PATH` environment variable).
+   * By default HIP is installed into `<ROCM_PATH>` (can be overridden by setting HIP_PATH environment variable).
+   * By default HIP looks for clang in `<ROCM_PATH>/lib/llvm/@LLVM_SLOT@/bin` (can be overridden by setting `HIP_CLANG_PATH` environment variable)
+   * By default HIP looks for device library in `<ROCM_PATH>/@LIBDIR@/amdgcn/bitcode` (can be overridden by setting `DEVICE_LIB_PATH` environment variable).
    * Optionally, consider adding `<ROCM_PATH>/bin` to your `PATH` to make it easier to use the tools.
    * Optionally, set `HIPCC_VERBOSE=7` to output the command line for compilation.
 
@@ -168,7 +168,7 @@ git clone -b "$ROCM_BRANCH" https://gith
 export HIPTESTS_DIR="$(readlink -f hip-tests)"
 cd "$HIPTESTS_DIR"
 mkdir -p build; cd build
-export HIP_PATH=$CLR_DIR/build/install (or any path where HIP is installed, for example, /opt/rocm)
+export HIP_PATH=$CLR_DIR/build/install (or any path where HIP is installed, for example, @ESYSROOT_ROCM_PATH@)
 cmake ../catch/ -DHIP_PLATFORM=amd
 make -j$(nproc) build_tests
 ctest # run tests
diff -urp HIP-rocm-5.6.0.orig/docs/developer_guide/contributing.md HIP-rocm-5.6.0/docs/developer_guide/contributing.md
--- HIP-rocm-5.6.0.orig/docs/developer_guide/contributing.md	2023-06-12 13:47:00.000000000 -0700
+++ HIP-rocm-5.6.0/docs/developer_guide/contributing.md	2023-08-30 15:02:32.070793767 -0700
@@ -1,7 +1,7 @@
 # Contributor Guidelines
 
 ## Make Tips
-`ROCM_PATH` is path where ROCM is installed. BY default `ROCM_PATH` is `/opt/rocm`.
+`ROCM_PATH` is path where ROCM is installed. BY default `ROCM_PATH` is `@ESYSROOT_ROCM_PATH@`.
 When building HIP, you will likely want to build and install to a local user-accessible directory (rather than `<ROCM_PATH>`).
 This can be easily be done by setting the `-DCMAKE_INSTALL_PREFIX` variable when running cmake.  Typical use case is to
 set `CMAKE_INSTALL_PREFIX` to your HIP git root, and then ensure `HIP_PATH` points to this directory. For example
@@ -41,11 +41,11 @@ HIP_VERSION_PATCH=20345-519ef3f2
 HIP-Clang compiler version
 
 ```console
-$ <ROCM_PATH>/llvm/bin/clang -v
+$ <ROCM_PATH>/lib/llvm/@LLVM_SLOT@/bin/clang -v
 clang version 11.0.0 (/src/external/llvm-project/clang 075fedd3fd2f4d9d8cca79d0cd51f64c5ef21432)
 Target: x86_64-unknown-linux-gnu
 Thread model: posix
-InstalledDir: <ROCM_PATH>/llvm/bin
+InstalledDir: <ROCM_PATH>/lib/llvm/@LLVM_SLOT@/bin
 Found candidate GCC installation: /usr/lib/gcc/x86_64-linux-gnu/7
 Found candidate GCC installation: /usr/lib/gcc/x86_64-linux-gnu/7.5.0
 Found candidate GCC installation: /usr/lib/gcc/x86_64-linux-gnu/8
@@ -72,7 +72,7 @@ For applications and benchmarks outside
 - #2. Relink the target application to include changes in HIP runtime file.
 
 ## Environment Variables
-- **HIP_PATH** : Location of HIP include, src, bin, lib directories.
+- **HIP_PATH** : Location of HIP include, src, bin, @LIBDIR@ directories.
 - **HCC_ROCCLR_HOME** : Path to HIP/ROCclr directory, used on AMD platforms.  Default <ROCM_PATH>/rocclr.
 - **HSA_PATH** : Path to HSA include, lib.  Default <ROCM_PATH>/hsa.
 - **CUDA_PATH* : On nvcc system, this points to root of CUDA installation.
diff -urp HIP-rocm-5.6.0.orig/docs/gen_clang_option_doc.sh HIP-rocm-5.6.0/docs/gen_clang_option_doc.sh
--- HIP-rocm-5.6.0.orig/docs/gen_clang_option_doc.sh	2023-06-12 13:47:00.000000000 -0700
+++ HIP-rocm-5.6.0/docs/gen_clang_option_doc.sh	2023-08-30 15:02:32.070793767 -0700
@@ -21,7 +21,7 @@
 
 ## generates documentation about clang options.
 
-clang=/opt/rocm*/llvm/bin/clang
+clang="@ESYSROOT@/usr/lib/llvm/@LLVM_SLOT@/bin/clang"
 
 exec > clang_options.md
 
diff -urp HIP-rocm-5.6.0.orig/docs/how_to_guides/debugging.md HIP-rocm-5.6.0/docs/how_to_guides/debugging.md
--- HIP-rocm-5.6.0.orig/docs/how_to_guides/debugging.md	2023-06-12 13:47:00.000000000 -0700
+++ HIP-rocm-5.6.0/docs/how_to_guides/debugging.md	2023-08-30 15:02:32.070793767 -0700
@@ -81,10 +81,10 @@ HIP developers on ROCm can use AMD's ROC
 ROCgdb is the ROCm source-level debugger for Linux, based on GDB, the GNU source-level debugger, equivalent of cuda-gdb, can be used with debugger frontends, such as eclipse, vscode, or gdb-dashboard.
 For details, see (https://github.com/ROCm-Developer-Tools/ROCgdb).
 
-Below is a sample how to use ROCgdb run and debug HIP application, rocgdb is installed with ROCM package in the folder /opt/rocm/bin.
+Below is a sample how to use ROCgdb run and debug HIP application, rocgdb is installed with ROCM package in the folder @ESYSROOT_ROCM_PATH@/bin.
 
 ```console
-$ export PATH=$PATH:/opt/rocm/bin
+$ export PATH=$PATH:@ESYSROOT_ROCM_PATH@/bin
 $ rocgdb ./hipTexObjPitch
 GNU gdb (rocm-dkms-no-npi-hipclang-6549) 10.1
 Copyright (C) 2020 Free Software Foundation, Inc.
@@ -102,7 +102,7 @@ Breakpoint 1 at 0x4013d1: file /home/tes
 (gdb) run
 Starting program: /home/test/hip/build/directed_tests/texture/hipTexObjPitch
 [Thread debugging using libthread_db enabled]
-Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
+Using host libthread_db library "@ESYSROOT@/@LIBDIR@/libthread_db.so.1".
 
 Breakpoint 1, main ()
     at /home/test/hip/tests/src/texture/hipTexObjPitch.cpp:98
@@ -125,7 +125,7 @@ Segmentation fault (core dumped)
 (gdb) run
 Starting program: /home/test/hipamd/build/directed_tests/runtimeApi/memory/hipMemcpy_simple
 [Thread debugging using libthread_db enabled]
-Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
+Using host libthread_db library "@ESYSROOT@/@LIBDIR@/libthread_db.so.1".
 
 Breakpoint 1, main (argc=1, argv=0x7fffffffdea8)
     at /home/test/hip/tests/src/runtimeApi/memory/hipMemcpy_simple.cpp:147
@@ -148,20 +148,20 @@ Thread 1 "hipMemcpy_simpl" received sign
 * 1    Thread 0x7ffff64c5880 (LWP 146060) "hipMemcpy_simpl" 0x000000000020f78e in simpleTest2<float> (numElements=4194304, usePinnedHost=true)
     at /home/test/hip/tests/src/runtimeApi/memory/hipMemcpy_simple.cpp:104
   2    Thread 0x7ffff64c4700 (LWP 146066) "hipMemcpy_simpl" 0x00007ffff6b0850b in ioctl
-    () from /lib/x86_64-linux-gnu/libc.so.6
+    () from @ESYSROOT@/@LIBDIR@/libc.so.6
 (gdb) thread 2
 [Switching to thread 2 (Thread 0x7ffff64c4700 (LWP 146066))]
-#0  0x00007ffff6b0850b in ioctl () from /lib/x86_64-linux-gnu/libc.so.6
+#0  0x00007ffff6b0850b in ioctl () from @ESYSROOT@/@LIBDIR@/libc.so.6
 (gdb) bt
-#0  0x00007ffff6b0850b in ioctl () from /lib/x86_64-linux-gnu/libc.so.6
-#1  0x00007ffff6604568 in ?? () from /opt/rocm/lib/libhsa-runtime64.so.1
-#2  0x00007ffff65fe73a in ?? () from /opt/rocm/lib/libhsa-runtime64.so.1
-#3  0x00007ffff659e4d6 in ?? () from /opt/rocm/lib/libhsa-runtime64.so.1
-#4  0x00007ffff65807de in ?? () from /opt/rocm/lib/libhsa-runtime64.so.1
-#5  0x00007ffff65932a2 in ?? () from /opt/rocm/lib/libhsa-runtime64.so.1
-#6  0x00007ffff654f547 in ?? () from /opt/rocm/lib/libhsa-runtime64.so.1
-#7  0x00007ffff7f76609 in start_thread () from /lib/x86_64-linux-gnu/libpthread.so.0
-#8  0x00007ffff6b13293 in clone () from /lib/x86_64-linux-gnu/libc.so.6
+#0  0x00007ffff6b0850b in ioctl () from @ESYSROOT@/@LIBDIR@/libc.so.6
+#1  0x00007ffff6604568 in ?? () from @ESYSROOT_ROCM_PATH@/@LIBDIR@/libhsa-runtime64.so.1
+#2  0x00007ffff65fe73a in ?? () from @ESYSROOT_ROCM_PATH@/@LIBDIR@/libhsa-runtime64.so.1
+#3  0x00007ffff659e4d6 in ?? () from @ESYSROOT_ROCM_PATH@/@LIBDIR@/libhsa-runtime64.so.1
+#4  0x00007ffff65807de in ?? () from @ESYSROOT_ROCM_PATH@/@LIBDIR@/libhsa-runtime64.so.1
+#5  0x00007ffff65932a2 in ?? () from @ESYSROOT_ROCM_PATH@/@LIBDIR@/libhsa-runtime64.so.1
+#6  0x00007ffff654f547 in ?? () from @ESYSROOT_ROCM_PATH@/@LIBDIR@/libhsa-runtime64.so.1
+#7  0x00007ffff7f76609 in start_thread () from @ESYSROOT@/@LIBDIR@/libpthread.so.0
+#8  0x00007ffff6b13293 in clone () from @ESYSROOT@/@LIBDIR@/libc.so.6
 (gdb) thread 1
 [Switching to thread 1 (Thread 0x7ffff64c5880 (LWP 146060))]
 #0  0x000000000020f78e in simpleTest2<float> (numElements=4194304, usePinnedHost=true)
diff -urp HIP-rocm-5.6.0.orig/docs/how_to_guides/install.md HIP-rocm-5.6.0/docs/how_to_guides/install.md
--- HIP-rocm-5.6.0.orig/docs/how_to_guides/install.md	2023-06-12 13:47:00.000000000 -0700
+++ HIP-rocm-5.6.0/docs/how_to_guides/install.md	2023-08-30 15:02:32.070793767 -0700
@@ -13,7 +13,7 @@ On NVIDIA platform, check system require
 
 HIP is part of ROCM packages, it will be automatically installed following the ROCm Installation Guide on AMD public documentation site (https://docs.amd.com/) for the coresponding ROCm release.
 
-By default, HIP is installed into /opt/rocm/hip.
+By default, HIP is installed into @ESYSROOT_ROCM_PATH@.
 
 
 ## NVIDIA Platform
@@ -33,16 +33,16 @@ The driver will be installed automatical
 apt-get install hip-runtime-nvidia hip-dev
 ```
 * Default paths:
-   * By default HIP looks for CUDA SDK in /usr/local/cuda.
-   * By default HIP is installed into /opt/rocm/hip.
-   * Optionally, consider adding /opt/rocm/bin to your path to make it easier to use the tools.
+   * By default HIP looks for CUDA SDK in /opt/cuda.
+   * By default HIP is installed into @ESYSROOT_ROCM_PATH@.
+   * Optionally, consider adding @ESYSROOT_ROCM_PATH@/bin to your path to make it easier to use the tools.
 
 
 # Verify your installation
 
 Run hipconfig (instructions below assume default installation path):
 ```
-/opt/rocm/bin/hipconfig --full
+@ESYSROOT_ROCM_PATH@/bin/hipconfig --full
 ```
 
 # How to build HIP from source
diff -urp HIP-rocm-5.6.0.orig/docs/user_guide/programming_manual.md HIP-rocm-5.6.0/docs/user_guide/programming_manual.md
--- HIP-rocm-5.6.0.orig/docs/user_guide/programming_manual.md	2023-06-12 13:47:00.000000000 -0700
+++ HIP-rocm-5.6.0/docs/user_guide/programming_manual.md	2023-08-30 15:02:32.070793767 -0700
@@ -184,7 +184,7 @@ Here is an example to create and use sta
 - Type 1 using --emit-static-lib:
     ```
     hipcc hipOptLibrary.cpp --emit-static-lib -fPIC -o libHipOptLibrary.a
-    gcc test.cpp -L. -lhipOptLibrary -L/path/to/hip/lib -lamdhip64 -o test.out
+    gcc test.cpp -L. -lhipOptLibrary -L@ESYSROOT_ROCM_PATH@/@LIBDIR@ -lamdhip64 -o test.out
     ```
 - Type 2 using system ar:
     ```
diff -urp HIP-rocm-5.6.0.orig/hip-lang-config.cmake.in HIP-rocm-5.6.0/hip-lang-config.cmake.in
--- HIP-rocm-5.6.0.orig/hip-lang-config.cmake.in	2023-06-12 13:47:00.000000000 -0700
+++ HIP-rocm-5.6.0/hip-lang-config.cmake.in	2023-08-30 15:02:32.070793767 -0700
@@ -65,11 +65,7 @@ find_dependency(amd_comgr)
 
 include( "${CMAKE_CURRENT_LIST_DIR}/hip-lang-targets.cmake" )
 
-# Find the hip-lang config file path with symlinks resolved
-# RealPath: /opt/rocm-ver/lib/cmake/hip-lang/hip-lang-config.cmake
-# Go 4 level up to get IMPORT PREFIX
-get_filename_component(_DIR "${CMAKE_CURRENT_LIST_FILE}" REALPATH)
-get_filename_component(_IMPORT_PREFIX "${_DIR}/../../../../" ABSOLUTE)
+set(_IMPORT_PREFIX "@ESYSROOT_ROCM_PATH@")
 
 
 set_target_properties(hip-lang::device PROPERTIES
diff -urp HIP-rocm-5.6.0.orig/tests/hit/HIT.cmake HIP-rocm-5.6.0/tests/hit/HIT.cmake
--- HIP-rocm-5.6.0.orig/tests/hit/HIT.cmake	2023-06-12 13:47:00.000000000 -0700
+++ HIP-rocm-5.6.0/tests/hit/HIT.cmake	2023-08-30 15:02:32.070793767 -0700
@@ -326,7 +326,7 @@ endmacro()
 #-------------------------------------------------------------------------------
 
 # Macro: HIT_ADD_FILES used to scan+add multiple files for testing.
-file(GLOB HIP_LIB_FILES ${HIP_PATH}/lib/*)
+file(GLOB HIP_LIB_FILES ${HIP_PATH}/@LIBDIR@/*)
 macro(HIT_ADD_FILES _config _dir _label _parent)
     foreach (file ${ARGN})
         # Build tests
@@ -413,7 +413,7 @@ macro(HIT_ADD_FILES _config _dir _label
                         set_target_properties(${target} PROPERTIES OUTPUT_NAME ${_target_r} RUNTIME_OUTPUT_DIRECTORY "." LINK_DEPENDS "${HIP_LIB_FILES}" PREFIX "" SUFFIX "")
                 else()
                     # message(STATUS "add_custom_target*: target= ${target}  _buildcmd= ${_buildcmd}")
-                    add_custom_target(${target} COMMAND sh -c "${_buildcmd} -L${CMAKE_CURRENT_SOURCE_DIR}/build/lib -isystem ${CMAKE_CURRENT_SOURCE_DIR}/include")
+                    add_custom_target(${target} COMMAND sh -c "${_buildcmd} -L${CMAKE_CURRENT_SOURCE_DIR}/build/@LIBDIR@ -isystem ${CMAKE_CURRENT_SOURCE_DIR}/include")
                 endif()
                 add_dependencies(${_parent} ${target})
                 foreach(_dependency ${_depends})
diff -urp HIP-rocm-5.6.0.orig/tests/src/experimental/xcompile/gapi.sh HIP-rocm-5.6.0/tests/src/experimental/xcompile/gapi.sh
--- HIP-rocm-5.6.0.orig/tests/src/experimental/xcompile/gapi.sh	2023-06-12 13:47:00.000000000 -0700
+++ HIP-rocm-5.6.0/tests/src/experimental/xcompile/gapi.sh	2023-08-30 15:02:32.070793767 -0700
@@ -1,9 +1,9 @@
 #!/bin/bash
 
-gcc -D__HIP_PLATFORM_AMD__= -I${HIP_PATH}/include -I${HCC_HOME}/include -c gHipApi.c ${HIP_PATH}/lib/device_util.cpp.o ${HIP_PATH}/lib/hip_device.cpp.o ${HIP_PATH}/lib/hip_error.cpp.o ${HIP_PATH}/lib/hip_event.cpp.o ${HIP_PATH}/lib/hip_hcc.cpp.o ${HIP_PATH}/lib/hip_memory.cpp.o ${HIP_PATH}/lib/hip_peer.cpp.o ${HIP_PATH}/lib/hip_stream.cpp.o ${HIP_PATH}/lib/unpinned_copy_engine.cpp.o -L${HCC_HOME}/lib -lhc_am -L${HSA_PATH}/lib -lhsa-runtime64 -lc++ -lmcwamp -ldl -o gHipApi.o
+gcc -D__HIP_PLATFORM_AMD__= -I${HIP_PATH}/include -I${HCC_HOME}/include -c gHipApi.c ${HIP_PATH}/@LIBDIR@/device_util.cpp.o ${HIP_PATH}/@LIBDIR@/hip_device.cpp.o ${HIP_PATH}/@LIBDIR@/hip_error.cpp.o ${HIP_PATH}/@LIBDIR@/hip_event.cpp.o ${HIP_PATH}/@LIBDIR@/hip_hcc.cpp.o ${HIP_PATH}/@LIBDIR@/hip_memory.cpp.o ${HIP_PATH}/@LIBDIR@/hip_peer.cpp.o ${HIP_PATH}/@LIBDIR@/hip_stream.cpp.o ${HIP_PATH}/@LIBDIR@/unpinned_copy_engine.cpp.o -L${HCC_HOME}/@LIBDIR@ -lhc_am -L${HSA_PATH}/@LIBDIR@ -lhsa-runtime64 -lc++ -lmcwamp -ldl -o gHipApi.o
 
-gcc -D__HIP_PLATFORM_AMD__= -I${HIP_PATH}/include -I${HCC_HOME}/include -c hHipApi.c ${HIP_PATH}/lib/device_util.cpp.o ${HIP_PATH}/lib/hip_device.cpp.o ${HIP_PATH}/lib/hip_error.cpp.o ${HIP_PATH}/lib/hip_event.cpp.o ${HIP_PATH}/lib/hip_hcc.cpp.o ${HIP_PATH}/lib/hip_memory.cpp.o ${HIP_PATH}/lib/hip_peer.cpp.o ${HIP_PATH}/lib/hip_stream.cpp.o ${HIP_PATH}/lib/unpinned_copy_engine.cpp.o -L${HCC_HOME}/lib -lhc_am -L${HSA_PATH}/lib -lhsa-runtime64 -lc++ -lmcwamp -ldl -o hHipApi.o
+gcc -D__HIP_PLATFORM_AMD__= -I${HIP_PATH}/include -I${HCC_HOME}/include -c hHipApi.c ${HIP_PATH}/@LIBDIR@/device_util.cpp.o ${HIP_PATH}/@LIBDIR@/hip_device.cpp.o ${HIP_PATH}/@LIBDIR@/hip_error.cpp.o ${HIP_PATH}/@LIBDIR@/hip_event.cpp.o ${HIP_PATH}/@LIBDIR@/hip_hcc.cpp.o ${HIP_PATH}/@LIBDIR@/hip_memory.cpp.o ${HIP_PATH}/@LIBDIR@/hip_peer.cpp.o ${HIP_PATH}/@LIBDIR@/hip_stream.cpp.o ${HIP_PATH}/@LIBDIR@/unpinned_copy_engine.cpp.o -L${HCC_HOME}/@LIBDIR@ -lhc_am -L${HSA_PATH}/@LIBDIR@ -lhsa-runtime64 -lc++ -lmcwamp -ldl -o hHipApi.o
 
-gcc -D__HIP_PLATFORM_AMD__= -I${HIP_PATH}/include -I${HCC_HOME}/include hHipApi.o gHipApi.o ${HIP_PATH}/lib/device_util.cpp.o ${HIP_PATH}/lib/hip_device.cpp.o ${HIP_PATH}/lib/hip_error.cpp.o ${HIP_PATH}/lib/hip_event.cpp.o ${HIP_PATH}/lib/hip_hcc.cpp.o ${HIP_PATH}/lib/hip_memory.cpp.o ${HIP_PATH}/lib/hip_peer.cpp.o ${HIP_PATH}/lib/hip_stream.cpp.o ${HIP_PATH}/lib/unpinned_copy_engine.cpp.o -L${HCC_HOME}/lib -lhc_am -L${HSA_PATH}/lib -lhsa-runtime64 -lc++ -lmcwamp -ldl -lm -o gApi
+gcc -D__HIP_PLATFORM_AMD__= -I${HIP_PATH}/include -I${HCC_HOME}/include hHipApi.o gHipApi.o ${HIP_PATH}/@LIBDIR@/device_util.cpp.o ${HIP_PATH}/@LIBDIR@/hip_device.cpp.o ${HIP_PATH}/@LIBDIR@/hip_error.cpp.o ${HIP_PATH}/@LIBDIR@/hip_event.cpp.o ${HIP_PATH}/@LIBDIR@/hip_hcc.cpp.o ${HIP_PATH}/@LIBDIR@/hip_memory.cpp.o ${HIP_PATH}/@LIBDIR@/hip_peer.cpp.o ${HIP_PATH}/@LIBDIR@/hip_stream.cpp.o ${HIP_PATH}/@LIBDIR@/unpinned_copy_engine.cpp.o -L${HCC_HOME}/@LIBDIR@ -lhc_am -L${HSA_PATH}/@LIBDIR@ -lhsa-runtime64 -lc++ -lmcwamp -ldl -lm -o gApi
 
 
diff -urp HIP-rocm-5.6.0.orig/tests/src/experimental/xcompile/ghipapi.sh HIP-rocm-5.6.0/tests/src/experimental/xcompile/ghipapi.sh
--- HIP-rocm-5.6.0.orig/tests/src/experimental/xcompile/ghipapi.sh	2023-06-12 13:47:00.000000000 -0700
+++ HIP-rocm-5.6.0/tests/src/experimental/xcompile/ghipapi.sh	2023-08-30 15:02:32.070793767 -0700
@@ -1,8 +1,8 @@
 #!/bin/bash
 
-gcc -D__HIP_PLATFORM_AMD__= -I${HIP_PATH}/include -I${HCC_HOME}/include -c gHipApi.c ${HIP_PATH}/lib/device_util.cpp.o ${HIP_PATH}/lib/hip_device.cpp.o ${HIP_PATH}/lib/hip_error.cpp.o ${HIP_PATH}/lib/hip_event.cpp.o ${HIP_PATH}/lib/hip_hcc.cpp.o ${HIP_PATH}/lib/hip_memory.cpp.o ${HIP_PATH}/lib/hip_peer.cpp.o ${HIP_PATH}/lib/hip_stream.cpp.o ${HIP_PATH}/lib/unpinned_copy_engine.cpp.o -L${HCC_HOME}/lib -lhc_am -L${HSA_PATH}/lib -lhsa-runtime64 -lc++ -lmcwamp -ldl -o gHipApi.o
+gcc -D__HIP_PLATFORM_AMD__= -I${HIP_PATH}/include -I${HCC_HOME}/include -c gHipApi.c ${HIP_PATH}/@LIBDIR@/device_util.cpp.o ${HIP_PATH}/@LIBDIR@/hip_device.cpp.o ${HIP_PATH}/@LIBDIR@/hip_error.cpp.o ${HIP_PATH}/@LIBDIR@/hip_event.cpp.o ${HIP_PATH}/@LIBDIR@/hip_hcc.cpp.o ${HIP_PATH}/@LIBDIR@/hip_memory.cpp.o ${HIP_PATH}/@LIBDIR@/hip_peer.cpp.o ${HIP_PATH}/@LIBDIR@/hip_stream.cpp.o ${HIP_PATH}/@LIBDIR@/unpinned_copy_engine.cpp.o -L${HCC_HOME}/@LIBDIR@ -lhc_am -L${HSA_PATH}/@LIBDIR@ -lhsa-runtime64 -lc++ -lmcwamp -ldl -o gHipApi.o
 
-gcc -D__HIP_PLATFORM_AMD__= -I${HIP_PATH}/include -I${HCC_HOME}/include -c hHipApi.c ${HIP_PATH}/lib/device_util.cpp.o ${HIP_PATH}/lib/hip_device.cpp.o ${HIP_PATH}/lib/hip_error.cpp.o ${HIP_PATH}/lib/hip_event.cpp.o ${HIP_PATH}/lib/hip_hcc.cpp.o ${HIP_PATH}/lib/hip_memory.cpp.o ${HIP_PATH}/lib/hip_peer.cpp.o ${HIP_PATH}/lib/hip_stream.cpp.o ${HIP_PATH}/lib/unpinned_copy_engine.cpp.o -L${HCC_HOME}/lib -lhc_am -L${HSA_PATH}/lib -lhsa-runtime64 -lc++ -lmcwamp -ldl -o hHipApi.o
+gcc -D__HIP_PLATFORM_AMD__= -I${HIP_PATH}/include -I${HCC_HOME}/include -c hHipApi.c ${HIP_PATH}/@LIBDIR@/device_util.cpp.o ${HIP_PATH}/@LIBDIR@/hip_device.cpp.o ${HIP_PATH}/@LIBDIR@/hip_error.cpp.o ${HIP_PATH}/@LIBDIR@/hip_event.cpp.o ${HIP_PATH}/@LIBDIR@/hip_hcc.cpp.o ${HIP_PATH}/@LIBDIR@/hip_memory.cpp.o ${HIP_PATH}/@LIBDIR@/hip_peer.cpp.o ${HIP_PATH}/@LIBDIR@/hip_stream.cpp.o ${HIP_PATH}/@LIBDIR@/unpinned_copy_engine.cpp.o -L${HCC_HOME}/@LIBDIR@ -lhc_am -L${HSA_PATH}/@LIBDIR@ -lhsa-runtime64 -lc++ -lmcwamp -ldl -o hHipApi.o
 
 hipcc hHipApi.o gHipApi.o -o gHipApi
 
diff -urp HIP-rocm-5.6.0.orig/tests/src/experimental/xcompile/gxxapi.sh HIP-rocm-5.6.0/tests/src/experimental/xcompile/gxxapi.sh
--- HIP-rocm-5.6.0.orig/tests/src/experimental/xcompile/gxxapi.sh	2023-06-12 13:47:00.000000000 -0700
+++ HIP-rocm-5.6.0/tests/src/experimental/xcompile/gxxapi.sh	2023-08-30 15:02:32.070793767 -0700
@@ -1,8 +1,8 @@
 #!/bin/bash
 
-g++ -D__HIP_PLATFORM_AMD__= -I${HIP_PATH}/include -I${HCC_HOME}/include -c gxxHipApi.cpp ${HIP_PATH}/lib/device_util.cpp.o ${HIP_PATH}/lib/hip_device.cpp.o ${HIP_PATH}/lib/hip_error.cpp.o ${HIP_PATH}/lib/hip_event.cpp.o ${HIP_PATH}/lib/hip_hcc.cpp.o ${HIP_PATH}/lib/hip_memory.cpp.o ${HIP_PATH}/lib/hip_peer.cpp.o ${HIP_PATH}/lib/hip_stream.cpp.o ${HIP_PATH}/lib/unpinned_copy_engine.cpp.o -L${HCC_HOME}/lib -lhc_am -L${HSA_PATH}/lib -lhsa-runtime64 -lc++ -lmcwamp -ldl -o gxxHipApi.o
+g++ -D__HIP_PLATFORM_AMD__= -I${HIP_PATH}/include -I${HCC_HOME}/include -c gxxHipApi.cpp ${HIP_PATH}/@LIBDIR@/device_util.cpp.o ${HIP_PATH}/@LIBDIR@/hip_device.cpp.o ${HIP_PATH}/@LIBDIR@/hip_error.cpp.o ${HIP_PATH}/@LIBDIR@/hip_event.cpp.o ${HIP_PATH}/@LIBDIR@/hip_hcc.cpp.o ${HIP_PATH}/@LIBDIR@/hip_memory.cpp.o ${HIP_PATH}/@LIBDIR@/hip_peer.cpp.o ${HIP_PATH}/@LIBDIR@/hip_stream.cpp.o ${HIP_PATH}/@LIBDIR@/unpinned_copy_engine.cpp.o -L${HCC_HOME}/@LIBDIR@ -lhc_am -L${HSA_PATH}/@LIBDIR@ -lhsa-runtime64 -lc++ -lmcwamp -ldl -o gxxHipApi.o
 
-g++ -D__HIP_PLATFORM_AMD__= -I${HIP_PATH}/include -I${HCC_HOME}/include -c hxxHipApi.cpp ${HIP_PATH}/lib/device_util.cpp.o ${HIP_PATH}/lib/hip_device.cpp.o ${HIP_PATH}/lib/hip_error.cpp.o ${HIP_PATH}/lib/hip_event.cpp.o ${HIP_PATH}/lib/hip_hcc.cpp.o ${HIP_PATH}/lib/hip_memory.cpp.o ${HIP_PATH}/lib/hip_peer.cpp.o ${HIP_PATH}/lib/hip_stream.cpp.o ${HIP_PATH}/lib/unpinned_copy_engine.cpp.o -L${HCC_HOME}/lib -lhc_am -L${HSA_PATH}/lib -lhsa-runtime64 -lc++ -lmcwamp -ldl -o hxxHipApi.o
+g++ -D__HIP_PLATFORM_AMD__= -I${HIP_PATH}/include -I${HCC_HOME}/include -c hxxHipApi.cpp ${HIP_PATH}/@LIBDIR@/device_util.cpp.o ${HIP_PATH}/@LIBDIR@/hip_device.cpp.o ${HIP_PATH}/@LIBDIR@/hip_error.cpp.o ${HIP_PATH}/@LIBDIR@/hip_event.cpp.o ${HIP_PATH}/@LIBDIR@/hip_hcc.cpp.o ${HIP_PATH}/@LIBDIR@/hip_memory.cpp.o ${HIP_PATH}/@LIBDIR@/hip_peer.cpp.o ${HIP_PATH}/@LIBDIR@/hip_stream.cpp.o ${HIP_PATH}/@LIBDIR@/unpinned_copy_engine.cpp.o -L${HCC_HOME}/@LIBDIR@ -lhc_am -L${HSA_PATH}/@LIBDIR@ -lhsa-runtime64 -lc++ -lmcwamp -ldl -o hxxHipApi.o
 
-g++ -D__HIP_PLATFORM_AMD__= -I${HIP_PATH}/include -I${HCC_HOME}/include gxxHipApi.o hxxHipApi.o ${HIP_PATH}/lib/device_util.cpp.o ${HIP_PATH}/lib/hip_device.cpp.o ${HIP_PATH}/lib/hip_error.cpp.o ${HIP_PATH}/lib/hip_event.cpp.o ${HIP_PATH}/lib/hip_hcc.cpp.o ${HIP_PATH}/lib/hip_memory.cpp.o ${HIP_PATH}/lib/hip_peer.cpp.o ${HIP_PATH}/lib/hip_stream.cpp.o ${HIP_PATH}/lib/unpinned_copy_engine.cpp.o -L${HCC_HOME}/lib -lhc_am -L${HSA_PATH}/lib -lhsa-runtime64 -lc++ -lmcwamp -ldl -o gxxApi
+g++ -D__HIP_PLATFORM_AMD__= -I${HIP_PATH}/include -I${HCC_HOME}/include gxxHipApi.o hxxHipApi.o ${HIP_PATH}/@LIBDIR@/device_util.cpp.o ${HIP_PATH}/@LIBDIR@/hip_device.cpp.o ${HIP_PATH}/@LIBDIR@/hip_error.cpp.o ${HIP_PATH}/@LIBDIR@/hip_event.cpp.o ${HIP_PATH}/@LIBDIR@/hip_hcc.cpp.o ${HIP_PATH}/@LIBDIR@/hip_memory.cpp.o ${HIP_PATH}/@LIBDIR@/hip_peer.cpp.o ${HIP_PATH}/@LIBDIR@/hip_stream.cpp.o ${HIP_PATH}/@LIBDIR@/unpinned_copy_engine.cpp.o -L${HCC_HOME}/@LIBDIR@ -lhc_am -L${HSA_PATH}/@LIBDIR@ -lhsa-runtime64 -lc++ -lmcwamp -ldl -o gxxApi
 
diff -urp HIP-rocm-5.6.0.orig/tests/src/experimental/xcompile/gxxhipapi.sh HIP-rocm-5.6.0/tests/src/experimental/xcompile/gxxhipapi.sh
--- HIP-rocm-5.6.0.orig/tests/src/experimental/xcompile/gxxhipapi.sh	2023-06-12 13:47:00.000000000 -0700
+++ HIP-rocm-5.6.0/tests/src/experimental/xcompile/gxxhipapi.sh	2023-08-30 15:02:32.070793767 -0700
@@ -1,8 +1,8 @@
 #!/bin/bash
 
-g++ -D__HIP_PLATFORM_AMD__= -I${HIP_PATH}/include -I${HCC_HOME}/include -c gxxHipApi.cpp ${HIP_PATH}/lib/device_util.cpp.o ${HIP_PATH}/lib/hip_device.cpp.o ${HIP_PATH}/lib/hip_error.cpp.o ${HIP_PATH}/lib/hip_event.cpp.o ${HIP_PATH}/lib/hip_hcc.cpp.o ${HIP_PATH}/lib/hip_memory.cpp.o ${HIP_PATH}/lib/hip_peer.cpp.o ${HIP_PATH}/lib/hip_stream.cpp.o ${HIP_PATH}/lib/unpinned_copy_engine.cpp.o -L${HCC_HOME}/lib -lhc_am -L${HSA_PATH}/lib -lhsa-runtime64 -lc++ -lmcwamp -ldl -o gxxHipApi.o
+g++ -D__HIP_PLATFORM_AMD__= -I${HIP_PATH}/include -I${HCC_HOME}/include -c gxxHipApi.cpp ${HIP_PATH}/@LIBDIR@/device_util.cpp.o ${HIP_PATH}/@LIBDIR@/hip_device.cpp.o ${HIP_PATH}/@LIBDIR@/hip_error.cpp.o ${HIP_PATH}/@LIBDIR@/hip_event.cpp.o ${HIP_PATH}/@LIBDIR@/hip_hcc.cpp.o ${HIP_PATH}/@LIBDIR@/hip_memory.cpp.o ${HIP_PATH}/@LIBDIR@/hip_peer.cpp.o ${HIP_PATH}/@LIBDIR@/hip_stream.cpp.o ${HIP_PATH}/@LIBDIR@/unpinned_copy_engine.cpp.o -L${HCC_HOME}/@LIBDIR@ -lhc_am -L${HSA_PATH}/@LIBDIR@ -lhsa-runtime64 -lc++ -lmcwamp -ldl -o gxxHipApi.o
 
 hipcc -c hxxHipApi.cpp -o hxxHipApi.o
 
-g++ -D__HIP_PLATFORM_AMD__= -I${HIP_PATH}/include -I${HCC_HOME}/include gxxHipApi.o hxxHipApi.o ${HIP_PATH}/lib/device_util.cpp.o ${HIP_PATH}/lib/hip_device.cpp.o ${HIP_PATH}/lib/hip_error.cpp.o ${HIP_PATH}/lib/hip_event.cpp.o ${HIP_PATH}/lib/hip_hcc.cpp.o ${HIP_PATH}/lib/hip_memory.cpp.o ${HIP_PATH}/lib/hip_peer.cpp.o ${HIP_PATH}/lib/hip_stream.cpp.o ${HIP_PATH}/lib/unpinned_copy_engine.cpp.o -L${HCC_HOME}/lib -lhc_am -L${HSA_PATH}/lib -lhsa-runtime64 -lc++ -lmcwamp -ldl -o gxxHipApi
+g++ -D__HIP_PLATFORM_AMD__= -I${HIP_PATH}/include -I${HCC_HOME}/include gxxHipApi.o hxxHipApi.o ${HIP_PATH}/@LIBDIR@/device_util.cpp.o ${HIP_PATH}/@LIBDIR@/hip_device.cpp.o ${HIP_PATH}/@LIBDIR@/hip_error.cpp.o ${HIP_PATH}/@LIBDIR@/hip_event.cpp.o ${HIP_PATH}/@LIBDIR@/hip_hcc.cpp.o ${HIP_PATH}/@LIBDIR@/hip_memory.cpp.o ${HIP_PATH}/@LIBDIR@/hip_peer.cpp.o ${HIP_PATH}/@LIBDIR@/hip_stream.cpp.o ${HIP_PATH}/@LIBDIR@/unpinned_copy_engine.cpp.o -L${HCC_HOME}/@LIBDIR@ -lhc_am -L${HSA_PATH}/@LIBDIR@ -lhsa-runtime64 -lc++ -lmcwamp -ldl -o gxxHipApi
 
diff -urp HIP-rocm-5.6.0.orig/tests/src/experimental/xcompile/hipapig.sh HIP-rocm-5.6.0/tests/src/experimental/xcompile/hipapig.sh
--- HIP-rocm-5.6.0.orig/tests/src/experimental/xcompile/hipapig.sh	2023-06-12 13:47:00.000000000 -0700
+++ HIP-rocm-5.6.0/tests/src/experimental/xcompile/hipapig.sh	2023-08-30 15:02:32.070793767 -0700
@@ -1,3 +1,3 @@
 #!/bin/bash
 
-gcc -D__HIP_PLATFORM_AMD__= -I${HIP_PATH}/include -I${HCC_HOME}/include gApi.c ${HIP_PATH}/lib/device_util.cpp.o ${HIP_PATH}/lib/hip_device.cpp.o ${HIP_PATH}/lib/hip_error.cpp.o ${HIP_PATH}/lib/hip_event.cpp.o ${HIP_PATH}/lib/hip_hcc.cpp.o ${HIP_PATH}/lib/hip_memory.cpp.o ${HIP_PATH}/lib/hip_peer.cpp.o ${HIP_PATH}/lib/hip_stream.cpp.o ${HIP_PATH}/lib/unpinned_copy_engine.cpp.o -L${HCC_HOME}/lib -lhc_am -L${HSA_PATH}/lib -lhsa-runtime64 -lc++ -lmcwamp -ldl -lm -o gApi
+gcc -D__HIP_PLATFORM_AMD__= -I${HIP_PATH}/include -I${HCC_HOME}/include gApi.c ${HIP_PATH}/@LIBDIR@/device_util.cpp.o ${HIP_PATH}/@LIBDIR@/hip_device.cpp.o ${HIP_PATH}/@LIBDIR@/hip_error.cpp.o ${HIP_PATH}/@LIBDIR@/hip_event.cpp.o ${HIP_PATH}/@LIBDIR@/hip_hcc.cpp.o ${HIP_PATH}/@LIBDIR@/hip_memory.cpp.o ${HIP_PATH}/@LIBDIR@/hip_peer.cpp.o ${HIP_PATH}/@LIBDIR@/hip_stream.cpp.o ${HIP_PATH}/@LIBDIR@/unpinned_copy_engine.cpp.o -L${HCC_HOME}/@LIBDIR@ -lhc_am -L${HSA_PATH}/@LIBDIR@ -lhsa-runtime64 -lc++ -lmcwamp -ldl -lm -o gApi
diff -urp HIP-rocm-5.6.0.orig/tests/src/experimental/xcompile/hipapigxx.sh HIP-rocm-5.6.0/tests/src/experimental/xcompile/hipapigxx.sh
--- HIP-rocm-5.6.0.orig/tests/src/experimental/xcompile/hipapigxx.sh	2023-06-12 13:47:00.000000000 -0700
+++ HIP-rocm-5.6.0/tests/src/experimental/xcompile/hipapigxx.sh	2023-08-30 15:02:32.070793767 -0700
@@ -1,3 +1,3 @@
 #!/bin/bash
 
-g++ -D__HIP_PLATFORM_AMD__= -I${HIP_PATH}/include -I${HCC_HOME}/include gxxApi.cpp ${HIP_PATH}/lib/device_util.cpp.o ${HIP_PATH}/lib/hip_device.cpp.o ${HIP_PATH}/lib/hip_error.cpp.o ${HIP_PATH}/lib/hip_event.cpp.o ${HIP_PATH}/lib/hip_hcc.cpp.o ${HIP_PATH}/lib/hip_memory.cpp.o ${HIP_PATH}/lib/hip_peer.cpp.o ${HIP_PATH}/lib/hip_stream.cpp.o ${HIP_PATH}/lib/unpinned_copy_engine.cpp.o -L${HCC_HOME}/lib -lhc_am -L${HSA_PATH}/lib -lhsa-runtime64 -lc++ -lmcwamp -ldl -o gxxApi
+g++ -D__HIP_PLATFORM_AMD__= -I${HIP_PATH}/include -I${HCC_HOME}/include gxxApi.cpp ${HIP_PATH}/@LIBDIR@/device_util.cpp.o ${HIP_PATH}/@LIBDIR@/hip_device.cpp.o ${HIP_PATH}/@LIBDIR@/hip_error.cpp.o ${HIP_PATH}/@LIBDIR@/hip_event.cpp.o ${HIP_PATH}/@LIBDIR@/hip_hcc.cpp.o ${HIP_PATH}/@LIBDIR@/hip_memory.cpp.o ${HIP_PATH}/@LIBDIR@/hip_peer.cpp.o ${HIP_PATH}/@LIBDIR@/hip_stream.cpp.o ${HIP_PATH}/@LIBDIR@/unpinned_copy_engine.cpp.o -L${HCC_HOME}/@LIBDIR@ -lhc_am -L${HSA_PATH}/@LIBDIR@ -lhsa-runtime64 -lc++ -lmcwamp -ldl -o gxxApi
diff -urp HIP-rocm-5.6.0.orig/tests/src/experimental/xcompile/hipgapi.sh HIP-rocm-5.6.0/tests/src/experimental/xcompile/hipgapi.sh
--- HIP-rocm-5.6.0.orig/tests/src/experimental/xcompile/hipgapi.sh	2023-06-12 13:47:00.000000000 -0700
+++ HIP-rocm-5.6.0/tests/src/experimental/xcompile/hipgapi.sh	2023-08-30 15:02:32.070793767 -0700
@@ -1,6 +1,6 @@
 #!/bin/bash
 
-gcc -D__HIP_PLATFORM_AMD__= -I${HIP_PATH}/include -I${HCC_HOME}/include -c gHipApi.c ${HIP_PATH}/lib/device_util.cpp.o ${HIP_PATH}/lib/hip_device.cpp.o ${HIP_PATH}/lib/hip_error.cpp.o ${HIP_PATH}/lib/hip_event.cpp.o ${HIP_PATH}/lib/hip_hcc.cpp.o ${HIP_PATH}/lib/hip_memory.cpp.o ${HIP_PATH}/lib/hip_peer.cpp.o ${HIP_PATH}/lib/hip_stream.cpp.o ${HIP_PATH}/lib/unpinned_copy_engine.cpp.o -L${HCC_HOME}/lib -lhc_am -L${HSA_PATH}/lib -lhsa-runtime64 -lc++ -lmcwamp -ldl -o gHipApi.o
+gcc -D__HIP_PLATFORM_AMD__= -I${HIP_PATH}/include -I${HCC_HOME}/include -c gHipApi.c ${HIP_PATH}/@LIBDIR@/device_util.cpp.o ${HIP_PATH}/@LIBDIR@/hip_device.cpp.o ${HIP_PATH}/@LIBDIR@/hip_error.cpp.o ${HIP_PATH}/@LIBDIR@/hip_event.cpp.o ${HIP_PATH}/@LIBDIR@/hip_hcc.cpp.o ${HIP_PATH}/@LIBDIR@/hip_memory.cpp.o ${HIP_PATH}/@LIBDIR@/hip_peer.cpp.o ${HIP_PATH}/@LIBDIR@/hip_stream.cpp.o ${HIP_PATH}/@LIBDIR@/unpinned_copy_engine.cpp.o -L${HCC_HOME}/@LIBDIR@ -lhc_am -L${HSA_PATH}/@LIBDIR@ -lhsa-runtime64 -lc++ -lmcwamp -ldl -o gHipApi.o
 
 hipcc -c hHipApi.c -o hHipApi.o
 
diff -urp HIP-rocm-5.6.0.orig/tests/src/experimental/xcompile/hipg.sh HIP-rocm-5.6.0/tests/src/experimental/xcompile/hipg.sh
--- HIP-rocm-5.6.0.orig/tests/src/experimental/xcompile/hipg.sh	2023-06-12 13:47:00.000000000 -0700
+++ HIP-rocm-5.6.0/tests/src/experimental/xcompile/hipg.sh	2023-08-30 15:02:32.070793767 -0700
@@ -1,6 +1,6 @@
 #!/bin/bash
 
-gcc -D__HIP_PLATFORM_AMD__= -I${HIP_PATH}/include -I${HCC_HOME}/include -c gHipApi.c ${HIP_PATH}/lib/device_util.cpp.o ${HIP_PATH}/lib/hip_device.cpp.o ${HIP_PATH}/lib/hip_error.cpp.o ${HIP_PATH}/lib/hip_event.cpp.o ${HIP_PATH}/lib/hip_hcc.cpp.o ${HIP_PATH}/lib/hip_memory.cpp.o ${HIP_PATH}/lib/hip_peer.cpp.o ${HIP_PATH}/lib/hip_stream.cpp.o ${HIP_PATH}/lib/unpinned_copy_engine.cpp.o -L${HCC_HOME}/lib -lhc_am -L${HSA_PATH}/lib -lhsa-runtime64 -lc++ -lmcwamp -ldl -o gHipApi.o
+gcc -D__HIP_PLATFORM_AMD__= -I${HIP_PATH}/include -I${HCC_HOME}/include -c gHipApi.c ${HIP_PATH}/@LIBDIR@/device_util.cpp.o ${HIP_PATH}/@LIBDIR@/hip_device.cpp.o ${HIP_PATH}/@LIBDIR@/hip_error.cpp.o ${HIP_PATH}/@LIBDIR@/hip_event.cpp.o ${HIP_PATH}/@LIBDIR@/hip_hcc.cpp.o ${HIP_PATH}/@LIBDIR@/hip_memory.cpp.o ${HIP_PATH}/@LIBDIR@/hip_peer.cpp.o ${HIP_PATH}/@LIBDIR@/hip_stream.cpp.o ${HIP_PATH}/@LIBDIR@/unpinned_copy_engine.cpp.o -L${HCC_HOME}/@LIBDIR@ -lhc_am -L${HSA_PATH}/@LIBDIR@ -lhsa-runtime64 -lc++ -lmcwamp -ldl -o gHipApi.o
 
 hipcc -c hHip.c -o hHip.o
 
diff -urp HIP-rocm-5.6.0.orig/tests/src/experimental/xcompile/hipgxxapi.sh HIP-rocm-5.6.0/tests/src/experimental/xcompile/hipgxxapi.sh
--- HIP-rocm-5.6.0.orig/tests/src/experimental/xcompile/hipgxxapi.sh	2023-06-12 13:47:00.000000000 -0700
+++ HIP-rocm-5.6.0/tests/src/experimental/xcompile/hipgxxapi.sh	2023-08-30 15:02:32.070793767 -0700
@@ -1,6 +1,6 @@
 #!/bin/bash
 
-g++ -D__HIP_PLATFORM_AMD__= -I${HIP_PATH}/include -I${HCC_HOME}/include -c gxxHipApi.cpp ${HIP_PATH}/lib/device_util.cpp.o ${HIP_PATH}/lib/hip_device.cpp.o ${HIP_PATH}/lib/hip_error.cpp.o ${HIP_PATH}/lib/hip_event.cpp.o ${HIP_PATH}/lib/hip_hcc.cpp.o ${HIP_PATH}/lib/hip_memory.cpp.o ${HIP_PATH}/lib/hip_peer.cpp.o ${HIP_PATH}/lib/hip_stream.cpp.o ${HIP_PATH}/lib/unpinned_copy_engine.cpp.o -L${HCC_HOME}/lib -lhc_am -L${HSA_PATH}/lib -lhsa-runtime64 -lc++ -lmcwamp -ldl -o gxxHipApi.o
+g++ -D__HIP_PLATFORM_AMD__= -I${HIP_PATH}/include -I${HCC_HOME}/include -c gxxHipApi.cpp ${HIP_PATH}/@LIBDIR@/device_util.cpp.o ${HIP_PATH}/@LIBDIR@/hip_device.cpp.o ${HIP_PATH}/@LIBDIR@/hip_error.cpp.o ${HIP_PATH}/@LIBDIR@/hip_event.cpp.o ${HIP_PATH}/@LIBDIR@/hip_hcc.cpp.o ${HIP_PATH}/@LIBDIR@/hip_memory.cpp.o ${HIP_PATH}/@LIBDIR@/hip_peer.cpp.o ${HIP_PATH}/@LIBDIR@/hip_stream.cpp.o ${HIP_PATH}/@LIBDIR@/unpinned_copy_engine.cpp.o -L${HCC_HOME}/@LIBDIR@ -lhc_am -L${HSA_PATH}/@LIBDIR@ -lhsa-runtime64 -lc++ -lmcwamp -ldl -o gxxHipApi.o
 
 hipcc -c hxxHipApi.cpp -o hxxHipApi.o
 
diff -urp HIP-rocm-5.6.0.orig/tests/src/experimental/xcompile/hipgxx.sh HIP-rocm-5.6.0/tests/src/experimental/xcompile/hipgxx.sh
--- HIP-rocm-5.6.0.orig/tests/src/experimental/xcompile/hipgxx.sh	2023-06-12 13:47:00.000000000 -0700
+++ HIP-rocm-5.6.0/tests/src/experimental/xcompile/hipgxx.sh	2023-08-30 15:02:32.070793767 -0700
@@ -1,6 +1,6 @@
 #!/bin/bash
 
-g++ -D__HIP_PLATFORM_AMD__= -I${HIP_PATH}/include -I${HCC_HOME}/include -c gxxHipApi.cpp ${HIP_PATH}/lib/device_util.cpp.o ${HIP_PATH}/lib/hip_device.cpp.o ${HIP_PATH}/lib/hip_error.cpp.o ${HIP_PATH}/lib/hip_event.cpp.o ${HIP_PATH}/lib/hip_hcc.cpp.o ${HIP_PATH}/lib/hip_memory.cpp.o ${HIP_PATH}/lib/hip_peer.cpp.o ${HIP_PATH}/lib/hip_stream.cpp.o ${HIP_PATH}/lib/unpinned_copy_engine.cpp.o -L${HCC_HOME}/lib -lhc_am -L${HSA_PATH}/lib -lhsa-runtime64 -lc++ -lmcwamp -ldl -o gxxHipApi.o
+g++ -D__HIP_PLATFORM_AMD__= -I${HIP_PATH}/include -I${HCC_HOME}/include -c gxxHipApi.cpp ${HIP_PATH}/@LIBDIR@/device_util.cpp.o ${HIP_PATH}/@LIBDIR@/hip_device.cpp.o ${HIP_PATH}/@LIBDIR@/hip_error.cpp.o ${HIP_PATH}/@LIBDIR@/hip_event.cpp.o ${HIP_PATH}/@LIBDIR@/hip_hcc.cpp.o ${HIP_PATH}/@LIBDIR@/hip_memory.cpp.o ${HIP_PATH}/@LIBDIR@/hip_peer.cpp.o ${HIP_PATH}/@LIBDIR@/hip_stream.cpp.o ${HIP_PATH}/@LIBDIR@/unpinned_copy_engine.cpp.o -L${HCC_HOME}/@LIBDIR@ -lhc_am -L${HSA_PATH}/@LIBDIR@ -lhsa-runtime64 -lc++ -lmcwamp -ldl -o gxxHipApi.o
 
 hipcc -c hxxHip.cpp -o hxxHip.o
 
diff -urp HIP-rocm-5.6.0.orig/tests/src/g++/hipMalloc.cpp HIP-rocm-5.6.0/tests/src/g++/hipMalloc.cpp
--- HIP-rocm-5.6.0.orig/tests/src/g++/hipMalloc.cpp	2023-06-12 13:47:00.000000000 -0700
+++ HIP-rocm-5.6.0/tests/src/g++/hipMalloc.cpp	2023-08-30 15:02:32.070793767 -0700
@@ -18,8 +18,8 @@
  * */
 
 /* HIT_START
- * BUILD_CMD: hipMalloc %cxx -D__HIP_PLATFORM_NVIDIA__ -I%hip-path/include -I/usr/local/cuda/include %S/%s -o %T/hipMalloc_cxx_nvidia -L/usr/local/cuda/lib64 -lcudart -std=c++11 EXCLUDE_HIP_PLATFORM amd
- * BUILD_CMD: hipMalloc %cxx -D__HIP_PLATFORM_AMD__ -I%hip-path/include -I%rocm-path/include %S/%s -Wl,--rpath=%rocm-path/lib %hip-path/lib/libamdhip64.so -o %T/hipMalloc_cxx_amd -std=c++11 EXCLUDE_HIP_PLATFORM nvidia
+ * BUILD_CMD: hipMalloc %cxx -D__HIP_PLATFORM_NVIDIA__ -I%hip-path/include -I/opt/cuda/include %S/%s -o %T/hipMalloc_cxx_nvidia -L/opt/cuda/@LIBDIR@ -lcudart -std=c++11 EXCLUDE_HIP_PLATFORM amd
+ * BUILD_CMD: hipMalloc %cxx -D__HIP_PLATFORM_AMD__ -I%hip-path/include -I%rocm-path/include %S/%s -Wl,--rpath=%rocm-path/@LIBDIR@ %hip-path/@LIBDIR@/libamdhip64.so -o %T/hipMalloc_cxx_amd -std=c++11 EXCLUDE_HIP_PLATFORM nvidia
  * TEST: hipMalloc_cxx_nvidia EXCLUDE_HIP_PLATFORM amd
  * TEST: hipMalloc_cxx_amd EXCLUDE_HIP_PLATFORM nvidia
  * HIT_END
diff -urp HIP-rocm-5.6.0.orig/tests/src/gcc/hipMalloc.c HIP-rocm-5.6.0/tests/src/gcc/hipMalloc.c
--- HIP-rocm-5.6.0.orig/tests/src/gcc/hipMalloc.c	2023-06-12 13:47:00.000000000 -0700
+++ HIP-rocm-5.6.0/tests/src/gcc/hipMalloc.c	2023-08-30 15:02:32.070793767 -0700
@@ -18,8 +18,8 @@
  * */
 
 /* HIT_START
- * BUILD_CMD: hipMalloc %cc -D__HIP_PLATFORM_NVIDIA__ -I%hip-path/include -I/usr/local/cuda/include %S/%s -o %T/hipMalloc_cc_nvidia -L/usr/local/cuda/lib64 -lcudart EXCLUDE_HIP_PLATFORM amd
- * BUILD_CMD: hipMalloc %cc -D__HIP_PLATFORM_AMD__ -I%hip-path/include %S/%s -Wl,--rpath=%hip-path/lib %hip-path/lib/libamdhip64.so -o %T/hipMalloc_cc_amd EXCLUDE_HIP_PLATFORM nvidia
+ * BUILD_CMD: hipMalloc %cc -D__HIP_PLATFORM_NVIDIA__ -I%hip-path/include -I/opt/cuda/include %S/%s -o %T/hipMalloc_cc_nvidia -L/opt/cuda/@LIBDIR@ -lcudart EXCLUDE_HIP_PLATFORM amd
+ * BUILD_CMD: hipMalloc %cc -D__HIP_PLATFORM_AMD__ -I%hip-path/include %S/%s -Wl,--rpath=%hip-path/@LIBDIR@ %hip-path/@LIBDIR@/libamdhip64.so -o %T/hipMalloc_cc_amd EXCLUDE_HIP_PLATFORM nvidia
  * TEST: hipMalloc_cc_nvidia EXCLUDE_HIP_PLATFORM amd
  * TEST: hipMalloc_cc_amd EXCLUDE_HIP_PLATFORM nvidia
  * HIT_END
diff -urp HIP-rocm-5.6.0.orig/tests/src/gcc/LaunchKernel.c HIP-rocm-5.6.0/tests/src/gcc/LaunchKernel.c
--- HIP-rocm-5.6.0.orig/tests/src/gcc/LaunchKernel.c	2023-06-12 13:47:00.000000000 -0700
+++ HIP-rocm-5.6.0/tests/src/gcc/LaunchKernel.c	2023-08-30 15:02:32.070793767 -0700
@@ -21,7 +21,7 @@
 /* HIT_START
  * BUILD_CMD: gpu.o %hc -I%hip-path/include -g -c %S/gpu.cpp -o %T/gpu.o EXCLUDE_HIP_PLATFORM nvidia EXCLUDE_HIP_LIB_TYPE static
  * BUILD_CMD: launchkernel.o %hc -D__HIP_PLATFORM_AMD__ -g -I%hip-path/include -c %S/LaunchKernel.c -o %T/launchkernel.o EXCLUDE_HIP_PLATFORM nvidia EXCLUDE_HIP_LIB_TYPE static
- * BUILD_CMD: LaunchKernel %hc %T/launchkernel.o %T/gpu.o -g -Wl,--rpath=%hip-path/lib %hip-path/lib/libamdhip64.so -o %T/%t DEPENDS gpu.o launchkernel.o EXCLUDE_HIP_PLATFORM nvidia EXCLUDE_HIP_LIB_TYPE static
+ * BUILD_CMD: LaunchKernel %hc %T/launchkernel.o %T/gpu.o -g -Wl,--rpath=%hip-path/@LIBDIR@ %hip-path/@LIBDIR@/libamdhip64.so -o %T/%t DEPENDS gpu.o launchkernel.o EXCLUDE_HIP_PLATFORM nvidia EXCLUDE_HIP_LIB_TYPE static
  * TEST: %t EXCLUDE_HIP_PLATFORM nvidia EXCLUDE_HIP_LIB_TYPE static
  * HIT_END
  */
diff -urp HIP-rocm-5.6.0.orig/tests/src/runtimeApi/module/hipModule.cpp HIP-rocm-5.6.0/tests/src/runtimeApi/module/hipModule.cpp
--- HIP-rocm-5.6.0.orig/tests/src/runtimeApi/module/hipModule.cpp	2023-06-12 13:47:00.000000000 -0700
+++ HIP-rocm-5.6.0/tests/src/runtimeApi/module/hipModule.cpp	2023-08-30 15:02:32.070793767 -0700
@@ -153,7 +153,7 @@ bool testMultiTargArchCodeObj() {
   if (isRocmPathSet()) {
     hipcc_path = "$ROCM_PATH/bin/hipcc";
   } else {
-    hipcc_path = "/opt/rocm/bin/hipcc";
+    hipcc_path = "@ESYSROOT_ROCM_PATH@/bin/hipcc";
   }
   /* Putting these command parameters into a variable to shorten the string
     literal length in order to avoid multiline string literal cpplint warning
diff -urp HIP-rocm-5.6.0.orig/tests/src/runtimeApi/module/hipOpenCLCOTest.cpp HIP-rocm-5.6.0/tests/src/runtimeApi/module/hipOpenCLCOTest.cpp
--- HIP-rocm-5.6.0.orig/tests/src/runtimeApi/module/hipOpenCLCOTest.cpp	2023-06-12 13:47:00.000000000 -0700
+++ HIP-rocm-5.6.0/tests/src/runtimeApi/module/hipOpenCLCOTest.cpp	2023-08-30 15:02:32.070793767 -0700
@@ -130,11 +130,11 @@ int getV3TargetIdFeature(char* feature,
   char command[COMMAND_LEN] = "";
   const char *rocmpath = nullptr;
   if (rocmPathSet) {
-    // For STG2 testing where /opt/rocm path is not present
+    // For STG2 testing where @ESYSROOT_ROCM_PATH@ path is not present
     rocmpath = "$ROCM_PATH/bin/rocminfo";
   } else {
     // Check if the rocminfo tool exists
-    rocmpath = "/opt/rocm/bin/rocminfo";
+    rocmpath = "@ESYSROOT_ROCM_PATH@/bin/rocminfo";
   }
   snprintf(command, COMMAND_LEN, "%s", rocmpath);
   strncat(command, " | grep -m1 \"sramecc.:xnack.\"", COMMAND_LEN);
@@ -213,16 +213,16 @@ int main(int argc, char* argv[]) {
     and may give bogus warnings.  Use C++11 raw strings or concatenation instead."
   */
   if (rocmPathSet) {
-    // For STG2 testing where /opt/rocm path is not present
+    // For STG2 testing where @ESYSROOT_ROCM_PATH@ path is not present
     snprintf(command, COMMAND_LEN,
-    "$ROCM_PATH/llvm/bin/clang -target amdgcn-amd-amdhsa -x cl ");
+    "$ROCM_PATH/lib/llvm/@LLVM_SLOT@/bin/clang -target amdgcn-amd-amdhsa -x cl ");
   } else {
     snprintf(command, COMMAND_LEN,
-    "/opt/rocm/llvm/bin/clang -target amdgcn-amd-amdhsa -x cl ");
+    "@ESYSROOT@/usr/lib/llvm/@LLVM_SLOT@/bin/clang -target amdgcn-amd-amdhsa -x cl ");
   }
   char command_temp[COMMAND_LEN] = "";
   snprintf(command_temp, COMMAND_LEN,
-  "-include `find /opt/rocm* -name opencl-c.h` %s %s -mcpu=%s -o %s %s",
+  "-include `find @ESYSROOT_ROCM_PATH@ -name opencl-c.h` %s %s -mcpu=%s -o %s %s",
   pCodeObjVer, v3option, props.gcnArchName, pCodeObjFile, OPENCL_OBJ_FILE);
 
   strncat(command, command_temp, COMMAND_LEN);
diff -urp HIP-rocm-5.6.0.orig/tests/src/runtimeApi/p2p/hipP2pLinkTypeAndHopFunc.cpp HIP-rocm-5.6.0/tests/src/runtimeApi/p2p/hipP2pLinkTypeAndHopFunc.cpp
--- HIP-rocm-5.6.0.orig/tests/src/runtimeApi/p2p/hipP2pLinkTypeAndHopFunc.cpp	2023-06-12 13:47:00.000000000 -0700
+++ HIP-rocm-5.6.0/tests/src/runtimeApi/p2p/hipP2pLinkTypeAndHopFunc.cpp	2023-08-30 15:02:32.070793767 -0700
@@ -21,7 +21,7 @@ THE SOFTWARE.
 */
 
 /* HIT_START
- * BUILD_CMD: %t %hc %S/%s -o %T/%t %S/../../test_common.cpp -I %S/../../ -L%rocm-path/rocm_smi/lib -lrocm_smi64 -lpthread -ldl EXCLUDE_HIP_PLATFORM nvidia
+ * BUILD_CMD: %t %hc %S/%s -o %T/%t %S/../../test_common.cpp -I %S/../../ -L%rocm-path/@LIBDIR@ -lrocm_smi64 -lpthread -ldl EXCLUDE_HIP_PLATFORM nvidia
  * TEST: %t --tests 0x1
  * TEST: %t --tests 0x2
  * TEST: %t --tests 0x3
@@ -282,10 +282,10 @@ bool testhipLinkTypeHopcountDevice(int n
   rsmi_status_t (*fntopo_init)(uint64_t);
   rsmi_status_t (*fntopo_shut_down)();
 
-  lib_rocm_smi_hdl = dlopen("/opt/rocm/rocm_smi/lib/librocm_smi64.so",
+  lib_rocm_smi_hdl = dlopen("@ESYSROOT_ROCM_PATH@/@LIBDIR@/librocm_smi64.so",
                         RTLD_LAZY);
   if (!lib_rocm_smi_hdl) {
-    printf("Error opening /opt/rocm/rocm_smi/lib/librocm_smi64.so\n");
+    printf("Error opening @ESYSROOT_ROCM_PATH@/@LIBDIR@/librocm_smi64.so\n");
     printf("Skipping this test\n");
     passed();
   }
