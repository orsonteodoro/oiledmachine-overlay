diff -urp HIP-rocm-5.5.1.orig/bin/hipcc.pl HIP-rocm-5.5.1/bin/hipcc.pl
--- HIP-rocm-5.5.1.orig/bin/hipcc.pl	2023-08-30 14:58:24.482788782 -0700
+++ HIP-rocm-5.5.1/bin/hipcc.pl	2023-08-30 15:00:20.114791110 -0700
@@ -39,11 +39,11 @@ use Cwd 'abs_path';
 # If HIP_PLATFORM is not set hipcc will attempt auto-detect based on if nvcc is found.
 #
 # Other environment variable controls:
-# HIP_PATH       : Path to HIP directory, default is one dir level above location of this script.
-# CUDA_PATH      : Path to CUDA SDK (default /usr/local/cuda). Used on NVIDIA platforms only.
-# HIP_ROCCLR_HOME : Path to HIP/ROCclr directory. Used on AMD platforms only.
-# HIP_CLANG_PATH : Path to HIP-Clang (default to ../../llvm/bin relative to this
-#                  script's abs_path). Used on AMD platforms only.
+# HIP_PATH       : Path to HIP directory (defaults to /usr).
+# CUDA_PATH      : Path to CUDA SDK (defaults /opt/cuda).  Used on NVIDIA platforms only.
+# HIP_ROCCLR_HOME : Path to HIP/ROCclr directory (defaults to /usr).  Used on AMD platforms only.
+# HIP_CLANG_PATH : Path to HIP-Clang (default to @EPREFIX@/lib/llvm/@LLVM_SLOT@/bin)
+#                  Used on AMD platforms only.
 
 if(scalar @ARGV == 0){
     print "No Arguments passed, exiting ...\n";
@@ -78,8 +78,8 @@ $HIPCC_LINK_FLAGS_APPEND=$ENV{'HIPCC_LIN
 # Known Features
 @knownFeatures = ('sramecc-', 'sramecc+', 'xnack-', 'xnack+');
 
-$HIP_LIB_PATH=$ENV{'HIP_LIB_PATH'};
-$DEVICE_LIB_PATH=$ENV{'DEVICE_LIB_PATH'};
+$HIP_LIB_PATH='@EPREFIX@/usr/@LIBDIR@';
+$DEVICE_LIB_PATH='@EPREFIX@/usr/@LIBDIR@/amdgcn/bitcode';
 $HIP_CLANG_HCC_COMPAT_MODE=$ENV{'HIP_CLANG_HCC_COMPAT_MODE'}; # HCC compatibility mode
 $HIP_COMPILE_CXX_AS_HIP=$ENV{'HIP_COMPILE_CXX_AS_HIP'} // "1";
 
@@ -138,12 +138,12 @@ if ($HIP_PLATFORM eq "amd") {
   }
   $HIP_INCLUDE_PATH = "$HIP_ROCCLR_HOME/include";
   if (!defined $HIP_LIB_PATH) {
-    $HIP_LIB_PATH = "$HIP_ROCCLR_HOME/lib";
+    $HIP_LIB_PATH = "$HIP_ROCCLR_HOME/@LIBDIR@";
   }
 
   if (!defined $DEVICE_LIB_PATH) {
-    if (-e "$ROCM_PATH/amdgcn/bitcode") {
-      $DEVICE_LIB_PATH = "$ROCM_PATH/amdgcn/bitcode";
+    if (-e "$ROCM_PATH/@LIBDIR@/amdgcn/bitcode") {
+      $DEVICE_LIB_PATH = "$ROCM_PATH/@LIBDIR@/amdgcn/bitcode";
     }
     else {
       # This path is to support an older build of the device library
@@ -194,7 +194,7 @@ if ($HIP_PLATFORM eq "amd") {
         $HIP_INCLUDE_PATH = "$HIP_PATH/include";
     }
     if (! defined $HIP_LIB_PATH) {
-        $HIP_LIB_PATH = "$HIP_PATH/lib";
+        $HIP_LIB_PATH = "$HIP_PATH/@LIBDIR@";
     }
     if ($verbose & 0x2) {
         print ("ROCM_PATH=$ROCM_PATH\n");
@@ -213,7 +213,7 @@ if ($HIP_PLATFORM eq "amd") {
         $HIPCXXFLAGS .= " -Xclang -fallow-half-arguments-and-returns -D__HIP_HCC_COMPAT_MODE__=1";
     }
 } elsif ($HIP_PLATFORM eq "nvidia") {
-    $CUDA_PATH=$ENV{'CUDA_PATH'} // '/usr/local/cuda';
+    $CUDA_PATH=$ENV{'CUDA_PATH'} // '/opt/cuda';
     $HIP_INCLUDE_PATH = "$HIP_PATH/include";
     if ($verbose & 0x2) {
         print ("CUDA_PATH=$CUDA_PATH\n");
@@ -224,16 +224,20 @@ if ($HIP_PLATFORM eq "amd") {
     $HIPCXXFLAGS .= " -isystem $CUDA_PATH/include";
     $HIPCFLAGS .= " -isystem $CUDA_PATH/include";
 
-    $HIPLDFLAGS = " -Wno-deprecated-gpu-targets -lcuda -lcudart -L$CUDA_PATH/lib64";
+    $HIPLDFLAGS = " -Wno-deprecated-gpu-targets -lcuda -lcudart -L$CUDA_PATH/@LIBDIR@";
 } else {
     printf ("error: unknown HIP_PLATFORM = '$HIP_PLATFORM'");
     printf ("       or HIP_COMPILER = '$HIP_COMPILER'");
     exit (-1);
 }
 
+#
+# Setting HSA_PATH to "/usr" results in setting "-isystem /usr/include"
+# which makes "stdlib.h" not found when using "#include_next" in header files;
+#
 # Add paths to common HIP includes:
-$HIPCXXFLAGS .= " -isystem \"$HIP_INCLUDE_PATH\"" ;
-$HIPCFLAGS .= " -isystem \"$HIP_INCLUDE_PATH\"" ;
+#$HIPCXXFLAGS .= " -isystem \"$HIP_INCLUDE_PATH\"" ;
+#$HIPCFLAGS .= " -isystem \"$HIP_INCLUDE_PATH\"" ;
 
 my $compileOnly = 0;
 my $needCXXFLAGS = 0;  # need to add CXX flags to compile step
@@ -586,7 +590,8 @@ if ($HIP_PLATFORM eq "amd") {
     }
 
     if ($hasHIP) {
-        if ($DEVICE_LIB_PATH ne "$ROCM_PATH/amdgcn/bitcode") {
+        if ($DEVICE_LIB_PATH ne "$ROCM_PATH/@LIBDIR@/amdgcn/bitcode" or 1) {
+            $HIPCXXFLAGS .= " --rocm-path=\"$ROCM_PATH\"" ;
             $HIPCXXFLAGS .= " --hip-device-lib-path=\"$DEVICE_LIB_PATH\"";
         }
     }
Only in HIP-rocm-5.5.1/bin: hipcc.pl.orig
diff -urp HIP-rocm-5.5.1.orig/bin/hipconfig.pl HIP-rocm-5.5.1/bin/hipconfig.pl
--- HIP-rocm-5.5.1.orig/bin/hipconfig.pl	2023-05-09 12:52:23.000000000 -0700
+++ HIP-rocm-5.5.1/bin/hipconfig.pl	2023-08-30 14:58:39.794789090 -0700
@@ -46,6 +46,7 @@ $CUDA_PATH      =   $hipvars::CUDA_PATH;
 $HIP_PATH       =   $hipvars::HIP_PATH;
 $ROCM_PATH      =   $hipvars::ROCM_PATH;
 $HIP_VERSION    =   $hipvars::HIP_VERSION;
+$CLANG_RESOURCE_DIR = $hipvars::CLANG_RESOURCE_DIR;
 
 Getopt::Long::Configure ( qw{bundling no_ignore_case});
 GetOptions(
@@ -76,7 +77,7 @@ if ($HIP_COMPILER eq "clang") {
     $CPP_CONFIG = " -D__HIP_PLATFORM_HCC__= -D__HIP_PLATFORM_AMD__=";
 
     $HIP_PATH_INCLUDE = $HIP_PATH."/include";
-    $HIP_CLANG_INCLUDE = $HIP_CLANG_PATH."/../lib/clang/".$HIP_CLANG_VERSION;
+    $HIP_CLANG_INCLUDE = $CLANG_RESOURCE_DIR."/include";
     if($isWindows) {
         $CPP_CONFIG .= " -I\"$HIP_PATH_INCLUDE\" -I\"$HIP_CLANG_INCLUDE\"";
     } else {
@@ -90,7 +91,7 @@ if ($HIP_PLATFORM eq "nvidia") {
 if ($p_help) {
     print "usage: hipconfig [OPTIONS]\n";
     print "  --path,  -p        : print HIP_PATH (use env var if set, else determine from hipconfig path)\n";
-    print "  --rocmpath,  -R    : print ROCM_PATH (use env var if set, else determine from hip path or /opt/rocm)\n";
+    print "  --rocmpath,  -R    : print ROCM_PATH (use env var if set, else determine from hip path or /usr)\n";
     print "  --cpp_config, -C   : print C++ compiler options\n";
     print "  --compiler, -c     : print compiler (clang or nvcc)\n";
     print "  --platform, -P     : print platform (amd or nvidia)\n";
diff -urp HIP-rocm-5.5.1.orig/bin/hipvars.pm HIP-rocm-5.5.1/bin/hipvars.pm
--- HIP-rocm-5.5.1.orig/bin/hipvars.pm	2023-05-09 12:52:23.000000000 -0700
+++ HIP-rocm-5.5.1/bin/hipvars.pm	2023-08-30 14:58:39.794789090 -0700
@@ -67,11 +67,11 @@ $isWindows =  ($^O eq 'MSWin32' or $^O e
 #
 # Since this hipcc script gets installed at two uneven hierarchical levels,
 # linked by symlink, the absolute path of this script should be used to
-# derive HIP_PATH, as dirname $0 could be /opt/rocm/bin or /opt/rocm/hip/bin
+# derive HIP_PATH, as dirname $0 could be /usr/bin or /usr/hip/bin
 # depending on how it gets invoked.
 # ROCM_PATH which points to <rocm_install_dir> is determined based on whether
 # we find bin/rocm_agent_enumerator in the parent of HIP_PATH or not. If it is found,
-# ROCM_PATH is defined relative to HIP_PATH else it is hardcoded to /opt/rocm.
+# ROCM_PATH is defined relative to HIP_PATH else it is hardcoded to /usr.
 #
 $HIP_PATH=$ENV{'HIP_PATH'} // dirname(Cwd::abs_path("$0/../")); # use parent directory of hipcc
 if (-e "$HIP_PATH/bin/rocm_agent_enumerator") {
@@ -79,23 +79,23 @@ if (-e "$HIP_PATH/bin/rocm_agent_enumera
 }elsif (-e "$HIP_PATH/../bin/rocm_agent_enumerator") { # case for backward compatibility
     $ROCM_PATH=$ENV{'ROCM_PATH'} // dirname("$HIP_PATH"); # use parent directory of HIP_PATH
 } else {
-    $ROCM_PATH=$ENV{'ROCM_PATH'} // "/opt/rocm";
+    $ROCM_PATH=$ENV{'ROCM_PATH'} // "/usr";
 }
-$CUDA_PATH=$ENV{'CUDA_PATH'} // '/usr/local/cuda';
+$CUDA_PATH=$ENV{'CUDA_PATH'} // '/opt/cuda';
 
 # Windows has a different structure, all binaries are inside hip/bin
 if ($isWindows) {
     $HIP_CLANG_PATH=$ENV{'HIP_CLANG_PATH'} // "$HIP_PATH/bin";
 } else {
-    $HIP_CLANG_PATH=$ENV{'HIP_CLANG_PATH'} // "$ROCM_PATH/llvm/bin";
+    $HIP_CLANG_PATH=$ENV{'HIP_CLANG_PATH'} // "$ROCM_PATH/lib/llvm/@LLVM_SLOT@/bin";
 }
 # HIP_ROCCLR_HOME is used by Windows builds
 $HIP_ROCCLR_HOME=$ENV{'HIP_ROCCLR_HOME'};
 
 if (defined $HIP_ROCCLR_HOME) {
-    $HIP_INFO_PATH= "$HIP_ROCCLR_HOME/lib/.hipInfo";
+    $HIP_INFO_PATH= "$HIP_ROCCLR_HOME/@LIBDIR@/.hipInfo";
 } else {
-    $HIP_INFO_PATH= "$HIP_PATH/lib/.hipInfo"; # use actual file
+    $HIP_INFO_PATH= "$HIP_PATH/@LIBDIR@/.hipInfo"; # use actual file
 }
 #---
 #HIP_PLATFORM controls whether to use nvidia or amd platform:
diff -urp HIP-rocm-5.5.1.orig/cmake/FindHIP.cmake HIP-rocm-5.5.1/cmake/FindHIP.cmake
--- HIP-rocm-5.5.1.orig/cmake/FindHIP.cmake	2023-05-09 12:52:23.000000000 -0700
+++ HIP-rocm-5.5.1/cmake/FindHIP.cmake	2023-08-30 14:58:39.794789090 -0700
@@ -255,27 +255,29 @@ elseif("${HIP_COMPILER}" STREQUAL "clang
     if("x${HIP_CLANG_PATH}" STREQUAL "x")
       # IF HIP_CLANG_INSTALL_DIR is Found
       if( HIP_CLANG_INSTALL_DIR )
-        set(HIP_CLANG_PATH ${HIP_CLANG_INSTALL_DIR})
+        set(HIP_CLANG_PATH "${HIP_CLANG_INSTALL_DIR}/bin")
       else() # IF HIP_CLANG_INSTALL_DIR is not found
         if(DEFINED ENV{HIP_CLANG_PATH})
             set(HIP_CLANG_PATH $ENV{HIP_CLANG_PATH})
         elseif(DEFINED ENV{ROCM_PATH})
-            set(HIP_CLANG_PATH "$ENV{ROCM_PATH}/llvm/bin")
+            set(HIP_CLANG_PATH "$ENV{ROCM_PATH}/lib/llvm/@LLVM_SLOT@/bin")
         elseif(DEFINED ENV{HIP_PATH})
-            if(EXISTS "$ENV{HIP_PATH}/llvm/bin") #File Reorg backward compatibility
-                set(HIP_CLANG_PATH "$ENV{HIP_PATH}/llvm/bin")
+            if(EXISTS "$ENV{HIP_PATH}/lib/llvm/@LLVM_SLOT@/bin") #File Reorg backward compatibility
+                set(HIP_CLANG_PATH "$ENV{HIP_PATH}/lib/llvm/@LLVM_SLOT@/bin")
             else()
-                set(HIP_CLANG_PATH "$ENV{HIP_PATH}/../llvm/bin")
+                set(HIP_CLANG_PATH "$ENV{HIP_PATH}/../lib/llvm/@LLVM_SLOT@/bin")
             endif()
         elseif(DEFINED HIP_PATH)
-            if(EXISTS "${HIP_PATH}/llvm/bin") #File Reorg backward compatibility
-                set(HIP_CLANG_PATH "${HIP_PATH}/llvm/bin")
+            if(EXISTS "${HIP_PATH}/lib/llvm/@LLVM_SLOT@/bin") #File Reorg backward compatibility
+                set(HIP_CLANG_PATH "${HIP_PATH}/lib/llvm/@LLVM_SLOT@/bin")
             else()
-                set(HIP_CLANG_PATH "${HIP_PATH}/../llvm/bin")
+                set(HIP_CLANG_PATH "${HIP_PATH}/../lib/llvm/@LLVM_SLOT@/bin")
             endif()
         # Handle the case where ROCM_PATH is defined and not set in ENV
         elseif(DEFINED ROCM_PATH)
-            set(HIP_CLANG_PATH "${ROCM_PATH}/llvm/bin")
+            set(HIP_CLANG_PATH "${ROCM_PATH}/lib/llvm/@LLVM_SLOT@/bin")
+        elseif(EXISTS "${ROCM_PATH}/lib/llvm/@LLVM_SLOT@/bin")
+            set(HIP_CLANG_PATH "${ROCM_PATH}/lib/llvm/@LLVM_SLOT@/bin")
         else()
             message(FATAL_ERROR "Unable to find the clang compiler path. Set ROCM_PATH or HIP_PATH in env ")
         endif()
@@ -696,22 +698,24 @@ macro(HIP_ADD_EXECUTABLE hip_target)
             if(DEFINED ENV{HIP_CLANG_PATH})
                 set(HIP_CLANG_PATH $ENV{HIP_CLANG_PATH})
             elseif(DEFINED ENV{ROCM_PATH})
-                set(HIP_CLANG_PATH "$ENV{ROCM_PATH}/llvm/bin")
+                set(HIP_CLANG_PATH "$ENV{ROCM_PATH}/lib/llvm/@LLVM_SLOT@/bin")
             elseif(DEFINED ENV{HIP_PATH})
-                if(EXISTS "$ENV{HIP_PATH}/llvm/bin") #file reorg backward compatibility
-                    set(HIP_CLANG_PATH "$ENV{HIP_PATH}/llvm/bin")
+                if(EXISTS "$ENV{HIP_PATH}/lib/llvm/@LLVM_SLOT@/bin") #file reorg backward compatibility
+                    set(HIP_CLANG_PATH "$ENV{HIP_PATH}/lib/llvm/@LLVM_SLOT@/bin")
                 else()
-                    set(HIP_CLANG_PATH "$ENV{HIP_PATH}/../llvm/bin")
+                    set(HIP_CLANG_PATH "$ENV{HIP_PATH}/../lib/llvm/@LLVM_SLOT@/bin")
                 endif()
             elseif(DEFINED HIP_PATH)
-                if(EXISTS "${HIP_PATH}/llvm/bin") #file reorg backward compatibility
-                    set(HIP_CLANG_PATH "${HIP_PATH}/llvm/bin")
+                if(EXISTS "${HIP_PATH}/lib/llvm/@LLVM_SLOT@/bin") #file reorg backward compatibility
+                    set(HIP_CLANG_PATH "${HIP_PATH}/lib/llvm/@LLVM_SLOT@/bin")
                 else()
-                    set(HIP_CLANG_PATH "${HIP_PATH}/../llvm/bin")
+                    set(HIP_CLANG_PATH "${HIP_PATH}/../lib/llvm/@LLVM_SLOT@/bin")
                 endif()
             # Handle  the case where ROCM_PATH is defined and not set in ENV
             elseif(DEFINED ROCM_PATH)
-                set(HIP_CLANG_PATH "${ROCM_PATH}/llvm/bin")
+                set(HIP_CLANG_PATH "${ROCM_PATH}/lib/llvm/@LLVM_SLOT@/bin")
+            elseif(EXISTS "${ROCM_PATH}/lib/llvm/@LLVM_SLOT@/bin")
+                set(HIP_CLANG_PATH "${ROCM_PATH}/lib/llvm/@LLVM_SLOT@/bin")
             else()
                 message(FATAL_ERROR "Unable to find the clang compiler path. Set ROCM_PATH or HIP_PATH in env")
             endif()
diff -urp HIP-rocm-5.5.1.orig/CONTRIBUTING.md HIP-rocm-5.5.1/CONTRIBUTING.md
--- HIP-rocm-5.5.1.orig/CONTRIBUTING.md	2023-05-09 12:52:23.000000000 -0700
+++ HIP-rocm-5.5.1/CONTRIBUTING.md	2023-08-30 14:58:39.794789090 -0700
@@ -1,7 +1,7 @@
 # Contributor Guidelines
 
 ## Make Tips
-ROCM_PATH is path where ROCM is installed. BY default ROCM_PATH is /opt/rocm.
+ROCM_PATH is path where ROCM is installed. BY default ROCM_PATH is /usr.
 When building HIP, you will likely want to build and install to a local user-accessible directory (rather than <ROCM_PATH>).
 This can be easily be done by setting the -DCMAKE_INSTALL_PREFIX variable when running cmake.  Typical use case is to
 set CMAKE_INSTALL_PREFIX to your HIP git root, and then ensure HIP_PATH points to this directory.   For example
@@ -42,11 +42,11 @@ HIP_VERSION_PATCH=20345-519ef3f2
 HIP-Clang compiler version
 
 ```
-$ <ROCM_PATH>/llvm/bin/clang -v
+$ <ROCM_PATH>/lib/llvm/@LLVM_SLOT@/bin/clang -v
 clang version 11.0.0 (/src/external/llvm-project/clang 075fedd3fd2f4d9d8cca79d0cd51f64c5ef21432)
 Target: x86_64-unknown-linux-gnu
 Thread model: posix
-InstalledDir: <ROCM_PATH>/llvm/bin
+InstalledDir: <ROCM_PATH>/lib/llvm/@LLVM_SLOT@/bin
 Found candidate GCC installation: /usr/lib/gcc/x86_64-linux-gnu/7
 Found candidate GCC installation: /usr/lib/gcc/x86_64-linux-gnu/7.5.0
 Found candidate GCC installation: /usr/lib/gcc/x86_64-linux-gnu/8
diff -urp HIP-rocm-5.5.1.orig/docs/markdown/gen_clang_option_doc.sh HIP-rocm-5.5.1/docs/markdown/gen_clang_option_doc.sh
--- HIP-rocm-5.5.1.orig/docs/markdown/gen_clang_option_doc.sh	2023-05-09 12:52:23.000000000 -0700
+++ HIP-rocm-5.5.1/docs/markdown/gen_clang_option_doc.sh	2023-08-30 14:58:39.794789090 -0700
@@ -21,7 +21,7 @@
 
 ## generates documentation about clang options.
 
-clang=/opt/rocm*/llvm/bin/clang
+clang=/usr/lib/llvm/@LLVM_SLOT@/bin/clang
 
 exec > clang_options.md
 
diff -urp HIP-rocm-5.5.1.orig/docs/markdown/hip_build.md HIP-rocm-5.5.1/docs/markdown/hip_build.md
--- HIP-rocm-5.5.1.orig/docs/markdown/hip_build.md	2023-05-09 12:52:23.000000000 -0700
+++ HIP-rocm-5.5.1/docs/markdown/hip_build.md	2023-08-30 14:59:25.522790011 -0700
@@ -50,7 +50,7 @@ export ROCM_BRANCH=rocm-5.4.x
 ```
 Similiar format for future branches.
 
-ROCM_PATH is path where ROCM is installed. BY default ROCM_PATH is at /opt/rocm.
+ROCM_PATH is path where ROCM is installed. BY default ROCM_PATH is at /usr.
 
 
 # Build HIP on AMD platform
@@ -93,10 +93,10 @@ By default, release version of AMDHIP is
 
 ## Default paths and environment variables
 
-   * By default HIP looks for HSA in <ROCM_PATH>/hsa (can be overridden by setting HSA_PATH environment variable).
-   * By default HIP is installed into <ROCM_PATH>/hip (can be overridden by setting HIP_PATH environment variable).
-   * By default HIP looks for clang in <ROCM_PATH>/llvm/bin (can be overridden by setting HIP_CLANG_PATH environment variable)
-   * By default HIP looks for device library in <ROCM_PATH>/lib (can be overridden by setting DEVICE_LIB_PATH environment variable).
+   * By default HIP looks for HSA in <ROCM_PATH> (can be overridden by setting HSA_PATH environment variable).
+   * By default HIP is installed into <ROCM_PATH>r (can be overridden by setting HIP_PATH environment variable).
+   * By default HIP looks for clang in <ROCM_PATH>/lib/llvm/@LLVM_SLOT@/bin (can be overridden by setting HIP_CLANG_PATH environment variable)
+   * By default HIP looks for device library in <ROCM_PATH>/@LIBDIR@/amdgcn/bitcode (can be overridden by setting DEVICE_LIB_PATH environment variable).
    * Optionally, consider adding <ROCM_PATH>/bin to your PATH to make it easier to use the tools.
    * Optionally, set HIPCC_VERBOSE=7 to output the command line for compilation.
 
@@ -150,7 +150,7 @@ git clone -b "$ROCM_BRANCH" https://gith
 export HIP_TESTS_DIR="$(readlink -f hip-tests)"
 cd "$HIP_TESTS_DIR"
 mkdir -p build; cd build
-export HIP_PATH=$HIPAMD_DIR/build/install (or any path where HIP is installed, for example, /opt/rocm)
+export HIP_PATH=$HIPAMD_DIR/build/install (or any path where HIP is installed, for example, /usr)
 cmake ../catch/ -DHIP_PLATFORM=amd
 make -j$(nproc) build_tests
 ctest # run tests
diff -urp HIP-rocm-5.5.1.orig/docs/markdown/hip_debugging.md HIP-rocm-5.5.1/docs/markdown/hip_debugging.md
--- HIP-rocm-5.5.1.orig/docs/markdown/hip_debugging.md	2023-05-09 12:52:23.000000000 -0700
+++ HIP-rocm-5.5.1/docs/markdown/hip_debugging.md	2023-08-30 14:58:39.794789090 -0700
@@ -96,10 +96,10 @@ HIP developers on ROCm can use AMD's ROC
 ROCgdb is the ROCm source-level debugger for Linux, based on GDB, the GNU source-level debugger, equivalent of cuda-gdb, can be used with debugger frontends, such as eclipse, vscode, or gdb-dashboard.
 For details, see (https://github.com/ROCm-Developer-Tools/ROCgdb).
 
-Below is a sample how to use ROCgdb run and debug HIP application, rocgdb is installed with ROCM package in the folder /opt/rocm/bin.
+Below is a sample how to use ROCgdb run and debug HIP application, rocgdb is installed with ROCM package in the folder /usr/bin.
 
 ```
-$ export PATH=$PATH:/opt/rocm/bin
+$ export PATH=$PATH:/usr/bin
 $ rocgdb ./hipTexObjPitch
 GNU gdb (rocm-dkms-no-npi-hipclang-6549) 10.1
 Copyright (C) 2020 Free Software Foundation, Inc.
@@ -117,7 +117,7 @@ Breakpoint 1 at 0x4013d1: file /home/tes
 (gdb) run
 Starting program: /home/test/hip/build/directed_tests/texture/hipTexObjPitch 
 [Thread debugging using libthread_db enabled]
-Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
+Using host libthread_db library "/@LIBDIR@/libthread_db.so.1".
 
 Breakpoint 1, main ()
     at /home/test/hip/tests/src/texture/hipTexObjPitch.cpp:98
@@ -140,7 +140,7 @@ Segmentation fault (core dumped)
 (gdb) run
 Starting program: /home/test/hipamd/build/directed_tests/runtimeApi/memory/hipMemcpy_simple
 [Thread debugging using libthread_db enabled]
-Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
+Using host libthread_db library "/@LIBDIR@/libthread_db.so.1".
 
 Breakpoint 1, main (argc=1, argv=0x7fffffffdea8)
     at /home/test/hip/tests/src/runtimeApi/memory/hipMemcpy_simple.cpp:147
@@ -163,20 +163,20 @@ Thread 1 "hipMemcpy_simpl" received sign
 * 1    Thread 0x7ffff64c5880 (LWP 146060) "hipMemcpy_simpl" 0x000000000020f78e in simpleTest2<float> (numElements=4194304, usePinnedHost=true)
     at /home/test/hip/tests/src/runtimeApi/memory/hipMemcpy_simple.cpp:104
   2    Thread 0x7ffff64c4700 (LWP 146066) "hipMemcpy_simpl" 0x00007ffff6b0850b in ioctl
-    () from /lib/x86_64-linux-gnu/libc.so.6
+    () from /@LIBDIR@/libc.so.6
 (gdb) thread 2
 [Switching to thread 2 (Thread 0x7ffff64c4700 (LWP 146066))]
-#0  0x00007ffff6b0850b in ioctl () from /lib/x86_64-linux-gnu/libc.so.6
+#0  0x00007ffff6b0850b in ioctl () from /@LIBDIR@/libc.so.6
 (gdb) bt
-#0  0x00007ffff6b0850b in ioctl () from /lib/x86_64-linux-gnu/libc.so.6
-#1  0x00007ffff6604568 in ?? () from /opt/rocm/lib/libhsa-runtime64.so.1
-#2  0x00007ffff65fe73a in ?? () from /opt/rocm/lib/libhsa-runtime64.so.1
-#3  0x00007ffff659e4d6 in ?? () from /opt/rocm/lib/libhsa-runtime64.so.1
-#4  0x00007ffff65807de in ?? () from /opt/rocm/lib/libhsa-runtime64.so.1
-#5  0x00007ffff65932a2 in ?? () from /opt/rocm/lib/libhsa-runtime64.so.1
-#6  0x00007ffff654f547 in ?? () from /opt/rocm/lib/libhsa-runtime64.so.1
-#7  0x00007ffff7f76609 in start_thread () from /lib/x86_64-linux-gnu/libpthread.so.0
-#8  0x00007ffff6b13293 in clone () from /lib/x86_64-linux-gnu/libc.so.6
+#0  0x00007ffff6b0850b in ioctl () from /@LIBDIR@/libc.so.6
+#1  0x00007ffff6604568 in ?? () from /usr/@LIBDIR@/libhsa-runtime64.so.1
+#2  0x00007ffff65fe73a in ?? () from /usr/@LIBDIR@/libhsa-runtime64.so.1
+#3  0x00007ffff659e4d6 in ?? () from /usr/@LIBDIR@/libhsa-runtime64.so.1
+#4  0x00007ffff65807de in ?? () from /usr/@LIBDIR@/libhsa-runtime64.so.1
+#5  0x00007ffff65932a2 in ?? () from /usr/@LIBDIR@/libhsa-runtime64.so.1
+#6  0x00007ffff654f547 in ?? () from /usr/@LIBDIR@/libhsa-runtime64.so.1
+#7  0x00007ffff7f76609 in start_thread () from /@LIBDIR@/libpthread.so.0
+#8  0x00007ffff6b13293 in clone () from /@LIBDIR@/libc.so.6
 (gdb) thread 1
 [Switching to thread 1 (Thread 0x7ffff64c5880 (LWP 146060))]
 #0  0x000000000020f78e in simpleTest2<float> (numElements=4194304, usePinnedHost=true)
diff -urp HIP-rocm-5.5.1.orig/docs/markdown/hip_programming_guide.md HIP-rocm-5.5.1/docs/markdown/hip_programming_guide.md
--- HIP-rocm-5.5.1.orig/docs/markdown/hip_programming_guide.md	2023-05-09 12:52:23.000000000 -0700
+++ HIP-rocm-5.5.1/docs/markdown/hip_programming_guide.md	2023-08-30 14:58:39.794789090 -0700
@@ -179,7 +179,7 @@ Here is an example to create and use sta
 - Type 1 using --emit-static-lib:
     ```
     hipcc hipOptLibrary.cpp --emit-static-lib -fPIC -o libHipOptLibrary.a
-    gcc test.cpp -L. -lhipOptLibrary -L/path/to/hip/lib -lamdhip64 -o test.out
+    gcc test.cpp -L. -lhipOptLibrary -L/@LIBDIR@ -lamdhip64 -o test.out
     ```
 - Type 2 using system ar:
     ```
diff -urp HIP-rocm-5.5.1.orig/hip-lang-config.cmake.in HIP-rocm-5.5.1/hip-lang-config.cmake.in
--- HIP-rocm-5.5.1.orig/hip-lang-config.cmake.in	2023-05-09 12:52:23.000000000 -0700
+++ HIP-rocm-5.5.1/hip-lang-config.cmake.in	2023-08-30 14:58:39.794789090 -0700
@@ -66,7 +66,7 @@ find_dependency(amd_comgr)
 include( "${CMAKE_CURRENT_LIST_DIR}/hip-lang-targets.cmake" )
 
 # Find the hip-lang config file path with symlinks resolved
-# RealPath: /opt/rocm-ver/lib/cmake/hip-lang/hip-lang-config.cmake
+# RealPath: /usr/@LIBDIR@/cmake/hip-lang/hip-lang-config.cmake
 # Go 4 level up to get IMPORT PREFIX
 get_filename_component(_DIR "${CMAKE_CURRENT_LIST_FILE}" REALPATH)
 get_filename_component(_IMPORT_PREFIX "${_DIR}/../../../../" ABSOLUTE)
@@ -90,10 +90,11 @@ set_property(TARGET hip-lang::device APP
   INTERFACE_COMPILE_OPTIONS "$<$<COMPILE_LANGUAGE:HIP>:SHELL:-mllvm;-amdgpu-early-inline-all=true;-mllvm;-amdgpu-function-calls=false>"
 )
 
-if (NOT EXISTS "${AMD_DEVICE_LIBS_PREFIX}/amdgcn/bitcode")
-  set_property(TARGET hip-lang::device APPEND PROPERTY
-    INTERFACE_COMPILE_OPTIONS "$<$<COMPILE_LANGUAGE:HIP>:--hip-device-lib-path=${AMD_DEVICE_LIBS_PREFIX}/lib>"
-  )
+# Older location
+#if (NOT EXISTS "${AMD_DEVICE_LIBS_PREFIX}/amdgcn/bitcode")
+#  set_property(TARGET hip-lang::device APPEND PROPERTY
+#    INTERFACE_COMPILE_OPTIONS "$<$<COMPILE_LANGUAGE:HIP>:--hip-device-lib-path=${AMD_DEVICE_LIBS_PREFIX}/lib>"
+#  )
 endif()
 
 set_property(TARGET hip-lang::device APPEND PROPERTY
diff -urp HIP-rocm-5.5.1.orig/INSTALL.md HIP-rocm-5.5.1/INSTALL.md
--- HIP-rocm-5.5.1.orig/INSTALL.md	2023-05-09 12:52:23.000000000 -0700
+++ HIP-rocm-5.5.1/INSTALL.md	2023-08-30 14:58:39.794789090 -0700
@@ -25,7 +25,7 @@ On NVIDIA platform, check system require
 
 HIP is part of ROCM packages, it will be automatically installed following the ROCm Installation Guide on AMD public documentation site (https://docs.amd.com/) for the coresponding ROCm release.
 
-By default, HIP is installed into /opt/rocm/hip.
+By default, HIP is installed into /usr/hip.
 
 
 ## NVIDIA Platform
@@ -45,16 +45,16 @@ The driver will be installed automatical
 apt-get install hip-runtime-nvidia hip-dev
 ```
 * Default paths:
-   * By default HIP looks for CUDA SDK in /usr/local/cuda.
-   * By default HIP is installed into /opt/rocm/hip.
-   * Optionally, consider adding /opt/rocm/bin to your path to make it easier to use the tools.
+   * By default HIP looks for CUDA SDK in /opt/cuda.
+   * By default HIP is installed into /usr.
+   * Optionally, consider adding /usr/bin to your path to make it easier to use the tools.
 
 
 # Verify your installation
 
 Run hipconfig (instructions below assume default installation path) :
 ```shell
-/opt/rocm/bin/hipconfig --full
+/usr/bin/hipconfig --full
 ```
 
 # How to build HIP from source
diff -urp HIP-rocm-5.5.1.orig/samples/0_Intro/bit_extract/CMakeLists.txt HIP-rocm-5.5.1/samples/0_Intro/bit_extract/CMakeLists.txt
--- HIP-rocm-5.5.1.orig/samples/0_Intro/bit_extract/CMakeLists.txt	2023-05-09 12:52:23.000000000 -0700
+++ HIP-rocm-5.5.1/samples/0_Intro/bit_extract/CMakeLists.txt	2023-08-30 14:58:39.794789090 -0700
@@ -27,7 +27,7 @@ if(NOT WIN32 AND NOT DEFINED __HIP_ENABL
 endif()
 
 if (NOT DEFINED ROCM_PATH )
-     set ( ROCM_PATH "/opt/rocm"  CACHE STRING "Default ROCM installation directory." )
+     set ( ROCM_PATH "/usr"  CACHE STRING "Default ROCM installation directory." )
 endif ()
 
 if(${__HIP_ENABLE_PCH})
diff -urp HIP-rocm-5.5.1.orig/samples/0_Intro/bit_extract/Makefile HIP-rocm-5.5.1/samples/0_Intro/bit_extract/Makefile
--- HIP-rocm-5.5.1.orig/samples/0_Intro/bit_extract/Makefile	2023-05-09 12:52:23.000000000 -0700
+++ HIP-rocm-5.5.1/samples/0_Intro/bit_extract/Makefile	2023-08-30 14:58:39.794789090 -0700
@@ -22,7 +22,7 @@
 ifeq ($(OS),Windows_NT)
  $(error Makefile is not supported on windows platform. Please use cmake instead to build sample.)
 endif
-ROCM_PATH?= $(wildcard /opt/rocm/)
+ROCM_PATH?= $(wildcard /usr/)
 HIP_PATH?= $(wildcard $(ROCM_PATH)/hip)
 ifeq (,$(HIP_PATH))
 	HIP_PATH=../../..
diff -urp HIP-rocm-5.5.1.orig/samples/0_Intro/module_api/CMakeLists.txt HIP-rocm-5.5.1/samples/0_Intro/module_api/CMakeLists.txt
--- HIP-rocm-5.5.1.orig/samples/0_Intro/module_api/CMakeLists.txt	2023-05-09 12:52:23.000000000 -0700
+++ HIP-rocm-5.5.1/samples/0_Intro/module_api/CMakeLists.txt	2023-08-30 14:58:39.794789090 -0700
@@ -23,7 +23,7 @@ project(module_api)
 cmake_minimum_required(VERSION 3.10)
 
 if (NOT DEFINED ROCM_PATH )
-     set ( ROCM_PATH "/opt/rocm"  CACHE STRING "Default ROCM installation directory." )
+     set ( ROCM_PATH "/usr"  CACHE STRING "Default ROCM installation directory." )
 endif ()
 
 # Search for rocm in common locations
diff -urp HIP-rocm-5.5.1.orig/samples/0_Intro/module_api/Makefile HIP-rocm-5.5.1/samples/0_Intro/module_api/Makefile
--- HIP-rocm-5.5.1.orig/samples/0_Intro/module_api/Makefile	2023-05-09 12:52:23.000000000 -0700
+++ HIP-rocm-5.5.1/samples/0_Intro/module_api/Makefile	2023-08-30 14:58:39.794789090 -0700
@@ -20,7 +20,7 @@
 ifeq ($(OS),Windows_NT)
  $(error Makefile is not supported on windows platform. Please use cmake instead to build sample.)
 endif
-ROCM_PATH?= $(wildcard /opt/rocm/)
+ROCM_PATH?= $(wildcard /usr/)
 HIP_PATH?= $(wildcard $(ROCM_PATH)/hip)
 ifeq (,$(HIP_PATH))
 	HIP_PATH=../../..
diff -urp HIP-rocm-5.5.1.orig/samples/0_Intro/module_api_global/CMakeLists.txt HIP-rocm-5.5.1/samples/0_Intro/module_api_global/CMakeLists.txt
--- HIP-rocm-5.5.1.orig/samples/0_Intro/module_api_global/CMakeLists.txt	2023-05-09 12:52:23.000000000 -0700
+++ HIP-rocm-5.5.1/samples/0_Intro/module_api_global/CMakeLists.txt	2023-08-30 14:58:39.794789090 -0700
@@ -23,7 +23,7 @@ project(modile_api_global)
 cmake_minimum_required(VERSION 3.10)
 
 if (NOT DEFINED ROCM_PATH )
-     set ( ROCM_PATH "/opt/rocm"  CACHE STRING "Default ROCM installation directory." )
+     set ( ROCM_PATH "/usr"  CACHE STRING "Default ROCM installation directory." )
 endif ()
 
 # Search for rocm in common locations
@@ -51,4 +51,4 @@ add_custom_target(
 add_dependencies(runKernel.hip.out codeobj)
 
 # Link with HIP
-target_link_libraries(runKernel.hip.out hip::host)
\ No newline at end of file
+target_link_libraries(runKernel.hip.out hip::host)
diff -urp HIP-rocm-5.5.1.orig/samples/0_Intro/module_api_global/Makefile HIP-rocm-5.5.1/samples/0_Intro/module_api_global/Makefile
--- HIP-rocm-5.5.1.orig/samples/0_Intro/module_api_global/Makefile	2023-05-09 12:52:23.000000000 -0700
+++ HIP-rocm-5.5.1/samples/0_Intro/module_api_global/Makefile	2023-08-30 14:58:39.794789090 -0700
@@ -20,7 +20,7 @@
 ifeq ($(OS),Windows_NT)
  $(error Makefile is not supported on windows platform. Please use cmake instead to build sample.)
 endif
-ROCM_PATH?= $(wildcard /opt/rocm/)
+ROCM_PATH?= $(wildcard /usr/)
 HIP_PATH?= $(wildcard $(ROCM_PATH)/hip)
 ifeq (,$(HIP_PATH))
 	HIP_PATH=../../..
diff -urp HIP-rocm-5.5.1.orig/samples/0_Intro/square/CMakeLists.txt HIP-rocm-5.5.1/samples/0_Intro/square/CMakeLists.txt
--- HIP-rocm-5.5.1.orig/samples/0_Intro/square/CMakeLists.txt	2023-05-09 12:52:23.000000000 -0700
+++ HIP-rocm-5.5.1/samples/0_Intro/square/CMakeLists.txt	2023-08-30 14:58:39.794789090 -0700
@@ -25,7 +25,7 @@ project(square)
 cmake_minimum_required(VERSION 3.10)
 
 if (NOT DEFINED ROCM_PATH )
-     set ( ROCM_PATH "/opt/rocm"  CACHE STRING "Default ROCM installation directory." )
+     set ( ROCM_PATH "/usr"  CACHE STRING "Default ROCM installation directory." )
 endif ()
 
 # Search for rocm in common locations
@@ -45,4 +45,4 @@ set(CMAKE_CXX_LINKER   ${HIP_HIPCC_EXECU
 add_executable(square square.cpp)
 
 # Link with HIP
-target_link_libraries(square hip::host)
\ No newline at end of file
+target_link_libraries(square hip::host)
diff -urp HIP-rocm-5.5.1.orig/samples/0_Intro/square/Makefile HIP-rocm-5.5.1/samples/0_Intro/square/Makefile
--- HIP-rocm-5.5.1.orig/samples/0_Intro/square/Makefile	2023-05-09 12:52:23.000000000 -0700
+++ HIP-rocm-5.5.1/samples/0_Intro/square/Makefile	2023-08-30 14:58:39.794789090 -0700
@@ -20,7 +20,7 @@
 ifeq ($(OS),Windows_NT)
  $(error Makefile is not supported on windows platform. Please use cmake instead to build sample.)
 endif
-ROCM_PATH?= $(wildcard /opt/rocm/)
+ROCM_PATH?= $(wildcard /usr/)
 HIP_PATH?= $(wildcard $(ROCM_PATH)/hip)
 ifeq (,$(HIP_PATH))
 	HIP_PATH=../../..
diff -urp HIP-rocm-5.5.1.orig/samples/0_Intro/square/README.md HIP-rocm-5.5.1/samples/0_Intro/square/README.md
--- HIP-rocm-5.5.1.orig/samples/0_Intro/square/README.md	2023-05-09 12:52:23.000000000 -0700
+++ HIP-rocm-5.5.1/samples/0_Intro/square/README.md	2023-08-30 14:58:39.794789090 -0700
@@ -19,9 +19,9 @@ $ export HIP_PATH=[MYHIP]
 ```
 $ cd ~/hip/samples/0_Intro/square
 $ make
-/opt/rocm/hip/bin/hipify-perl square.cu > square.cpp
-/opt/rocm/hip/bin/hipcc  square.cpp -o square.out
-/opt/rocm/hip/bin/hipcc  square.cpp -o square.out
+/usr/hip/bin/hipify-perl square.cu > square.cpp
+/usr/hip/bin/hipcc  square.cpp -o square.out
+/usr/hip/bin/hipcc  square.cpp -o square.out
 ```
 - Execute file
 ```
diff -urp HIP-rocm-5.5.1.orig/samples/1_Utils/hipBusBandwidth/CMakeLists.txt HIP-rocm-5.5.1/samples/1_Utils/hipBusBandwidth/CMakeLists.txt
--- HIP-rocm-5.5.1.orig/samples/1_Utils/hipBusBandwidth/CMakeLists.txt	2023-05-09 12:52:23.000000000 -0700
+++ HIP-rocm-5.5.1/samples/1_Utils/hipBusBandwidth/CMakeLists.txt	2023-08-30 14:58:39.794789090 -0700
@@ -23,7 +23,7 @@ project(hipBusBandwidth)
 cmake_minimum_required(VERSION 3.10)
 
 if (NOT DEFINED ROCM_PATH )
-     set ( ROCM_PATH "/opt/rocm"  CACHE STRING "Default ROCM installation directory." )
+     set ( ROCM_PATH "/usr"  CACHE STRING "Default ROCM installation directory." )
 endif ()
 
 # Search for rocm in common locations
@@ -41,4 +41,4 @@ set(CMAKE_BUILD_TYPE Release)
 add_executable(hipBusBandwidth hipBusBandwidth.cpp ResultDatabase.cpp)
 
 # Link with HIP
-target_link_libraries(hipBusBandwidth hip::host)
\ No newline at end of file
+target_link_libraries(hipBusBandwidth hip::host)
diff -urp HIP-rocm-5.5.1.orig/samples/1_Utils/hipBusBandwidth/Makefile HIP-rocm-5.5.1/samples/1_Utils/hipBusBandwidth/Makefile
--- HIP-rocm-5.5.1.orig/samples/1_Utils/hipBusBandwidth/Makefile	2023-05-09 12:52:23.000000000 -0700
+++ HIP-rocm-5.5.1/samples/1_Utils/hipBusBandwidth/Makefile	2023-08-30 14:58:39.794789090 -0700
@@ -20,7 +20,7 @@
 ifeq ($(OS),Windows_NT)
  $(error Makefile is not supported on windows platform. Please use cmake instead to build sample.)
 endif
-ROCM_PATH?= $(wildcard /opt/rocm/)
+ROCM_PATH?= $(wildcard /usr/)
 HIP_PATH?= $(wildcard $(ROCM_PATH)/hip)
 ifeq (,$(HIP_PATH))
 	HIP_PATH=../../..
diff -urp HIP-rocm-5.5.1.orig/samples/1_Utils/hipCommander/CMakeLists.txt HIP-rocm-5.5.1/samples/1_Utils/hipCommander/CMakeLists.txt
--- HIP-rocm-5.5.1.orig/samples/1_Utils/hipCommander/CMakeLists.txt	2023-05-09 12:52:23.000000000 -0700
+++ HIP-rocm-5.5.1/samples/1_Utils/hipCommander/CMakeLists.txt	2023-08-30 14:58:39.794789090 -0700
@@ -23,7 +23,7 @@ project(hipCommander)
 cmake_minimum_required(VERSION 3.10)
 
 if (NOT DEFINED ROCM_PATH )
-     set ( ROCM_PATH "/opt/rocm"  CACHE STRING "Default ROCM installation directory." )
+     set ( ROCM_PATH "/usr"  CACHE STRING "Default ROCM installation directory." )
 endif ()
 
 # Search for rocm in common locations
diff -urp HIP-rocm-5.5.1.orig/samples/1_Utils/hipCommander/Makefile HIP-rocm-5.5.1/samples/1_Utils/hipCommander/Makefile
--- HIP-rocm-5.5.1.orig/samples/1_Utils/hipCommander/Makefile	2023-05-09 12:52:23.000000000 -0700
+++ HIP-rocm-5.5.1/samples/1_Utils/hipCommander/Makefile	2023-08-30 14:58:39.794789090 -0700
@@ -20,7 +20,7 @@
 ifeq ($(OS),Windows_NT)
  $(error Makefile is not supported on windows platform. Please use cmake instead to build sample.)
 endif
-ROCM_PATH?= $(wildcard /opt/rocm/)
+ROCM_PATH?= $(wildcard /usr/)
 HIP_PATH?= $(wildcard $(ROCM_PATH)/hip)
 ifeq (,$(HIP_PATH))
 	HIP_PATH=../../..
diff -urp HIP-rocm-5.5.1.orig/samples/1_Utils/hipDispatchLatency/CMakeLists.txt HIP-rocm-5.5.1/samples/1_Utils/hipDispatchLatency/CMakeLists.txt
--- HIP-rocm-5.5.1.orig/samples/1_Utils/hipDispatchLatency/CMakeLists.txt	2023-05-09 12:52:23.000000000 -0700
+++ HIP-rocm-5.5.1/samples/1_Utils/hipDispatchLatency/CMakeLists.txt	2023-08-30 14:58:39.794789090 -0700
@@ -23,7 +23,7 @@ project(hipDispatchLatency)
 cmake_minimum_required(VERSION 3.10)
 
 if (NOT DEFINED ROCM_PATH )
-     set ( ROCM_PATH "/opt/rocm"  CACHE STRING "Default ROCM installation directory." )
+     set ( ROCM_PATH "/usr"  CACHE STRING "Default ROCM installation directory." )
 endif ()
 
 # Search for rocm in common locations
diff -urp HIP-rocm-5.5.1.orig/samples/1_Utils/hipDispatchLatency/Makefile HIP-rocm-5.5.1/samples/1_Utils/hipDispatchLatency/Makefile
--- HIP-rocm-5.5.1.orig/samples/1_Utils/hipDispatchLatency/Makefile	2023-05-09 12:52:23.000000000 -0700
+++ HIP-rocm-5.5.1/samples/1_Utils/hipDispatchLatency/Makefile	2023-08-30 14:58:39.794789090 -0700
@@ -20,7 +20,7 @@
 ifeq ($(OS),Windows_NT)
  $(error Makefile is not supported on windows platform. Please use cmake instead to build sample.)
 endif
-ROCM_PATH?= $(wildcard /opt/rocm/)
+ROCM_PATH?= $(wildcard /usr/)
 HIP_PATH?= $(wildcard $(ROCM_PATH)/hip)
 ifeq (,$(HIP_PATH))
 	HIP_PATH=../../..
diff -urp HIP-rocm-5.5.1.orig/samples/1_Utils/hipInfo/CMakeLists.txt HIP-rocm-5.5.1/samples/1_Utils/hipInfo/CMakeLists.txt
--- HIP-rocm-5.5.1.orig/samples/1_Utils/hipInfo/CMakeLists.txt	2023-05-09 12:52:23.000000000 -0700
+++ HIP-rocm-5.5.1/samples/1_Utils/hipInfo/CMakeLists.txt	2023-08-30 14:58:39.794789090 -0700
@@ -31,7 +31,7 @@ cmake_minimum_required(VERSION 3.10)
 option(HIPINFO_INTERNAL_BUILD "Enable building hipInfo from compute" OFF)
 
 if (NOT DEFINED ROCM_PATH )
-     set ( ROCM_PATH "/opt/rocm"  CACHE STRING "Default ROCM installation directory." )
+     set ( ROCM_PATH "/usr"  CACHE STRING "Default ROCM installation directory." )
 endif ()
 
 # Search for rocm in common locations
diff -urp HIP-rocm-5.5.1.orig/samples/1_Utils/hipInfo/Makefile HIP-rocm-5.5.1/samples/1_Utils/hipInfo/Makefile
--- HIP-rocm-5.5.1.orig/samples/1_Utils/hipInfo/Makefile	2023-05-09 12:52:23.000000000 -0700
+++ HIP-rocm-5.5.1/samples/1_Utils/hipInfo/Makefile	2023-08-30 14:58:39.794789090 -0700
@@ -20,7 +20,7 @@
 ifeq ($(OS),Windows_NT)
  $(error Makefile is not supported on windows platform. Please use cmake instead to build sample.)
 endif
-ROCM_PATH?= $(wildcard /opt/rocm/)
+ROCM_PATH?= $(wildcard /usr/)
 HIP_PATH?= $(wildcard $(ROCM_PATH)/hip)
 ifeq (,$(HIP_PATH))
 	HIP_PATH=../../..
diff -urp HIP-rocm-5.5.1.orig/samples/2_Cookbook/0_MatrixTranspose/CMakeLists.txt HIP-rocm-5.5.1/samples/2_Cookbook/0_MatrixTranspose/CMakeLists.txt
--- HIP-rocm-5.5.1.orig/samples/2_Cookbook/0_MatrixTranspose/CMakeLists.txt	2023-05-09 12:52:23.000000000 -0700
+++ HIP-rocm-5.5.1/samples/2_Cookbook/0_MatrixTranspose/CMakeLists.txt	2023-08-30 14:58:39.794789090 -0700
@@ -23,7 +23,7 @@ project(MatrixTranspose)
 cmake_minimum_required(VERSION 3.10)
 
 if (NOT DEFINED ROCM_PATH )
-     set ( ROCM_PATH "/opt/rocm"  CACHE STRING "Default ROCM installation directory." )
+     set ( ROCM_PATH "/usr"  CACHE STRING "Default ROCM installation directory." )
 endif ()
 
 # Search for rocm in common locations
diff -urp HIP-rocm-5.5.1.orig/samples/2_Cookbook/0_MatrixTranspose/Makefile HIP-rocm-5.5.1/samples/2_Cookbook/0_MatrixTranspose/Makefile
--- HIP-rocm-5.5.1.orig/samples/2_Cookbook/0_MatrixTranspose/Makefile	2023-05-09 12:52:23.000000000 -0700
+++ HIP-rocm-5.5.1/samples/2_Cookbook/0_MatrixTranspose/Makefile	2023-08-30 14:58:39.798789090 -0700
@@ -20,7 +20,7 @@
 ifeq ($(OS),Windows_NT)
  $(error Makefile is not supported on windows platform. Please use cmake instead to build sample.)
 endif
-ROCM_PATH?= $(wildcard /opt/rocm/)
+ROCM_PATH?= $(wildcard /usr/)
 HIP_PATH?= $(wildcard $(ROCM_PATH)/hip)
 ifeq (,$(HIP_PATH))
 	HIP_PATH=../../..
diff -urp HIP-rocm-5.5.1.orig/samples/2_Cookbook/10_inline_asm/CMakeLists.txt HIP-rocm-5.5.1/samples/2_Cookbook/10_inline_asm/CMakeLists.txt
--- HIP-rocm-5.5.1.orig/samples/2_Cookbook/10_inline_asm/CMakeLists.txt	2023-05-09 12:52:23.000000000 -0700
+++ HIP-rocm-5.5.1/samples/2_Cookbook/10_inline_asm/CMakeLists.txt	2023-08-30 14:58:39.798789090 -0700
@@ -23,7 +23,7 @@ project(inline_asm)
 cmake_minimum_required(VERSION 3.10)
 
 if (NOT DEFINED ROCM_PATH )
-     set ( ROCM_PATH "/opt/rocm"  CACHE STRING "Default ROCM installation directory." )
+     set ( ROCM_PATH "/usr"  CACHE STRING "Default ROCM installation directory." )
 endif ()
 
 # Search for rocm in common locations
diff -urp HIP-rocm-5.5.1.orig/samples/2_Cookbook/10_inline_asm/Makefile HIP-rocm-5.5.1/samples/2_Cookbook/10_inline_asm/Makefile
--- HIP-rocm-5.5.1.orig/samples/2_Cookbook/10_inline_asm/Makefile	2023-05-09 12:52:23.000000000 -0700
+++ HIP-rocm-5.5.1/samples/2_Cookbook/10_inline_asm/Makefile	2023-08-30 14:58:39.798789090 -0700
@@ -20,7 +20,7 @@
 ifeq ($(OS),Windows_NT)
  $(error Makefile is not supported on windows platform. Please use cmake instead to build sample.)
 endif
-ROCM_PATH?= $(wildcard /opt/rocm/)
+ROCM_PATH?= $(wildcard /usr/)
 HIP_PATH?= $(wildcard $(ROCM_PATH)/hip)
 ifeq (,$(HIP_PATH))
 	HIP_PATH=../../..
diff -urp HIP-rocm-5.5.1.orig/samples/2_Cookbook/11_texture_driver/CMakeLists.txt HIP-rocm-5.5.1/samples/2_Cookbook/11_texture_driver/CMakeLists.txt
--- HIP-rocm-5.5.1.orig/samples/2_Cookbook/11_texture_driver/CMakeLists.txt	2023-05-09 12:52:23.000000000 -0700
+++ HIP-rocm-5.5.1/samples/2_Cookbook/11_texture_driver/CMakeLists.txt	2023-08-30 14:58:39.798789090 -0700
@@ -23,7 +23,7 @@ project(texture2dDrv)
 cmake_minimum_required(VERSION 3.10)
 
 if (NOT DEFINED ROCM_PATH )
-     set ( ROCM_PATH "/opt/rocm"  CACHE STRING "Default ROCM installation directory." )
+     set ( ROCM_PATH "/usr"  CACHE STRING "Default ROCM installation directory." )
 endif ()
 
 # Search for rocm in common locations
diff -urp HIP-rocm-5.5.1.orig/samples/2_Cookbook/11_texture_driver/Makefile HIP-rocm-5.5.1/samples/2_Cookbook/11_texture_driver/Makefile
--- HIP-rocm-5.5.1.orig/samples/2_Cookbook/11_texture_driver/Makefile	2023-05-09 12:52:23.000000000 -0700
+++ HIP-rocm-5.5.1/samples/2_Cookbook/11_texture_driver/Makefile	2023-08-30 14:58:39.798789090 -0700
@@ -20,7 +20,7 @@
 ifeq ($(OS),Windows_NT)
  $(error Makefile is not supported on windows platform. Please use cmake instead to build sample.)
 endif
-ROCM_PATH?= $(wildcard /opt/rocm/)
+ROCM_PATH?= $(wildcard /usr/)
 HIP_PATH?= $(wildcard $(ROCM_PATH)/hip)
 ifeq (,$(HIP_PATH))
 	HIP_PATH=../../..
diff -urp HIP-rocm-5.5.1.orig/samples/2_Cookbook/12_cmake_hip_add_executable/CMakeLists.txt HIP-rocm-5.5.1/samples/2_Cookbook/12_cmake_hip_add_executable/CMakeLists.txt
--- HIP-rocm-5.5.1.orig/samples/2_Cookbook/12_cmake_hip_add_executable/CMakeLists.txt	2023-05-09 12:52:23.000000000 -0700
+++ HIP-rocm-5.5.1/samples/2_Cookbook/12_cmake_hip_add_executable/CMakeLists.txt	2023-08-30 14:58:39.798789090 -0700
@@ -20,7 +20,7 @@
 
 cmake_minimum_required(VERSION 2.8.3)
 if (NOT DEFINED ROCM_PATH )
-     set ( ROCM_PATH "/opt/rocm"  CACHE STRING "Default ROCM installation directory." )
+     set ( ROCM_PATH "/usr"  CACHE STRING "Default ROCM installation directory." )
 endif ()
 
 if(NOT DEFINED HIP_PATH)
@@ -30,7 +30,7 @@ if(NOT DEFINED HIP_PATH)
         set(HIP_PATH $ENV{HIP_PATH} CACHE PATH "Path to which HIP has been installed")
     endif()
 endif()
-set(CMAKE_MODULE_PATH "${HIP_PATH}/cmake" ${CMAKE_MODULE_PATH})
+set(CMAKE_MODULE_PATH "@EPREFIX@/usr/@LIBDIR@/cmake" ${CMAKE_MODULE_PATH})
 set(CMAKE_HIP_ARCHITECTURES OFF)
 project(12_cmake)
 
diff -urp HIP-rocm-5.5.1.orig/samples/2_Cookbook/12_cmake_hip_add_executable/Readme.md HIP-rocm-5.5.1/samples/2_Cookbook/12_cmake_hip_add_executable/Readme.md
--- HIP-rocm-5.5.1.orig/samples/2_Cookbook/12_cmake_hip_add_executable/Readme.md	2023-05-09 12:52:23.000000000 -0700
+++ HIP-rocm-5.5.1/samples/2_Cookbook/12_cmake_hip_add_executable/Readme.md	2023-08-30 14:58:39.798789090 -0700
@@ -6,7 +6,7 @@ Since FindHIP cmake module is not yet a
 
 The simplest approach is to use
 ```
-set(CMAKE_MODULE_PATH "/opt/rocm/hip/cmake" ${CMAKE_MODULE_PATH})
+set(CMAKE_MODULE_PATH "/usr/hip/cmake" ${CMAKE_MODULE_PATH})
 find_package(HIP)
 ```
 
@@ -14,7 +14,7 @@ A more generic solution that allows for
 ```
 if(NOT DEFINED HIP_PATH)
     if(NOT DEFINED ENV{HIP_PATH})
-        set(HIP_PATH "/opt/rocm/hip" CACHE PATH "Path to which HIP has been installed")
+        set(HIP_PATH "/usr/hip" CACHE PATH "Path to which HIP has been installed")
     else()
         set(HIP_PATH $ENV{HIP_PATH} CACHE PATH "Path to which HIP has been installed")
     endif()
@@ -41,7 +41,7 @@ cd build
 For shared lib of hip rt,
 cmake ..
 Or for static lib of hip rt,
-cmake -DCMAKE_PREFIX_PATH="/opt/rocm/llvm/lib/cmake" ..
+cmake -DCMAKE_PREFIX_PATH="/usr/lib/llvm/@LLVM_SLOT@/@LIBDIR@/cmake" ..
 
 Then,
 make
diff -urp HIP-rocm-5.5.1.orig/samples/2_Cookbook/13_occupancy/CMakeLists.txt HIP-rocm-5.5.1/samples/2_Cookbook/13_occupancy/CMakeLists.txt
--- HIP-rocm-5.5.1.orig/samples/2_Cookbook/13_occupancy/CMakeLists.txt	2023-05-09 12:52:23.000000000 -0700
+++ HIP-rocm-5.5.1/samples/2_Cookbook/13_occupancy/CMakeLists.txt	2023-08-30 14:58:39.798789090 -0700
@@ -23,7 +23,7 @@ project(occupancy)
 cmake_minimum_required(VERSION 3.10)
 
 if (NOT DEFINED ROCM_PATH )
-     set ( ROCM_PATH "/opt/rocm"  CACHE STRING "Default ROCM installation directory." )
+     set ( ROCM_PATH "/usr"  CACHE STRING "Default ROCM installation directory." )
 endif ()
 
 # Search for rocm in common locations
diff -urp HIP-rocm-5.5.1.orig/samples/2_Cookbook/13_occupancy/Makefile HIP-rocm-5.5.1/samples/2_Cookbook/13_occupancy/Makefile
--- HIP-rocm-5.5.1.orig/samples/2_Cookbook/13_occupancy/Makefile	2023-05-09 12:52:23.000000000 -0700
+++ HIP-rocm-5.5.1/samples/2_Cookbook/13_occupancy/Makefile	2023-08-30 14:58:39.798789090 -0700
@@ -20,7 +20,7 @@
 ifeq ($(OS),Windows_NT)
  $(error Makefile is not supported on windows platform. Please use cmake instead to build sample.)
 endif
-ROCM_PATH?= $(wildcard /opt/rocm/)
+ROCM_PATH?= $(wildcard /usr/)
 HIP_PATH?= $(wildcard $(ROCM_PATH)/hip)
 ifeq (,$(HIP_PATH))
 	HIP_PATH=../../..
diff -urp HIP-rocm-5.5.1.orig/samples/2_Cookbook/14_gpu_arch/CMakeLists.txt HIP-rocm-5.5.1/samples/2_Cookbook/14_gpu_arch/CMakeLists.txt
--- HIP-rocm-5.5.1.orig/samples/2_Cookbook/14_gpu_arch/CMakeLists.txt	2023-05-09 12:52:23.000000000 -0700
+++ HIP-rocm-5.5.1/samples/2_Cookbook/14_gpu_arch/CMakeLists.txt	2023-08-30 14:58:39.798789090 -0700
@@ -23,7 +23,7 @@ project(gpuarch)
 cmake_minimum_required(VERSION 3.10)
 
 if (NOT DEFINED ROCM_PATH )
-     set ( ROCM_PATH "/opt/rocm"  CACHE STRING "Default ROCM installation directory." )
+     set ( ROCM_PATH "/usr"  CACHE STRING "Default ROCM installation directory." )
 endif ()
 
 # Search for rocm in common locations
diff -urp HIP-rocm-5.5.1.orig/samples/2_Cookbook/14_gpu_arch/Makefile HIP-rocm-5.5.1/samples/2_Cookbook/14_gpu_arch/Makefile
--- HIP-rocm-5.5.1.orig/samples/2_Cookbook/14_gpu_arch/Makefile	2023-05-09 12:52:23.000000000 -0700
+++ HIP-rocm-5.5.1/samples/2_Cookbook/14_gpu_arch/Makefile	2023-08-30 14:58:39.798789090 -0700
@@ -20,7 +20,7 @@
 ifeq ($(OS),Windows_NT)
  $(error Makefile is not supported on windows platform. Please use cmake instead to build sample.)
 endif
-ROCM_PATH?= $(wildcard /opt/rocm/)
+ROCM_PATH?= $(wildcard /usr/)
 HIP_PATH?= $(wildcard $(ROCM_PATH)/hip)
 ifeq (,$(HIP_PATH))
 	HIP_PATH=../../..
diff -urp HIP-rocm-5.5.1.orig/samples/2_Cookbook/15_static_library/device_functions/CMakeLists.txt HIP-rocm-5.5.1/samples/2_Cookbook/15_static_library/device_functions/CMakeLists.txt
--- HIP-rocm-5.5.1.orig/samples/2_Cookbook/15_static_library/device_functions/CMakeLists.txt	2023-05-09 12:52:23.000000000 -0700
+++ HIP-rocm-5.5.1/samples/2_Cookbook/15_static_library/device_functions/CMakeLists.txt	2023-08-30 14:58:39.798789090 -0700
@@ -3,7 +3,7 @@ project(static_lib)
 cmake_minimum_required(VERSION 3.10)
 
 if (NOT DEFINED ROCM_PATH )
-     set ( ROCM_PATH "/opt/rocm"  CACHE STRING "Default ROCM installation directory." )
+     set ( ROCM_PATH "/usr"  CACHE STRING "Default ROCM installation directory." )
 endif ()
 
 # Search for rocm in common locations
diff -urp HIP-rocm-5.5.1.orig/samples/2_Cookbook/15_static_library/device_functions/Makefile HIP-rocm-5.5.1/samples/2_Cookbook/15_static_library/device_functions/Makefile
--- HIP-rocm-5.5.1.orig/samples/2_Cookbook/15_static_library/device_functions/Makefile	2023-05-09 12:52:23.000000000 -0700
+++ HIP-rocm-5.5.1/samples/2_Cookbook/15_static_library/device_functions/Makefile	2023-08-30 14:58:39.798789090 -0700
@@ -1,7 +1,7 @@
 ifeq ($(OS),Windows_NT)
  $(error Makefile is not supported on windows platform. Please use cmake instead to build sample.)
 endif
-ROCM_PATH?= $(wildcard /opt/rocm/)
+ROCM_PATH?= $(wildcard /usr/)
 HIP_PATH?= $(wildcard $(ROCM_PATH)/hip)
 ifeq (,$(HIP_PATH))
 	HIP_PATH=../../..
diff -urp HIP-rocm-5.5.1.orig/samples/2_Cookbook/15_static_library/host_functions/CMakeLists.txt HIP-rocm-5.5.1/samples/2_Cookbook/15_static_library/host_functions/CMakeLists.txt
--- HIP-rocm-5.5.1.orig/samples/2_Cookbook/15_static_library/host_functions/CMakeLists.txt	2023-05-09 12:52:23.000000000 -0700
+++ HIP-rocm-5.5.1/samples/2_Cookbook/15_static_library/host_functions/CMakeLists.txt	2023-08-30 14:58:39.798789090 -0700
@@ -3,7 +3,7 @@ project(static_lib)
 cmake_minimum_required(VERSION 3.10)
 
 if (NOT DEFINED ROCM_PATH )
-     set ( ROCM_PATH "/opt/rocm"  CACHE STRING "Default ROCM installation directory." )
+     set ( ROCM_PATH "/usr"  CACHE STRING "Default ROCM installation directory." )
 endif ()
 
 # Search for rocm in common locations
@@ -38,7 +38,7 @@ add_library(HipOptLibrary STATIC ${CPP_S
 
 # Set-up the correct flags to generate the static library.
 target_link_libraries(HipOptLibrary PRIVATE --emit-static-lib)
-target_include_directories(HipOptLibrary PRIVATE /opt/rocm/hsa/include)
+target_include_directories(HipOptLibrary PRIVATE /usr/hsa/include)
 
 # Create test executable that uses libHipOptLibrary.a
 set(TEST_SOURCES ${CMAKE_SOURCE_DIR}/hipMain1.cpp)
diff -urp HIP-rocm-5.5.1.orig/samples/2_Cookbook/15_static_library/host_functions/Makefile HIP-rocm-5.5.1/samples/2_Cookbook/15_static_library/host_functions/Makefile
--- HIP-rocm-5.5.1.orig/samples/2_Cookbook/15_static_library/host_functions/Makefile	2023-05-09 12:52:23.000000000 -0700
+++ HIP-rocm-5.5.1/samples/2_Cookbook/15_static_library/host_functions/Makefile	2023-08-30 14:58:39.798789090 -0700
@@ -1,7 +1,7 @@
 ifeq ($(OS),Windows_NT)
  $(error Makefile is not supported on windows platform. Please use cmake instead to build sample.)
 endif
-ROCM_PATH?= $(wildcard /opt/rocm/)
+ROCM_PATH?= $(wildcard /usr/)
 HIP_PATH?= $(wildcard $(ROCM_PATH)/hip)
 ifeq (,$(HIP_PATH))
 	HIP_PATH=../../..
@@ -29,7 +29,7 @@ $(HIPCC_EXE): $(EMIT_STATIC_LIB)
 
 # Compiles hipMain1 with g++ and links with libHipOptLibrary.a which contains host function.
 $(HOST_EXE): $(EMIT_STATIC_LIB)
-	$(GXX) $(EMIT_STATIC_MAIN_SRC) -L. -lHipOptLibrary -L$(HIP_PATH)/lib -lamdhip64 -Wl,-rpath=$(HIP_PATH)/lib -o $@
+	$(GXX) $(EMIT_STATIC_MAIN_SRC) -L. -lHipOptLibrary -L$(HIP_PATH)/@LIBDIR@ -lamdhip64 -Wl,-rpath=$(HIP_PATH)/@LIBDIR@ -o $@
 
 test: $(HIPCC_EXE) $(HOST_EXE)
 	$(HIPCC_EXE)
diff -urp HIP-rocm-5.5.1.orig/samples/2_Cookbook/15_static_library/README.md HIP-rocm-5.5.1/samples/2_Cookbook/15_static_library/README.md
--- HIP-rocm-5.5.1.orig/samples/2_Cookbook/15_static_library/README.md	2023-05-09 12:52:23.000000000 -0700
+++ HIP-rocm-5.5.1/samples/2_Cookbook/15_static_library/README.md	2023-08-30 14:58:39.798789090 -0700
@@ -74,8 +74,8 @@ hipcc hipMain1.cpp -L. -lHipOptLibrary -
 ```
 Using g++:
 ```
-ROCM_PATH is the path where ROCM is installed. default path is /opt/rocm.
-g++ hipMain1.cpp -L. -lHipOptLibrary -L<ROCM_PATH>/hip/lib -lamdhip64 -o test_emit_static_host_linker.out
+ROCM_PATH is the path where ROCM is installed. default path is /usr.
+g++ hipMain1.cpp -L. -lHipOptLibrary -L<ROCM_PATH>/@LIBDIR@ -lamdhip64 -o test_emit_static_host_linker.out
 ```
 
 ## Static libraries with device functions
diff -urp HIP-rocm-5.5.1.orig/samples/2_Cookbook/16_assembly_to_executable/Makefile HIP-rocm-5.5.1/samples/2_Cookbook/16_assembly_to_executable/Makefile
--- HIP-rocm-5.5.1.orig/samples/2_Cookbook/16_assembly_to_executable/Makefile	2023-05-09 12:52:23.000000000 -0700
+++ HIP-rocm-5.5.1/samples/2_Cookbook/16_assembly_to_executable/Makefile	2023-08-30 14:58:39.798789090 -0700
@@ -20,16 +20,16 @@
 ifeq ($(OS),Windows_NT)
  $(error Makefile is not supported on windows platform. Please use cmake instead to build sample.)
 endif
-ROCM_PATH?= $(wildcard /opt/rocm/)
+ROCM_PATH?= $(wildcard /usr/)
 HIP_PATH?= $(wildcard $(ROCM_PATH)/hip)
 ifeq (,$(HIP_PATH))
 	HIP_PATH=../../..
 endif
 
 HIPCC=$(HIP_PATH)/bin/hipcc
-CLANG=$(HIP_PATH)/../llvm/bin/clang
-LLVM_MC=$(HIP_PATH)/../llvm/bin/llvm-mc
-CLANG_OFFLOAD_BUNDLER=$(HIP_PATH)/../llvm/bin/clang-offload-bundler
+CLANG=$(ROCM_PATH)/lib/llvm/@LLVM_SLOT@/bin/clang
+LLVM_MC=$(ROCM_PATH)/lib/llvm/@LLVM_SLOT@/bin/llvm-mc
+CLANG_OFFLOAD_BUNDLER=$(ROCM_PATH)/lib/llvm/@LLVM_SLOT@/bin/clang-offload-bundler
 
 SRCS=square.cpp
 
diff -urp HIP-rocm-5.5.1.orig/samples/2_Cookbook/16_assembly_to_executable/README.md HIP-rocm-5.5.1/samples/2_Cookbook/16_assembly_to_executable/README.md
--- HIP-rocm-5.5.1.orig/samples/2_Cookbook/16_assembly_to_executable/README.md	2023-05-09 12:52:23.000000000 -0700
+++ HIP-rocm-5.5.1/samples/2_Cookbook/16_assembly_to_executable/README.md	2023-08-30 14:58:39.798789090 -0700
@@ -1,4 +1,4 @@
-ROCM_PATH is the path where ROCM is installed. default path is /opt/rocm.
+ROCM_PATH is the path where ROCM is installed. default path is /usr.
 # Compile to assembly and create an executable from modified asm
 
 This sample shows how to generate the assembly code for a simple HIP source application, then re-compiling it and generating a valid HIP executable.
@@ -8,8 +8,8 @@ This sample uses a previous HIP applicat
 ## Compiling the HIP source into assembly
 Using HIP flags `-c -S` will help generate the host x86_64 and the device AMDGCN assembly code when paired with `--cuda-host-only` and `--cuda-device-only` respectively. In this sample we use these commands:
 ```
-<ROCM_PATH>/hip/bin/hipcc -c -S --cuda-host-only -target x86_64-linux-gnu -o square_host.s square.cpp
-<ROCM_PATH>/hip/bin/hipcc -c -S --cuda-device-only --offload-arch=gfx900 --offload-arch=gfx906 square.cpp
+<ROCM_PATH>/bin/hipcc -c -S --cuda-host-only -target x86_64-linux-gnu -o square_host.s square.cpp
+<ROCM_PATH>/bin/hipcc -c -S --cuda-device-only --offload-arch=gfx900 --offload-arch=gfx906 square.cpp
 ```
 
 The device assembly will be output into two separate files:
@@ -28,17 +28,17 @@ If valid, the modified host and device a
 
 However, the device assembly code will require a few extra steps. The device assemblies needs to be compiled into device objects, then offload-bundled into a HIP fat binary using the clang-offload-bundler, then llvm-mc embeds the binary inside of a host object using the MC directives provided in `hip_obj_gen.mcin`. The output is a host object with an embedded device object. Here are the steps for device side compilation into an object:
 ```
-<ROCM_PATH>/hip/../llvm/bin/clang -target amdgcn-amd-amdhsa -mcpu=gfx900 square-hip-amdgcn-amd-amdhsa-gfx900.s -o square-hip-amdgcn-amd-amdhsa-gfx900.o
-<ROCM_PATH>/hip/../llvm/bin/clang -target amdgcn-amd-amdhsa -mcpu=gfx906 square-hip-amdgcn-amd-amdhsa-gfx906.s -o square-hip-amdgcn-amd-amdhsa-gfx906.o
-<ROCM_PATH>/llvm/bin/clang-offload-bundler -type=o -bundle-align=4096 -targets=host-x86_64-unknown-linux,hip-amdgcn-amd-amdhsa-gfx900,hip-amdgcn-amd-amdhsa-gfx906 -inputs=/dev/null,square-hip-amdgcn-amd-amdhsa-gfx900.o,square-hip-amdgcn-amd-amdhsa-gfx906.o -outputs=offload_bundle.hipfb
-<ROCM_PATH>/llvm/bin/llvm-mc -triple x86_64-unknown-linux-gnu hip_obj_gen.mcin -o square_device.o --filetype=obj
+<ROCM_PATH>/lib/llvm/@LLVM_SLOT@/bin/clang -target amdgcn-amd-amdhsa -mcpu=gfx900 square-hip-amdgcn-amd-amdhsa-gfx900.s -o square-hip-amdgcn-amd-amdhsa-gfx900.o
+<ROCM_PATH>/lib/llvm/@LLVM_SLOT@/bin/clang -target amdgcn-amd-amdhsa -mcpu=gfx906 square-hip-amdgcn-amd-amdhsa-gfx906.s -o square-hip-amdgcn-amd-amdhsa-gfx906.o
+<ROCM_PATH>/lib/llvm/@LLVM_SLOT@/bin/clang-offload-bundler -type=o -bundle-align=4096 -targets=host-x86_64-unknown-linux,hip-amdgcn-amd-amdhsa-gfx900,hip-amdgcn-amd-amdhsa-gfx906 -inputs=/dev/null,square-hip-amdgcn-amd-amdhsa-gfx900.o,square-hip-amdgcn-amd-amdhsa-gfx906.o -outputs=offload_bundle.hipfb
+<ROCM_PATH>/lib/llvm/@LLVM_SLOT@/bin/llvm-mc -triple x86_64-unknown-linux-gnu hip_obj_gen.mcin -o square_device.o --filetype=obj
 ```
 
 **Note:** Using option `-bundle-align=4096` only works on ROCm 4.0 and newer compilers. Also, the architecture must match the same arch as when compiling to assembly.
 
 Finally, using the system linker, hipcc, or clang, link the host and device objects into an executable:
 ```
-<ROCM_PATH>/hip/bin/hipcc square_host.o square_device.o -o square_asm.out
+<ROCM_PATH>/bin/hipcc square_host.o square_device.o -o square_asm.out
 ```
 If you haven't modified the GPU archs, this executable should run on both `gfx900` and `gfx906`.
 
diff -urp HIP-rocm-5.5.1.orig/samples/2_Cookbook/17_llvm_ir_to_executable/Makefile HIP-rocm-5.5.1/samples/2_Cookbook/17_llvm_ir_to_executable/Makefile
--- HIP-rocm-5.5.1.orig/samples/2_Cookbook/17_llvm_ir_to_executable/Makefile	2023-05-09 12:52:23.000000000 -0700
+++ HIP-rocm-5.5.1/samples/2_Cookbook/17_llvm_ir_to_executable/Makefile	2023-08-30 14:58:39.798789090 -0700
@@ -20,18 +20,18 @@
 ifeq ($(OS),Windows_NT)
  $(error Makefile is not supported on windows platform. Please use cmake instead to build sample.)
 endif
-ROCM_PATH?= $(wildcard /opt/rocm/)
+ROCM_PATH?= $(wildcard /usr/)
 HIP_PATH?= $(wildcard $(ROCM_PATH)/hip)
 ifeq (,$(HIP_PATH))
 	HIP_PATH=../../..
 endif
 
-HIPCC=$(HIP_PATH)/bin/hipcc
-CLANG=$(HIP_PATH)/../llvm/bin/clang
-LLVM_MC=$(HIP_PATH)/../llvm/bin/llvm-mc
-CLANG_OFFLOAD_BUNDLER=$(HIP_PATH)/../llvm/bin/clang-offload-bundler
-LLVM_AS=$(HIP_PATH)/../llvm/bin/llvm-as
-LLVM_DIS=$(HIP_PATH)/../llvm/bin/llvm-dis
+HIPCC=$(ROCM_PATH)/bin/hipcc
+CLANG=$(ROCM_PATH)/lib/llvm/@LLVM_SLOT@/bin/clang
+LLVM_MC=$(ROCM_PATH)/lib/llvm/@LLVM_SLOT@/bin/llvm-mc
+CLANG_OFFLOAD_BUNDLER=$(ROCM_PATH)/lib/llvm/@LLVM_SLOT@/bin/clang-offload-bundler
+LLVM_AS=$(ROCM_PATH)/lib/llvm/@LLVM_SLOT@/bin/llvm-as
+LLVM_DIS=$(ROCM_PATH)/lib/llvm/@LLVM_SLOT@/bin/llvm-dis
 
 SRCS=square.cpp
 
diff -urp HIP-rocm-5.5.1.orig/samples/2_Cookbook/17_llvm_ir_to_executable/README.md HIP-rocm-5.5.1/samples/2_Cookbook/17_llvm_ir_to_executable/README.md
--- HIP-rocm-5.5.1.orig/samples/2_Cookbook/17_llvm_ir_to_executable/README.md	2023-05-09 12:52:23.000000000 -0700
+++ HIP-rocm-5.5.1/samples/2_Cookbook/17_llvm_ir_to_executable/README.md	2023-08-30 14:58:39.798789090 -0700
@@ -1,4 +1,4 @@
-ROCM_PATH is the path where ROCM is installed. default path is /opt/rocm.
+ROCM_PATH is the path where ROCM is installed. default path is /usr.
 # Compile to LLVM IR and create an executable from modified IR
 
 This sample shows how to generate the LLVM IR for a simple HIP source application, then re-compiling it and generating a valid HIP executable.
@@ -8,8 +8,8 @@ This sample uses a previous HIP applicat
 ## Compiling the HIP source into LLVM IR
 Using HIP flags `-c -emit-llvm` will help generate the host x86_64 and the device LLVM bitcode when paired with `--cuda-host-only` and `--cuda-device-only` respectively. In this sample we use these commands:
 ```
-<ROCM_PATH>/hip/bin/hipcc -c -emit-llvm --cuda-host-only -target x86_64-linux-gnu -o square_host.bc square.cpp
-<ROCM_PATH>/hip/bin/hipcc -c -emit-llvm --cuda-device-only --offload-arch=gfx900 --offload-arch=gfx906 square.cpp
+<ROCM_PATH>/bin/hipcc -c -emit-llvm --cuda-host-only -target x86_64-linux-gnu -o square_host.bc square.cpp
+<ROCM_PATH>/bin/hipcc -c -emit-llvm --cuda-device-only --offload-arch=gfx900 --offload-arch=gfx906 square.cpp
 ```
 The device LLVM IR bitcode will be output into two separate files:
 - square-hip-amdgcn-amd-amdhsa-gfx900.bc
@@ -19,8 +19,8 @@ You may modify `--offload-arch` flag to
 
 To transform the LLVM bitcode into human readable LLVM IR, use these commands:
 ```
-<ROCM_PATH>/llvm/bin/llvm-dis square-hip-amdgcn-amd-amdhsa-gfx900.bc -o square-hip-amdgcn-amd-amdhsa-gfx900.ll
-<ROCM_PATH>/llvm/bin/llvm-dis square-hip-amdgcn-amd-amdhsa-gfx906.bc -o square-hip-amdgcn-amd-amdhsa-gfx906.ll
+<ROCM_PATH>/lib/llvm/@LLVM_SLOT@/bin/llvm-dis square-hip-amdgcn-amd-amdhsa-gfx900.bc -o square-hip-amdgcn-amd-amdhsa-gfx900.ll
+<ROCM_PATH>/lib/llvm/@LLVM_SLOT@/bin/llvm-dis square-hip-amdgcn-amd-amdhsa-gfx906.bc -o square-hip-amdgcn-amd-amdhsa-gfx906.ll
 ```
 
 **Warning:** We cannot ensure any compiler besides the ROCm hipcc and clang will be compatible with this process. Also, there is no guarantee that the starting IR produced with `-x cl` will run with HIP runtime. Experimenting with other compilers or starting IR will be the responsibility of the developer.
@@ -33,25 +33,25 @@ At this point, you may evaluate the LLVM
 ## Compiling the LLVM IR into a valid HIP executable
 If valid, the modified host and device IR may be compiled into a HIP executable. First, the readable IR must be compiled back in LLVM bitcode. The host IR can be compiled into an object using this command:
 ```
-<ROCM_PATH>/llvm/bin/llvm-as square_host.ll -o square_host.bc
-<ROCM_PATH>/hip/bin/hipcc -c square_host.bc -o square_host.o
+<ROCM_PATH>/lib/llvm/@LLVM_SLOT@/bin/llvm-as square_host.ll -o square_host.bc
+<ROCM_PATH>/bin/hipcc -c square_host.bc -o square_host.o
 ```
 
 However, the device IR will require a few extra steps. The device bitcodes needs to be compiled into device objects, then offload-bundled into a HIP fat binary using the clang-offload-bundler, then llvm-mc embeds the binary inside of a host object using the MC directives provided in `hip_obj_gen.mcin`. The output is a host object with an embedded device object. Here are the steps for device side compilation into an object:
 ```
-<ROCM_PATH>/hip/../llvm/bin/llvm-as square-hip-amdgcn-amd-amdhsa-gfx900.ll -o square-hip-amdgcn-amd-amdhsa-gfx900.bc
-<ROCM_PATH>/hip/../llvm/bin/llvm-as square-hip-amdgcn-amd-amdhsa-gfx906.ll -o square-hip-amdgcn-amd-amdhsa-gfx906.bc
-<ROCM_PATH>/hip/../llvm/bin/clang -target amdgcn-amd-amdhsa -mcpu=gfx900 square-hip-amdgcn-amd-amdhsa-gfx900.bc -o square-hip-amdgcn-amd-amdhsa-gfx900.o
-<ROCM_PATH>/hip/../llvm/bin/clang -target amdgcn-amd-amdhsa -mcpu=gfx906 square-hip-amdgcn-amd-amdhsa-gfx906.bc -o square-hip-amdgcn-amd-amdhsa-gfx906.o
-<ROCM_PATH>/hip/../llvm/bin/clang-offload-bundler -type=o -bundle-align=4096 -targets=host-x86_64-unknown-linux,hip-amdgcn-amd-amdhsa-gfx900,hip-amdgcn-amd-amdhsa-gfx906 -inputs=/dev/null,square-hip-amdgcn-amd-amdhsa-gfx900.o,square-hip-amdgcn-amd-amdhsa-gfx906.o -outputs=offload_bundle.hipfb
-<ROCM_PATH>/llvm/bin/llvm-mc hip_obj_gen.mcin -o square_device.o --filetype=obj
+<ROCM_PATH>/lib/llvm/@LLVM_SLOT@/bin/llvm-as square-hip-amdgcn-amd-amdhsa-gfx900.ll -o square-hip-amdgcn-amd-amdhsa-gfx900.bc
+<ROCM_PATH>/lib/llvm/@LLVM_SLOT@/bin/llvm-as square-hip-amdgcn-amd-amdhsa-gfx906.ll -o square-hip-amdgcn-amd-amdhsa-gfx906.bc
+<ROCM_PATH>/lib/llvm/@LLVM_SLOT@/bin/clang -target amdgcn-amd-amdhsa -mcpu=gfx900 square-hip-amdgcn-amd-amdhsa-gfx900.bc -o square-hip-amdgcn-amd-amdhsa-gfx900.o
+<ROCM_PATH>/lib/llvm/@LLVM_SLOT@/bin/clang -target amdgcn-amd-amdhsa -mcpu=gfx906 square-hip-amdgcn-amd-amdhsa-gfx906.bc -o square-hip-amdgcn-amd-amdhsa-gfx906.o
+<ROCM_PATH>/lib/llvm/@LLVM_SLOT@/bin/clang-offload-bundler -type=o -bundle-align=4096 -targets=host-x86_64-unknown-linux,hip-amdgcn-amd-amdhsa-gfx900,hip-amdgcn-amd-amdhsa-gfx906 -inputs=/dev/null,square-hip-amdgcn-amd-amdhsa-gfx900.o,square-hip-amdgcn-amd-amdhsa-gfx906.o -outputs=offload_bundle.hipfb
+<ROCM_PATH>/lib/llvm/@LLVM_SLOT@/bin/llvm-mc hip_obj_gen.mcin -o square_device.o --filetype=obj
 ```
 
 **Note:** Using option `-bundle-align=4096` only works on ROCm 4.0 and newer compilers. Also, the architecture must match the same arch as when compiling to LLVM IR.
 
 Finally, using the system linker, hipcc, or clang, link the host and device objects into an executable:
 ```
-<ROCM_PATH>/hip/bin/hipcc square_host.o square_device.o -o square_ir.out
+<ROCM_PATH>/bin/hipcc square_host.o square_device.o -o square_ir.out
 ```
 If you haven't modified the GPU archs, this executable should run on both `gfx900` and `gfx906`.
 
diff -urp HIP-rocm-5.5.1.orig/samples/2_Cookbook/1_hipEvent/CMakeLists.txt HIP-rocm-5.5.1/samples/2_Cookbook/1_hipEvent/CMakeLists.txt
--- HIP-rocm-5.5.1.orig/samples/2_Cookbook/1_hipEvent/CMakeLists.txt	2023-05-09 12:52:23.000000000 -0700
+++ HIP-rocm-5.5.1/samples/2_Cookbook/1_hipEvent/CMakeLists.txt	2023-08-30 14:58:39.798789090 -0700
@@ -23,7 +23,7 @@ project(hipEvent)
 cmake_minimum_required(VERSION 3.10)
 
 if (NOT DEFINED ROCM_PATH )
-     set ( ROCM_PATH "/opt/rocm"  CACHE STRING "Default ROCM installation directory." )
+     set ( ROCM_PATH "/usr"  CACHE STRING "Default ROCM installation directory." )
 endif ()
 
 # Search for rocm in common locations
diff -urp HIP-rocm-5.5.1.orig/samples/2_Cookbook/1_hipEvent/Makefile HIP-rocm-5.5.1/samples/2_Cookbook/1_hipEvent/Makefile
--- HIP-rocm-5.5.1.orig/samples/2_Cookbook/1_hipEvent/Makefile	2023-05-09 12:52:23.000000000 -0700
+++ HIP-rocm-5.5.1/samples/2_Cookbook/1_hipEvent/Makefile	2023-08-30 14:58:39.798789090 -0700
@@ -18,7 +18,7 @@
 # OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 # THE SOFTWARE.
 
-ROCM_PATH?= $(wildcard /opt/rocm/)
+ROCM_PATH?= $(wildcard /usr/)
 HIP_PATH?= $(wildcard $(ROCM_PATH)/hip)
 ifeq (,$(HIP_PATH))
 	HIP_PATH=../../..
diff -urp HIP-rocm-5.5.1.orig/samples/2_Cookbook/20_hip_vulkan/CMakeLists.txt HIP-rocm-5.5.1/samples/2_Cookbook/20_hip_vulkan/CMakeLists.txt
--- HIP-rocm-5.5.1.orig/samples/2_Cookbook/20_hip_vulkan/CMakeLists.txt	2023-05-09 12:52:23.000000000 -0700
+++ HIP-rocm-5.5.1/samples/2_Cookbook/20_hip_vulkan/CMakeLists.txt	2023-08-30 14:58:39.798789090 -0700
@@ -30,7 +30,7 @@ cmake_minimum_required(VERSION 3.10)
 set(CMAKE_MODULE_PATH "${CMAKE_CURRENT_LIST_DIR}/cmake;${CMAKE_MODULE_PATH}")
 
 if (NOT DEFINED ROCM_PATH )
-     set ( ROCM_PATH "/opt/rocm"  CACHE STRING "Default ROCM installation directory." )
+     set ( ROCM_PATH "/usr"  CACHE STRING "Default ROCM installation directory." )
 endif ()
 
 # Search for rocm in common locations
@@ -76,7 +76,7 @@ set(VULKAN_PATH ${Vulkan_INCLUDE_DIRS})
 STRING(REGEX REPLACE "/[Ii]nclude" "" VULKAN_PATH ${VULKAN_PATH})
 # Include Vulkan header files from Vulkan SDK
 include_directories(AFTER ${VULKAN_PATH}/include)
-link_directories(${VULKAN_PATH}/bin;${VULKAN_PATH}/lib;)
+link_directories(${VULKAN_PATH}/bin;${VULKAN_PATH}/@LIBDIR@;)
 link_directories(${GLFW_PATH}/lib-vc2019)
 # Set compiler and linker
 set(CMAKE_CXX_COMPILER ${HIP_HIPCC_EXECUTABLE})
diff -urp HIP-rocm-5.5.1.orig/samples/2_Cookbook/21_cmake_hip_cxx_clang/README.md HIP-rocm-5.5.1/samples/2_Cookbook/21_cmake_hip_cxx_clang/README.md
--- HIP-rocm-5.5.1.orig/samples/2_Cookbook/21_cmake_hip_cxx_clang/README.md	2023-05-09 12:52:23.000000000 -0700
+++ HIP-rocm-5.5.1/samples/2_Cookbook/21_cmake_hip_cxx_clang/README.md	2023-08-30 14:58:39.798789090 -0700
@@ -1,10 +1,10 @@
-### This sample tests CXX Language support with amdclang++
+### This sample tests CXX Language support with clang++
 I. Build
 mkdir -p build; cd build
 rm -rf *;
-CXX=`hipconfig -l`/amdclang++ cmake .. (or)
-cmake -DCMAKE_CXX_COMPILER=/opt/rocm/bin/amdclang++ .. (or)
-cmake -DCMAKE_CXX_COMPILER=/opt/rocm-X.Y.Z/llvm/bin/amdclang++ ..
+CXX=`hipconfig -l`/clang++ cmake .. (or)
+cmake -DCMAKE_CXX_COMPILER=/usr/bin/clang++ .. (or)
+cmake -DCMAKE_CXX_COMPILER=/usr/lib/llvm/@LLVM_SLOT@/bin/clang++ ..
 make
 
 II. Test
diff -urp HIP-rocm-5.5.1.orig/samples/2_Cookbook/23_cmake_hiprtc/README.md HIP-rocm-5.5.1/samples/2_Cookbook/23_cmake_hiprtc/README.md
--- HIP-rocm-5.5.1.orig/samples/2_Cookbook/23_cmake_hiprtc/README.md	2023-05-09 12:52:23.000000000 -0700
+++ HIP-rocm-5.5.1/samples/2_Cookbook/23_cmake_hiprtc/README.md	2023-08-30 14:58:39.798789090 -0700
@@ -1,7 +1,7 @@
 ### This will test linking hiprtc::hiprtc interface in cmake
 I. Build
 mkdir -p build; cd build
-rm -rf *; CXX=amdclang++ cmake -DCMAKE_PREFIX_PATH=/opt/rocm/hip ..
+rm -rf *; CXX=amdclang++ cmake -DCMAKE_PREFIX_PATH=/usr/hip ..
 make
 
 II. Test
diff -urp HIP-rocm-5.5.1.orig/samples/2_Cookbook/3_shared_memory/CMakeLists.txt HIP-rocm-5.5.1/samples/2_Cookbook/3_shared_memory/CMakeLists.txt
--- HIP-rocm-5.5.1.orig/samples/2_Cookbook/3_shared_memory/CMakeLists.txt	2023-05-09 12:52:23.000000000 -0700
+++ HIP-rocm-5.5.1/samples/2_Cookbook/3_shared_memory/CMakeLists.txt	2023-08-30 14:58:39.798789090 -0700
@@ -23,7 +23,7 @@ project(sharedMemory)
 cmake_minimum_required(VERSION 3.10)
 
 if (NOT DEFINED ROCM_PATH )
-     set ( ROCM_PATH "/opt/rocm"  CACHE STRING "Default ROCM installation directory." )
+     set ( ROCM_PATH "/usr"  CACHE STRING "Default ROCM installation directory." )
 endif ()
 
 # Search for rocm in common locations
diff -urp HIP-rocm-5.5.1.orig/samples/2_Cookbook/3_shared_memory/Makefile HIP-rocm-5.5.1/samples/2_Cookbook/3_shared_memory/Makefile
--- HIP-rocm-5.5.1.orig/samples/2_Cookbook/3_shared_memory/Makefile	2023-05-09 12:52:23.000000000 -0700
+++ HIP-rocm-5.5.1/samples/2_Cookbook/3_shared_memory/Makefile	2023-08-30 14:58:39.798789090 -0700
@@ -20,7 +20,7 @@
 ifeq ($(OS),Windows_NT)
  $(error Makefile is not supported on windows platform. Please use cmake instead to build sample.)
 endif
-ROCM_PATH?= $(wildcard /opt/rocm/)
+ROCM_PATH?= $(wildcard /usr/)
 HIP_PATH?= $(wildcard $(ROCM_PATH)/hip)
 ifeq (,$(HIP_PATH))
 	HIP_PATH=../../..
diff -urp HIP-rocm-5.5.1.orig/samples/2_Cookbook/4_shfl/CMakeLists.txt HIP-rocm-5.5.1/samples/2_Cookbook/4_shfl/CMakeLists.txt
--- HIP-rocm-5.5.1.orig/samples/2_Cookbook/4_shfl/CMakeLists.txt	2023-05-09 12:52:23.000000000 -0700
+++ HIP-rocm-5.5.1/samples/2_Cookbook/4_shfl/CMakeLists.txt	2023-08-30 14:58:39.798789090 -0700
@@ -23,7 +23,7 @@ project(shfl)
 cmake_minimum_required(VERSION 3.10)
 
 if (NOT DEFINED ROCM_PATH )
-     set ( ROCM_PATH "/opt/rocm"  CACHE STRING "Default ROCM installation directory." )
+     set ( ROCM_PATH "/usr"  CACHE STRING "Default ROCM installation directory." )
 endif ()
 
 # Search for rocm in common locations
diff -urp HIP-rocm-5.5.1.orig/samples/2_Cookbook/4_shfl/Makefile HIP-rocm-5.5.1/samples/2_Cookbook/4_shfl/Makefile
--- HIP-rocm-5.5.1.orig/samples/2_Cookbook/4_shfl/Makefile	2023-05-09 12:52:23.000000000 -0700
+++ HIP-rocm-5.5.1/samples/2_Cookbook/4_shfl/Makefile	2023-08-30 14:58:39.798789090 -0700
@@ -20,7 +20,7 @@
 ifeq ($(OS),Windows_NT)
  $(error Makefile is not supported on windows platform. Please use cmake instead to build sample.)
 endif
-ROCM_PATH?= $(wildcard /opt/rocm/)
+ROCM_PATH?= $(wildcard /usr/)
 HIP_PATH?= $(wildcard $(ROCM_PATH)/hip)
 ifeq (,$(HIP_PATH))
 	HIP_PATH=../../..
diff -urp HIP-rocm-5.5.1.orig/samples/2_Cookbook/5_2dshfl/CMakeLists.txt HIP-rocm-5.5.1/samples/2_Cookbook/5_2dshfl/CMakeLists.txt
--- HIP-rocm-5.5.1.orig/samples/2_Cookbook/5_2dshfl/CMakeLists.txt	2023-05-09 12:52:23.000000000 -0700
+++ HIP-rocm-5.5.1/samples/2_Cookbook/5_2dshfl/CMakeLists.txt	2023-08-30 14:58:39.798789090 -0700
@@ -23,7 +23,7 @@ project(2dshfl)
 cmake_minimum_required(VERSION 3.10)
 
 if (NOT DEFINED ROCM_PATH )
-     set ( ROCM_PATH "/opt/rocm"  CACHE STRING "Default ROCM installation directory." )
+     set ( ROCM_PATH "/usr"  CACHE STRING "Default ROCM installation directory." )
 endif ()
 
 # Search for rocm in common locations
diff -urp HIP-rocm-5.5.1.orig/samples/2_Cookbook/5_2dshfl/Makefile HIP-rocm-5.5.1/samples/2_Cookbook/5_2dshfl/Makefile
--- HIP-rocm-5.5.1.orig/samples/2_Cookbook/5_2dshfl/Makefile	2023-05-09 12:52:23.000000000 -0700
+++ HIP-rocm-5.5.1/samples/2_Cookbook/5_2dshfl/Makefile	2023-08-30 14:58:39.798789090 -0700
@@ -20,7 +20,7 @@
 ifeq ($(OS),Windows_NT)
  $(error Makefile is not supported on windows platform. Please use cmake instead to build sample.)
 endif
-ROCM_PATH?= $(wildcard /opt/rocm/)
+ROCM_PATH?= $(wildcard /usr/)
 HIP_PATH?= $(wildcard $(ROCM_PATH)/hip)
 ifeq (,$(HIP_PATH))
 	HIP_PATH=../../..
diff -urp HIP-rocm-5.5.1.orig/samples/2_Cookbook/6_dynamic_shared/CMakeLists.txt HIP-rocm-5.5.1/samples/2_Cookbook/6_dynamic_shared/CMakeLists.txt
--- HIP-rocm-5.5.1.orig/samples/2_Cookbook/6_dynamic_shared/CMakeLists.txt	2023-05-09 12:52:23.000000000 -0700
+++ HIP-rocm-5.5.1/samples/2_Cookbook/6_dynamic_shared/CMakeLists.txt	2023-08-30 14:58:39.798789090 -0700
@@ -23,7 +23,7 @@ project(dynamic_shared)
 cmake_minimum_required(VERSION 3.10)
 
 if (NOT DEFINED ROCM_PATH )
-     set ( ROCM_PATH "/opt/rocm"  CACHE STRING "Default ROCM installation directory." )
+     set ( ROCM_PATH "/usr"  CACHE STRING "Default ROCM installation directory." )
 endif ()
 
 # Search for rocm in common locations
diff -urp HIP-rocm-5.5.1.orig/samples/2_Cookbook/6_dynamic_shared/Makefile HIP-rocm-5.5.1/samples/2_Cookbook/6_dynamic_shared/Makefile
--- HIP-rocm-5.5.1.orig/samples/2_Cookbook/6_dynamic_shared/Makefile	2023-05-09 12:52:23.000000000 -0700
+++ HIP-rocm-5.5.1/samples/2_Cookbook/6_dynamic_shared/Makefile	2023-08-30 14:58:39.798789090 -0700
@@ -20,7 +20,7 @@
 ifeq ($(OS),Windows_NT)
  $(error Makefile is not supported on windows platform. Please use cmake instead to build sample.)
 endif
-ROCM_PATH?= $(wildcard /opt/rocm/)
+ROCM_PATH?= $(wildcard /usr/)
 HIP_PATH?= $(wildcard $(ROCM_PATH)/hip)
 ifeq (,$(HIP_PATH))
 	HIP_PATH=../../..
diff -urp HIP-rocm-5.5.1.orig/samples/2_Cookbook/7_streams/CMakeLists.txt HIP-rocm-5.5.1/samples/2_Cookbook/7_streams/CMakeLists.txt
--- HIP-rocm-5.5.1.orig/samples/2_Cookbook/7_streams/CMakeLists.txt	2023-05-09 12:52:23.000000000 -0700
+++ HIP-rocm-5.5.1/samples/2_Cookbook/7_streams/CMakeLists.txt	2023-08-30 14:58:39.798789090 -0700
@@ -23,7 +23,7 @@ project(stream)
 cmake_minimum_required(VERSION 3.10)
 
 if (NOT DEFINED ROCM_PATH )
-     set ( ROCM_PATH "/opt/rocm"  CACHE STRING "Default ROCM installation directory." )
+     set ( ROCM_PATH "/usr"  CACHE STRING "Default ROCM installation directory." )
 endif ()
 
 # Search for rocm in common locations
diff -urp HIP-rocm-5.5.1.orig/samples/2_Cookbook/7_streams/Makefile HIP-rocm-5.5.1/samples/2_Cookbook/7_streams/Makefile
--- HIP-rocm-5.5.1.orig/samples/2_Cookbook/7_streams/Makefile	2023-05-09 12:52:23.000000000 -0700
+++ HIP-rocm-5.5.1/samples/2_Cookbook/7_streams/Makefile	2023-08-30 14:58:39.798789090 -0700
@@ -20,7 +20,7 @@
 ifeq ($(OS),Windows_NT)
  $(error Makefile is not supported on windows platform. Please use cmake instead to build sample.)
 endif
-ROCM_PATH?= $(wildcard /opt/rocm/)
+ROCM_PATH?= $(wildcard /usr/)
 HIP_PATH?= $(wildcard $(ROCM_PATH)/hip)
 ifeq (,$(HIP_PATH))
 	HIP_PATH=../../..
diff -urp HIP-rocm-5.5.1.orig/samples/2_Cookbook/8_peer2peer/CMakeLists.txt HIP-rocm-5.5.1/samples/2_Cookbook/8_peer2peer/CMakeLists.txt
--- HIP-rocm-5.5.1.orig/samples/2_Cookbook/8_peer2peer/CMakeLists.txt	2023-05-09 12:52:23.000000000 -0700
+++ HIP-rocm-5.5.1/samples/2_Cookbook/8_peer2peer/CMakeLists.txt	2023-08-30 14:58:39.802789090 -0700
@@ -23,7 +23,7 @@ project(peer2peer)
 cmake_minimum_required(VERSION 3.10)
 
 if (NOT DEFINED ROCM_PATH )
-     set ( ROCM_PATH "/opt/rocm"  CACHE STRING "Default ROCM installation directory." )
+     set ( ROCM_PATH "/usr"  CACHE STRING "Default ROCM installation directory." )
 endif ()
 
 # Search for rocm in common locations
diff -urp HIP-rocm-5.5.1.orig/samples/2_Cookbook/8_peer2peer/Makefile HIP-rocm-5.5.1/samples/2_Cookbook/8_peer2peer/Makefile
--- HIP-rocm-5.5.1.orig/samples/2_Cookbook/8_peer2peer/Makefile	2023-05-09 12:52:23.000000000 -0700
+++ HIP-rocm-5.5.1/samples/2_Cookbook/8_peer2peer/Makefile	2023-08-30 14:58:39.802789090 -0700
@@ -20,7 +20,7 @@
 ifeq ($(OS),Windows_NT)
  $(error Makefile is not supported on windows platform. Please use cmake instead to build sample.)
 endif
-ROCM_PATH?= $(wildcard /opt/rocm/)
+ROCM_PATH?= $(wildcard /usr/)
 HIP_PATH?= $(wildcard $(ROCM_PATH)/hip)
 ifeq (,$(HIP_PATH))
 	HIP_PATH=../../..
diff -urp HIP-rocm-5.5.1.orig/samples/2_Cookbook/9_unroll/CMakeLists.txt HIP-rocm-5.5.1/samples/2_Cookbook/9_unroll/CMakeLists.txt
--- HIP-rocm-5.5.1.orig/samples/2_Cookbook/9_unroll/CMakeLists.txt	2023-05-09 12:52:23.000000000 -0700
+++ HIP-rocm-5.5.1/samples/2_Cookbook/9_unroll/CMakeLists.txt	2023-08-30 14:58:39.802789090 -0700
@@ -23,7 +23,7 @@ project(unroll)
 cmake_minimum_required(VERSION 3.10)
 
 if (NOT DEFINED ROCM_PATH )
-     set ( ROCM_PATH "/opt/rocm"  CACHE STRING "Default ROCM installation directory." )
+     set ( ROCM_PATH "/usr"  CACHE STRING "Default ROCM installation directory." )
 endif ()
 
 # Search for rocm in common locations
diff -urp HIP-rocm-5.5.1.orig/samples/2_Cookbook/9_unroll/Makefile HIP-rocm-5.5.1/samples/2_Cookbook/9_unroll/Makefile
--- HIP-rocm-5.5.1.orig/samples/2_Cookbook/9_unroll/Makefile	2023-05-09 12:52:23.000000000 -0700
+++ HIP-rocm-5.5.1/samples/2_Cookbook/9_unroll/Makefile	2023-08-30 14:58:39.802789090 -0700
@@ -20,7 +20,7 @@
 ifeq ($(OS),Windows_NT)
  $(error Makefile is not supported on windows platform. Please use cmake instead to build sample.)
 endif
-ROCM_PATH?= $(wildcard /opt/rocm/)
+ROCM_PATH?= $(wildcard /usr/)
 HIP_PATH?= $(wildcard $(ROCM_PATH)/hip)
 ifeq (,$(HIP_PATH))
 	HIP_PATH=../../..
diff -urp HIP-rocm-5.5.1.orig/samples/README.md HIP-rocm-5.5.1/samples/README.md
--- HIP-rocm-5.5.1.orig/samples/README.md	2023-05-09 12:52:23.000000000 -0700
+++ HIP-rocm-5.5.1/samples/README.md	2023-08-30 14:58:39.802789090 -0700
@@ -24,10 +24,10 @@ cmake ..
 
 b. to build with static libs, run
 
-cmake -DCMAKE_PREFIX_PATH="<ROCM_PATH>/llvm/lib/cmake" ..
+cmake -DCMAKE_PREFIX_PATH="<ROCM_PATH>/lib/llvm/@LLVM_SLOT@/@LIBDIR@/cmake" ..
 
 Then run,
 
 make
 
-Note that if you want debug version, add "-DCMAKE_BUILD_TYPE=Debug" in cmake cmd.
\ No newline at end of file
+Note that if you want debug version, add "-DCMAKE_BUILD_TYPE=Debug" in cmake cmd.
diff -urp HIP-rocm-5.5.1.orig/tests/catch/CMakeLists.txt HIP-rocm-5.5.1/tests/catch/CMakeLists.txt
--- HIP-rocm-5.5.1.orig/tests/catch/CMakeLists.txt	2023-05-09 12:52:23.000000000 -0700
+++ HIP-rocm-5.5.1/tests/catch/CMakeLists.txt	2023-08-30 14:58:39.802789090 -0700
@@ -37,7 +37,7 @@ if(NOT DEFINED ROCM_PATH)
     else()
         cmake_path(GET HIP_PATH PARENT_PATH ROCM_PATH)
         if (NOT EXISTS "${ROCM_PATH}/bin/rocm_agent_enumerator")
-            set(ROCM_PATH "/opt/rocm/")
+            set(ROCM_PATH "/usr/")
         endif()
     endif()
 endif()
diff -urp HIP-rocm-5.5.1.orig/tests/catch/packaging/hip-tests.txt HIP-rocm-5.5.1/tests/catch/packaging/hip-tests.txt
--- HIP-rocm-5.5.1.orig/tests/catch/packaging/hip-tests.txt	2023-05-09 12:52:23.000000000 -0700
+++ HIP-rocm-5.5.1/tests/catch/packaging/hip-tests.txt	2023-08-30 14:58:39.802789090 -0700
@@ -65,7 +65,7 @@ install(FILES @PROJECT_BINARY_DIR@/CTest
 set(CPACK_SET_DESTDIR TRUE)
 set(CPACK_INSTALL_PREFIX @CPACK_INSTALL_PREFIX@)
 if(NOT DEFINED CPACK_INSTALL_PREFIX)
-  set(CPACK_INSTALL_PREFIX "/opt/rocm/test/hip/")
+  set(CPACK_INSTALL_PREFIX "/usr/test/hip/")
 endif()
 
 
diff -urp HIP-rocm-5.5.1.orig/tests/catch/unit/device/hipGetDeviceAttribute.cc HIP-rocm-5.5.1/tests/catch/unit/device/hipGetDeviceAttribute.cc
--- HIP-rocm-5.5.1.orig/tests/catch/unit/device/hipGetDeviceAttribute.cc	2023-05-09 12:52:23.000000000 -0700
+++ HIP-rocm-5.5.1/tests/catch/unit/device/hipGetDeviceAttribute.cc	2023-08-30 14:58:39.802789090 -0700
@@ -273,11 +273,11 @@ TEST_CASE("Unit_hipGetDeviceAttribute_Ch
   char command[COMMAND_LEN] = "";
   const char *rocmpath = nullptr;
   if (isRocmPathSet()) {
-    // For STG2 testing where /opt/rocm path is not present
+    // For STG2 testing where /usr path is not present
     rocmpath = "$ROCM_PATH/bin/rocminfo";
   } else {
     // Check if the rocminfo tool exists
-    rocmpath = "/opt/rocm/bin/rocminfo";
+    rocmpath = "/usr/bin/rocminfo";
   }
   snprintf(command, COMMAND_LEN, "%s", rocmpath);
   strncat(command, " | grep -i \"Segment:\\|Uuid:\"", COMMAND_LEN);
@@ -555,4 +555,4 @@ TEST_CASE("Print_Out_Attributes") {
 #endif
 
   std::flush(std::cout);
-}
\ No newline at end of file
+}
diff -urp HIP-rocm-5.5.1.orig/tests/hit/HIT.cmake HIP-rocm-5.5.1/tests/hit/HIT.cmake
--- HIP-rocm-5.5.1.orig/tests/hit/HIT.cmake	2023-05-09 12:52:23.000000000 -0700
+++ HIP-rocm-5.5.1/tests/hit/HIT.cmake	2023-08-30 14:58:39.802789090 -0700
@@ -326,7 +326,7 @@ endmacro()
 #-------------------------------------------------------------------------------
 
 # Macro: HIT_ADD_FILES used to scan+add multiple files for testing.
-file(GLOB HIP_LIB_FILES ${HIP_PATH}/lib/*)
+file(GLOB HIP_LIB_FILES ${HIP_PATH}/@LIBDIR@/*)
 macro(HIT_ADD_FILES _config _dir _label _parent)
     foreach (file ${ARGN})
         # Build tests
@@ -413,7 +413,7 @@ macro(HIT_ADD_FILES _config _dir _label
                         set_target_properties(${target} PROPERTIES OUTPUT_NAME ${_target_r} RUNTIME_OUTPUT_DIRECTORY "." LINK_DEPENDS "${HIP_LIB_FILES}" PREFIX "" SUFFIX "")
                 else()
                     # message(STATUS "add_custom_target*: target= ${target}  _buildcmd= ${_buildcmd}")
-                    add_custom_target(${target} COMMAND sh -c "${_buildcmd} -L${CMAKE_CURRENT_SOURCE_DIR}/build/lib -isystem ${CMAKE_CURRENT_SOURCE_DIR}/include")
+                    add_custom_target(${target} COMMAND sh -c "${_buildcmd} -L${CMAKE_CURRENT_SOURCE_DIR}/build/@LIBDIR@ -isystem ${CMAKE_CURRENT_SOURCE_DIR}/include")
                 endif()
                 add_dependencies(${_parent} ${target})
                 foreach(_dependency ${_depends})
diff -urp HIP-rocm-5.5.1.orig/tests/src/experimental/xcompile/gapi.sh HIP-rocm-5.5.1/tests/src/experimental/xcompile/gapi.sh
--- HIP-rocm-5.5.1.orig/tests/src/experimental/xcompile/gapi.sh	2023-05-09 12:52:23.000000000 -0700
+++ HIP-rocm-5.5.1/tests/src/experimental/xcompile/gapi.sh	2023-08-30 14:58:39.802789090 -0700
@@ -1,9 +1,9 @@
 #!/bin/bash
 
-gcc -D__HIP_PLATFORM_AMD__= -I${HIP_PATH}/include -I${HCC_HOME}/include -c gHipApi.c ${HIP_PATH}/lib/device_util.cpp.o ${HIP_PATH}/lib/hip_device.cpp.o ${HIP_PATH}/lib/hip_error.cpp.o ${HIP_PATH}/lib/hip_event.cpp.o ${HIP_PATH}/lib/hip_hcc.cpp.o ${HIP_PATH}/lib/hip_memory.cpp.o ${HIP_PATH}/lib/hip_peer.cpp.o ${HIP_PATH}/lib/hip_stream.cpp.o ${HIP_PATH}/lib/unpinned_copy_engine.cpp.o -L${HCC_HOME}/lib -lhc_am -L${HSA_PATH}/lib -lhsa-runtime64 -lc++ -lmcwamp -ldl -o gHipApi.o
+gcc -D__HIP_PLATFORM_AMD__= -I${HIP_PATH}/include -I${HCC_HOME}/include -c gHipApi.c ${HIP_PATH}/@LIBDIR@/device_util.cpp.o ${HIP_PATH}/@LIBDIR@/hip_device.cpp.o ${HIP_PATH}/@LIBDIR@/hip_error.cpp.o ${HIP_PATH}/@LIBDIR@/hip_event.cpp.o ${HIP_PATH}/@LIBDIR@/hip_hcc.cpp.o ${HIP_PATH}/@LIBDIR@/hip_memory.cpp.o ${HIP_PATH}/@LIBDIR@/hip_peer.cpp.o ${HIP_PATH}/@LIBDIR@/hip_stream.cpp.o ${HIP_PATH}/@LIBDIR@/unpinned_copy_engine.cpp.o -L${HCC_HOME}/@LIBDIR@ -lhc_am -L${HSA_PATH}/@LIBDIR@ -lhsa-runtime64 -lc++ -lmcwamp -ldl -o gHipApi.o
 
-gcc -D__HIP_PLATFORM_AMD__= -I${HIP_PATH}/include -I${HCC_HOME}/include -c hHipApi.c ${HIP_PATH}/lib/device_util.cpp.o ${HIP_PATH}/lib/hip_device.cpp.o ${HIP_PATH}/lib/hip_error.cpp.o ${HIP_PATH}/lib/hip_event.cpp.o ${HIP_PATH}/lib/hip_hcc.cpp.o ${HIP_PATH}/lib/hip_memory.cpp.o ${HIP_PATH}/lib/hip_peer.cpp.o ${HIP_PATH}/lib/hip_stream.cpp.o ${HIP_PATH}/lib/unpinned_copy_engine.cpp.o -L${HCC_HOME}/lib -lhc_am -L${HSA_PATH}/lib -lhsa-runtime64 -lc++ -lmcwamp -ldl -o hHipApi.o
+gcc -D__HIP_PLATFORM_AMD__= -I${HIP_PATH}/include -I${HCC_HOME}/include -c hHipApi.c ${HIP_PATH}/@LIBDIR@/device_util.cpp.o ${HIP_PATH}/@LIBDIR@/hip_device.cpp.o ${HIP_PATH}/@LIBDIR@/hip_error.cpp.o ${HIP_PATH}/@LIBDIR@/hip_event.cpp.o ${HIP_PATH}/@LIBDIR@/hip_hcc.cpp.o ${HIP_PATH}/@LIBDIR@/hip_memory.cpp.o ${HIP_PATH}/@LIBDIR@/hip_peer.cpp.o ${HIP_PATH}/@LIBDIR@/hip_stream.cpp.o ${HIP_PATH}/@LIBDIR@/unpinned_copy_engine.cpp.o -L${HCC_HOME}/@LIBDIR@ -lhc_am -L${HSA_PATH}/@LIBDIR@ -lhsa-runtime64 -lc++ -lmcwamp -ldl -o hHipApi.o
 
-gcc -D__HIP_PLATFORM_AMD__= -I${HIP_PATH}/include -I${HCC_HOME}/include hHipApi.o gHipApi.o ${HIP_PATH}/lib/device_util.cpp.o ${HIP_PATH}/lib/hip_device.cpp.o ${HIP_PATH}/lib/hip_error.cpp.o ${HIP_PATH}/lib/hip_event.cpp.o ${HIP_PATH}/lib/hip_hcc.cpp.o ${HIP_PATH}/lib/hip_memory.cpp.o ${HIP_PATH}/lib/hip_peer.cpp.o ${HIP_PATH}/lib/hip_stream.cpp.o ${HIP_PATH}/lib/unpinned_copy_engine.cpp.o -L${HCC_HOME}/lib -lhc_am -L${HSA_PATH}/lib -lhsa-runtime64 -lc++ -lmcwamp -ldl -lm -o gApi
+gcc -D__HIP_PLATFORM_AMD__= -I${HIP_PATH}/include -I${HCC_HOME}/include hHipApi.o gHipApi.o ${HIP_PATH}/@LIBDIR@/device_util.cpp.o ${HIP_PATH}/@LIBDIR@/hip_device.cpp.o ${HIP_PATH}/@LIBDIR@/hip_error.cpp.o ${HIP_PATH}/@LIBDIR@/hip_event.cpp.o ${HIP_PATH}/@LIBDIR@/hip_hcc.cpp.o ${HIP_PATH}/@LIBDIR@/hip_memory.cpp.o ${HIP_PATH}/@LIBDIR@/hip_peer.cpp.o ${HIP_PATH}/@LIBDIR@/hip_stream.cpp.o ${HIP_PATH}/@LIBDIR@/unpinned_copy_engine.cpp.o -L${HCC_HOME}/@LIBDIR@ -lhc_am -L${HSA_PATH}/@LIBDIR@ -lhsa-runtime64 -lc++ -lmcwamp -ldl -lm -o gApi
 
 
diff -urp HIP-rocm-5.5.1.orig/tests/src/experimental/xcompile/ghipapi.sh HIP-rocm-5.5.1/tests/src/experimental/xcompile/ghipapi.sh
--- HIP-rocm-5.5.1.orig/tests/src/experimental/xcompile/ghipapi.sh	2023-05-09 12:52:23.000000000 -0700
+++ HIP-rocm-5.5.1/tests/src/experimental/xcompile/ghipapi.sh	2023-08-30 14:58:39.802789090 -0700
@@ -1,8 +1,8 @@
 #!/bin/bash
 
-gcc -D__HIP_PLATFORM_AMD__= -I${HIP_PATH}/include -I${HCC_HOME}/include -c gHipApi.c ${HIP_PATH}/lib/device_util.cpp.o ${HIP_PATH}/lib/hip_device.cpp.o ${HIP_PATH}/lib/hip_error.cpp.o ${HIP_PATH}/lib/hip_event.cpp.o ${HIP_PATH}/lib/hip_hcc.cpp.o ${HIP_PATH}/lib/hip_memory.cpp.o ${HIP_PATH}/lib/hip_peer.cpp.o ${HIP_PATH}/lib/hip_stream.cpp.o ${HIP_PATH}/lib/unpinned_copy_engine.cpp.o -L${HCC_HOME}/lib -lhc_am -L${HSA_PATH}/lib -lhsa-runtime64 -lc++ -lmcwamp -ldl -o gHipApi.o
+gcc -D__HIP_PLATFORM_AMD__= -I${HIP_PATH}/include -I${HCC_HOME}/include -c gHipApi.c ${HIP_PATH}/@LIBDIR@/device_util.cpp.o ${HIP_PATH}/@LIBDIR@/hip_device.cpp.o ${HIP_PATH}/@LIBDIR@/hip_error.cpp.o ${HIP_PATH}/@LIBDIR@/hip_event.cpp.o ${HIP_PATH}/@LIBDIR@/hip_hcc.cpp.o ${HIP_PATH}/@LIBDIR@/hip_memory.cpp.o ${HIP_PATH}/@LIBDIR@/hip_peer.cpp.o ${HIP_PATH}/@LIBDIR@/hip_stream.cpp.o ${HIP_PATH}/@LIBDIR@/unpinned_copy_engine.cpp.o -L${HCC_HOME}/@LIBDIR@ -lhc_am -L${HSA_PATH}/@LIBDIR@ -lhsa-runtime64 -lc++ -lmcwamp -ldl -o gHipApi.o
 
-gcc -D__HIP_PLATFORM_AMD__= -I${HIP_PATH}/include -I${HCC_HOME}/include -c hHipApi.c ${HIP_PATH}/lib/device_util.cpp.o ${HIP_PATH}/lib/hip_device.cpp.o ${HIP_PATH}/lib/hip_error.cpp.o ${HIP_PATH}/lib/hip_event.cpp.o ${HIP_PATH}/lib/hip_hcc.cpp.o ${HIP_PATH}/lib/hip_memory.cpp.o ${HIP_PATH}/lib/hip_peer.cpp.o ${HIP_PATH}/lib/hip_stream.cpp.o ${HIP_PATH}/lib/unpinned_copy_engine.cpp.o -L${HCC_HOME}/lib -lhc_am -L${HSA_PATH}/lib -lhsa-runtime64 -lc++ -lmcwamp -ldl -o hHipApi.o
+gcc -D__HIP_PLATFORM_AMD__= -I${HIP_PATH}/include -I${HCC_HOME}/include -c hHipApi.c ${HIP_PATH}/@LIBDIR@/device_util.cpp.o ${HIP_PATH}/@LIBDIR@/hip_device.cpp.o ${HIP_PATH}/@LIBDIR@/hip_error.cpp.o ${HIP_PATH}/@LIBDIR@/hip_event.cpp.o ${HIP_PATH}/@LIBDIR@/hip_hcc.cpp.o ${HIP_PATH}/@LIBDIR@/hip_memory.cpp.o ${HIP_PATH}/@LIBDIR@/hip_peer.cpp.o ${HIP_PATH}/@LIBDIR@/hip_stream.cpp.o ${HIP_PATH}/@LIBDIR@/unpinned_copy_engine.cpp.o -L${HCC_HOME}/@LIBDIR@ -lhc_am -L${HSA_PATH}/@LIBDIR@ -lhsa-runtime64 -lc++ -lmcwamp -ldl -o hHipApi.o
 
 hipcc hHipApi.o gHipApi.o -o gHipApi
 
diff -urp HIP-rocm-5.5.1.orig/tests/src/experimental/xcompile/gxxapi.sh HIP-rocm-5.5.1/tests/src/experimental/xcompile/gxxapi.sh
--- HIP-rocm-5.5.1.orig/tests/src/experimental/xcompile/gxxapi.sh	2023-05-09 12:52:23.000000000 -0700
+++ HIP-rocm-5.5.1/tests/src/experimental/xcompile/gxxapi.sh	2023-08-30 14:58:39.802789090 -0700
@@ -1,8 +1,8 @@
 #!/bin/bash
 
-g++ -D__HIP_PLATFORM_AMD__= -I${HIP_PATH}/include -I${HCC_HOME}/include -c gxxHipApi.cpp ${HIP_PATH}/lib/device_util.cpp.o ${HIP_PATH}/lib/hip_device.cpp.o ${HIP_PATH}/lib/hip_error.cpp.o ${HIP_PATH}/lib/hip_event.cpp.o ${HIP_PATH}/lib/hip_hcc.cpp.o ${HIP_PATH}/lib/hip_memory.cpp.o ${HIP_PATH}/lib/hip_peer.cpp.o ${HIP_PATH}/lib/hip_stream.cpp.o ${HIP_PATH}/lib/unpinned_copy_engine.cpp.o -L${HCC_HOME}/lib -lhc_am -L${HSA_PATH}/lib -lhsa-runtime64 -lc++ -lmcwamp -ldl -o gxxHipApi.o
+g++ -D__HIP_PLATFORM_AMD__= -I${HIP_PATH}/include -I${HCC_HOME}/include -c gxxHipApi.cpp ${HIP_PATH}/@LIBDIR@/device_util.cpp.o ${HIP_PATH}/@LIBDIR@/hip_device.cpp.o ${HIP_PATH}/@LIBDIR@/hip_error.cpp.o ${HIP_PATH}/@LIBDIR@/hip_event.cpp.o ${HIP_PATH}/@LIBDIR@/hip_hcc.cpp.o ${HIP_PATH}/@LIBDIR@/hip_memory.cpp.o ${HIP_PATH}/@LIBDIR@/hip_peer.cpp.o ${HIP_PATH}/@LIBDIR@/hip_stream.cpp.o ${HIP_PATH}/@LIBDIR@/unpinned_copy_engine.cpp.o -L${HCC_HOME}/@LIBDIR@ -lhc_am -L${HSA_PATH}/@LIBDIR@ -lhsa-runtime64 -lc++ -lmcwamp -ldl -o gxxHipApi.o
 
-g++ -D__HIP_PLATFORM_AMD__= -I${HIP_PATH}/include -I${HCC_HOME}/include -c hxxHipApi.cpp ${HIP_PATH}/lib/device_util.cpp.o ${HIP_PATH}/lib/hip_device.cpp.o ${HIP_PATH}/lib/hip_error.cpp.o ${HIP_PATH}/lib/hip_event.cpp.o ${HIP_PATH}/lib/hip_hcc.cpp.o ${HIP_PATH}/lib/hip_memory.cpp.o ${HIP_PATH}/lib/hip_peer.cpp.o ${HIP_PATH}/lib/hip_stream.cpp.o ${HIP_PATH}/lib/unpinned_copy_engine.cpp.o -L${HCC_HOME}/lib -lhc_am -L${HSA_PATH}/lib -lhsa-runtime64 -lc++ -lmcwamp -ldl -o hxxHipApi.o
+g++ -D__HIP_PLATFORM_AMD__= -I${HIP_PATH}/include -I${HCC_HOME}/include -c hxxHipApi.cpp ${HIP_PATH}/@LIBDIR@/device_util.cpp.o ${HIP_PATH}/@LIBDIR@/hip_device.cpp.o ${HIP_PATH}/@LIBDIR@/hip_error.cpp.o ${HIP_PATH}/@LIBDIR@/hip_event.cpp.o ${HIP_PATH}/@LIBDIR@/hip_hcc.cpp.o ${HIP_PATH}/@LIBDIR@/hip_memory.cpp.o ${HIP_PATH}/@LIBDIR@/hip_peer.cpp.o ${HIP_PATH}/@LIBDIR@/hip_stream.cpp.o ${HIP_PATH}/@LIBDIR@/unpinned_copy_engine.cpp.o -L${HCC_HOME}/@LIBDIR@ -lhc_am -L${HSA_PATH}/@LIBDIR@ -lhsa-runtime64 -lc++ -lmcwamp -ldl -o hxxHipApi.o
 
-g++ -D__HIP_PLATFORM_AMD__= -I${HIP_PATH}/include -I${HCC_HOME}/include gxxHipApi.o hxxHipApi.o ${HIP_PATH}/lib/device_util.cpp.o ${HIP_PATH}/lib/hip_device.cpp.o ${HIP_PATH}/lib/hip_error.cpp.o ${HIP_PATH}/lib/hip_event.cpp.o ${HIP_PATH}/lib/hip_hcc.cpp.o ${HIP_PATH}/lib/hip_memory.cpp.o ${HIP_PATH}/lib/hip_peer.cpp.o ${HIP_PATH}/lib/hip_stream.cpp.o ${HIP_PATH}/lib/unpinned_copy_engine.cpp.o -L${HCC_HOME}/lib -lhc_am -L${HSA_PATH}/lib -lhsa-runtime64 -lc++ -lmcwamp -ldl -o gxxApi
+g++ -D__HIP_PLATFORM_AMD__= -I${HIP_PATH}/include -I${HCC_HOME}/include gxxHipApi.o hxxHipApi.o ${HIP_PATH}/@LIBDIR@/device_util.cpp.o ${HIP_PATH}/@LIBDIR@/hip_device.cpp.o ${HIP_PATH}/@LIBDIR@/hip_error.cpp.o ${HIP_PATH}/@LIBDIR@/hip_event.cpp.o ${HIP_PATH}/@LIBDIR@/hip_hcc.cpp.o ${HIP_PATH}/@LIBDIR@/hip_memory.cpp.o ${HIP_PATH}/@LIBDIR@/hip_peer.cpp.o ${HIP_PATH}/@LIBDIR@/hip_stream.cpp.o ${HIP_PATH}/@LIBDIR@/unpinned_copy_engine.cpp.o -L${HCC_HOME}/@LIBDIR@ -lhc_am -L${HSA_PATH}/@LIBDIR@ -lhsa-runtime64 -lc++ -lmcwamp -ldl -o gxxApi
 
diff -urp HIP-rocm-5.5.1.orig/tests/src/experimental/xcompile/gxxhipapi.sh HIP-rocm-5.5.1/tests/src/experimental/xcompile/gxxhipapi.sh
--- HIP-rocm-5.5.1.orig/tests/src/experimental/xcompile/gxxhipapi.sh	2023-05-09 12:52:23.000000000 -0700
+++ HIP-rocm-5.5.1/tests/src/experimental/xcompile/gxxhipapi.sh	2023-08-30 14:58:39.802789090 -0700
@@ -1,8 +1,8 @@
 #!/bin/bash
 
-g++ -D__HIP_PLATFORM_AMD__= -I${HIP_PATH}/include -I${HCC_HOME}/include -c gxxHipApi.cpp ${HIP_PATH}/lib/device_util.cpp.o ${HIP_PATH}/lib/hip_device.cpp.o ${HIP_PATH}/lib/hip_error.cpp.o ${HIP_PATH}/lib/hip_event.cpp.o ${HIP_PATH}/lib/hip_hcc.cpp.o ${HIP_PATH}/lib/hip_memory.cpp.o ${HIP_PATH}/lib/hip_peer.cpp.o ${HIP_PATH}/lib/hip_stream.cpp.o ${HIP_PATH}/lib/unpinned_copy_engine.cpp.o -L${HCC_HOME}/lib -lhc_am -L${HSA_PATH}/lib -lhsa-runtime64 -lc++ -lmcwamp -ldl -o gxxHipApi.o
+g++ -D__HIP_PLATFORM_AMD__= -I${HIP_PATH}/include -I${HCC_HOME}/include -c gxxHipApi.cpp ${HIP_PATH}/@LIBDIR@/device_util.cpp.o ${HIP_PATH}/@LIBDIR@/hip_device.cpp.o ${HIP_PATH}/@LIBDIR@/hip_error.cpp.o ${HIP_PATH}/@LIBDIR@/hip_event.cpp.o ${HIP_PATH}/@LIBDIR@/hip_hcc.cpp.o ${HIP_PATH}/@LIBDIR@/hip_memory.cpp.o ${HIP_PATH}/@LIBDIR@/hip_peer.cpp.o ${HIP_PATH}/@LIBDIR@/hip_stream.cpp.o ${HIP_PATH}/@LIBDIR@/unpinned_copy_engine.cpp.o -L${HCC_HOME}/@LIBDIR@ -lhc_am -L${HSA_PATH}/@LIBDIR@ -lhsa-runtime64 -lc++ -lmcwamp -ldl -o gxxHipApi.o
 
 hipcc -c hxxHipApi.cpp -o hxxHipApi.o
 
-g++ -D__HIP_PLATFORM_AMD__= -I${HIP_PATH}/include -I${HCC_HOME}/include gxxHipApi.o hxxHipApi.o ${HIP_PATH}/lib/device_util.cpp.o ${HIP_PATH}/lib/hip_device.cpp.o ${HIP_PATH}/lib/hip_error.cpp.o ${HIP_PATH}/lib/hip_event.cpp.o ${HIP_PATH}/lib/hip_hcc.cpp.o ${HIP_PATH}/lib/hip_memory.cpp.o ${HIP_PATH}/lib/hip_peer.cpp.o ${HIP_PATH}/lib/hip_stream.cpp.o ${HIP_PATH}/lib/unpinned_copy_engine.cpp.o -L${HCC_HOME}/lib -lhc_am -L${HSA_PATH}/lib -lhsa-runtime64 -lc++ -lmcwamp -ldl -o gxxHipApi
+g++ -D__HIP_PLATFORM_AMD__= -I${HIP_PATH}/include -I${HCC_HOME}/include gxxHipApi.o hxxHipApi.o ${HIP_PATH}/@LIBDIR@/device_util.cpp.o ${HIP_PATH}/@LIBDIR@/hip_device.cpp.o ${HIP_PATH}/@LIBDIR@/hip_error.cpp.o ${HIP_PATH}/@LIBDIR@/hip_event.cpp.o ${HIP_PATH}/@LIBDIR@/hip_hcc.cpp.o ${HIP_PATH}/@LIBDIR@/hip_memory.cpp.o ${HIP_PATH}/@LIBDIR@/hip_peer.cpp.o ${HIP_PATH}/@LIBDIR@/hip_stream.cpp.o ${HIP_PATH}/@LIBDIR@/unpinned_copy_engine.cpp.o -L${HCC_HOME}/@LIBDIR@ -lhc_am -L${HSA_PATH}/@LIBDIR@ -lhsa-runtime64 -lc++ -lmcwamp -ldl -o gxxHipApi
 
diff -urp HIP-rocm-5.5.1.orig/tests/src/experimental/xcompile/hipapig.sh HIP-rocm-5.5.1/tests/src/experimental/xcompile/hipapig.sh
--- HIP-rocm-5.5.1.orig/tests/src/experimental/xcompile/hipapig.sh	2023-05-09 12:52:23.000000000 -0700
+++ HIP-rocm-5.5.1/tests/src/experimental/xcompile/hipapig.sh	2023-08-30 14:58:39.802789090 -0700
@@ -1,3 +1,3 @@
 #!/bin/bash
 
-gcc -D__HIP_PLATFORM_AMD__= -I${HIP_PATH}/include -I${HCC_HOME}/include gApi.c ${HIP_PATH}/lib/device_util.cpp.o ${HIP_PATH}/lib/hip_device.cpp.o ${HIP_PATH}/lib/hip_error.cpp.o ${HIP_PATH}/lib/hip_event.cpp.o ${HIP_PATH}/lib/hip_hcc.cpp.o ${HIP_PATH}/lib/hip_memory.cpp.o ${HIP_PATH}/lib/hip_peer.cpp.o ${HIP_PATH}/lib/hip_stream.cpp.o ${HIP_PATH}/lib/unpinned_copy_engine.cpp.o -L${HCC_HOME}/lib -lhc_am -L${HSA_PATH}/lib -lhsa-runtime64 -lc++ -lmcwamp -ldl -lm -o gApi
+gcc -D__HIP_PLATFORM_AMD__= -I${HIP_PATH}/include -I${HCC_HOME}/include gApi.c ${HIP_PATH}/@LIBDIR@/device_util.cpp.o ${HIP_PATH}/@LIBDIR@/hip_device.cpp.o ${HIP_PATH}/@LIBDIR@/hip_error.cpp.o ${HIP_PATH}/@LIBDIR@/hip_event.cpp.o ${HIP_PATH}/@LIBDIR@/hip_hcc.cpp.o ${HIP_PATH}/@LIBDIR@/hip_memory.cpp.o ${HIP_PATH}/@LIBDIR@/hip_peer.cpp.o ${HIP_PATH}/@LIBDIR@/hip_stream.cpp.o ${HIP_PATH}/@LIBDIR@/unpinned_copy_engine.cpp.o -L${HCC_HOME}/@LIBDIR@ -lhc_am -L${HSA_PATH}/@LIBDIR@ -lhsa-runtime64 -lc++ -lmcwamp -ldl -lm -o gApi
diff -urp HIP-rocm-5.5.1.orig/tests/src/experimental/xcompile/hipapigxx.sh HIP-rocm-5.5.1/tests/src/experimental/xcompile/hipapigxx.sh
--- HIP-rocm-5.5.1.orig/tests/src/experimental/xcompile/hipapigxx.sh	2023-05-09 12:52:23.000000000 -0700
+++ HIP-rocm-5.5.1/tests/src/experimental/xcompile/hipapigxx.sh	2023-08-30 14:58:39.802789090 -0700
@@ -1,3 +1,3 @@
 #!/bin/bash
 
-g++ -D__HIP_PLATFORM_AMD__= -I${HIP_PATH}/include -I${HCC_HOME}/include gxxApi.cpp ${HIP_PATH}/lib/device_util.cpp.o ${HIP_PATH}/lib/hip_device.cpp.o ${HIP_PATH}/lib/hip_error.cpp.o ${HIP_PATH}/lib/hip_event.cpp.o ${HIP_PATH}/lib/hip_hcc.cpp.o ${HIP_PATH}/lib/hip_memory.cpp.o ${HIP_PATH}/lib/hip_peer.cpp.o ${HIP_PATH}/lib/hip_stream.cpp.o ${HIP_PATH}/lib/unpinned_copy_engine.cpp.o -L${HCC_HOME}/lib -lhc_am -L${HSA_PATH}/lib -lhsa-runtime64 -lc++ -lmcwamp -ldl -o gxxApi
+g++ -D__HIP_PLATFORM_AMD__= -I${HIP_PATH}/include -I${HCC_HOME}/include gxxApi.cpp ${HIP_PATH}/@LIBDIR@/device_util.cpp.o ${HIP_PATH}/@LIBDIR@/hip_device.cpp.o ${HIP_PATH}/@LIBDIR@/hip_error.cpp.o ${HIP_PATH}/@LIBDIR@/hip_event.cpp.o ${HIP_PATH}/@LIBDIR@/hip_hcc.cpp.o ${HIP_PATH}/@LIBDIR@/hip_memory.cpp.o ${HIP_PATH}/@LIBDIR@/hip_peer.cpp.o ${HIP_PATH}/@LIBDIR@/hip_stream.cpp.o ${HIP_PATH}/@LIBDIR@/unpinned_copy_engine.cpp.o -L${HCC_HOME}/@LIBDIR@ -lhc_am -L${HSA_PATH}/@LIBDIR@ -lhsa-runtime64 -lc++ -lmcwamp -ldl -o gxxApi
diff -urp HIP-rocm-5.5.1.orig/tests/src/experimental/xcompile/hipgapi.sh HIP-rocm-5.5.1/tests/src/experimental/xcompile/hipgapi.sh
--- HIP-rocm-5.5.1.orig/tests/src/experimental/xcompile/hipgapi.sh	2023-05-09 12:52:23.000000000 -0700
+++ HIP-rocm-5.5.1/tests/src/experimental/xcompile/hipgapi.sh	2023-08-30 14:58:39.802789090 -0700
@@ -1,6 +1,6 @@
 #!/bin/bash
 
-gcc -D__HIP_PLATFORM_AMD__= -I${HIP_PATH}/include -I${HCC_HOME}/include -c gHipApi.c ${HIP_PATH}/lib/device_util.cpp.o ${HIP_PATH}/lib/hip_device.cpp.o ${HIP_PATH}/lib/hip_error.cpp.o ${HIP_PATH}/lib/hip_event.cpp.o ${HIP_PATH}/lib/hip_hcc.cpp.o ${HIP_PATH}/lib/hip_memory.cpp.o ${HIP_PATH}/lib/hip_peer.cpp.o ${HIP_PATH}/lib/hip_stream.cpp.o ${HIP_PATH}/lib/unpinned_copy_engine.cpp.o -L${HCC_HOME}/lib -lhc_am -L${HSA_PATH}/lib -lhsa-runtime64 -lc++ -lmcwamp -ldl -o gHipApi.o
+gcc -D__HIP_PLATFORM_AMD__= -I${HIP_PATH}/include -I${HCC_HOME}/include -c gHipApi.c ${HIP_PATH}/@LIBDIR@/device_util.cpp.o ${HIP_PATH}/@LIBDIR@/hip_device.cpp.o ${HIP_PATH}/@LIBDIR@/hip_error.cpp.o ${HIP_PATH}/@LIBDIR@/hip_event.cpp.o ${HIP_PATH}/@LIBDIR@/hip_hcc.cpp.o ${HIP_PATH}/@LIBDIR@/hip_memory.cpp.o ${HIP_PATH}/@LIBDIR@/hip_peer.cpp.o ${HIP_PATH}/@LIBDIR@/hip_stream.cpp.o ${HIP_PATH}/@LIBDIR@/unpinned_copy_engine.cpp.o -L${HCC_HOME}/@LIBDIR@ -lhc_am -L${HSA_PATH}/@LIBDIR@ -lhsa-runtime64 -lc++ -lmcwamp -ldl -o gHipApi.o
 
 hipcc -c hHipApi.c -o hHipApi.o
 
diff -urp HIP-rocm-5.5.1.orig/tests/src/experimental/xcompile/hipg.sh HIP-rocm-5.5.1/tests/src/experimental/xcompile/hipg.sh
--- HIP-rocm-5.5.1.orig/tests/src/experimental/xcompile/hipg.sh	2023-05-09 12:52:23.000000000 -0700
+++ HIP-rocm-5.5.1/tests/src/experimental/xcompile/hipg.sh	2023-08-30 14:58:39.802789090 -0700
@@ -1,6 +1,6 @@
 #!/bin/bash
 
-gcc -D__HIP_PLATFORM_AMD__= -I${HIP_PATH}/include -I${HCC_HOME}/include -c gHipApi.c ${HIP_PATH}/lib/device_util.cpp.o ${HIP_PATH}/lib/hip_device.cpp.o ${HIP_PATH}/lib/hip_error.cpp.o ${HIP_PATH}/lib/hip_event.cpp.o ${HIP_PATH}/lib/hip_hcc.cpp.o ${HIP_PATH}/lib/hip_memory.cpp.o ${HIP_PATH}/lib/hip_peer.cpp.o ${HIP_PATH}/lib/hip_stream.cpp.o ${HIP_PATH}/lib/unpinned_copy_engine.cpp.o -L${HCC_HOME}/lib -lhc_am -L${HSA_PATH}/lib -lhsa-runtime64 -lc++ -lmcwamp -ldl -o gHipApi.o
+gcc -D__HIP_PLATFORM_AMD__= -I${HIP_PATH}/include -I${HCC_HOME}/include -c gHipApi.c ${HIP_PATH}/@LIBDIR@/device_util.cpp.o ${HIP_PATH}/@LIBDIR@/hip_device.cpp.o ${HIP_PATH}/@LIBDIR@/hip_error.cpp.o ${HIP_PATH}/@LIBDIR@/hip_event.cpp.o ${HIP_PATH}/@LIBDIR@/hip_hcc.cpp.o ${HIP_PATH}/@LIBDIR@/hip_memory.cpp.o ${HIP_PATH}/@LIBDIR@/hip_peer.cpp.o ${HIP_PATH}/@LIBDIR@/hip_stream.cpp.o ${HIP_PATH}/@LIBDIR@/unpinned_copy_engine.cpp.o -L${HCC_HOME}/@LIBDIR@ -lhc_am -L${HSA_PATH}/@LIBDIR@ -lhsa-runtime64 -lc++ -lmcwamp -ldl -o gHipApi.o
 
 hipcc -c hHip.c -o hHip.o
 
diff -urp HIP-rocm-5.5.1.orig/tests/src/experimental/xcompile/hipgxxapi.sh HIP-rocm-5.5.1/tests/src/experimental/xcompile/hipgxxapi.sh
--- HIP-rocm-5.5.1.orig/tests/src/experimental/xcompile/hipgxxapi.sh	2023-05-09 12:52:23.000000000 -0700
+++ HIP-rocm-5.5.1/tests/src/experimental/xcompile/hipgxxapi.sh	2023-08-30 14:58:39.802789090 -0700
@@ -1,6 +1,6 @@
 #!/bin/bash
 
-g++ -D__HIP_PLATFORM_AMD__= -I${HIP_PATH}/include -I${HCC_HOME}/include -c gxxHipApi.cpp ${HIP_PATH}/lib/device_util.cpp.o ${HIP_PATH}/lib/hip_device.cpp.o ${HIP_PATH}/lib/hip_error.cpp.o ${HIP_PATH}/lib/hip_event.cpp.o ${HIP_PATH}/lib/hip_hcc.cpp.o ${HIP_PATH}/lib/hip_memory.cpp.o ${HIP_PATH}/lib/hip_peer.cpp.o ${HIP_PATH}/lib/hip_stream.cpp.o ${HIP_PATH}/lib/unpinned_copy_engine.cpp.o -L${HCC_HOME}/lib -lhc_am -L${HSA_PATH}/lib -lhsa-runtime64 -lc++ -lmcwamp -ldl -o gxxHipApi.o
+g++ -D__HIP_PLATFORM_AMD__= -I${HIP_PATH}/include -I${HCC_HOME}/include -c gxxHipApi.cpp ${HIP_PATH}/@LIBDIR@/device_util.cpp.o ${HIP_PATH}/@LIBDIR@/hip_device.cpp.o ${HIP_PATH}/@LIBDIR@/hip_error.cpp.o ${HIP_PATH}/@LIBDIR@/hip_event.cpp.o ${HIP_PATH}/@LIBDIR@/hip_hcc.cpp.o ${HIP_PATH}/@LIBDIR@/hip_memory.cpp.o ${HIP_PATH}/@LIBDIR@/hip_peer.cpp.o ${HIP_PATH}/@LIBDIR@/hip_stream.cpp.o ${HIP_PATH}/@LIBDIR@/unpinned_copy_engine.cpp.o -L${HCC_HOME}/@LIBDIR@ -lhc_am -L${HSA_PATH}/@LIBDIR@ -lhsa-runtime64 -lc++ -lmcwamp -ldl -o gxxHipApi.o
 
 hipcc -c hxxHipApi.cpp -o hxxHipApi.o
 
diff -urp HIP-rocm-5.5.1.orig/tests/src/experimental/xcompile/hipgxx.sh HIP-rocm-5.5.1/tests/src/experimental/xcompile/hipgxx.sh
--- HIP-rocm-5.5.1.orig/tests/src/experimental/xcompile/hipgxx.sh	2023-05-09 12:52:23.000000000 -0700
+++ HIP-rocm-5.5.1/tests/src/experimental/xcompile/hipgxx.sh	2023-08-30 14:58:39.802789090 -0700
@@ -1,6 +1,6 @@
 #!/bin/bash
 
-g++ -D__HIP_PLATFORM_AMD__= -I${HIP_PATH}/include -I${HCC_HOME}/include -c gxxHipApi.cpp ${HIP_PATH}/lib/device_util.cpp.o ${HIP_PATH}/lib/hip_device.cpp.o ${HIP_PATH}/lib/hip_error.cpp.o ${HIP_PATH}/lib/hip_event.cpp.o ${HIP_PATH}/lib/hip_hcc.cpp.o ${HIP_PATH}/lib/hip_memory.cpp.o ${HIP_PATH}/lib/hip_peer.cpp.o ${HIP_PATH}/lib/hip_stream.cpp.o ${HIP_PATH}/lib/unpinned_copy_engine.cpp.o -L${HCC_HOME}/lib -lhc_am -L${HSA_PATH}/lib -lhsa-runtime64 -lc++ -lmcwamp -ldl -o gxxHipApi.o
+g++ -D__HIP_PLATFORM_AMD__= -I${HIP_PATH}/include -I${HCC_HOME}/include -c gxxHipApi.cpp ${HIP_PATH}/@LIBDIR@/device_util.cpp.o ${HIP_PATH}/@LIBDIR@/hip_device.cpp.o ${HIP_PATH}/@LIBDIR@/hip_error.cpp.o ${HIP_PATH}/@LIBDIR@/hip_event.cpp.o ${HIP_PATH}/@LIBDIR@/hip_hcc.cpp.o ${HIP_PATH}/@LIBDIR@/hip_memory.cpp.o ${HIP_PATH}/@LIBDIR@/hip_peer.cpp.o ${HIP_PATH}/@LIBDIR@/hip_stream.cpp.o ${HIP_PATH}/@LIBDIR@/unpinned_copy_engine.cpp.o -L${HCC_HOME}/@LIBDIR@ -lhc_am -L${HSA_PATH}/@LIBDIR@ -lhsa-runtime64 -lc++ -lmcwamp -ldl -o gxxHipApi.o
 
 hipcc -c hxxHip.cpp -o hxxHip.o
 
diff -urp HIP-rocm-5.5.1.orig/tests/src/g++/hipMalloc.cpp HIP-rocm-5.5.1/tests/src/g++/hipMalloc.cpp
--- HIP-rocm-5.5.1.orig/tests/src/g++/hipMalloc.cpp	2023-05-09 12:52:23.000000000 -0700
+++ HIP-rocm-5.5.1/tests/src/g++/hipMalloc.cpp	2023-08-30 14:58:39.802789090 -0700
@@ -18,8 +18,8 @@
  * */
 
 /* HIT_START
- * BUILD_CMD: hipMalloc %cxx -D__HIP_PLATFORM_NVIDIA__ -I%hip-path/include -I/usr/local/cuda/include %S/%s -o %T/hipMalloc_cxx_nvidia -L/usr/local/cuda/lib64 -lcudart -std=c++11 EXCLUDE_HIP_PLATFORM amd
- * BUILD_CMD: hipMalloc %cxx -D__HIP_PLATFORM_AMD__ -I%hip-path/include -I%rocm-path/include %S/%s -Wl,--rpath=%rocm-path/lib %hip-path/lib/libamdhip64.so -o %T/hipMalloc_cxx_amd -std=c++11 EXCLUDE_HIP_PLATFORM nvidia
+ * BUILD_CMD: hipMalloc %cxx -D__HIP_PLATFORM_NVIDIA__ -I%hip-path/include -I/opt/cuda/include %S/%s -o %T/hipMalloc_cxx_nvidia -L/opt/cuda/@LIBDIR@ -lcudart -std=c++11 EXCLUDE_HIP_PLATFORM amd
+ * BUILD_CMD: hipMalloc %cxx -D__HIP_PLATFORM_AMD__ -I%hip-path/include -I%rocm-path/include %S/%s -Wl,--rpath=%rocm-path/@LIBDIR@ %hip-path/@LIBDIR@/libamdhip64.so -o %T/hipMalloc_cxx_amd -std=c++11 EXCLUDE_HIP_PLATFORM nvidia
  * TEST: hipMalloc_cxx_nvidia EXCLUDE_HIP_PLATFORM amd
  * TEST: hipMalloc_cxx_amd EXCLUDE_HIP_PLATFORM nvidia
  * HIT_END
diff -urp HIP-rocm-5.5.1.orig/tests/src/gcc/hipMalloc.c HIP-rocm-5.5.1/tests/src/gcc/hipMalloc.c
--- HIP-rocm-5.5.1.orig/tests/src/gcc/hipMalloc.c	2023-05-09 12:52:23.000000000 -0700
+++ HIP-rocm-5.5.1/tests/src/gcc/hipMalloc.c	2023-08-30 14:58:39.802789090 -0700
@@ -18,8 +18,8 @@
  * */
 
 /* HIT_START
- * BUILD_CMD: hipMalloc %cc -D__HIP_PLATFORM_NVIDIA__ -I%hip-path/include -I/usr/local/cuda/include %S/%s -o %T/hipMalloc_cc_nvidia -L/usr/local/cuda/lib64 -lcudart EXCLUDE_HIP_PLATFORM amd
- * BUILD_CMD: hipMalloc %cc -D__HIP_PLATFORM_AMD__ -I%hip-path/include %S/%s -Wl,--rpath=%hip-path/lib %hip-path/lib/libamdhip64.so -o %T/hipMalloc_cc_amd EXCLUDE_HIP_PLATFORM nvidia
+ * BUILD_CMD: hipMalloc %cc -D__HIP_PLATFORM_NVIDIA__ -I%hip-path/include -I/opt/cuda/include %S/%s -o %T/hipMalloc_cc_nvidia -L/opt/cuda/@LIBDIR@ -lcudart EXCLUDE_HIP_PLATFORM amd
+ * BUILD_CMD: hipMalloc %cc -D__HIP_PLATFORM_AMD__ -I%hip-path/include %S/%s -Wl,--rpath=%hip-path/@LIBDIR@ %hip-path/@LIBDIR@/libamdhip64.so -o %T/hipMalloc_cc_amd EXCLUDE_HIP_PLATFORM nvidia
  * TEST: hipMalloc_cc_nvidia EXCLUDE_HIP_PLATFORM amd
  * TEST: hipMalloc_cc_amd EXCLUDE_HIP_PLATFORM nvidia
  * HIT_END
diff -urp HIP-rocm-5.5.1.orig/tests/src/gcc/LaunchKernel.c HIP-rocm-5.5.1/tests/src/gcc/LaunchKernel.c
--- HIP-rocm-5.5.1.orig/tests/src/gcc/LaunchKernel.c	2023-05-09 12:52:23.000000000 -0700
+++ HIP-rocm-5.5.1/tests/src/gcc/LaunchKernel.c	2023-08-30 14:58:39.802789090 -0700
@@ -21,7 +21,7 @@
 /* HIT_START
  * BUILD_CMD: gpu.o %hc -I%hip-path/include -g -c %S/gpu.cpp -o %T/gpu.o EXCLUDE_HIP_PLATFORM nvidia EXCLUDE_HIP_LIB_TYPE static
  * BUILD_CMD: launchkernel.o %hc -D__HIP_PLATFORM_AMD__ -g -I%hip-path/include -c %S/LaunchKernel.c -o %T/launchkernel.o EXCLUDE_HIP_PLATFORM nvidia EXCLUDE_HIP_LIB_TYPE static
- * BUILD_CMD: LaunchKernel %hc %T/launchkernel.o %T/gpu.o -g -Wl,--rpath=%hip-path/lib %hip-path/lib/libamdhip64.so -o %T/%t DEPENDS gpu.o launchkernel.o EXCLUDE_HIP_PLATFORM nvidia EXCLUDE_HIP_LIB_TYPE static
+ * BUILD_CMD: LaunchKernel %hc %T/launchkernel.o %T/gpu.o -g -Wl,--rpath=%hip-path/@LIBDIR@ %hip-path/@LIBDIR@/libamdhip64.so -o %T/%t DEPENDS gpu.o launchkernel.o EXCLUDE_HIP_PLATFORM nvidia EXCLUDE_HIP_LIB_TYPE static
  * TEST: %t EXCLUDE_HIP_PLATFORM nvidia EXCLUDE_HIP_LIB_TYPE static
  * HIT_END
  */
diff -urp HIP-rocm-5.5.1.orig/tests/src/runtimeApi/module/hipModule.cpp HIP-rocm-5.5.1/tests/src/runtimeApi/module/hipModule.cpp
--- HIP-rocm-5.5.1.orig/tests/src/runtimeApi/module/hipModule.cpp	2023-05-09 12:52:23.000000000 -0700
+++ HIP-rocm-5.5.1/tests/src/runtimeApi/module/hipModule.cpp	2023-08-30 14:58:39.802789090 -0700
@@ -153,7 +153,7 @@ bool testMultiTargArchCodeObj() {
   if (isRocmPathSet()) {
     hipcc_path = "$ROCM_PATH/bin/hipcc";
   } else {
-    hipcc_path = "/opt/rocm/bin/hipcc";
+    hipcc_path = "/usr/bin/hipcc";
   }
   /* Putting these command parameters into a variable to shorten the string
     literal length in order to avoid multiline string literal cpplint warning
diff -urp HIP-rocm-5.5.1.orig/tests/src/runtimeApi/module/hipOpenCLCOTest.cpp HIP-rocm-5.5.1/tests/src/runtimeApi/module/hipOpenCLCOTest.cpp
--- HIP-rocm-5.5.1.orig/tests/src/runtimeApi/module/hipOpenCLCOTest.cpp	2023-05-09 12:52:23.000000000 -0700
+++ HIP-rocm-5.5.1/tests/src/runtimeApi/module/hipOpenCLCOTest.cpp	2023-08-30 14:58:39.802789090 -0700
@@ -130,11 +130,11 @@ int getV3TargetIdFeature(char* feature,
   char command[COMMAND_LEN] = "";
   const char *rocmpath = nullptr;
   if (rocmPathSet) {
-    // For STG2 testing where /opt/rocm path is not present
+    // For STG2 testing where /usr path is not present
     rocmpath = "$ROCM_PATH/bin/rocminfo";
   } else {
     // Check if the rocminfo tool exists
-    rocmpath = "/opt/rocm/bin/rocminfo";
+    rocmpath = "/usr/bin/rocminfo";
   }
   snprintf(command, COMMAND_LEN, "%s", rocmpath);
   strncat(command, " | grep -m1 \"sramecc.:xnack.\"", COMMAND_LEN);
@@ -213,16 +213,16 @@ int main(int argc, char* argv[]) {
     and may give bogus warnings.  Use C++11 raw strings or concatenation instead."
   */
   if (rocmPathSet) {
-    // For STG2 testing where /opt/rocm path is not present
+    // For STG2 testing where /usr path is not present
     snprintf(command, COMMAND_LEN,
-    "$ROCM_PATH/llvm/bin/clang -target amdgcn-amd-amdhsa -x cl ");
+    "$ROCM_PATH/llvm/@LLVM_SLOT@/bin/clang -target amdgcn-amd-amdhsa -x cl ");
   } else {
     snprintf(command, COMMAND_LEN,
-    "/opt/rocm/llvm/bin/clang -target amdgcn-amd-amdhsa -x cl ");
+    "/usr/llvm/@LLVM_SLOT@/bin/clang -target amdgcn-amd-amdhsa -x cl ");
   }
   char command_temp[COMMAND_LEN] = "";
   snprintf(command_temp, COMMAND_LEN,
-  "-include `find /opt/rocm* -name opencl-c.h` %s %s -mcpu=%s -o %s %s",
+  "-include `find /usr* -name opencl-c.h` %s %s -mcpu=%s -o %s %s",
   pCodeObjVer, v3option, props.gcnArchName, pCodeObjFile, OPENCL_OBJ_FILE);
 
   strncat(command, command_temp, COMMAND_LEN);
diff -urp HIP-rocm-5.5.1.orig/tests/src/runtimeApi/p2p/hipP2pLinkTypeAndHopFunc.cpp HIP-rocm-5.5.1/tests/src/runtimeApi/p2p/hipP2pLinkTypeAndHopFunc.cpp
--- HIP-rocm-5.5.1.orig/tests/src/runtimeApi/p2p/hipP2pLinkTypeAndHopFunc.cpp	2023-05-09 12:52:23.000000000 -0700
+++ HIP-rocm-5.5.1/tests/src/runtimeApi/p2p/hipP2pLinkTypeAndHopFunc.cpp	2023-08-30 14:58:39.802789090 -0700
@@ -21,7 +21,7 @@ THE SOFTWARE.
 */
 
 /* HIT_START
- * BUILD_CMD: %t %hc %S/%s -o %T/%t %S/../../test_common.cpp -I %S/../../ -L%rocm-path/rocm_smi/lib -lrocm_smi64 -lpthread -ldl EXCLUDE_HIP_PLATFORM nvidia
+ * BUILD_CMD: %t %hc %S/%s -o %T/%t %S/../../test_common.cpp -I %S/../../ -L%rocm-path/@LIBDIR@ -lrocm_smi64 -lpthread -ldl EXCLUDE_HIP_PLATFORM nvidia
  * TEST: %t --tests 0x1
  * TEST: %t --tests 0x2
  * TEST: %t --tests 0x3
@@ -282,10 +282,10 @@ bool testhipLinkTypeHopcountDevice(int n
   rsmi_status_t (*fntopo_init)(uint64_t);
   rsmi_status_t (*fntopo_shut_down)();
 
-  lib_rocm_smi_hdl = dlopen("/opt/rocm/rocm_smi/lib/librocm_smi64.so",
+  lib_rocm_smi_hdl = dlopen("/usr/@LIBDIR@/librocm_smi64.so",
                         RTLD_LAZY);
   if (!lib_rocm_smi_hdl) {
-    printf("Error opening /opt/rocm/rocm_smi/lib/librocm_smi64.so\n");
+    printf("Error opening /usr/@LIBDIR@/librocm_smi64.so\n");
     printf("Skipping this test\n");
     passed();
   }
