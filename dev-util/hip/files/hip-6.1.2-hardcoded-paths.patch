diff '--color=auto' -urp work.orig/clr-rocm-6.1.2/CMakeLists.txt work/clr-rocm-6.1.2/CMakeLists.txt
--- work.orig/clr-rocm-6.1.2/CMakeLists.txt	2024-05-09 08:12:14.000000000 -0700
+++ work/clr-rocm-6.1.2/CMakeLists.txt	2024-07-10 21:54:59.246057830 -0700
@@ -43,7 +43,7 @@ endif()
 if(CLR_BUILD_HIP)
     # Set default HIPCC_BIN_DIR to /opt/rocm/bin
     if(NOT DEFINED HIPCC_BIN_DIR AND UNIX)
-        set(HIPCC_BIN_DIR "/opt/rocm/bin" CACHE STRING "Default hipcc directory on linux.")
+        set(HIPCC_BIN_DIR "/opt/rocm-@ROCM_VERSION@/bin" CACHE STRING "Default hipcc directory on linux.")
     endif()
     message(STATUS "HIPCC Binary Directory: ${HIPCC_BIN_DIR}")
 
diff '--color=auto' -urp work.orig/clr-rocm-6.1.2/hipamd/CMakeLists.txt work/clr-rocm-6.1.2/hipamd/CMakeLists.txt
--- work.orig/clr-rocm-6.1.2/hipamd/CMakeLists.txt	2024-07-10 21:43:48.756225911 -0700
+++ work/clr-rocm-6.1.2/hipamd/CMakeLists.txt	2024-07-10 21:55:39.453445618 -0700
@@ -232,7 +232,7 @@ add_to_config(_buildInfo HIP_RUNTIME)
 add_to_config(_buildInfo HIP_COMPILER)
 
 if (NOT DEFINED ROCM_PATH )
-     set ( ROCM_PATH "/opt/rocm"  CACHE STRING "Default ROCM installation directory." )
+     set ( ROCM_PATH "/opt/rocm-@ROCM_VERSION@"  CACHE STRING "Default ROCM installation directory." )
 endif ()
 message (STATUS "ROCM Installation path(ROCM_PATH): ${ROCM_PATH}")
 
diff '--color=auto' -urp work.orig/clr-rocm-6.1.2/opencl/CMakeLists.txt work/clr-rocm-6.1.2/opencl/CMakeLists.txt
--- work.orig/clr-rocm-6.1.2/opencl/CMakeLists.txt	2024-05-09 08:12:14.000000000 -0700
+++ work/clr-rocm-6.1.2/opencl/CMakeLists.txt	2024-07-10 21:55:25.037665097 -0700
@@ -55,7 +55,7 @@ install(DIRECTORY "${CMAKE_CURRENT_SOURC
 # Packaging steps
 #############################
 if(NOT WIN32)
-find_package(ROCM QUIET CONFIG PATHS /opt/rocm)
+find_package(ROCM QUIET CONFIG PATHS /opt/rocm-@ROCM_VERSION@)
 if(ROCM_FOUND)
   include(ROCMSetupVersion)
   rocm_setup_version( VERSION "2.0.0" )
@@ -94,7 +94,7 @@ if(DEFINED ENV{ROCM_LIBPATCH_VERSION})
   message("Using CPACK_PACKAGE_VERSION ${CPACK_PACKAGE_VERSION}")
 endif()
 
-set(CPACK_PACKAGING_INSTALL_PREFIX "/opt/rocm" CACHE PATH "Package Installation path for OpenCL")
+set(CPACK_PACKAGING_INSTALL_PREFIX "/opt/rocm-@ROCM_VERSION@" CACHE PATH "Package Installation path for OpenCL")
 #ROCM_PATH is needed to create symlink of libraries
 if(NOT DEFINED ROCM_PATH)
   string(REPLACE "/opencl" "" ROCM_PATH ${CPACK_PACKAGING_INSTALL_PREFIX})
diff '--color=auto' -urp work.orig/clr-rocm-6.1.2/rocclr/cmake/ROCclrHSA.cmake work/clr-rocm-6.1.2/rocclr/cmake/ROCclrHSA.cmake
--- work.orig/clr-rocm-6.1.2/rocclr/cmake/ROCclrHSA.cmake	2024-05-09 08:12:14.000000000 -0700
+++ work/clr-rocm-6.1.2/rocclr/cmake/ROCclrHSA.cmake	2024-07-10 21:55:16.685792264 -0700
@@ -20,7 +20,7 @@
 
 find_package(hsa-runtime64 1.11 REQUIRED CONFIG
   PATHS
-    /opt/rocm/
+    /opt/rocm-@ROCM_VERSION@/
     ${ROCM_INSTALL_PATH}
   PATH_SUFFIXES
     cmake/hsa-runtime64
diff '--color=auto' -urp work.orig/clr-rocm-6.1.2/rocclr/cmake/ROCclrLC.cmake work/clr-rocm-6.1.2/rocclr/cmake/ROCclrLC.cmake
--- work.orig/clr-rocm-6.1.2/rocclr/cmake/ROCclrLC.cmake	2024-05-09 08:12:14.000000000 -0700
+++ work/clr-rocm-6.1.2/rocclr/cmake/ROCclrLC.cmake	2024-07-10 21:56:52.920327460 -0700
@@ -20,7 +20,7 @@
 
 find_package(amd_comgr REQUIRED CONFIG
   PATHS
-    /opt/rocm/
+    /opt/rocm-@ROCM_VERSION@/
     ${ROCM_INSTALL_PATH}
   PATH_SUFFIXES
     cmake/amd_comgr
diff '--color=auto' -urp work.orig/clr-rocm-6.1.2/rocclr/elf/test/CMakeLists.txt work/clr-rocm-6.1.2/rocclr/elf/test/CMakeLists.txt
--- work.orig/clr-rocm-6.1.2/rocclr/elf/test/CMakeLists.txt	2024-05-09 08:12:14.000000000 -0700
+++ work/clr-rocm-6.1.2/rocclr/elf/test/CMakeLists.txt	2024-07-10 21:55:09.709898486 -0700
@@ -26,14 +26,14 @@ cmake_minimum_required(VERSION 3.5.1)
 
 find_package(amd_comgr REQUIRED CONFIG
   PATHS
-    /opt/rocm/
+    /opt/rocm-@ROCM_VERSION@/
   PATH_SUFFIXES
     cmake/amd_comgr
     lib/cmake/amd_comgr)
 
 find_package(hsa-runtime64 REQUIRED CONFIG
   PATHS
-    /opt/rocm/
+    /opt/rocm-@ROCM_VERSION@/
   PATH_SUFFIXES
     cmake/hsa-runtime64)
 
@@ -42,8 +42,8 @@ find_package(Threads REQUIRED)
 # Look for ROCclr which contains elfio
 find_package(ROCclr REQUIRED CONFIG
   PATHS
-    /opt/rocm
-    /opt/rocm/rocclr)
+    /opt/rocm-@ROCM_VERSION@
+    /opt/rocm-@ROCM_VERSION@/rocclr)
 
 add_executable(elf_test main.cpp)
 set_target_properties(
@@ -60,4 +60,4 @@ add_definitions(-DUSE_COMGR_LIBRARY -DCO
 
 target_link_libraries(elf_test PRIVATE amdrocclr_static)
 
-#-------------------------------------elf_test--------------------------------------#
\ No newline at end of file
+#-------------------------------------elf_test--------------------------------------#
diff '--color=auto' -urp work.orig/llvm-project-rocm-6.1.2/clang/tools/amdgpu-arch/CMakeLists.txt work/llvm-project-rocm-6.1.2/clang/tools/amdgpu-arch/CMakeLists.txt
--- work.orig/llvm-project-rocm-6.1.2/clang/tools/amdgpu-arch/CMakeLists.txt	2024-05-15 13:31:12.000000000 -0700
+++ work/llvm-project-rocm-6.1.2/clang/tools/amdgpu-arch/CMakeLists.txt	2024-07-10 21:56:48.184399521 -0700
@@ -8,7 +8,7 @@
 
 set(LLVM_LINK_COMPONENTS Support)
 
-find_package(hsa-runtime64 QUIET 1.2.0 HINTS ${CMAKE_INSTALL_PREFIX} PATHS /opt/rocm)
+find_package(hsa-runtime64 QUIET 1.2.0 HINTS ${CMAKE_INSTALL_PREFIX} PATHS /opt/rocm-@ROCM_VERSION@)
 
 add_clang_tool(amdgpu-arch AMDGPUArch.cpp AMDGPUArchByHSA.cpp AMDGPUArchByHIP.cpp)
 
diff '--color=auto' -urp work.orig/llvm-project-rocm-6.1.2/compiler-rt/CMakeLists.txt work/llvm-project-rocm-6.1.2/compiler-rt/CMakeLists.txt
--- work.orig/llvm-project-rocm-6.1.2/compiler-rt/CMakeLists.txt	2024-05-15 13:31:12.000000000 -0700
+++ work/llvm-project-rocm-6.1.2/compiler-rt/CMakeLists.txt	2024-07-10 21:56:13.996919794 -0700
@@ -465,12 +465,12 @@ endif()
 
 if(SANITIZER_AMDGPU)
   list(APPEND SANITIZER_COMMON_CFLAGS -DSANITIZER_AMDGPU=1)
-  find_path(HSA_INCLUDE hsa.h HINTS ${SANITIZER_HSA_INCLUDE_PATH} ${CMAKE_INSTALL_PREFIX}/include/hsa ${CMAKE_INSTALL_PREFIX}/../include/hsa /opt/rocm/include/hsa PATH_SUFFIXES hsa)
+  find_path(HSA_INCLUDE hsa.h HINTS ${SANITIZER_HSA_INCLUDE_PATH} ${CMAKE_INSTALL_PREFIX}/include/hsa ${CMAKE_INSTALL_PREFIX}/../include/hsa /opt/rocm-@ROCM_VERSION@/include/hsa PATH_SUFFIXES hsa)
   include_directories(${HSA_INCLUDE})
   find_path(COMgr_INCLUDE amd_comgr.h.in HINTS ${SANITIZER_COMGR_INCLUDE_PATH} ${CMAKE_INSTALL_PREFIX}/../include ${CMAKE_INSTALL_PREFIX}/include)
   if (NOT COMgr_INCLUDE)
     add_compile_definitions(AMD_COMGR)
-    find_path(COMgr_INCLUDE amd_comgr.h HINTS ${CMAKE_INSTALL_PREFIX}/../include ${CMAKE_INSTALL_PREFIX}/include /opt/rocm/include)
+    find_path(COMgr_INCLUDE amd_comgr.h HINTS ${CMAKE_INSTALL_PREFIX}/../include ${CMAKE_INSTALL_PREFIX}/include /opt/rocm-@ROCM_VERSION@/include)
   endif()
   include_directories(${COMgr_INCLUDE})
 endif()
diff '--color=auto' -urp work.orig/llvm-project-rocm-6.1.2/libc/cmake/modules/prepare_libc_gpu_build.cmake work/llvm-project-rocm-6.1.2/libc/cmake/modules/prepare_libc_gpu_build.cmake
--- work.orig/llvm-project-rocm-6.1.2/libc/cmake/modules/prepare_libc_gpu_build.cmake	2024-05-15 13:31:12.000000000 -0700
+++ work/llvm-project-rocm-6.1.2/libc/cmake/modules/prepare_libc_gpu_build.cmake	2024-07-10 21:55:57.081177270 -0700
@@ -31,7 +31,7 @@ endif()
 # Identify any locally installed AMD GPUs on the system using 'amdgpu-arch'.
 find_program(LIBC_AMDGPU_ARCH
              NAMES amdgpu-arch
-             PATHS ${LLVM_BINARY_DIR}/bin /opt/rocm/llvm/bin/)
+             PATHS ${LLVM_BINARY_DIR}/bin /opt/rocm-@ROCM_VERSION@/llvm/bin/)
 
 # Identify any locally installed NVIDIA GPUs on the system using 'nvptx-arch'.
 find_program(LIBC_NVPTX_ARCH
diff '--color=auto' -urp work.orig/llvm-project-rocm-6.1.2/libc/src/math/gpu/vendor/CMakeLists.txt work/llvm-project-rocm-6.1.2/libc/src/math/gpu/vendor/CMakeLists.txt
--- work.orig/llvm-project-rocm-6.1.2/libc/src/math/gpu/vendor/CMakeLists.txt	2024-05-15 13:31:12.000000000 -0700
+++ work/llvm-project-rocm-6.1.2/libc/src/math/gpu/vendor/CMakeLists.txt	2024-07-10 21:56:03.741075895 -0700
@@ -1,4 +1,4 @@
-find_package(AMDDeviceLibs QUIET HINTS ${CMAKE_INSTALL_PREFIX} PATHS /opt/rocm)
+find_package(AMDDeviceLibs QUIET HINTS ${CMAKE_INSTALL_PREFIX} PATHS /opt/rocm-@ROCM_VERSION@)
 if(AMDDeviceLibs_FOUND)
   message(STATUS "Found the ROCm device library. Implementations falling back "
                  "to the vendor libraries will be resolved statically.")
diff '--color=auto' -urp work.orig/llvm-project-rocm-6.1.2/libc/utils/gpu/loader/CMakeLists.txt work/llvm-project-rocm-6.1.2/libc/utils/gpu/loader/CMakeLists.txt
--- work.orig/llvm-project-rocm-6.1.2/libc/utils/gpu/loader/CMakeLists.txt	2024-05-15 13:31:12.000000000 -0700
+++ work/llvm-project-rocm-6.1.2/libc/utils/gpu/loader/CMakeLists.txt	2024-07-10 21:56:00.973118028 -0700
@@ -5,7 +5,7 @@ target_include_directories(gpu_loader PU
   ${LIBC_SOURCE_DIR}
 )
 
-find_package(hsa-runtime64 QUIET 1.2.0 HINTS ${CMAKE_INSTALL_PREFIX} PATHS /opt/rocm)
+find_package(hsa-runtime64 QUIET 1.2.0 HINTS ${CMAKE_INSTALL_PREFIX} PATHS /opt/rocm-@ROCM_VERSION@)
 if(hsa-runtime64_FOUND)
   add_subdirectory(amdgpu)
 else()
diff '--color=auto' -urp work.orig/llvm-project-rocm-6.1.2/mlir/lib/Dialect/GPU/CMakeLists.txt work/llvm-project-rocm-6.1.2/mlir/lib/Dialect/GPU/CMakeLists.txt
--- work.orig/llvm-project-rocm-6.1.2/mlir/lib/Dialect/GPU/CMakeLists.txt	2024-05-15 13:31:12.000000000 -0700
+++ work/llvm-project-rocm-6.1.2/mlir/lib/Dialect/GPU/CMakeLists.txt	2024-07-10 21:55:46.045345265 -0700
@@ -136,7 +136,7 @@ if(MLIR_ENABLE_ROCM_CONVERSIONS)
       "Building mlir with ROCm support requires the AMDGPU backend")
   endif()
 
-  set(DEFAULT_ROCM_PATH "/opt/rocm" CACHE PATH "Fallback path to search for ROCm installs")
+  set(DEFAULT_ROCM_PATH "/opt/rocm-@ROCM_VERSION@" CACHE PATH "Fallback path to search for ROCm installs")
   target_compile_definitions(obj.MLIRGPUTransforms
     PRIVATE
     __DEFAULT_ROCM_PATH__="${DEFAULT_ROCM_PATH}"
diff '--color=auto' -urp work.orig/llvm-project-rocm-6.1.2/mlir/lib/ExecutionEngine/CMakeLists.txt work/llvm-project-rocm-6.1.2/mlir/lib/ExecutionEngine/CMakeLists.txt
--- work.orig/llvm-project-rocm-6.1.2/mlir/lib/ExecutionEngine/CMakeLists.txt	2024-05-15 13:31:12.000000000 -0700
+++ work/llvm-project-rocm-6.1.2/mlir/lib/ExecutionEngine/CMakeLists.txt	2024-07-10 21:55:51.901256121 -0700
@@ -247,7 +247,7 @@ if(LLVM_ENABLE_PIC)
     # Configure ROCm support.
     if (NOT DEFINED ROCM_PATH)
       if (NOT DEFINED ENV{ROCM_PATH})
-        set(ROCM_PATH "/opt/rocm" CACHE PATH "Path to which ROCm has been installed")
+        set(ROCM_PATH "/opt/rocm-@ROCM_VERSION@" CACHE PATH "Path to which ROCm has been installed")
       else()
         set(ROCM_PATH $ENV{ROCM_PATH} CACHE PATH "Path to which ROCm has been installed")
       endif()
diff '--color=auto' -urp work.orig/llvm-project-rocm-6.1.2/openmp/libomptarget/DeviceRTL/CMakeLists.txt work/llvm-project-rocm-6.1.2/openmp/libomptarget/DeviceRTL/CMakeLists.txt
--- work.orig/llvm-project-rocm-6.1.2/openmp/libomptarget/DeviceRTL/CMakeLists.txt	2024-05-15 13:31:12.000000000 -0700
+++ work/llvm-project-rocm-6.1.2/openmp/libomptarget/DeviceRTL/CMakeLists.txt	2024-07-10 21:56:55.660285769 -0700
@@ -338,7 +338,7 @@ function(buildAMDAllInclusiveBcLib gfxna
       HINTS
       ${CMAKE_INSTALL_PREFIX}
       PATHS
-      /opt/rocm)
+      /opt/rocm-@ROCM_VERSION@)
     if(AMDDeviceLibs_DIR)
       set(amd_device_libs_found ON)
       libomptarget_say("DeviceRTLs ${gfxname}: Getting ROCm device libs from ${AMDDeviceLibs_DIR}")
diff '--color=auto' -urp work.orig/llvm-project-rocm-6.1.2/openmp/libomptarget/deviceRTLs/amdgcn/CMakeLists.txt work/llvm-project-rocm-6.1.2/openmp/libomptarget/deviceRTLs/amdgcn/CMakeLists.txt
--- work.orig/llvm-project-rocm-6.1.2/openmp/libomptarget/deviceRTLs/amdgcn/CMakeLists.txt	2024-05-15 13:31:12.000000000 -0700
+++ work/llvm-project-rocm-6.1.2/openmp/libomptarget/deviceRTLs/amdgcn/CMakeLists.txt	2024-07-10 21:57:03.708163321 -0700
@@ -17,7 +17,7 @@ endif()
 find_package(AMDDeviceLibs REQUIRED CONFIG PATHS
 	${CMAKE_BINARY_DIR}/../../tools/ROCMDEVLIBS
 	${CMAKE_INSTALL_PREFIX}
-	/opt/rocm)
+	/opt/rocm-@ROCM_VERSION@)
 if(AMDDeviceLibs_DIR)
   libomptarget_say("Getting ROCm device libs from ${AMDDeviceLibs_DIR}")
 else()
diff '--color=auto' -urp work.orig/llvm-project-rocm-6.1.2/openmp/libomptarget/hostexec/CMakeLists.txt work/llvm-project-rocm-6.1.2/openmp/libomptarget/hostexec/CMakeLists.txt
--- work.orig/llvm-project-rocm-6.1.2/openmp/libomptarget/hostexec/CMakeLists.txt	2024-05-15 13:31:12.000000000 -0700
+++ work/llvm-project-rocm-6.1.2/openmp/libomptarget/hostexec/CMakeLists.txt	2024-07-10 21:56:17.964859402 -0700
@@ -16,7 +16,7 @@ if("${CMAKE_SOURCE_DIR}" STREQUAL "${CMA
   message(FATAL_ERROR "Direct configuration not supported, please use parent directory!")
 endif()
 
-find_package(hsa-runtime64 1.2.0 QUIET HINTS ${CMAKE_INSTALL_PREFIX} PATHS /opt/rocm/hsa)
+find_package(hsa-runtime64 1.2.0 QUIET HINTS ${CMAKE_INSTALL_PREFIX} PATHS /opt/rocm-@ROCM_VERSION@/hsa)
 if (hsa-runtime64_FOUND)
    list(APPEND HOSTRPC_ARCHS "amdgcn")
    add_library(amdgcn_hostexec_services STATIC 
diff '--color=auto' -urp work.orig/llvm-project-rocm-6.1.2/openmp/libomptarget/hostrpc/services/CMakeLists.txt work/llvm-project-rocm-6.1.2/openmp/libomptarget/hostrpc/services/CMakeLists.txt
--- work.orig/llvm-project-rocm-6.1.2/openmp/libomptarget/hostrpc/services/CMakeLists.txt	2024-05-15 13:31:12.000000000 -0700
+++ work/llvm-project-rocm-6.1.2/openmp/libomptarget/hostrpc/services/CMakeLists.txt	2024-07-10 21:56:22.200794934 -0700
@@ -1,5 +1,5 @@
 
-find_package(hsa-runtime64 1.2.0 REQUIRED HINTS ${CMAKE_INSTALL_PREFIX} PATHS /opt/rocm)
+find_package(hsa-runtime64 1.2.0 REQUIRED HINTS ${CMAKE_INSTALL_PREFIX} PATHS /opt/rocm-@ROCM_VERSION@)
 add_library(hostrpc_services STATIC hostcall.cpp hostrpc_execute_service.c hostrpc_externs.c urilocator.cpp devsanitizer.cpp)
 set_property(TARGET hostrpc_services PROPERTY POSITION_INDEPENDENT_CODE ON)
 if(SANITIZER_AMDGPU)
diff '--color=auto' -urp work.orig/llvm-project-rocm-6.1.2/openmp/libomptarget/plugins/amdgpu/CMakeLists.txt work/llvm-project-rocm-6.1.2/openmp/libomptarget/plugins/amdgpu/CMakeLists.txt
--- work.orig/llvm-project-rocm-6.1.2/openmp/libomptarget/plugins/amdgpu/CMakeLists.txt	2024-05-15 13:31:12.000000000 -0700
+++ work/llvm-project-rocm-6.1.2/openmp/libomptarget/plugins/amdgpu/CMakeLists.txt	2024-07-10 21:56:31.948646584 -0700
@@ -22,7 +22,7 @@ endif()
 
 # as of rocm-3.7, hsa is installed with cmake packages and kmt is found via hsa
 find_package(hsa-runtime64 QUIET 1.2.0 HINTS ${CMAKE_INSTALL_PREFIX} PATHS
-${CMAKE_INSTALL_PREFIX} /opt/rocm)
+${CMAKE_INSTALL_PREFIX} /opt/rocm-@ROCM_VERSION@)
 
 if(hsa-runtime64_DIR)
 message("FOUND hsa-runtime64 at ${hsa-runtime64_DIR}")
@@ -34,7 +34,7 @@ return()
 endif()
 
 # libhsakmt.a
-find_library (HSAKMT_LIB libhsakmt.a REQURIED HINTS ${CMAKE_INSTALL_PREFIX} PATHS /opt/rocm)
+find_library (HSAKMT_LIB libhsakmt.a REQURIED HINTS ${CMAKE_INSTALL_PREFIX} PATHS /opt/rocm-@ROCM_VERSION@)
 get_filename_component(HSAKMT_LIB_PATH ${HSAKMT_LIB} DIRECTORY)
 link_directories (${HSAKMT_LIB_PATH})
 
diff '--color=auto' -urp work.orig/llvm-project-rocm-6.1.2/openmp/libomptarget/plugins-nextgen/amdgpu/CMakeLists.txt work/llvm-project-rocm-6.1.2/openmp/libomptarget/plugins-nextgen/amdgpu/CMakeLists.txt
--- work.orig/llvm-project-rocm-6.1.2/openmp/libomptarget/plugins-nextgen/amdgpu/CMakeLists.txt	2024-05-15 13:31:12.000000000 -0700
+++ work/llvm-project-rocm-6.1.2/openmp/libomptarget/plugins-nextgen/amdgpu/CMakeLists.txt	2024-07-10 21:57:01.240200870 -0700
@@ -20,12 +20,12 @@ if (NOT LIBOMPTARGET_BUILD_AMDGPU_PLUGIN
 endif()
 
 # as of rocm-3.7, hsa is installed with cmake packages and kmt is found via hsa
-find_package(hsa-runtime64 QUIET 1.2.0 HINTS ${CMAKE_INSTALL_PREFIX} PATHS /opt/rocm)
+find_package(hsa-runtime64 QUIET 1.2.0 HINTS ${CMAKE_INSTALL_PREFIX} PATHS /opt/rocm-@ROCM_VERSION@)
 
 # Check for COMGr package , ASan requires COMGr with minimum version 2.4
 if(SANITIZER_AMDGPU)
   add_definitions(-DSANITIZER_AMDGPU=1)
-  find_package(amd_comgr QUIET 2.4.0 HINTS ${CMAKE_INSTALL_PREFIX} PATHS /opt/rocm)
+  find_package(amd_comgr QUIET 2.4.0 HINTS ${CMAKE_INSTALL_PREFIX} PATHS /opt/rocm-@ROCM_VERSION@)
 endif()
 
 if(NOT (CMAKE_SYSTEM_PROCESSOR MATCHES "(x86_64)|(ppc64le)|(aarch64)$" AND CMAKE_SYSTEM_NAME MATCHES "Linux"))
diff '--color=auto' -urp work.orig/llvm-project-rocm-6.1.2/openmp/libomptarget/src/CMakeLists.txt work/llvm-project-rocm-6.1.2/openmp/libomptarget/src/CMakeLists.txt
--- work.orig/llvm-project-rocm-6.1.2/openmp/libomptarget/src/CMakeLists.txt	2024-05-15 13:31:12.000000000 -0700
+++ work/llvm-project-rocm-6.1.2/openmp/libomptarget/src/CMakeLists.txt	2024-07-10 21:56:44.696452596 -0700
@@ -10,7 +10,7 @@
 #
 ##===----------------------------------------------------------------------===##
 # libhsakmt.a
-find_library ( HSAKMT_LIB libhsakmt.a REQURIED HINTS ${CMAKE_INSTALL_PREFIX} PATHS /opt/rocm)
+find_library ( HSAKMT_LIB libhsakmt.a REQURIED HINTS ${CMAKE_INSTALL_PREFIX} PATHS /opt/rocm-@ROCM_VERSION@)
 get_filename_component ( HSAKMT_LIB_PATH ${HSAKMT_LIB} DIRECTORY )
 link_directories (${HSAKMT_LIB_PATH})
 
