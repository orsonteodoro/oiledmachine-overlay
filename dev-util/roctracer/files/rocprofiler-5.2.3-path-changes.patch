diff -urp rocprofiler-rocm-5.2.3.orig/bin/build_kernel.sh rocprofiler-rocm-5.2.3/bin/build_kernel.sh
--- rocprofiler-rocm-5.2.3.orig/bin/build_kernel.sh	2022-05-20 16:39:55.000000000 -0700
+++ rocprofiler-rocm-5.2.3/bin/build_kernel.sh	2023-09-28 14:39:56.236065354 -0700
@@ -18,7 +18,7 @@ if [ -z "$DST_DIR" ] ; then
 fi
 
 if [ -z "$ROCM_DIR" ] ; then
-  ROCM_DIR=/opt/rocm
+  ROCM_DIR="@ESYSROOT_ROCM_PATH@"
 fi
 
 if [ -z "$TGT_LIST" ] ; then
@@ -32,12 +32,12 @@ fi
 
 OCL_VER="2.0"
 
-if [ -e $ROCM_DIR/llvm ] ; then
-  LLVM_DIR=$ROCM_DIR/llvm
-  LIB_DIR=$ROCM_DIR/lib
+if [ -e @ESYSROOT_LLVM_PATH@ ] ; then
+  LLVM_DIR=@ESYSROOT_LLVM_PATH@
+  LIB_DIR=$ROCM_DIR/@LIBDIR@
 else
   LLVM_DIR=$ROCM_DIR/hcc
-  LIB_DIR=$LLVM_DIR/lib
+  LIB_DIR=$LLVM_DIR/@LIBDIR@
 fi
 
 # Determine whether using new or old device-libs layout
@@ -45,6 +45,8 @@ if [ -e $LIB_DIR/bitcode/opencl.amdgcn.b
   BC_DIR=$LIB_DIR/bitcode
 elif [ -e $LIB_DIR/opencl.amdgcn.bc ]; then
   BC_DIR=$LIB_DIR
+elif [ -e $ROCM_DIR/@LIBDIR@/amdgcn/bitcode/opencl.bc ]; then
+  BC_DIR=$ROCM_DIR/@LIBDIR@/amdgcn/bitcode
 elif [ -e $ROCM_DIR/amdgcn/bitcode/opencl.bc ]; then
   BC_DIR=$ROCM_DIR/amdgcn/bitcode
 else
@@ -52,7 +54,7 @@ else
   exit 1
 fi
 
-CLANG_ROOT=$LLVM_DIR/lib/clang
+CLANG_ROOT=@ESYSROOT_CLANG_PATH@
 CLANG_DIR=`ls -d $CLANG_ROOT/* | head -n 1`
 if [ "$CLANG_DIR" = "" ] ; then
   echo "Error: LLVM clang library was not found"
diff -urp rocprofiler-rocm-5.2.3.orig/bin/merge_traces.sh rocprofiler-rocm-5.2.3/bin/merge_traces.sh
--- rocprofiler-rocm-5.2.3.orig/bin/merge_traces.sh	2022-05-20 16:39:55.000000000 -0700
+++ rocprofiler-rocm-5.2.3/bin/merge_traces.sh	2023-09-28 14:39:56.236065354 -0700
@@ -25,7 +25,7 @@
 #A script to merge rocprof traces and then provide a results.json for the aggregate numbers.
 
 ROCPROF=`which rocprof`
-BIN_DIR=$(dirname $(realpath ${ROCPROF:-/opt/rocm/bin/rocprof}))
+BIN_DIR=$(dirname $(realpath ${ROCPROF:-@ESYSROOT_ROCM_PATH@/bin/rocprof}))
 
 bin_name=`basename $0`
 
diff -urp rocprofiler-rocm-5.2.3.orig/bin/rpl_run.sh rocprofiler-rocm-5.2.3/bin/rpl_run.sh
--- rocprofiler-rocm-5.2.3.orig/bin/rpl_run.sh	2022-05-20 16:39:55.000000000 -0700
+++ rocprofiler-rocm-5.2.3/bin/rpl_run.sh	2023-09-28 14:43:03.456063201 -0700
@@ -30,10 +30,10 @@ RUN_DIR=`pwd`
 TMP_DIR="/tmp"
 DATA_DIR="rpl_data_${time_stamp}_$$"
 
-RPL_PATH=$ROOT_DIR/lib
+RPL_PATH=$ROOT_DIR/@LIBDIR@
 TLIB_PATH=$RPL_PATH/rocprofiler
-TTLIB_PATH=$TT_DIR/tool
-ROCM_LIB_PATH=$ROOT_DIR/lib
+TTLIB_PATH=$TT_DIR/tool 
+ROCM_LIB_PATH=$ROOT_DIR/@LIBDIR@
 PROF_BIN_DIR=$ROOT_DIR/libexec/rocprofiler
 
 if [ -z "$ROCP_PYTHON_VERSION" ] ; then
@@ -70,7 +70,7 @@ export ROCP_HSA_INTERCEPT=1
 # Disabling internal ROC Profiler proxy queue (simple version supported for testing purposes)
 unset ROCP_PROXY_QUEUE
 # ROC Profiler metrics definition
-export ROCP_METRICS=$TLIB_PATH/metrics.xml
+export ROCP_METRICS=$TLIB_PATH/metrics.xml
 # Disable AQL-profile read API
 export AQLPROFILE_READ_API=0
 # ROC Profiler package path
@@ -104,7 +104,7 @@ usage() {
   bin_name=`basename $0`
   echo "ROCm Profiling Library (RPL) run script, a part of ROCprofiler library package."
   echo "Full path: $BIN_DIR/$bin_name"
-  echo "Metrics definition: $TLIB_PATH/metrics.xml"
+  echo "Metrics definition: $TLIB_PATH/metrics.xml"
   echo ""
   echo "Usage:"
   echo "  $bin_name [-h] [--list-basic] [--list-derived] [-i <input .txt/.xml file>] [-o <output CSV file>] <app command line>"
@@ -212,7 +212,7 @@ fi
 # setting ROCM_LIB_PATH
 set_rocm_lib_path() {
 
-  for ROCM_LIB_PATH in "$ROOT_DIR/lib" "$ROOT_DIR/lib64" ; do
+  for ROCM_LIB_PATH in "$ROOT_DIR/@LIBDIR@" ; do
      if [ -d "$ROCM_LIB_PATH" ]; then
         return 0
      fi
@@ -226,7 +226,7 @@ set_rocm_lib_path() {
 OUTPUT_LIST=""
 run() {
   if ! set_rocm_lib_path ; then
-     echo " Fatal could not find ROCm lib directory "
+     echo " Fatal could not find ROCm @LIBDIR@ directory "
      fatal
   fi
   export ROCP_INPUT="$1"
Only in rocprofiler-rocm-5.2.3/bin: rpl_run.sh.orig
Only in rocprofiler-rocm-5.2.3/bin: rpl_run.sh.rej
diff -urp rocprofiler-rocm-5.2.3.orig/build.sh rocprofiler-rocm-5.2.3/build.sh
--- rocprofiler-rocm-5.2.3.orig/build.sh	2022-05-20 16:39:55.000000000 -0700
+++ rocprofiler-rocm-5.2.3/build.sh	2023-09-28 14:39:56.236065354 -0700
@@ -2,5 +2,5 @@
 BIN_DIR=`dirname $0`
 BLD_DIR=$BIN_DIR/build
 
-export CMAKE_PREFIX_PATH=/opt/rocm/include/hsa:/opt/rocm
+export CMAKE_PREFIX_PATH=@ESYSROOT_ROCM_PATH@/include/hsa:@ESYSROOT_ROCM_PATH@
 rm -rf $BLD_DIR && mkdir $BLD_DIR && cd $BLD_DIR && cmake .. && make -j && make mytest
diff -urp rocprofiler-rocm-5.2.3.orig/CMakeLists.txt rocprofiler-rocm-5.2.3/CMakeLists.txt
--- rocprofiler-rocm-5.2.3.orig/CMakeLists.txt	2022-05-20 16:39:55.000000000 -0700
+++ rocprofiler-rocm-5.2.3/CMakeLists.txt	2023-09-28 14:46:30.332060821 -0700
@@ -23,7 +23,7 @@
 cmake_minimum_required ( VERSION 2.8.12 )
 
 # Install prefix
-set(CMAKE_INSTALL_PREFIX "/opt/rocm" CACHE PATH "Install path prefix default")
+set(CMAKE_INSTALL_PREFIX "@EPREFIX_ROCM_PATH@" CACHE PATH "Install path prefix default")
 
 ## Verbose output.
 set ( CMAKE_VERBOSE_MAKEFILE TRUE CACHE BOOL "Verbose Output" FORCE )
@@ -82,7 +82,7 @@ if(USE_PROF_API EQUAL 1)
         HINTS
             ${PROF_API_HEADER_PATH}
         PATHS
-            /opt/rocm/roctracer
+            @ESYSROOT_ROCM_PATH@/roctracer
         PATH_SUFFIXES
             include/ext
     )
@@ -162,8 +162,8 @@ install ( FILES
           ${CMAKE_CURRENT_SOURCE_DIR}/test/tool/gfx_metrics.xml
           DESTINATION lib/${DEST_NAME} )
 # librocprof-tool.so
-install ( FILES ${PROJECT_BINARY_DIR}/test/librocprof-tool.so DESTINATION lib/${DEST_NAME} )
-install ( FILES ${PROJECT_BINARY_DIR}/test/rocprof-ctrl DESTINATION lib/${DEST_NAME}
+install ( FILES ${PROJECT_BINARY_DIR}/test/librocprof-tool.so DESTINATION @LIBDIR@/${DEST_NAME} )
+install ( FILES ${PROJECT_BINARY_DIR}/test/rocprof-ctrl DESTINATION @LIBDIR@/${DEST_NAME}
           PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE )
 
 # File reorg Backward compatibility
Only in rocprofiler-rocm-5.2.3: CMakeLists.txt.orig
Only in rocprofiler-rocm-5.2.3: CMakeLists.txt.rej
diff -urp rocprofiler-rocm-5.2.3.orig/cmake_modules/env.cmake rocprofiler-rocm-5.2.3/cmake_modules/env.cmake
--- rocprofiler-rocm-5.2.3.orig/cmake_modules/env.cmake	2022-05-20 16:39:55.000000000 -0700
+++ rocprofiler-rocm-5.2.3/cmake_modules/env.cmake	2023-09-28 14:39:56.236065354 -0700
@@ -108,10 +108,10 @@ elseif ( ${CMAKE_SYSTEM_PROCESSOR} STREQ
 endif ()
 
 ## Find hsa-runtime
-find_package(hsa-runtime64 1.0 REQUIRED HINTS ${CMAKE_INSTALL_PREFIX} PATHS /opt/rocm)
+find_package(hsa-runtime64 1.0 REQUIRED HINTS ${CMAKE_INSTALL_PREFIX} PATHS @EPREFIX_ROCM_PATH@)
 
 # find KFD thunk
-find_package(hsakmt 1.0 REQUIRED HINTS ${CMAKE_INSTALL_PREFIX} PATHS /opt/rocm)
+find_package(hsakmt 1.0 REQUIRED HINTS ${CMAKE_INSTALL_PREFIX} PATHS @EPREFIX_ROCM_PATH@)
 
 ## Find ROCm
 find_library ( HSA_KMT_LIB "libhsakmt.so" )
diff -urp rocprofiler-rocm-5.2.3.orig/Readme.txt rocprofiler-rocm-5.2.3/Readme.txt
--- rocprofiler-rocm-5.2.3.orig/Readme.txt	2022-05-20 16:39:55.000000000 -0700
+++ rocprofiler-rocm-5.2.3/Readme.txt	2023-09-28 14:39:56.236065354 -0700
@@ -24,7 +24,7 @@ $ export CMAKE_DEBUG_TRACE=1 # 1 to enab
 To build with the current installed ROCM:
 
 $ cd .../rocprofiler
-$ export CMAKE_PREFIX_PATH=/opt/rocm/include/hsa:/opt/rocm
+$ export CMAKE_PREFIX_PATH=@ESYSROOT_ROCM_PATH@/include/hsa:@ESYSROOT_ROCM_PATH@
 $ mkdir build
 $ cd build
 $ cmake ..
diff -urp rocprofiler-rocm-5.2.3.orig/test/run.sh rocprofiler-rocm-5.2.3/test/run.sh
--- rocprofiler-rocm-5.2.3.orig/test/run.sh	2022-05-20 16:39:55.000000000 -0700
+++ rocprofiler-rocm-5.2.3/test/run.sh	2023-09-28 14:48:00.652059782 -0700
@@ -57,7 +57,7 @@ eval_test() {
 }
 
 # paths to ROC profiler and oher libraries
-export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$PWD:$PWD/../../lib:/opt/rocm/lib:/opt/rocm/lib/rocprofiler
+export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$PWD:$PWD/../../@LIBDIR@:@EPREFIX_ROCM_PATH@/@LIBDIR@:@EPREFIX_ROCM_PATH@/@LIBDIR@/rocprofiler
 
 # enable tools load failure reporting
 export HSA_TOOLS_REPORT_LOAD_FAILURE=1
Only in rocprofiler-rocm-5.2.3/test: run.sh.orig
Only in rocprofiler-rocm-5.2.3/test: run.sh.rej
