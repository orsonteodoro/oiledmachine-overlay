diff -urp roctracer-rocm-5.7.0.orig/build.sh roctracer-rocm-5.7.0/build.sh
--- roctracer-rocm-5.7.0.orig/build.sh	2023-07-13 16:43:46.000000000 -0700
+++ roctracer-rocm-5.7.0/build.sh	2023-09-18 17:42:49.374159452 -0700
@@ -24,8 +24,8 @@
 
 SRC_DIR=`dirname $0`
 COMPONENT="roctracer"
-ROCM_PATH="${ROCM_PATH:=/opt/rocm}"
-LD_RUNPATH_FLAG=" -Wl,--enable-new-dtags -Wl,--rpath,$ROCM_PATH/lib:$ROCM_PATH/lib64"
+ROCM_PATH="${ROCM_PATH:=@ESYSROOT_ROCM_PATH@}"
+LD_RUNPATH_FLAG=" -Wl,--enable-new-dtags -Wl,--rpath,$ROCM_PATH/@LIBDIR@"
 DEFAULTS=defaults.sh
 
 fatal() {
@@ -62,10 +62,10 @@ cmake \
     -DCPACK_GENERATOR="${CPACKGEN:-"DEB;RPM"}" \
     -DCMAKE_SHARED_LINKER_FLAGS="$LD_RUNPATH_FLAG" \
     -DGPU_TARGETS="$GPU_LIST" \
-    -DCPACK_OBJCOPY_EXECUTABLE="${PACKAGE_ROOT}/llvm/bin/llvm-objcopy" \
-    -DCPACK_READELF_EXECUTABLE="${PACKAGE_ROOT}/llvm/bin/llvm-readelf" \
-    -DCPACK_STRIP_EXECUTABLE="${PACKAGE_ROOT}/llvm/bin/llvm-strip" \
-    -DCPACK_OBJDUMP_EXECUTABLE="${PACKAGE_ROOT}/llvm/bin/llvm-objdump" \
+    -DCPACK_OBJCOPY_EXECUTABLE="@ESYSROOT@/usr/lib/llvm/@LLVM_SLOT@/bin/llvm-objcopy" \
+    -DCPACK_READELF_EXECUTABLE="@ESYSROOT@/usr/lib/llvm/@LLVM_SLOT@/bin/llvm-readelf" \
+    -DCPACK_STRIP_EXECUTABLE="@ESYSROOT@/usr/lib/llvm/@LLVM_SLOT@/bin/llvm-strip" \
+    -DCPACK_OBJDUMP_EXECUTABLE="@ESYSROOT@/usr/lib/llvm/@LLVM_SLOT@/bin/llvm-objdump" \
      $ROCTRACER_ROOT
 
 make
diff -urp roctracer-rocm-5.7.0.orig/build_static.sh roctracer-rocm-5.7.0/build_static.sh
--- roctracer-rocm-5.7.0.orig/build_static.sh	2023-07-13 16:43:46.000000000 -0700
+++ roctracer-rocm-5.7.0/build_static.sh	2023-09-18 17:35:55.374164980 -0700
@@ -24,8 +24,8 @@
 
 SRC_DIR=`dirname $0`
 COMPONENT="roctracer"
-ROCM_PATH="${ROCM_PATH:=/opt/rocm}"
-LD_RUNPATH_FLAG=" -Wl,--enable-new-dtags -Wl,--rpath,$ROCM_PATH/lib:$ROCM_PATH/lib64"
+ROCM_PATH="${ROCM_PATH:=@ESYSROOT_ROCM_PATH@}"
+LD_RUNPATH_FLAG=" -Wl,--enable-new-dtags -Wl,--rpath,$ROCM_PATH/@LIBDIR@"
 DEFAULTS=defaults.sh
 
 fatal() {
diff -urp roctracer-rocm-5.7.0.orig/CMakeLists.txt roctracer-rocm-5.7.0/CMakeLists.txt
--- roctracer-rocm-5.7.0.orig/CMakeLists.txt	2023-09-18 17:35:40.138165184 -0700
+++ roctracer-rocm-5.7.0/CMakeLists.txt	2023-09-18 17:37:47.534163482 -0700
@@ -27,7 +27,7 @@ project(roctracer VERSION 4.1.0)
 include(GNUInstallDirs)
 # set default ROCM_PATH
 if(NOT DEFINED ROCM_PATH)
-    set(ROCM_PATH "/opt/rocm"  CACHE STRING "Default ROCM installation directory")
+    set(ROCM_PATH "@ESYSROOT_ROCM_PATH@"  CACHE STRING "Default ROCM installation directory")
 endif()
 
 ## Build is not supported on Windows plaform
@@ -39,7 +39,7 @@ set(CMAKE_CXX_STANDARD 17)
 set(CMAKE_CXX_STANDARD_REQUIRED ON)
 add_compile_options(-Wall)
 # To set addition RUNPATH in libraries
-# installed in /opt/rocm-ver/lib/roctracer
+# installed in @ESYSROOT_ROCM_PATH@/@LIBDIR@/roctracer
 set(ROCM_APPEND_PRIVLIB_RPATH "$ORIGIN/..")
 set(THREADS_PREFER_PTHREAD_FLAG ON)
 
diff -urp roctracer-rocm-5.7.0.orig/header_template.hpp.in roctracer-rocm-5.7.0/header_template.hpp.in
--- roctracer-rocm-5.7.0.orig/header_template.hpp.in	2023-07-13 16:43:46.000000000 -0700
+++ roctracer-rocm-5.7.0/header_template.hpp.in	2023-09-18 17:35:55.374164980 -0700
@@ -27,12 +27,12 @@
 #define ROCM_HEADER_WRAPPER_WERROR @deprecated_error@
 #endif
 #if ROCM_HEADER_WRAPPER_WERROR  /* ROCM_HEADER_WRAPPER_WERROR 1 */
-#error "This file is deprecated. Use file from include path /opt/rocm-ver/include/ and prefix with roctracer"
+#error "This file is deprecated. Use file from include path @ESYSROOT_ROCM_PATH@/include/ and prefix with roctracer"
 #else      /* ROCM_HEADER_WRAPPER_WERROR 0 */
 #if defined(__GNUC__)
-#warning "This file is deprecated. Use file from include path /opt/rocm-ver/include/ and prefix with roctracer"
+#warning "This file is deprecated. Use file from include path @ESYSROOT_ROCM_PATH@/include/ and prefix with roctracer"
 #else
-#pragma message("This file is deprecated. Use file from include path /opt/rocm-ver/include/ and prefix with roctracer")
+#pragma message("This file is deprecated. Use file from include path @ESYSROOT_ROCM_PATH@/include/ and prefix with roctracer")
 #endif
 #endif /* ROCM_HEADER_WRAPPER_WERROR */
 
diff -urp roctracer-rocm-5.7.0.orig/plugin/file/CMakeLists.txt roctracer-rocm-5.7.0/plugin/file/CMakeLists.txt
--- roctracer-rocm-5.7.0.orig/plugin/file/CMakeLists.txt	2023-07-13 16:43:46.000000000 -0700
+++ roctracer-rocm-5.7.0/plugin/file/CMakeLists.txt	2023-09-18 17:35:55.374164980 -0700
@@ -22,9 +22,9 @@
 
 find_package(amd_comgr REQUIRED CONFIG
   PATHS
-    /opt/rocm/
+    @ESYSROOT_ROCM_PATH@/
   PATH_SUFFIXES
-    lib/cmake/amd_comgr
+    @LIBDIR@/cmake/amd_comgr
 )
 MESSAGE(STATUS "Code Object Manager found at ${amd_comgr_DIR}.")
 
diff -urp roctracer-rocm-5.7.0.orig/README.md roctracer-rocm-5.7.0/README.md
--- roctracer-rocm-5.7.0.orig/README.md	2023-07-13 16:43:46.000000000 -0700
+++ roctracer-rocm-5.7.0/README.md	2023-09-18 17:35:55.374164980 -0700
@@ -20,11 +20,11 @@
 
 To use the rocTracer API you need the API header and to link your application with `roctracer` .so library:
 
-- `/opt/rocm/include/roctracer/roctracer.h`
+- `@ESYSROOT_ROCM_PATH@/include/roctracer/roctracer.h`
 
   API header.
 
-- `/opt/rocm/lib/libroctracer64.so`
+- `@ESYSROOT_ROCM_PATH@/@LIBDIR@/libroctracer64.so`
 
   .so library.
 
@@ -32,11 +32,11 @@ To use the rocTracer API you need the AP
 
 To use the rocTX API you need the API header and to link your application with `roctx` .so library:
 
-- `/opt/rocm/roctracer/include/roctx.h`
+- `@ESYSROOT_ROCM_PATH@/roctracer/include/roctx.h`
 
   API header.
 
-- `/opt/rocm/lib/libroctx64.so`
+- `@ESYSROOT_ROCM_PATH@/@LIBDIR@/libroctx64.so`
 
   .so library.
 
diff -urp roctracer-rocm-5.7.0.orig/roctracer-backward-compat.cmake roctracer-rocm-5.7.0/roctracer-backward-compat.cmake
--- roctracer-rocm-5.7.0.orig/roctracer-backward-compat.cmake	2023-07-13 16:43:46.000000000 -0700
+++ roctracer-rocm-5.7.0/roctracer-backward-compat.cmake	2023-09-18 17:35:55.374164980 -0700
@@ -22,7 +22,7 @@ cmake_minimum_required(VERSION 3.16.8)
 set(ROCT_BUILD_DIR ${CMAKE_CURRENT_BINARY_DIR})
 set(ROCT_WRAPPER_DIR ${ROCT_BUILD_DIR}/wrapper_dir)
 set(ROCT_WRAPPER_INC_DIR ${ROCT_WRAPPER_DIR}/include)
-set(ROCT_WRAPPER_LIB_DIR ${ROCT_WRAPPER_DIR}/lib)
+set(ROCT_WRAPPER_LIB_DIR ${ROCT_WRAPPER_DIR}/@LIBDIR@)
 #set(ROCT_WRAPPER_TOOL_DIR ${ROCT_WRAPPER_DIR}/tool)
 
 #Function to set actual file contents in wrapper files
@@ -104,7 +104,7 @@ function(create_library_symlink)
   #add_custom_target(link_${LIB_TRACERTOOL} ALL
   #                WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}
   #                COMMAND ${CMAKE_COMMAND} -E create_symlink
-  #                ../../lib/${PROJECT_NAME}/${LIB_ROCTRACERTOOL} ${ROCT_WRAPPER_TOOL_DIR}/${LIB_TRACERTOOL})
+  #                ../../@LIBDIR@/${PROJECT_NAME}/${LIB_ROCTRACERTOOL} ${ROCT_WRAPPER_TOOL_DIR}/${LIB_TRACERTOOL})
 endfunction()
 
 #Use template header file and generater wrapper header files
diff -urp roctracer-rocm-5.7.0.orig/run_test.sh roctracer-rocm-5.7.0/run_test.sh
--- roctracer-rocm-5.7.0.orig/run_test.sh	2023-07-13 16:43:46.000000000 -0700
+++ roctracer-rocm-5.7.0/run_test.sh	2023-09-18 17:35:55.374164980 -0700
@@ -22,7 +22,7 @@
 # IN THE SOFTWARE.
 ################################################################################
 
-ROCM_PATH="${ROCM_PATH:=/opt/rocm}"
+ROCM_PATH="${ROCM_PATH:=@ESYSROOT_ROCM_PATH@}"
 
 fatal() {
   echo "$1"
diff -urp roctracer-rocm-5.7.0.orig/src/CMakeLists.txt roctracer-rocm-5.7.0/src/CMakeLists.txt
--- roctracer-rocm-5.7.0.orig/src/CMakeLists.txt	2023-07-13 16:43:46.000000000 -0700
+++ roctracer-rocm-5.7.0/src/CMakeLists.txt	2023-09-18 17:36:37.678164415 -0700
@@ -232,15 +232,15 @@ target_include_directories(roctracer_too
 target_link_libraries(roctracer_tool util roctracer hsa-runtime64::hsa-runtime64 stdc++fs Threads::Threads atomic dl)
 target_link_options(roctracer_tool PRIVATE -Wl,--version-script=${CMAKE_CURRENT_SOURCE_DIR}/tracer_tool/exportmap -Wl,--no-undefined)
 
-install(TARGETS roctracer_tool LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR}/${PROJECT_NAME} COMPONENT runtime)
-install(TARGETS roctracer_tool LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR}/${PROJECT_NAME} COMPONENT asan)
+install(TARGETS roctracer_tool LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR} COMPONENT runtime)
+install(TARGETS roctracer_tool LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR} COMPONENT asan)
 
 add_library(hip_stats SHARED hip_stats/hip_stats.cpp)
 set_target_properties(hip_stats PROPERTIES  INSTALL_RPATH "${ROCM_APPEND_PRIVLIB_RPATH}")
 target_compile_definitions(hip_stats PRIVATE __HIP_PLATFORM_AMD__)
 target_link_libraries(hip_stats roctracer stdc++fs)
-install(TARGETS hip_stats LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR}/${PROJECT_NAME} COMPONENT runtime)
-install(TARGETS hip_stats LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR}/${PROJECT_NAME} COMPONENT asan)
+install(TARGETS hip_stats LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR} COMPONENT runtime)
+install(TARGETS hip_stats LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR} COMPONENT asan)
 
 endif()
 
Only in roctracer-rocm-5.7.0/src: CMakeLists.txt.orig
Only in roctracer-rocm-5.7.0/src: CMakeLists.txt.rej
diff -urp roctracer-rocm-5.7.0.orig/test/CMakeLists.txt roctracer-rocm-5.7.0/test/CMakeLists.txt
--- roctracer-rocm-5.7.0.orig/test/CMakeLists.txt	2023-09-18 17:35:40.130165184 -0700
+++ roctracer-rocm-5.7.0/test/CMakeLists.txt	2023-09-18 17:38:50.814162637 -0700
@@ -27,13 +27,13 @@ set(CMAKE_EXECUTABLE_RUNTIME_HIP_FLAG ${
 set(CMAKE_EXECUTABLE_RUNTIME_HIP_FLAG_SEP ${CMAKE_SHARED_LIBRARY_RUNTIME_CXX_FLAG_SEP})
 set(CMAKE_EXECUTABLE_RPATH_LINK_HIP_FLAG ${CMAKE_SHARED_LIBRARY_RPATH_LINK_CXX_FLAG})
 
-set(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} "${ROCM_PATH}/lib/cmake/hip")
+set(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} "${ROCM_PATH}/@LIBDIR@/cmake/hip")
 set(CMAKE_HIP_ARCHITECTURES OFF)
 find_package(HIP REQUIRED MODULE)
 
 find_package(Clang REQUIRED CONFIG
-             PATHS "${ROCM_PATH}"
-             PATH_SUFFIXES "llvm/lib/cmake/clang")
+             PATHS "@ESYSROOT@/usr"
+             PATH_SUFFIXES "lib/llvm/@LLVM_SLOT@/@LIBDIR@/cmake/clang")
 
 ## Add a custom targets to build and run all the tests
 add_custom_target(mytest)
@@ -87,6 +87,7 @@ install(TARGETS codeobj_test DESTINATION
 function(generate_hsaco TARGET_ID INPUT_FILE OUTPUT_FILE)
   separate_arguments(CLANG_ARG_LIST UNIX_COMMAND
     "-O2 -x cl -Xclang -finclude-default-header -cl-denorms-are-zero -cl-std=CL2.0 -Wl,--build-id=sha1
+    --rocm-path=@EPREFIX@/usr --rocm-device-lib-path=@ESYSROOT_ROCM_PATH@/@LIBDIR@/amdgcn/bitcode
     -target amdgcn-amd-amdhsa -mcpu=${TARGET_ID} -o ${OUTPUT_FILE} ${INPUT_FILE}")
   add_custom_command(OUTPUT ${PROJECT_BINARY_DIR}/${OUTPUT_FILE}
     COMMAND clang ${CLANG_ARG_LIST}
Only in roctracer-rocm-5.7.0/test: CMakeLists.txt.orig
diff -urp roctracer-rocm-5.7.0.orig/test/run.sh roctracer-rocm-5.7.0/test/run.sh
--- roctracer-rocm-5.7.0.orig/test/run.sh	2023-07-13 16:43:46.000000000 -0700
+++ roctracer-rocm-5.7.0/test/run.sh	2023-09-18 17:39:22.942162208 -0700
@@ -32,8 +32,8 @@ export LOADER_USE_DYNSYM=1
 cd $BIN_DIR
 
 if [ -z "$ROCTRACER_LIB_PATH" ] ; then
-  if test -f "${BIN_DIR}/../../lib/libroctracer64.so" ; then
-    ROCTRACER_LIB_PATH="${BIN_DIR}/../../lib"
+  if test -f "${BIN_DIR}/../../@LIBDIR@/libroctracer64.so" ; then
+    ROCTRACER_LIB_PATH="${BIN_DIR}/../../@LIBDIR@"
   fi
 fi
 
@@ -48,8 +48,8 @@ if [ -z "$ROCTRACER_LIB_PATH" ] ; then
   ROCTRACER_LIB_PATH="."
 fi
 if [ -z "$ROCTRACER_TOOL_PATH" ] ; then
-  if test -f "${BIN_DIR}/../../lib/roctracer/libroctracer_tool.so" ; then
-    ROCTRACER_TOOL_PATH="${BIN_DIR}/../../lib/roctracer"
+  if test -f "${BIN_DIR}/../../@LIBDIR@/roctracer/libroctracer_tool.so" ; then
+    ROCTRACER_TOOL_PATH="${BIN_DIR}/../../@LIBDIR@/roctracer"
   else
     ROCTRACER_TOOL_PATH="."
   fi
