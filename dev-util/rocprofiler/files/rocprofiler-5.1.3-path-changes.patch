diff -urp rocprofiler-rocm-5.1.3.orig/bin/build_kernel.sh rocprofiler-rocm-5.1.3/bin/build_kernel.sh
--- rocprofiler-rocm-5.1.3.orig/bin/build_kernel.sh	2022-04-18 06:48:26.000000000 -0700
+++ rocprofiler-rocm-5.1.3/bin/build_kernel.sh	2023-08-26 12:47:40.551979192 -0700
@@ -18,7 +18,7 @@ if [ -z "$DST_DIR" ] ; then
 fi
 
 if [ -z "$ROCM_DIR" ] ; then
-  ROCM_DIR=/opt/rocm
+  ROCM_DIR=/usr
 fi
 
 if [ -z "$TGT_LIST" ] ; then
@@ -32,12 +32,12 @@ fi
 
 OCL_VER="2.0"
 
-if [ -e $ROCM_DIR/llvm ] ; then
-  LLVM_DIR=$ROCM_DIR/llvm
-  LIB_DIR=$ROCM_DIR/lib
+if [ -e $ROCM_DIR/lib/llvm/@LLVM_SLOT@ ] ; then
+  LLVM_DIR=$ROCM_DIR/lib/llvm/@LLVM_SLOT@
+  LIB_DIR=$ROCM_DIR/@LIBDIR@
 else
   LLVM_DIR=$ROCM_DIR/hcc
-  LIB_DIR=$LLVM_DIR/lib
+  LIB_DIR=$LLVM_DIR/@LIBDIR@
 fi
 
 # Determine whether using new or old device-libs layout
@@ -45,8 +45,8 @@ if [ -e $LIB_DIR/bitcode/opencl.amdgcn.b
   BC_DIR=$LIB_DIR/bitcode
 elif [ -e $LIB_DIR/opencl.amdgcn.bc ]; then
   BC_DIR=$LIB_DIR
-elif [ -e $ROCM_DIR/amdgcn/bitcode/opencl.bc ]; then
-  BC_DIR=$ROCM_DIR/amdgcn/bitcode
+elif [ -e $ROCM_DIR/@LIBDIR@/amdgcn/bitcode/opencl.bc ]; then
+  BC_DIR=$ROCM_DIR/@LIBDIR@/amdgcn/bitcode
 else
   echo "Error: Cannot find amdgcn bitcode directory"
   exit 1
diff -urp rocprofiler-rocm-5.1.3.orig/bin/merge_traces.sh rocprofiler-rocm-5.1.3/bin/merge_traces.sh
--- rocprofiler-rocm-5.1.3.orig/bin/merge_traces.sh	2022-04-18 06:48:26.000000000 -0700
+++ rocprofiler-rocm-5.1.3/bin/merge_traces.sh	2023-08-26 12:47:40.551979192 -0700
@@ -25,7 +25,7 @@
 #A script to merge rocprof traces and then provide a results.json for the aggregate numbers.
 
 ROCPROF=`which rocprof`
-BIN_DIR=$(dirname $(realpath ${ROCPROF:-/opt/rocm/bin/rocprof}))
+BIN_DIR=$(dirname $(realpath ${ROCPROF:-/usr/bin/rocprof}))
 
 bin_name=`basename $0`
 
diff -urp rocprofiler-rocm-5.1.3.orig/bin/rpl_run.sh rocprofiler-rocm-5.1.3/bin/rpl_run.sh
--- rocprofiler-rocm-5.1.3.orig/bin/rpl_run.sh	2022-04-18 06:48:26.000000000 -0700
+++ rocprofiler-rocm-5.1.3/bin/rpl_run.sh	2023-08-26 12:47:40.551979192 -0700
@@ -25,16 +25,16 @@
 time_stamp=`date +%y%m%d_%H%M%S`
 BIN_DIR=$(dirname $(realpath ${BASH_SOURCE[0]}))
 PKG_DIR=$(dirname $BIN_DIR)
-ROOT_DIR=$(dirname $PKG_DIR)
-TT_DIR=$ROOT_DIR/roctracer
+ROOT_DIR=$PKG_DIR
+TT_DIR=$ROOT_DIR
 RUN_DIR=`pwd`
 TMP_DIR="/tmp"
 DATA_DIR="rpl_data_${time_stamp}_$$"
 
-RPL_PATH=$PKG_DIR/lib
-TLIB_PATH=$PKG_DIR/tool
-TTLIB_PATH=$TT_DIR/tool
-ROCM_LIB_PATH=$ROOT_DIR/lib
+RPL_PATH=$PKG_DIR/@LIBDIR@
+TLIB_PATH=$PKG_DIR/@LIBDIR@
+TTLIB_PATH=$TT_DIR/@LIBDIR@
+ROCM_LIB_PATH=$ROOT_DIR/@LIBDIR@
 
 if [ -z "$ROCP_PYTHON_VERSION" ] ; then
   ROCP_PYTHON_VERSION=python3
@@ -70,7 +70,7 @@ export ROCP_HSA_INTERCEPT=1
 # Disabling internal ROC Profiler proxy queue (simple version supported for testing purposes)
 unset ROCP_PROXY_QUEUE
 # ROC Profiler metrics definition
-export ROCP_METRICS=$PKG_DIR/lib/metrics.xml
+export ROCP_METRICS=$PKG_DIR/share/rocprofiler/metrics.xml
 # Disable AQL-profile read API
 export AQLPROFILE_READ_API=0
 # ROC Profiler package path
@@ -104,7 +104,7 @@ usage() {
   bin_name=`basename $0`
   echo "ROCm Profiling Library (RPL) run script, a part of ROCprofiler library package."
   echo "Full path: $BIN_DIR/$bin_name"
-  echo "Metrics definition: $PKG_DIR/lib/metrics.xml"
+  echo "Metrics definition: $PKG_DIR/share/rocprofiler/metrics.xml"
   echo ""
   echo "Usage:"
   echo "  $bin_name [-h] [--list-basic] [--list-derived] [-i <input .txt/.xml file>] [-o <output CSV file>] <app command line>"
@@ -210,7 +210,7 @@ fi
 # setting ROCM_LIB_PATH
 set_rocm_lib_path() {
 
-  for ROCM_LIB_PATH in "$ROOT_DIR/lib" "$ROOT_DIR/lib64" ; do
+  for ROCM_LIB_PATH in "$ROOT_DIR/@LIBDIR@" ; do
      if [ -d "$ROCM_LIB_PATH" ]; then
         return 0
      fi
@@ -224,7 +224,7 @@ set_rocm_lib_path() {
 OUTPUT_LIST=""
 run() {
   if ! set_rocm_lib_path ; then
-     echo " Fatal could not find ROCm lib directory "
+     echo " Fatal could not find ROCm @LIBDIR@ directory "
      fatal
   fi
   export ROCP_INPUT="$1"
@@ -374,11 +374,11 @@ while [ 1 ] ; do
     export ROCP_METRICS="$2"
   elif [ "$1" = "--list-basic" ] ; then
     export ROCP_INFO=b
-    HSA_TOOLS_LIB="$MY_HSA_TOOLS_LIB" eval "$PKG_DIR/tool/ctrl"
+    HSA_TOOLS_LIB="$MY_HSA_TOOLS_LIB" eval "$PKG_DIR/bin/ctrl"
     exit 1
   elif [ "$1" = "--list-derived" ] ; then
     export ROCP_INFO=d
-    HSA_TOOLS_LIB="$MY_HSA_TOOLS_LIB" eval "$PKG_DIR/tool/ctrl"
+    HSA_TOOLS_LIB="$MY_HSA_TOOLS_LIB" eval "$PKG_DIR/bin/ctrl"
     exit 1
   elif [ "$1" = "--basenames" ] ; then
     if [ "$2" = "on" ] ; then
diff -urp rocprofiler-rocm-5.1.3.orig/build.sh rocprofiler-rocm-5.1.3/build.sh
--- rocprofiler-rocm-5.1.3.orig/build.sh	2022-04-18 06:48:26.000000000 -0700
+++ rocprofiler-rocm-5.1.3/build.sh	2023-08-26 12:47:40.551979192 -0700
@@ -2,5 +2,5 @@
 BIN_DIR=`dirname $0`
 BLD_DIR=$BIN_DIR/build
 
-export CMAKE_PREFIX_PATH=/opt/rocm/include/hsa:/opt/rocm
+export CMAKE_PREFIX_PATH=/usr/include/hsa:/usr
 rm -rf $BLD_DIR && mkdir $BLD_DIR && cd $BLD_DIR && cmake .. && make -j && make mytest
diff -urp rocprofiler-rocm-5.1.3.orig/CMakeLists.txt rocprofiler-rocm-5.1.3/CMakeLists.txt
--- rocprofiler-rocm-5.1.3.orig/CMakeLists.txt	2023-08-26 12:47:22.803978751 -0700
+++ rocprofiler-rocm-5.1.3/CMakeLists.txt	2023-08-26 12:47:40.551979192 -0700
@@ -23,10 +23,10 @@
 cmake_minimum_required ( VERSION 2.8.12 )
 
 # Install prefix
-set(CMAKE_INSTALL_PREFIX "/opt/rocm" CACHE PATH "Install path prefix default")
+#_cmake_modify_IGNORE set(CMAKE_INSTALL_PREFIX "/usr" CACHE PATH "Install path prefix default")
 
 ## Verbose output.
-set ( CMAKE_VERBOSE_MAKEFILE TRUE CACHE BOOL "Verbose Output" FORCE )
+#_cmake_modify_IGNORE set ( CMAKE_VERBOSE_MAKEFILE TRUE CACHE BOOL "Verbose Output" FORCE )
 
 ## Set module name and project name.
 set ( ROCPROFILER_NAME "rocprofiler" )
@@ -82,7 +82,7 @@ if(USE_PROF_API EQUAL 1)
         HINTS
             ${PROF_API_HEADER_PATH}
         PATHS
-            /opt/rocm/roctracer
+            /usr/roctracer
         PATH_SUFFIXES
             include/ext
     )
@@ -116,7 +116,7 @@ if ( DEFINED CMAKE_INSTALL_PREFIX )
   get_filename_component ( prefix_name ${CMAKE_INSTALL_PREFIX} NAME )
   get_filename_component ( prefix_dir ${CMAKE_INSTALL_PREFIX} DIRECTORY )
   if ( prefix_name STREQUAL ${DEST_NAME} )
-    set ( CMAKE_INSTALL_PREFIX ${prefix_dir} )
+#_cmake_modify_IGNORE     set ( CMAKE_INSTALL_PREFIX ${prefix_dir} )
   endif ()
 endif ()
 if ( DEFINED CPACK_PACKAGING_INSTALL_PREFIX )
@@ -134,18 +134,18 @@ message ( "-----------Dest-name: ${DEST_
 
 ## Create symlinks for packaging and install
 add_custom_target ( rocprof-link ALL WORKING_DIRECTORY ${PROJECT_BINARY_DIR}
-                    COMMAND ${CMAKE_COMMAND} -E create_symlink ../${DEST_NAME}/bin/rpl_run.sh rocprof-link )
+                    COMMAND ${CMAKE_COMMAND} -E create_symlink ../bin/rpl_run.sh rocprof-link )
 #add_custom_target ( inc-link ALL WORKING_DIRECTORY ${PROJECT_BINARY_DIR}
-#                    COMMAND ${CMAKE_COMMAND} -E create_symlink ../${DEST_NAME}/include inc-link )
+#                    COMMAND ${CMAKE_COMMAND} -E create_symlink ../include/${DEST_NAME} inc-link )
 add_custom_target ( so-link ALL WORKING_DIRECTORY ${PROJECT_BINARY_DIR}
-                    COMMAND ${CMAKE_COMMAND} -E create_symlink ../${DEST_NAME}/lib/${ROCPROFILER_LIBRARY}.so so-link )
+                    COMMAND ${CMAKE_COMMAND} -E create_symlink ../@LIBDIR@/${ROCPROFILER_LIBRARY}.so so-link )
 
 # Install header and library
-install ( TARGETS ${ROCPROFILER_TARGET} LIBRARY DESTINATION ${DEST_NAME}/lib )
+install ( TARGETS ${ROCPROFILER_TARGET} LIBRARY DESTINATION @LIBDIR@ )
 install ( FILES
           ${CMAKE_CURRENT_SOURCE_DIR}/inc/rocprofiler.h
           ${CMAKE_CURRENT_SOURCE_DIR}/src/core/activity.h
-          DESTINATION ${DEST_NAME}/include )
+          DESTINATION include/${DEST_NAME} )
 install ( FILES
           ${CMAKE_CURRENT_SOURCE_DIR}/inc/rocprofiler.h
           ${CMAKE_CURRENT_SOURCE_DIR}/src/core/activity.h
@@ -160,19 +160,19 @@ install ( FILES
           ${CMAKE_CURRENT_SOURCE_DIR}/bin/dform.py
           ${CMAKE_CURRENT_SOURCE_DIR}/bin/mem_manager.py
           ${CMAKE_CURRENT_SOURCE_DIR}/bin/sqlitedb.py
-          DESTINATION ${DEST_NAME}/bin
+          DESTINATION bin
           PERMISSIONS OWNER_READ OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE )
 # gfx_metrics.xml metrics.xml
 install ( FILES
           ${CMAKE_CURRENT_SOURCE_DIR}/test/tool/metrics.xml
           ${CMAKE_CURRENT_SOURCE_DIR}/test/tool/gfx_metrics.xml
-          DESTINATION ${DEST_NAME}/lib )
+          DESTINATION @LIBDIR@ )
 # libtool.so
-install ( FILES ${PROJECT_BINARY_DIR}/test/libtool.so DESTINATION ${DEST_NAME}/tool )
-install ( FILES ${PROJECT_BINARY_DIR}/test/ctrl DESTINATION ${DEST_NAME}/tool
+install ( FILES ${PROJECT_BINARY_DIR}/test/libtool.so DESTINATION @LIBDIR@ )
+install ( FILES ${PROJECT_BINARY_DIR}/test/ctrl DESTINATION bin
           PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE )
 # links
-install ( FILES ${PROJECT_BINARY_DIR}/so-link DESTINATION lib RENAME ${ROCPROFILER_LIBRARY}.so )
+install ( FILES ${PROJECT_BINARY_DIR}/so-link DESTINATION @LIBDIR@ RENAME ${ROCPROFILER_LIBRARY}.so )
 #install ( FILES ${PROJECT_BINARY_DIR}/inc-link DESTINATION include RENAME ${DEST_NAME} )
 install ( FILES ${PROJECT_BINARY_DIR}/rocprof-link DESTINATION bin
           PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE
diff -urp rocprofiler-rocm-5.1.3.orig/cmake_modules/env.cmake rocprofiler-rocm-5.1.3/cmake_modules/env.cmake
--- rocprofiler-rocm-5.1.3.orig/cmake_modules/env.cmake	2023-08-26 12:47:22.831978752 -0700
+++ rocprofiler-rocm-5.1.3/cmake_modules/env.cmake	2023-08-26 12:47:40.551979192 -0700
@@ -105,10 +105,10 @@ elseif ( ${CMAKE_SYSTEM_PROCESSOR} STREQ
 endif ()
 
 ## Find hsa-runtime
-find_package(hsa-runtime64 1.0 REQUIRED HINTS ${CMAKE_INSTALL_PREFIX} PATHS /opt/rocm)
+find_package(hsa-runtime64 1.0 REQUIRED HINTS ${CMAKE_INSTALL_PREFIX} PATHS /usr)
 
 # find KFD thunk
-find_package(hsakmt 1.0 REQUIRED HINTS ${CMAKE_INSTALL_PREFIX} PATHS /opt/rocm)
+find_package(hsakmt 1.0 REQUIRED HINTS ${CMAKE_INSTALL_PREFIX} PATHS /usr)
 
 ## Find ROCm
 find_library ( HSA_KMT_LIB "libhsakmt.so" )
Only in rocprofiler-rocm-5.1.3/cmake_modules: env.cmake.orig
diff -urp rocprofiler-rocm-5.1.3.orig/DEBIAN/postinst.in rocprofiler-rocm-5.1.3/DEBIAN/postinst.in
--- rocprofiler-rocm-5.1.3.orig/DEBIAN/postinst.in	2022-04-18 06:48:26.000000000 -0700
+++ rocprofiler-rocm-5.1.3/DEBIAN/postinst.in	2023-08-26 12:47:40.551979192 -0700
@@ -5,7 +5,7 @@ set -e
 do_ldconfig() {
   # left-hand term originates from ENABLE_LDCONFIG = ON/OFF at package build
   if [ "@ENABLE_LDCONFIG@" == "ON" ]; then
-    echo @CPACK_PACKAGING_INSTALL_PREFIX@/rocprofiler/lib > /etc/ld.so.conf.d/librocprofiler64.conf
+    echo @CPACK_PACKAGING_INSTALL_PREFIX@/rocprofiler/@LIBDIR@ > /etc/ld.so.conf.d/librocprofiler64.conf
     ldconfig
   fi
 }
diff -urp rocprofiler-rocm-5.1.3.orig/Readme.txt rocprofiler-rocm-5.1.3/Readme.txt
--- rocprofiler-rocm-5.1.3.orig/Readme.txt	2022-04-18 06:48:26.000000000 -0700
+++ rocprofiler-rocm-5.1.3/Readme.txt	2023-08-26 12:47:40.551979192 -0700
@@ -24,7 +24,7 @@ $ export CMAKE_DEBUG_TRACE=1 # 1 to enab
 To build with the current installed ROCM:
 
 $ cd .../rocprofiler
-$ export CMAKE_PREFIX_PATH=/opt/rocm/include/hsa:/opt/rocm
+$ export CMAKE_PREFIX_PATH=/usr/include/hsa:/usr
 $ mkdir build
 $ cd build
 $ cmake ..
diff -urp rocprofiler-rocm-5.1.3.orig/RPM/post.in rocprofiler-rocm-5.1.3/RPM/post.in
--- rocprofiler-rocm-5.1.3.orig/RPM/post.in	2022-04-18 06:48:26.000000000 -0700
+++ rocprofiler-rocm-5.1.3/RPM/post.in	2023-08-26 12:47:40.551979192 -0700
@@ -1,5 +1,5 @@
 # left-hand term originates from ENABLE_LDCONFIG = ON/OFF at package build
 if [ "@ENABLE_LDCONFIG@" == "ON" ]; then
-  echo @CPACK_PACKAGING_INSTALL_PREFIX@/rocprofiler/lib > /etc/ld.so.conf.d/librocprofiler64.conf
+  echo @CPACK_PACKAGING_INSTALL_PREFIX@/rocprofiler/@LIBDIR@ > /etc/ld.so.conf.d/librocprofiler64.conf
   ldconfig
 fi
diff -urp rocprofiler-rocm-5.1.3.orig/test/CMakeLists.txt rocprofiler-rocm-5.1.3/test/CMakeLists.txt
--- rocprofiler-rocm-5.1.3.orig/test/CMakeLists.txt	2022-04-18 06:48:26.000000000 -0700
+++ rocprofiler-rocm-5.1.3/test/CMakeLists.txt	2023-08-26 12:47:40.551979192 -0700
@@ -21,7 +21,7 @@
 ################################################################################
 
 cmake_minimum_required ( VERSION 2.8.12 )
-set ( CMAKE_VERBOSE_MAKEFILE TRUE CACHE BOOL "Verbose Output" FORCE )
+#_cmake_modify_IGNORE set ( CMAKE_VERBOSE_MAKEFILE TRUE CACHE BOOL "Verbose Output" FORCE )
 
 set ( EXE_NAME "ctrl" )
 
diff -urp rocprofiler-rocm-5.1.3.orig/test/run.sh rocprofiler-rocm-5.1.3/test/run.sh
--- rocprofiler-rocm-5.1.3.orig/test/run.sh	2022-04-18 06:48:26.000000000 -0700
+++ rocprofiler-rocm-5.1.3/test/run.sh	2023-08-26 12:47:40.551979192 -0700
@@ -57,7 +57,7 @@ eval_test() {
 }
 
 # paths to ROC profiler and oher libraries
-export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$PWD:$PWD/../../lib:/opt/rocm/lib
+export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$PWD:$PWD/../../@LIBDIR@:/usr/@LIBDIR@
 
 # enable tools load failure reporting
 export HSA_TOOLS_REPORT_LOAD_FAILURE=1
