diff -urp rocprofiler-rocm-5.1.3.orig/bin/build_kernel.sh rocprofiler-rocm-5.1.3/bin/build_kernel.sh
--- rocprofiler-rocm-5.1.3.orig/bin/build_kernel.sh	2022-04-18 06:48:26.000000000 -0700
+++ rocprofiler-rocm-5.1.3/bin/build_kernel.sh	2023-08-22 22:26:55.412266883 -0700
@@ -18,7 +18,7 @@ if [ -z "$DST_DIR" ] ; then
 fi
 
 if [ -z "$ROCM_DIR" ] ; then
-  ROCM_DIR=/opt/rocm
+  ROCM_DIR=/usr
 fi
 
 if [ -z "$TGT_LIST" ] ; then
@@ -32,12 +32,12 @@ fi
 
 OCL_VER="2.0"
 
-if [ -e $ROCM_DIR/llvm ] ; then
-  LLVM_DIR=$ROCM_DIR/llvm
-  LIB_DIR=$ROCM_DIR/lib
+if [ -e $ROCM_DIR/lib/llvm/@LLVM_SLOT@ ] ; then
+  LLVM_DIR=$ROCM_DIR/lib/llvm/@LLVM_SLOT@
+  LIB_DIR=$ROCM_DIR/@LIBDIR@
 else
   LLVM_DIR=$ROCM_DIR/hcc
-  LIB_DIR=$LLVM_DIR/lib
+  LIB_DIR=$LLVM_DIR/@LIBDIR@
 fi
 
 # Determine whether using new or old device-libs layout
@@ -45,8 +45,8 @@ if [ -e $LIB_DIR/bitcode/opencl.amdgcn.b
   BC_DIR=$LIB_DIR/bitcode
 elif [ -e $LIB_DIR/opencl.amdgcn.bc ]; then
   BC_DIR=$LIB_DIR
-elif [ -e $ROCM_DIR/amdgcn/bitcode/opencl.bc ]; then
-  BC_DIR=$ROCM_DIR/amdgcn/bitcode
+elif [ -e $ROCM_DIR/@LIBDIR@/amdgcn/bitcode/opencl.bc ]; then
+  BC_DIR=$ROCM_DIR/@LIBDIR@/amdgcn/bitcode
 else
   echo "Error: Cannot find amdgcn bitcode directory"
   exit 1
diff -urp rocprofiler-rocm-5.1.3.orig/bin/merge_traces.sh rocprofiler-rocm-5.1.3/bin/merge_traces.sh
--- rocprofiler-rocm-5.1.3.orig/bin/merge_traces.sh	2022-04-18 06:48:26.000000000 -0700
+++ rocprofiler-rocm-5.1.3/bin/merge_traces.sh	2023-08-22 22:26:55.412266883 -0700
@@ -25,7 +25,7 @@
 #A script to merge rocprof traces and then provide a results.json for the aggregate numbers.
 
 ROCPROF=`which rocprof`
-BIN_DIR=$(dirname $(realpath ${ROCPROF:-/opt/rocm/bin/rocprof}))
+BIN_DIR=$(dirname $(realpath ${ROCPROF:-/usr/bin/rocprof}))
 
 bin_name=`basename $0`
 
diff -urp rocprofiler-rocm-5.1.3.orig/bin/rpl_run.sh rocprofiler-rocm-5.1.3/bin/rpl_run.sh
--- rocprofiler-rocm-5.1.3.orig/bin/rpl_run.sh	2023-08-22 22:26:40.940266524 -0700
+++ rocprofiler-rocm-5.1.3/bin/rpl_run.sh	2023-08-22 22:27:34.048267841 -0700
@@ -210,7 +210,7 @@ fi
 # setting ROCM_LIB_PATH
 set_rocm_lib_path() {
 
-  for ROCM_LIB_PATH in "$ROOT_DIR/lib" "$ROOT_DIR/lib64" ; do
+  for ROCM_LIB_PATH in "$ROOT_DIR/@LIBDIR@" ; do
      if [ -d "$ROCM_LIB_PATH" ]; then
         return 0
      fi
diff -urp rocprofiler-rocm-5.1.3.orig/build.sh rocprofiler-rocm-5.1.3/build.sh
--- rocprofiler-rocm-5.1.3.orig/build.sh	2022-04-18 06:48:26.000000000 -0700
+++ rocprofiler-rocm-5.1.3/build.sh	2023-08-22 22:26:55.412266883 -0700
@@ -2,5 +2,5 @@
 BIN_DIR=`dirname $0`
 BLD_DIR=$BIN_DIR/build
 
-export CMAKE_PREFIX_PATH=/opt/rocm/include/hsa:/opt/rocm
+export CMAKE_PREFIX_PATH=/usr/include/hsa:/usr
 rm -rf $BLD_DIR && mkdir $BLD_DIR && cd $BLD_DIR && cmake .. && make -j && make mytest
diff -urp rocprofiler-rocm-5.1.3.orig/CMakeLists.txt rocprofiler-rocm-5.1.3/CMakeLists.txt
--- rocprofiler-rocm-5.1.3.orig/CMakeLists.txt	2023-08-22 22:26:40.912266523 -0700
+++ rocprofiler-rocm-5.1.3/CMakeLists.txt	2023-08-22 22:26:55.412266883 -0700
@@ -23,7 +23,7 @@
 cmake_minimum_required ( VERSION 2.8.12 )
 
 # Install prefix
-set(CMAKE_INSTALL_PREFIX "/opt/rocm" CACHE PATH "Install path prefix default")
+set(CMAKE_INSTALL_PREFIX "/usr" CACHE PATH "Install path prefix default")
 
 ## Verbose output.
 set ( CMAKE_VERBOSE_MAKEFILE TRUE CACHE BOOL "Verbose Output" FORCE )
@@ -82,7 +82,7 @@ if(USE_PROF_API EQUAL 1)
         HINTS
             ${PROF_API_HEADER_PATH}
         PATHS
-            /opt/rocm/roctracer
+            /usr/roctracer
         PATH_SUFFIXES
             include/ext
     )
@@ -138,7 +138,7 @@ add_custom_target ( rocprof-link ALL WOR
 #add_custom_target ( inc-link ALL WORKING_DIRECTORY ${PROJECT_BINARY_DIR}
 #                    COMMAND ${CMAKE_COMMAND} -E create_symlink ../include/${DEST_NAME} inc-link )
 add_custom_target ( so-link ALL WORKING_DIRECTORY ${PROJECT_BINARY_DIR}
-                    COMMAND ${CMAKE_COMMAND} -E create_symlink ../lib64/${ROCPROFILER_LIBRARY}.so so-link )
+                    COMMAND ${CMAKE_COMMAND} -E create_symlink ../@LIBDIR@/${ROCPROFILER_LIBRARY}.so so-link )
 
 # Install header and library
 install ( TARGETS ${ROCPROFILER_TARGET} LIBRARY DESTINATION lib64 )
diff -urp rocprofiler-rocm-5.1.3.orig/cmake_modules/env.cmake rocprofiler-rocm-5.1.3/cmake_modules/env.cmake
--- rocprofiler-rocm-5.1.3.orig/cmake_modules/env.cmake	2023-08-22 22:26:40.948266524 -0700
+++ rocprofiler-rocm-5.1.3/cmake_modules/env.cmake	2023-08-22 22:26:55.412266883 -0700
@@ -105,10 +105,10 @@ elseif ( ${CMAKE_SYSTEM_PROCESSOR} STREQ
 endif ()
 
 ## Find hsa-runtime
-find_package(hsa-runtime64 1.0 REQUIRED HINTS ${CMAKE_INSTALL_PREFIX} PATHS /opt/rocm)
+find_package(hsa-runtime64 1.0 REQUIRED HINTS ${CMAKE_INSTALL_PREFIX} PATHS /usr)
 
 # find KFD thunk
-find_package(hsakmt 1.0 REQUIRED HINTS ${CMAKE_INSTALL_PREFIX} PATHS /opt/rocm)
+find_package(hsakmt 1.0 REQUIRED HINTS ${CMAKE_INSTALL_PREFIX} PATHS /usr)
 
 ## Find ROCm
 find_library ( HSA_KMT_LIB "libhsakmt.so" )
diff -urp rocprofiler-rocm-5.1.3.orig/Readme.txt rocprofiler-rocm-5.1.3/Readme.txt
--- rocprofiler-rocm-5.1.3.orig/Readme.txt	2022-04-18 06:48:26.000000000 -0700
+++ rocprofiler-rocm-5.1.3/Readme.txt	2023-08-22 22:26:55.412266883 -0700
@@ -24,7 +24,7 @@ $ export CMAKE_DEBUG_TRACE=1 # 1 to enab
 To build with the current installed ROCM:
 
 $ cd .../rocprofiler
-$ export CMAKE_PREFIX_PATH=/opt/rocm/include/hsa:/opt/rocm
+$ export CMAKE_PREFIX_PATH=/usr/include/hsa:/usr
 $ mkdir build
 $ cd build
 $ cmake ..
diff -urp rocprofiler-rocm-5.1.3.orig/test/run.sh rocprofiler-rocm-5.1.3/test/run.sh
--- rocprofiler-rocm-5.1.3.orig/test/run.sh	2022-04-18 06:48:26.000000000 -0700
+++ rocprofiler-rocm-5.1.3/test/run.sh	2023-08-22 22:26:55.412266883 -0700
@@ -57,7 +57,7 @@ eval_test() {
 }
 
 # paths to ROC profiler and oher libraries
-export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$PWD:$PWD/../../lib:/opt/rocm/lib
+export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$PWD:$PWD/../../@LIBDIR@:/usr/@LIBDIR@
 
 # enable tools load failure reporting
 export HSA_TOOLS_REPORT_LOAD_FAILURE=1
