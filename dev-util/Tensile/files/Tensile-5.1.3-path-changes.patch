diff -urp Tensile-rocm-5.1.3.orig/HostLibraryTests/CMakeLists.txt Tensile-rocm-5.1.3/HostLibraryTests/CMakeLists.txt
--- Tensile-rocm-5.1.3.orig/HostLibraryTests/CMakeLists.txt	2022-03-10 20:40:09.000000000 -0800
+++ Tensile-rocm-5.1.3/HostLibraryTests/CMakeLists.txt	2023-09-03 20:54:15.808420935 -0700
@@ -26,7 +26,7 @@ project(TensileHostLibraryTest)
 set( CMAKE_CXX_STANDARD 14 )
 set( CMAKE_CXX_EXTENSIONS OFF )
 
-list(APPEND CMAKE_PREFIX_PATH $ENV{ROCM_PATH} /opt/rocm)
+list(APPEND CMAKE_PREFIX_PATH $ENV{ROCM_PATH} /usr)
 
 option(TENSILE_USE_HIP       "Use the Hip runtime." ON)
 option(TENSILE_USE_OPENCL    "Use the OpenCL runtime." ON)
@@ -80,7 +80,7 @@ find_package(Boost COMPONENTS filesystem
 
 #if(TENSILE_USE_HIP AND NOT HIP_DIR)
 if(TENSILE_USE_HIP)
-    find_package(HIP REQUIRED CONFIG PATHS $ENV{ROCM_PATH} /opt/rocm)
+    find_package(HIP REQUIRED CONFIG PATHS $ENV{ROCM_PATH} /usr)
 endif()
 
 if(TENSILE_USE_OPENMP AND NOT TARGET custom_openmp_cxx)
@@ -135,13 +135,7 @@ set(test_sources ${test_sources}
 )
 
 if(TENSILE_USE_LLVM)
-    find_package(LLVM 13.0 QUIET CONFIG)
-    if(NOT LLVM_FOUND)
-        find_package(LLVM 12.0 QUIET CONFIG)
-        if(NOT LLVM_FOUND)
-            find_package(LLVM REQUIRED CONFIG)
-        endif()
-    endif()
+    find_package(LLVM PATHS /usr/lib/llvm/@LLVM_SLOT@ REQUIRED CONFIG)
 
     set(test_sources ${test_sources}
         ContractionLibraryLoading_test.cpp
Only in Tensile-rocm-5.1.3: pytest.ini.rej
Only in Tensile-rocm-5.1.3/Tensile: ClientExecutable.py.rej
diff -urp Tensile-rocm-5.1.3.orig/Tensile/ClientWriter.py Tensile-rocm-5.1.3/Tensile/ClientWriter.py
--- Tensile-rocm-5.1.3.orig/Tensile/ClientWriter.py	2022-03-10 20:40:09.000000000 -0800
+++ Tensile-rocm-5.1.3/Tensile/ClientWriter.py	2023-09-03 20:54:17.964420906 -0700
@@ -177,7 +177,7 @@ def getBuildClientLibraryScript(buildPat
   import io
   runScriptFile = io.StringIO()
 
-  callCreateLibraryCmd = globalParameters["ScriptPath"] + "/bin/TensileCreateLibrary"
+  callCreateLibraryCmd = "TensileCreateLibrary"
 
 
   if globalParameters["MergeFiles"]:
diff -urp Tensile-rocm-5.1.3.orig/Tensile/cmake/TensileConfig.cmake Tensile-rocm-5.1.3/Tensile/cmake/TensileConfig.cmake
--- Tensile-rocm-5.1.3.orig/Tensile/cmake/TensileConfig.cmake	2023-09-03 20:53:59.860421147 -0700
+++ Tensile-rocm-5.1.3/Tensile/cmake/TensileConfig.cmake	2023-09-03 20:54:17.964420906 -0700
@@ -133,7 +133,7 @@ function(TensileCreateLibraryFiles
   if(Tensile_TENSILE_ROOT)
     set(Script "${Tensile_TENSILE_ROOT}/bin/TensileCreateLibrary")
   else()
-    set(Script "${Tensile_ROOT}/bin/TensileCreateLibrary")
+    set(Script "TensileCreateLibrary") # ${Tensile_ROOT}/bin does not exists; call command directly
   endif()
 
   message(STATUS "Tensile script: ${Script}")
Only in Tensile-rocm-5.1.3/Tensile/cmake: TensileConfig.cmake.orig
Only in Tensile-rocm-5.1.3/Tensile/cmake: TensileConfig.cmake.rej
diff -urp Tensile-rocm-5.1.3.orig/Tensile/Common.py Tensile-rocm-5.1.3/Tensile/Common.py
--- Tensile-rocm-5.1.3.orig/Tensile/Common.py	2023-09-03 20:53:59.876421147 -0700
+++ Tensile-rocm-5.1.3/Tensile/Common.py	2023-09-03 21:01:06.384415452 -0700
@@ -213,12 +213,12 @@ globalParameters["LibraryUpdateComment"]
 
 # internal, i.e., gets set during startup
 globalParameters["CurrentISA"] = (0,0,0)
-globalParameters["ROCmAgentEnumeratorPath"] = None      # /opt/rocm/bin/rocm_agent_enumerator
-globalParameters["ROCmSMIPath"] = None                  # /opt/rocm/bin/rocm-smi
-globalParameters["AssemblerPath"] = None                # /opt/rocm/hip/bin/hipcc
+globalParameters["ROCmAgentEnumeratorPath"] = None      # /usr/bin/rocm_agent_enumerator
+globalParameters["ROCmSMIPath"] = None                  # /usr/bin/rocm-smi
+globalParameters["AssemblerPath"] = None                # /usr/bin/hipcc
 globalParameters["WorkingPath"] = os.getcwd()           # path where tensile called from
 globalParameters["IndexChars"] =  "IJKLMNOPQRSTUVWXYZ"  # which characters to use for C[ij]=Sum[k] A[ik]*B[jk]
-globalParameters["ScriptPath"] = os.path.dirname(os.path.realpath(__file__))            # path to Tensile/Tensile.py
+globalParameters["ScriptPath"] = "@EPREFIX@/usr/share/Tensile"            # path to Tensile/Tensile.py
 globalParameters["SourcePath"] = os.path.join(globalParameters["ScriptPath"], "Source") # path to Tensile/Source/
 globalParameters["HipClangVersion"] = "0,0,0"
 
@@ -251,7 +251,7 @@ globalParameters["MinKForGSU"] = 256 # m
 globalParameters["GranularityThreshold"] = 0.0
 
 # directory where custom kernels are located
-globalParameters["CustomKernelDirectory"] = os.path.join(os.path.dirname(os.path.realpath(__file__)), "CustomKernels")
+globalParameters["CustomKernelDirectory"] = os.path.join("@EPREFIX@/usr/share/Tensile", "CustomKernels")
 
 globalParameters["PristineOnGPU"] = True # use Pristine memory on Tensile trainning verification or not
 
@@ -1631,7 +1631,7 @@ def printExit(message):
 ################################################################################
 def isExe( filePath ):
   return os.path.isfile(filePath) and os.access(filePath, os.X_OK)
-def locateExe( defaultPath, exeName ): # /opt/rocm/bin, hip-clang
+def locateExe( defaultPath, exeName ): # /usr/bin, hip-clang
   # look in defaultPath first
   exePath = os.path.join(defaultPath, exeName)
   if isExe(exePath):
@@ -1882,7 +1882,7 @@ def assignGlobalParameters( config ):
     else:
       print2(" %24s: %8s (unspecified)" % (key, defaultValue))
 
-  globalParameters["ROCmPath"] = "/opt/rocm"
+  globalParameters["ROCmPath"] = "@EPREFIX@/usr"
   if "ROCM_PATH" in os.environ:
     globalParameters["ROCmPath"] = os.environ.get("ROCM_PATH")
   if "TENSILE_ROCM_PATH" in os.environ:
@@ -1910,11 +1910,11 @@ def assignGlobalParameters( config ):
     if os.name == "nt":
       globalParameters["AssemblerPath"] = locateExe(globalParameters["ROCmBinPath"], "clang++.exe")
     else:
-      globalParameters["AssemblerPath"] = locateExe(os.path.join(globalParameters["ROCmPath"], "llvm/bin"), "clang++")
+      globalParameters["AssemblerPath"] = locateExe(os.path.join(globalParameters["ROCmPath"], "lib/llvm/@LLVM_SLOT@/bin"), "clang++")
 
   globalParameters["ROCmSMIPath"] = locateExe(globalParameters["ROCmBinPath"], "rocm-smi")
 
-  globalParameters["ExtractKernelPath"] = locateExe(os.path.join(globalParameters["ROCmPath"], "hip/bin"), "extractkernel")
+  globalParameters["ExtractKernelPath"] = locateExe(os.path.join(globalParameters["ROCmPath"], "bin"), "extractkernel")
 
   if "TENSILE_ROCM_OFFLOAD_BUNDLER_PATH" in os.environ:
     globalParameters["ClangOffloadBundlerPath"] = os.environ.get("TENSILE_ROCM_OFFLOAD_BUNDLER_PATH")
@@ -1922,7 +1922,7 @@ def assignGlobalParameters( config ):
     if os.name == "nt":
       globalParameters["ClangOffloadBundlerPath"] = locateExe(globalParameters["ROCmBinPath"], "clang-offload-bundler.exe")
     else:
-      globalParameters["ClangOffloadBundlerPath"] = locateExe(os.path.join(globalParameters["ROCmPath"], "llvm/bin"), "clang-offload-bundler")
+      globalParameters["ClangOffloadBundlerPath"] = locateExe(os.path.join(globalParameters["ROCmPath"], "lib/llvm/@LLVM_SLOT@/bin"), "clang-offload-bundler")
 
   if "ROCmAgentEnumeratorPath" in config:
     globalParameters["ROCmAgentEnumeratorPath"] = config["ROCmAgentEnumeratorPath"]
Only in Tensile-rocm-5.1.3/Tensile: Common.py.rej
diff -urp Tensile-rocm-5.1.3.orig/Tensile/GenerateSummations.py Tensile-rocm-5.1.3/Tensile/GenerateSummations.py
--- Tensile-rocm-5.1.3.orig/Tensile/GenerateSummations.py	2022-03-10 20:40:09.000000000 -0800
+++ Tensile-rocm-5.1.3/Tensile/GenerateSummations.py	2023-09-03 20:54:18.684420896 -0700
@@ -57,7 +57,7 @@ def createLibraryForBenchmark(logicPath,
     Selection.
     """
 
-    pythonExePath = os.path.join(os.path.dirname(os.path.realpath(__file__)), "bin", "TensileCreateLibrary")
+    pythonExePath = "TensileCreateLibrary"
     args = [pythonExePath, \
         "--merge-files", "--new-client-only", "--no-short-file-names", "--no-library-print-debug", \
         "--architecture=all", "--code-object-version=V3", "--cxx-compiler=hipcc", "--library-format=yaml", \
@@ -89,7 +89,7 @@ def GenerateSummations(userArgs):
 
         currentPath = ensurePath(os.path.join(outputPath, logicFileStem))
 
-        libPath = ensurePath(os.path.join(currentPath, "lib"))
+        libPath = ensurePath(os.path.join(currentPath, "lib")) 
         finalPath = ensurePath(os.path.join(currentPath, "final"))
         localLogicPath = ensurePath(os.path.join(currentPath, "logic"))
         localLogicFilePath = os.path.join(localLogicPath, logicFileBaseName)
diff -urp Tensile-rocm-5.1.3.orig/Tensile/__init__.py Tensile-rocm-5.1.3/Tensile/__init__.py
--- Tensile-rocm-5.1.3.orig/Tensile/__init__.py	2022-03-10 20:40:09.000000000 -0800
+++ Tensile-rocm-5.1.3/Tensile/__init__.py	2023-09-03 20:54:18.684420896 -0700
@@ -28,6 +28,6 @@ __version__ = "4.32.0"
 def PrintTensileRoot():
     import os.path
 
-    print(os.path.dirname(__file__), end='')
+    print("@EPREFIX@/usr/share/Tensile/Source", end='')
 
 
Only in Tensile-rocm-5.1.3/Tensile: KernelWriterAssembly.py.rej
diff -urp Tensile-rocm-5.1.3.orig/Tensile/ReplacementKernels.py Tensile-rocm-5.1.3/Tensile/ReplacementKernels.py
--- Tensile-rocm-5.1.3.orig/Tensile/ReplacementKernels.py	2022-03-10 20:40:09.000000000 -0800
+++ Tensile-rocm-5.1.3/Tensile/ReplacementKernels.py	2023-09-03 20:54:19.372420887 -0700
@@ -78,7 +78,7 @@ class ReplacementKernels:
 
     @classmethod
     def Directory(cls):
-        scriptDir = os.path.dirname(os.path.realpath(__file__))
+        scriptDir = "@EPREFIX@/usr/share/Tensile"
         dirName = 'ReplacementKernels'
         if globalParameters['CodeObjectVersion'] == 'V3':
             dirName += '-cov3'
diff -urp Tensile-rocm-5.1.3.orig/Tensile/Source/cmake/FindROCmSMI.cmake Tensile-rocm-5.1.3/Tensile/Source/cmake/FindROCmSMI.cmake
--- Tensile-rocm-5.1.3.orig/Tensile/Source/cmake/FindROCmSMI.cmake	2022-03-10 20:40:09.000000000 -0800
+++ Tensile-rocm-5.1.3/Tensile/Source/cmake/FindROCmSMI.cmake	2023-09-03 20:54:19.372420887 -0700
@@ -21,7 +21,7 @@
 
 if(NOT ROCM_ROOT)
     if(NOT ROCM_DIR)
-        set(ROCM_ROOT "/opt/rocm")
+        set(ROCM_ROOT "/usr")
     else()
         set(ROCM_DIR "${ROCM_DIR}/../../..")
     endif()
@@ -36,7 +36,7 @@ find_path(ROCM_SMI_ROOT "include/rocm_sm
 mark_as_advanced(ROCM_SMI_ROOT)
 
 find_library(ROCM_SMI_LIBRARY rocm_smi64
-    PATHS "${ROCM_SMI_ROOT}/lib")
+    PATHS "${ROCM_SMI_ROOT}/@LIBDIR@")
 mark_as_advanced(ROCM_SMI_LIBRARY)
 
 include( FindPackageHandleStandardArgs )
diff -urp Tensile-rocm-5.1.3.orig/Tensile/Source/CMakeLists.txt Tensile-rocm-5.1.3/Tensile/Source/CMakeLists.txt
--- Tensile-rocm-5.1.3.orig/Tensile/Source/CMakeLists.txt	2023-09-03 20:53:59.876421147 -0700
+++ Tensile-rocm-5.1.3/Tensile/Source/CMakeLists.txt	2023-09-03 20:54:19.372420887 -0700
@@ -22,7 +22,7 @@
 cmake_minimum_required(VERSION 3.13)
 
 # Override all paths arguments as they do not work properly
-list(APPEND CMAKE_PREFIX_PATH $ENV{ROCM_PATH} /opt/rocm)
+list(APPEND CMAKE_PREFIX_PATH $ENV{ROCM_PATH} /usr)
 
 project(Tensile)
 
@@ -57,7 +57,7 @@ CMAKE_DEPENDENT_OPTION(TENSILE_BUILD_CLI
                         "TENSILE_USE_HIP" OFF)
 
 if(TENSILE_USE_HIP)
-    find_package(HIP REQUIRED CONFIG PATHS $ENV{ROCM_PATH} /opt/rocm)
+    find_package(HIP REQUIRED CONFIG PATHS $ENV{ROCM_PATH} /usr)
 endif()
 
 if(TENSILE_USE_OPENMP)
Only in Tensile-rocm-5.1.3/Tensile/Source: CMakeLists.txt.orig
Only in Tensile-rocm-5.1.3/Tensile/Source: CMakeLists.txt.rej
diff -urp Tensile-rocm-5.1.3.orig/Tensile/Source/FindHIP.cmake Tensile-rocm-5.1.3/Tensile/Source/FindHIP.cmake
--- Tensile-rocm-5.1.3.orig/Tensile/Source/FindHIP.cmake	2022-03-10 20:40:09.000000000 -0800
+++ Tensile-rocm-5.1.3/Tensile/Source/FindHIP.cmake	2023-09-03 20:54:19.372420887 -0700
@@ -76,7 +76,7 @@ else()
         hip/hip_runtime.h
       PATHS
         ENV HIP_PATH
-        /opt/rocm
+        /usr
       PATH_SUFFIXES
         /include/hip
         /include
@@ -95,7 +95,7 @@ else()
     NAMES  hipcc
     PATHS
       ENV HIP_PATH
-          /opt/rocm
+          /usr
     PATH_SUFFIXES
           /bin
       )
diff -urp Tensile-rocm-5.1.3.orig/Tensile/Source/FindOpenCL.cmake Tensile-rocm-5.1.3/Tensile/Source/FindOpenCL.cmake
--- Tensile-rocm-5.1.3.orig/Tensile/Source/FindOpenCL.cmake	2022-03-10 20:40:09.000000000 -0800
+++ Tensile-rocm-5.1.3/Tensile/Source/FindOpenCL.cmake	2023-09-03 20:54:19.372420887 -0700
@@ -68,8 +68,8 @@ find_path(OPENCL_INCLUDE_DIRS
   PATHS
     /usr/include
     /usr/local/include
-    /usr/local/cuda/include
-    /opt/rocm/opencl/include
+    /opt/cuda/include
+    /usr/opencl/include
   DOC "OpenCL header file path"
 )
 mark_as_advanced( OPENCL_INCLUDE_DIRS )
@@ -110,42 +110,27 @@ cmake_pop_check_state( )
 if( CMAKE_SIZEOF_VOID_P EQUAL 8 )
   set(LIB64 ON)
   message( STATUS "FindOpenCL searching for 64-bit libraries" )
+  set(_PATH_SUFFIXES "x86_64 x64")
 else( )
   set(LIB64 OFF)
   message( STATUS "FindOpenCL searching for 32-bit libraries" )
+  set(_PATH_SUFFIXES "x86 Win32")
 endif( )
 
-if( LIB64 )
-  find_library( OPENCL_LIBRARIES
-    NAMES OpenCL
-    HINTS
-      ${OPENCL_ROOT}/lib
-      $ENV{OPENCL_ROOT}/lib
-      $ENV{AMDAPPSDKROOT}/lib
-      $ENV{CUDA_PATH}/lib
-    DOC "OpenCL dynamic library path"
-    PATH_SUFFIXES x86_64 x64
-    PATHS
-    /usr/lib
-    /usr/local/cuda/lib
-    /opt/rocm/opencl/lib
-  )
-else( )
-  find_library( OPENCL_LIBRARIES
-    NAMES OpenCL
-    HINTS
-      ${OPENCL_ROOT}/lib
-      $ENV{OPENCL_ROOT}/lib
-      $ENV{AMDAPPSDKROOT}/lib
-      $ENV{CUDA_PATH}/lib
-    DOC "OpenCL dynamic library path"
-    PATH_SUFFIXES x86 Win32
-    PATHS
-    /usr/lib
-    /usr/local/cuda/lib
-    /opt/rocm/opencl/lib
-  )
-endif( )
+find_library( OPENCL_LIBRARIES
+  NAMES OpenCL
+  HINTS
+    ${OPENCL_ROOT}/@LIBDIR@
+    $ENV{OPENCL_ROOT}/@LIBDIR@
+    $ENV{AMDAPPSDKROOT}/@LIBDIR@
+    $ENV{CUDA_PATH}/@LIBDIR@
+  DOC "OpenCL dynamic library path"
+  PATH_SUFFIXES ${_PATH_SUFFIXES}
+  PATHS
+  /usr/@LIBDIR@
+  /opt/cuda/@LIBDIR@
+  /usr/opencl/@LIBDIR@
+)
 mark_as_advanced( OPENCL_LIBRARIES )
 
 # If we asked for OpenCL 1.2, and we found a version installed greater than that, pass the 'use deprecated' flag
diff -urp Tensile-rocm-5.1.3.orig/Tensile/Source/lib/CMakeLists.txt Tensile-rocm-5.1.3/Tensile/Source/lib/CMakeLists.txt
--- Tensile-rocm-5.1.3.orig/Tensile/Source/lib/CMakeLists.txt	2023-09-03 20:53:59.852421148 -0700
+++ Tensile-rocm-5.1.3/Tensile/Source/lib/CMakeLists.txt	2023-09-03 20:54:19.372420887 -0700
@@ -47,13 +47,7 @@ set(tensile_sources  ${tensile_sources}
     )
 
 if(TENSILE_USE_LLVM)
-    find_package(LLVM 13.0 QUIET CONFIG)
-    if(NOT LLVM_FOUND)
-        find_package(LLVM 12.0 QUIET CONFIG)
-        if(NOT LLVM_FOUND)
-            find_package(LLVM REQUIRED CONFIG)
-        endif()
-    endif()
+    find_package(LLVM PATHS /usr/lib/llvm/@LLVM_SLOT@ REQUIRED CONFIG)
 
     set(tensile_sources ${tensile_sources}
         source/llvm/YAML.cpp
Only in Tensile-rocm-5.1.3/Tensile/Source/lib: CMakeLists.txt.orig
Only in Tensile-rocm-5.1.3/Tensile/Source/lib: CMakeLists.txt.rej
Only in Tensile-rocm-5.1.3/Tensile/Source/lib/include/Tensile: AMDGPU.hpp.rej
Only in Tensile-rocm-5.1.3/Tensile/Source/lib/include/Tensile/Serialization: Predicates.hpp.rej
Only in Tensile-rocm-5.1.3/Tensile/Source/lib/source: AMDGPU.cpp.rej
diff -urp Tensile-rocm-5.1.3.orig/Tensile/TensileCreateLibrary.py Tensile-rocm-5.1.3/Tensile/TensileCreateLibrary.py
--- Tensile-rocm-5.1.3.orig/Tensile/TensileCreateLibrary.py	2022-03-10 20:40:09.000000000 -0800
+++ Tensile-rocm-5.1.3/Tensile/TensileCreateLibrary.py	2023-09-03 20:54:21.436420859 -0700
@@ -432,7 +432,7 @@ def writeSolutionsAndKernels(outputPath,
   # Push working path into build_tmp folder because there may be more than
   # one process running this script. This is to avoid build directory clashing.
   # NOTE: file paths must not contain the lower case word 'kernel' or the
-  # /opt/rocm/bin/extractkernel will fail.
+  # /usr/bin/extractkernel will fail.
   # See buildSourceCodeObjectFile:167 for the call to this binary.
   Common.pushWorkingPath('build_tmp')
   Common.pushWorkingPath(os.path.basename(outputPath).upper())
diff -urp Tensile-rocm-5.1.3.orig/Tensile/Tensile.py Tensile-rocm-5.1.3/Tensile/Tensile.py
--- Tensile-rocm-5.1.3.orig/Tensile/Tensile.py	2023-09-03 20:53:59.888421147 -0700
+++ Tensile-rocm-5.1.3/Tensile/Tensile.py	2023-09-03 21:06:35.148411062 -0700
@@ -239,10 +239,10 @@ def Tensile(userArgs):
 
 
 def TensileConfigPath(*args):
-  return os.path.join(os.path.dirname(os.path.realpath(__file__)), "Configs", *args)
+  return os.path.join("@EPREFIX@/usr/share/Tensile", "Configs", *args)
 
 def TensileTestPath(*args):
-  return os.path.join(os.path.dirname(os.path.realpath(__file__)), "Tests", *args)
+  return os.path.join("@EPREFIX@/usr/share/Tensile", "Tests", *args)
 
 
 ################################################################################
Only in Tensile-rocm-5.1.3/Tensile: Tensile.py.rej
diff -urp Tensile-rocm-5.1.3.orig/Tensile/Tests/extended/convolution_config/YamlBuilder/YamlBuilder.py Tensile-rocm-5.1.3/Tensile/Tests/extended/convolution_config/YamlBuilder/YamlBuilder.py
--- Tensile-rocm-5.1.3.orig/Tensile/Tests/extended/convolution_config/YamlBuilder/YamlBuilder.py	2022-03-10 20:40:09.000000000 -0800
+++ Tensile-rocm-5.1.3/Tensile/Tests/extended/convolution_config/YamlBuilder/YamlBuilder.py	2023-09-03 20:54:22.092420851 -0700
@@ -218,7 +218,7 @@ class YamlBuilder:
     @classmethod
     def findAvailableArchs(self):
         availableArchs = []
-        rocmpath = "/opt/rocm"
+        rocmpath = "/usr"
         if "ROCM_PATH" in os.environ:
             rocmpath = os.environ.get("ROCM_PATH")
         if "TENSILE_ROCM_PATH" in os.environ:
diff -urp Tensile-rocm-5.1.3.orig/Tensile/Tests/hipModuleLoad_timing/Makefile Tensile-rocm-5.1.3/Tensile/Tests/hipModuleLoad_timing/Makefile
--- Tensile-rocm-5.1.3.orig/Tensile/Tests/hipModuleLoad_timing/Makefile	2022-03-10 20:40:09.000000000 -0800
+++ Tensile-rocm-5.1.3/Tensile/Tests/hipModuleLoad_timing/Makefile	2023-09-03 20:54:22.092420851 -0700
@@ -1,7 +1,7 @@
-CXX=/opt/rocm/hip/bin/hipcc
-LIBFLAGS=-L/opt/rocm/hip/lib/
+CXX=@ESYSROOT@/usr/bin/hipcc
+LIBFLAGS=-L@ESYSROOT@/usr/@LIBDIR@/
 LIBS=-lamdhip64
-INCFLAGS=-I/opt/rocm/hip/include/
+INCFLAGS=-I@ESYSROOT@/usr/include/hip
 
 hipModuleLoadTiming.out: hipModuleLoadTiming.o
 	$(CXX) -o $@ $(LIBFLAGS) $^
diff -urp Tensile-rocm-5.1.3.orig/Tensile/Tests/integration/test_integration.py Tensile-rocm-5.1.3/Tensile/Tests/integration/test_integration.py
--- Tensile-rocm-5.1.3.orig/Tensile/Tests/integration/test_integration.py	2022-03-10 20:40:09.000000000 -0800
+++ Tensile-rocm-5.1.3/Tensile/Tests/integration/test_integration.py	2023-09-03 20:54:22.092420851 -0700
@@ -111,7 +111,7 @@ def test_integration(useGlobalParameters
     pytest.skip("only run pre_checkin test in certain combo")
 
   logicFileDir = os.path.join(getLogicFileDir, testYamls)
-  outputDir    = os.path.join(builddir, "lib")
+  outputDir    = os.path.join(builddir, "@LIBDIR@")
 
   with useGlobalParameters(OutputPath=outputDir,
                            WorkingPath=outputDir,
diff -urp Tensile-rocm-5.1.3.orig/Tensile/Tests/unit/test_TensileCreateLibrary.py Tensile-rocm-5.1.3/Tensile/Tests/unit/test_TensileCreateLibrary.py
--- Tensile-rocm-5.1.3.orig/Tensile/Tests/unit/test_TensileCreateLibrary.py	2022-03-10 20:40:09.000000000 -0800
+++ Tensile-rocm-5.1.3/Tensile/Tests/unit/test_TensileCreateLibrary.py	2023-09-03 20:54:22.092420851 -0700
@@ -82,7 +82,7 @@ def test_WriteClientLibraryFromSolutions
     Common.globalParameters["CxxCompiler"] = "hipcc"
     Common.assignGlobalParameters({})
 
-    libraryWorkingPath = tmpdir.mkdir("lib")
+    libraryWorkingPath = tmpdir.mkdir("@LIBDIR@")
     buildWorkingPath = tmpdir.mkdir("build")
 
 
diff -urp Tensile-rocm-5.1.3.orig/Tensile/Tests/yaml_only/test_config.py Tensile-rocm-5.1.3/Tensile/Tests/yaml_only/test_config.py
--- Tensile-rocm-5.1.3.orig/Tensile/Tests/yaml_only/test_config.py	2022-03-10 20:40:09.000000000 -0800
+++ Tensile-rocm-5.1.3/Tensile/Tests/yaml_only/test_config.py	2023-09-03 20:54:22.092420851 -0700
@@ -13,7 +13,7 @@ from Tensile import DataType
 def isExe( filePath ):
   return os.path.isfile(filePath) and os.access(filePath, os.X_OK)
 
-def locateExe( defaultPath, exeName ): # /opt/rocm/bin, hip-clang
+def locateExe( defaultPath, exeName ): # /usr/bin, hip-clang
   # look in path first
   for path in os.environ["PATH"].split(os.pathsep):
     exePath = os.path.join(path, exeName)
@@ -133,7 +133,7 @@ def configMarks(filepath, rootDir, avail
 
 def findAvailableArchs():
     availableArchs = []
-    rocmpath = "/opt/rocm"
+    rocmpath = "/usr"
     if "ROCM_PATH" in os.environ:
         rocmpath = os.environ.get("ROCM_PATH")
     if "TENSILE_ROCM_PATH" in os.environ:
