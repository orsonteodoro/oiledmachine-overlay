From 30e3c8703b8d353a5ac525ba4a56072e41dd7c99 Mon Sep 17 00:00:00 2001
From: Sam Clegg <sbc@chromium.org>
Date: Mon, 27 Dec 2021 15:37:18 -0800
Subject: [PATCH] Remove use of tableSize metadata field. NFC (#15855)

This information is part of the dylink section so there is no
need for this metadata field anymore.
---
 emscripten.py | 20 +++++++++-----------
 1 file changed, 9 insertions(+), 11 deletions(-)

diff --git a/emscripten.py b/emscripten.py
index 69d98597435..9edbbc4ba5e 100644
--- a/emscripten.py
+++ b/emscripten.py
@@ -137,13 +137,6 @@ def update_settings_glue(metadata, DEBUG):
   if settings.MEMORY64:
     assert '--enable-memory64' in settings.BINARYEN_FEATURES
 
-  if settings.RELOCATABLE:
-    # When building relocatable output (e.g. MAIN_MODULE) the reported table
-    # size does not include the reserved slot at zero for the null pointer.
-    # Instead we use __table_base to offset the elements by 1.
-    if settings.INITIAL_TABLE == -1:
-      settings.INITIAL_TABLE = metadata['tableSize'] + 1
-
   settings.HAS_MAIN = settings.MAIN_MODULE or settings.STANDALONE_WASM or 'main' in settings.WASM_EXPORTS
 
   # When using dynamic linking the main function might be in a side module.
@@ -316,10 +309,17 @@ def emscript(in_wasm, out_wasm, outfile_js, memfile, DEBUG):
   # memory and global initializers
 
   if settings.RELOCATABLE:
-    static_bump = align_memory(webassembly.parse_dylink_section(in_wasm).mem_size)
+    dylink_sec = webassembly.parse_dylink_section(in_wasm)
+    static_bump = align_memory(dylink_sec.mem_size)
     set_memory(static_bump)
     logger.debug('stack_base: %d, stack_max: %d, heap_base: %d', settings.STACK_BASE, settings.STACK_MAX, settings.HEAP_BASE)
 
+    # When building relocatable output (e.g. MAIN_MODULE) the reported table
+    # size does not include the reserved slot at zero for the null pointer.
+    # So we need to offset the elements by 1.
+    if settings.INITIAL_TABLE == -1:
+      settings.INITIAL_TABLE = dylink_sec.table_size + 1
+
   glue, forwarded_data = compile_settings()
   if DEBUG:
     logger.debug('  emscript: glue took %s seconds' % (time.time() - t))
@@ -767,7 +767,6 @@ def load_metadata_wasm(metadata_raw, DEBUG):
   metadata = {
     'declares': [],
     'globalImports': [],
-    'tableSize': 0,
     'exports': [],
     'namedGlobals': {},
     'emJsFuncs': {},
