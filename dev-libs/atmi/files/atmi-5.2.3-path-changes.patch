diff -urp src.orig/atmi-backward-compat.cmake src/atmi-backward-compat.cmake
--- src.orig/atmi-backward-compat.cmake	2022-08-02 23:33:20.000000000 -0700
+++ src/atmi-backward-compat.cmake	2023-09-26 19:29:08.193853449 -0700
@@ -24,10 +24,10 @@ set(ATMI_WRAPPER_DIR ${ATMI_BUILD_DIR}/w
 set(ATMI_WRAPPER_INC_DIR ${ATMI_WRAPPER_DIR}/include)
 set(ATMI_WRAPPER_BIN_DIR ${ATMI_WRAPPER_DIR}/bin)
 if(CMAKE_BUILD_TYPE MATCHES Debug)
-  set(ATMI_LIB_DIR "lib-debug")
-  set(ROCM_LIB_DIR "lib-debug")
+  set(ATMI_LIB_DIR "@LIBDIR@-debug")
+  set(ROCM_LIB_DIR "@LIBDIR@-debug")
 else()
-  set(ATMI_LIB_DIR "lib")
+  set(ATMI_LIB_DIR "@LIBDIR@")
   set(ROCM_LIB_DIR "${CMAKE_INSTALL_LIBDIR}")
 endif()
 set(ATMI_WRAPPER_LIB_DIR ${ATMI_WRAPPER_DIR}/${ATMI_LIB_DIR})
@@ -60,7 +60,7 @@ function(create_header_template)
     LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
     OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
    THE SOFTWARE.
-   */\n\n#ifndef @include_guard@\n#define @include_guard@ \n\n\#pragma message(\"This file is deprecated. Use file from include path /opt/rocm-ver/include/ and prefix with atmi\")\n@include_statements@ \n\n#endif")
+   */\n\n#ifndef @include_guard@\n#define @include_guard@ \n\n\#pragma message(\"This file is deprecated. Use file from include path @EPREFIX_ROCM_PATH@/include/ and prefix with atmi\")\n@include_statements@ \n\n#endif")
 endfunction()
 
 #use header template file and generate wrapper header files
Only in src: atmi-backward-compat.cmake.orig
Only in src: atmi-backward-compat.cmake.rej
diff -urp src.orig/CMakeLists.txt src/CMakeLists.txt
--- src.orig/CMakeLists.txt	2022-08-02 23:33:20.000000000 -0700
+++ src/CMakeLists.txt	2023-09-26 19:26:48.145855060 -0700
@@ -32,7 +32,7 @@ set (atmi_VERSION_MINOR 5)
 ################################################################################
 if ( NOT DEFINED CMAKE_INSTALL_PREFIX )
 if (CMAKE_INSTALL_PREFIX_INITIALIZED_TO_DEFAULT)
-  set (CMAKE_INSTALL_PREFIX "/opt/rocm" CACHE PATH "default install path" FORCE )
+  set (CMAKE_INSTALL_PREFIX "@EPREFIX_ROCM_PATH@" CACHE PATH "default install path" FORCE )
 endif()
 endif()
 
@@ -48,7 +48,7 @@ else()
   if(HSA_DIR)
     set(ROC_DIR ${HSA_DIR})
   else()
-    set(ROC_DIR "/opt/rocm")
+    set(ROC_DIR "@ESYSROOT_ROCM_PATH@")
   endif()
 endif()
 
@@ -107,7 +107,7 @@ set ( CPACK_RESOURCE_FILE_LICENSE "${CMA
 install( FILES ${CPACK_RESOURCE_FILE_LICENSE} DESTINATION ${CMAKE_INSTALL_DOCDIR} COMPONENT runtime )
 
 if ( NOT DEFINED CPACK_PACKAGING_INSTALL_PREFIX )
-    set ( CPACK_PACKAGING_INSTALL_PREFIX /opt/rocm )
+    set ( CPACK_PACKAGING_INSTALL_PREFIX @EPREFIX_ROCM_PATH@ )
 endif()
 set ( CPACK_GENERATOR "RPM;DEB" CACHE STRING "CPACK Generator to use, e.g. DEB;RPM")
 
diff -urp src.orig/cmake_modules/FindLibElf.cmake src/cmake_modules/FindLibElf.cmake
--- src.orig/cmake_modules/FindLibElf.cmake	2022-08-02 23:33:20.000000000 -0700
+++ src/cmake_modules/FindLibElf.cmake	2023-09-26 19:30:07.041852772 -0700
@@ -14,17 +14,17 @@ find_path (LIBELF_INCLUDE_DIRS
     NAMES
     libelf.h
     PATHS
-    /usr/include
-    /usr/local/include
+    @ESYSROOT@/usr/include
+    @ESYSROOT@/usr/local/include
     ENV CPATH)
 
 find_library (LIBELF_LIBRARIES
     NAMES
     elf
     PATHS
-    /usr/lib/x86_64-linux-gnu
-    /usr/lib
-    /usr/local/lib
+    @ESYSROOT@/usr/lib/x86_64-linux-gnu
+    @ESYSROOT@/usr/@LIBDIR@
+    @ESYSROOT@/usr/local/@LIBDIR@
     ENV LIBRARY_PATH
     ENV LD_LIBRARY_PATH)
 
diff -urp src.orig/cmake_modules/FindROCm.cmake src/cmake_modules/FindROCm.cmake
--- src.orig/cmake_modules/FindROCm.cmake	2022-08-02 23:33:20.000000000 -0700
+++ src/cmake_modules/FindROCm.cmake	2023-09-26 19:26:48.145855060 -0700
@@ -20,7 +20,7 @@ find_path(
   HINTS
     ${ROC_DIR}/include
     ${ROCR_DIR}/include
-    /opt/rocm/include
+    @ESYSROOT_ROCM_PATH@/include
     ENV CPATH
 )
 
@@ -28,14 +28,14 @@ find_library(
   ROCR_LIBRARY
     hsa-runtime64
   HINTS
-    ${ROC_DIR}/lib
+    ${ROC_DIR}/@LIBDIR@
     ${ROC_DIR}
-    ${ROCR_DIR}/lib
+    ${ROCR_DIR}/@LIBDIR@
     ${ROCR_DIR}
-    /opt/rocm/lib
-    /usr/local/lib
+    @ESYSROOT_ROCM_PATH@/@LIBDIR@
+    @ESYSROOT@/usr/local/@LIBDIR@
     /usr/lib/x86_64-linux-gnu
-    /usr/lib
+    @ESYSROOT@/usr/@LIBDIR@
     ENV LIBRARY_PATH
     ENV LD_LIBRARY_PATH
 )
@@ -43,14 +43,14 @@ find_library(
   ROCT_LIBRARY
     hsakmt
   HINTS
-    ${ROC_DIR}/lib
+    ${ROC_DIR}/@LIBDIR@
     ${ROC_DIR}
-    ${ROCT_DIR}/lib
+    ${ROCT_DIR}/@LIBDIR@
     ${ROCT_DIR}
-    /opt/rocm/lib
-    /usr/local/lib
+    @ESYSROOT_ROCM_PATH@/@LIBDIR@
+    @ESYSROOT@/usr/local/@LIBDIR@
     /usr/lib/x86_64-linux-gnu
-    /usr/lib
+    @ESYSROOT@/usr/@LIBDIR@
     ENV LIBRARY_PATH
     ENV LD_LIBRARY_PATH
 )
@@ -65,7 +65,7 @@ if(NOT ROCM_VERSION)
 # Until then, set the ROCm version to 0.0.0 as default.
 #   file(GLOB version_files
 #       LIST_DIRECTORIES false
-#       /opt/rocm/.info/version*
+#       @ESYSROOT_ROCM_PATH@/.info/version*
 #       )
 #   list(GET version_files 0 version_file)
 #   # Compute the version
@@ -77,7 +77,7 @@ if(NOT ROCM_VERSION)
 #       ERROR_STRIP_TRAILING_WHITESPACE
 #       )
 #   if(NOT _rocm_error)
-#     set(ROCM_VERSION ${_rocm_version} CACHE STRING "Version of ROCm as found in /opt/rocm/.info/version*")
+#     set(ROCM_VERSION ${_rocm_version} CACHE STRING "Version of ROCm as found in @ESYSROOT_ROCM_PATH@/.info/version*")
 #   else()
 #     set(ROCM_VERSION "0.0.0" CACHE STRING "Version of ROCm set to default")
 #   endif()
diff -urp src.orig/compiler/CMakeLists.txt src/compiler/CMakeLists.txt
--- src.orig/compiler/CMakeLists.txt	2022-08-02 23:33:20.000000000 -0700
+++ src/compiler/CMakeLists.txt	2023-09-26 19:26:48.145855060 -0700
@@ -65,9 +65,9 @@ if(ROCM_FOUND)
             include_directories(${CMAKE_CURRENT_SOURCE_DIR}/include)
             include_directories(${CMAKE_CURRENT_SOURCE_DIR}/../../include)
 
-            # Install plugin under the lib destination folder.
+            # Install plugin under the @LIBDIR@ destination folder.
             if(CMAKE_BUILD_TYPE MATCHES Debug)
-                install(TARGETS atmi_cplugin LIBRARY DESTINATION "lib-debug" COMPONENT cplugin )
+                install(TARGETS atmi_cplugin LIBRARY DESTINATION "@LIBDIR@-debug" COMPONENT cplugin )
             else()
                 install(TARGETS atmi_cplugin LIBRARY DESTINATION "${CMAKE_INSTALL_LIBDIR}" COMPONENT cplugin )
             endif()
@@ -91,7 +91,7 @@ if(ROCM_FOUND)
             )
 
             if (NOT CMAKE_INSTALL_RPATH)
-              set(CMAKE_INSTALL_RPATH "$ORIGIN;$ORIGIN/../../hsa/lib;$ORIGIN/../../lib;$ORIGIN/../../lib64;$ORIGIN/../lib64")
+              set(CMAKE_INSTALL_RPATH "$ORIGIN;$ORIGIN/../../hsa/@LIBDIR@;$ORIGIN/../../@LIBDIR@;$ORIGIN/../../@LIBDIR@;$ORIGIN/../@LIBDIR@")
             endif ()
 
        else()
diff -urp src.orig/device_runtime/bc.cmake src/device_runtime/bc.cmake
--- src.orig/device_runtime/bc.cmake	2022-08-02 23:33:20.000000000 -0700
+++ src/device_runtime/bc.cmake	2023-09-26 19:26:48.145855060 -0700
@@ -70,6 +70,7 @@ macro(add_ocl_bc_library name dir)
     -I${CMAKE_CURRENT_SOURCE_DIR}/include
     -I${CMAKE_CURRENT_SOURCE_DIR}/../../include
     -I${CMAKE_CURRENT_SOURCE_DIR}/../runtime/include
+    --rocm-device-lib-path=@ESYSROOT_ROCM_PATH@/@LIBDIR@/amdgcn/bitcode
     ${CLANG_OPTIONS_APPEND})
 
   set(ll_files)
@@ -190,7 +191,7 @@ macro(add_bc_library name dir)
 
   add_custom_command(
     OUTPUT ${name}-${mcpu}.bc
-    COMMAND /bin/cp optout.${mcpu}.bc ${ATMI_RUNTIME_PATH}/lib/${name}-${mcpu}.bc
+    COMMAND /bin/cp optout.${mcpu}.bc ${ATMI_RUNTIME_PATH}/@LIBDIR@/${name}-${mcpu}.bc
     DEPENDS optout.${mcpu}.bc
   )
   add_custom_target(${name}-${mcpu} ALL DEPENDS ${name}-${mcpu}.bc)
diff -urp src.orig/device_runtime/CMakeLists.txt src/device_runtime/CMakeLists.txt
--- src.orig/device_runtime/CMakeLists.txt	2022-08-02 23:33:20.000000000 -0700
+++ src/device_runtime/CMakeLists.txt	2023-09-26 19:26:48.145855060 -0700
@@ -32,7 +32,7 @@ if(LLVM_FOUND)
   if (CLANG_INSTALL_PREFIX)
     set(CLANG_BINDIR ${CLANG_INSTALL_PREFIX}/bin)
     set(CLANG_INCDIR ${CLANG_INSTALL_PREFIX}/include)
-    set(CLANG_LIBDIR ${CLANG_INSTALL_PREFIX}/lib)
+    set(CLANG_LIBDIR ${CLANG_INSTALL_PREFIX}/@LIBDIR@)
     set(AMDLLVM ${CLANG_INSTALL_PREFIX})
   else()
     set(CLANG_BINDIR ${LLVM_BUILD_BINARY_DIR}/bin)
@@ -68,9 +68,11 @@ find_path(ATMI_DE_DEP_LIBHSA_LIBRARIES
     "ockl.bc"
     "ockl.amdgcn.bc"
   PATHS
+    "${AMD_DEVICE_LIBS_PREFIX}/@LIBDIR@/amdgcn/bitcode"
     "${AMD_DEVICE_LIBS_PREFIX}/amdgcn/bitcode"
-    "${AMD_DEVICE_LIBS_PREFIX}/lib/bitcode"
-    "${AMD_DEVICE_LIBS_PREFIX}/lib"
+    "${AMD_DEVICE_LIBS_PREFIX}/@LIBDIR@/bitcode"
+    "${AMD_DEVICE_LIBS_PREFIX}/@LIBDIR@"
+    "@ESYSROOT_ROCM_PATH@/amdgcn/bitcode"
   NO_DEFAULT_PATH)
 
 get_filename_component (ATMI_DE_DEP_LIBHSA_LIBRARIES_DIRS ${ATMI_DE_DEP_LIBHSA_LIBRARIES} DIRECTORY)
@@ -116,7 +118,7 @@ add_custom_target(device_header ALL DEPE
 # append to the configure file
 file(APPEND ${ATMI_RUNTIME_PATH}/atmi-config.mak "AMDLLVM=${AMDLLVM}\n")
 file(APPEND ${ATMI_RUNTIME_PATH}/atmi-config.mak "AMDGPU_TARGET_TRIPLE=${AMDGPU_TARGET_TRIPLE}\n")
-# cloc assumes the /path/to/rocm/lib (with the /lib suffix in the path)
+# cloc assumes the @ESYSROOT_ROCM_PATH@/@LIBDIR@ (with the /@LIBDIR@ suffix in the path)
 file(APPEND ${ATMI_RUNTIME_PATH}/atmi-config.mak "ROCM_DEVICE_PATH=${ROCM_DEVICE_PATH}/amdgcn/bitcode\n")
 
 target_sources(atmi_runtime PRIVATE
@@ -133,7 +135,7 @@ foreach(mcpu ${mcpus})
   set(optimization_level 2)
 
   # set output dir for .bc files
-  set(OUTPUTDIR ${ATMI_RUNTIME_PATH}/lib)
+  set(OUTPUTDIR ${ATMI_RUNTIME_PATH}/@LIBDIR@)
 
   # create output dir for include files
   execute_process(COMMAND "/bin/mkdir" "-p" "${OUTPUTDIR}")
@@ -153,7 +155,7 @@ foreach(mcpu ${mcpus})
   if(CMAKE_BUILD_TYPE MATCHES Debug)
     install(FILES
       ${OUTPUTDIR}/atmi-${mcpu}.bc
-      DESTINATION lib-debug COMPONENT device_runtime
+      DESTINATION @LIBDIR@-debug COMPONENT device_runtime
       )
   else()
     install(FILES
diff -urp src.orig/runtime/core/CMakeLists.txt src/runtime/core/CMakeLists.txt
--- src.orig/runtime/core/CMakeLists.txt	2022-08-02 23:33:20.000000000 -0700
+++ src/runtime/core/CMakeLists.txt	2023-09-26 19:28:48.721853673 -0700
@@ -23,9 +23,9 @@ find_path (amd_comgr_INCLUDE_DIRS
     ${ROC_DIR}
     ${ROC_COMGR_INCLUDE_DIR}
     ${ROC_COMGR_INCLUDE_DIR}/include
-    /opt/rocm/include
-    /usr/include
-    /usr/local/include
+    @ESYSROOT_ROCM_PATH@/include
+    @ESYSROOT@/usr/include
+    @ESYSROOT@/usr/local/include
     ENV CPATH
     PATH_SUFFIXES include)
 
@@ -60,7 +60,7 @@ add_definitions(-DROCM_VERSION_MINOR=${R
 add_definitions(-fpic)
 
 # set output dir for the .so file
-set (CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}/../../lib)
+set (CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}/../../@LIBDIR@)
 
 #set soname version number
 get_version ( "1.0.0" )
@@ -117,7 +117,7 @@ target_link_libraries(
 )
 
 if (NOT CMAKE_INSTALL_RPATH)
-  set(CMAKE_INSTALL_RPATH "$ORIGIN;$ORIGIN/../../hsa/lib;$ORIGIN/../../lib;$ORIGIN/../../lib64;$ORIGIN/../lib64")
+  set(CMAKE_INSTALL_RPATH "$ORIGIN;$ORIGIN/../../hsa/@LIBDIR@;$ORIGIN/../../@LIBDIR@;$ORIGIN/../../@LIBDIR@;$ORIGIN/../@LIBDIR@")
 endif ()
 
 # set output dir for .h files
@@ -140,9 +140,9 @@ add_custom_command(
 
 add_custom_target(core_header ALL DEPENDS ${OUTPUT_INC_DIRECTORY}/atmi.h ${OUTPUT_INC_DIRECTORY}/atmi_runtime.h)
 
-# Install plugin under the lib destination folder.
+# Install plugin under the @LIBDIR@ destination folder.
 if(CMAKE_BUILD_TYPE MATCHES Debug)
-  install(TARGETS atmi_runtime LIBRARY DESTINATION "lib-debug" COMPONENT runtime )
+  install(TARGETS atmi_runtime LIBRARY DESTINATION "@LIBDIR@-debug" COMPONENT runtime )
 else()
   install(TARGETS atmi_runtime LIBRARY DESTINATION "${CMAKE_INSTALL_LIBDIR}" COMPONENT runtime )
 endif()
Only in src/runtime/core: CMakeLists.txt.orig
Only in src/runtime/core: CMakeLists.txt.rej
