diff -urp rccl-rocm-5.3.3.orig/cmake/Dependencies.cmake rccl-rocm-5.3.3/cmake/Dependencies.cmake
--- rccl-rocm-5.3.3.orig/cmake/Dependencies.cmake	2022-10-05 10:08:56.000000000 -0700
+++ rccl-rocm-5.3.3/cmake/Dependencies.cmake	2023-09-19 18:32:35.596965806 -0700
@@ -60,10 +60,8 @@ if(NOT GTest_FOUND AND BUILD_TESTS OR IN
                      UPDATE_DISCONNECTED TRUE
     )
     set(GTEST_INCLUDE_DIRS ${CMAKE_CURRENT_BINARY_DIR}/gtest/include CACHE PATH "")
-    if(EXISTS ${CMAKE_CURRENT_BINARY_DIR}/gtest/lib)
-        set(GTEST_BOTH_LIBRARIES ${CMAKE_CURRENT_BINARY_DIR}/gtest/lib/libgtest.a;${CMAKE_CURRENT_BINARY_DIR}/gtest/lib/libgtest_main.a CACHE PATH "")
-    elseif(EXISTS ${CMAKE_CURRENT_BINARY_DIR}/gtest/lib64)
-        set(GTEST_BOTH_LIBRARIES ${CMAKE_CURRENT_BINARY_DIR}/gtest/lib64/libgtest.a;${CMAKE_CURRENT_BINARY_DIR}/gtest/lib64/libgtest_main.a CACHE PATH "")
+    if(EXISTS ${CMAKE_CURRENT_BINARY_DIR}/gtest/@LIBDIR@)
+        set(GTEST_BOTH_LIBRARIES ${CMAKE_CURRENT_BINARY_DIR}/gtest/@LIBDIR@/libgtest.a;${CMAKE_CURRENT_BINARY_DIR}/gtest/@LIBDIR@/libgtest_main.a CACHE PATH "")
     else()
         message(FATAL_ERROR "Cannot find gtest library installation path.")
     find_package(GTest REQUIRED CONFIG PATHS ${GTEST_ROOT})
@@ -73,7 +71,7 @@ endif()
 
 # Find or download/install rocm-cmake project
 set( PROJECT_EXTERN_DIR ${CMAKE_CURRENT_BINARY_DIR}/extern )
-find_package(ROCM 0.7.3 QUIET CONFIG PATHS /opt/rocm)
+find_package(ROCM 0.7.3 QUIET CONFIG PATHS @ESYSROOT_ROCM_PATH@)
 if(NOT ROCM_FOUND)
     set(rocm_cmake_tag "master" CACHE STRING "rocm-cmake tag to download")
     file(
diff -urp rccl-rocm-5.3.3.orig/CMakeLists.txt rccl-rocm-5.3.3/CMakeLists.txt
--- rccl-rocm-5.3.3.orig/CMakeLists.txt	2022-10-05 10:08:56.000000000 -0700
+++ rccl-rocm-5.3.3/CMakeLists.txt	2023-09-19 18:32:35.596965806 -0700
@@ -279,16 +279,16 @@ if (HAVE_BFD)
   endif()
 endif()
 
-find_package(rocm_smi PATHS ${ROCM_PATH}/lib/cmake/rocm_smi)
+find_package(rocm_smi PATHS ${ROCM_PATH}/@LIBDIR@/cmake/rocm_smi)
 if (rocm_smi_FOUND)
   message ("-- Found rocm_smi at ${ROCM_SMI_INCLUDE_DIR}")
   CHECK_INCLUDE_FILE_CXX("${ROCM_SMI_INCLUDE_DIR}/rocm_smi/rocm_smi64Config.h" HAVE_ROCM_SMI64CONFIG)
 else()
   message ("-- Checking old include directory structure for rocm_smi")
-  set(ROCM_SMI_INCLUDE_DIR "${ROCM_PATH}/rocm_smi/include")
-  set(ROCM_SMI_LIB_DIR "${ROCM_PATH}/rocm_smi/lib")
+  set(ROCM_SMI_INCLUDE_DIR "${ROCM_PATH}/include/rocm_smi")
+  set(ROCM_SMI_LIB_DIR "${ROCM_PATH}/@LIBDIR@")
   set(ROCM_SMI_LIBRARIES rocm_smi64)
-  CHECK_INCLUDE_FILE_CXX("${ROCM_SMI_INCLUDE_DIR}/rocm_smi/rocm_smi64Config.h" HAVE_ROCM_SMI64CONFIG)
+  CHECK_INCLUDE_FILE_CXX("${ROCM_SMI_INCLUDE_DIR}/rocm_smi64Config.h" HAVE_ROCM_SMI64CONFIG)
 endif()
 IF(HAVE_ROCM_SMI64CONFIG)
   add_definitions(-DUSE_ROCM_SMI64CONFIG)
@@ -304,7 +304,7 @@ if("${HIP_COMPILER}" MATCHES "clang")
     target_compile_options(rccl PRIVATE -fgpu-rdc)
   endforeach()
   target_link_libraries(rccl PRIVATE -fgpu-rdc)
-  target_include_directories(rccl PRIVATE ${ROCM_PATH}/hsa/include)
+  target_include_directories(rccl PRIVATE ${ROCM_PATH}/include/hsa)
   find_program( hipcc_executable hipcc )
   execute_process(COMMAND bash "-c" "${hipcc_executable} -help | grep 'parallel-jobs'" OUTPUT_VARIABLE hipcc_parallel_jobs)
   if("${hipcc_parallel_jobs}" MATCHES "parallel-jobs")
@@ -338,7 +338,7 @@ target_link_libraries(rccl INTERFACE hip
 
 if(HAVE_BFD)
   target_link_libraries(rccl PRIVATE bfd dl z)
-  find_library(HAVE_IBERTY iberty PATHS /usr/lib64 /usr/lib/
+  find_library(HAVE_IBERTY iberty PATHS /usr/@LIBDIR@
     PATH_SUFFIXES x86_64-linux-gnu)
   if(HAVE_IBERTY)
     message("iberty found @  ${HAVE_IBERTY} ")
diff -urp rccl-rocm-5.3.3.orig/ext-net/dummy/Makefile rccl-rocm-5.3.3/ext-net/dummy/Makefile
--- rccl-rocm-5.3.3.orig/ext-net/dummy/Makefile	2022-10-05 10:08:56.000000000 -0700
+++ rccl-rocm-5.3.3/ext-net/dummy/Makefile	2023-09-19 18:33:09.080965359 -0700
@@ -4,7 +4,7 @@
 # See LICENSE.txt for license information
 #
 NCCL_HOME:=../../build/
-CUDA_HOME:=/usr/local/cuda
+CUDA_HOME:=@ESYSROOT@/opt/cuda
 INC:= -I$(NCCL_HOME)/include -I$(CUDA_HOME)/include
 PLUGIN_SO:=libnccl-net.so
 
diff -urp rccl-rocm-5.3.3.orig/ext-net/google-fastsocket/Makefile rccl-rocm-5.3.3/ext-net/google-fastsocket/Makefile
--- rccl-rocm-5.3.3.orig/ext-net/google-fastsocket/Makefile	2022-10-05 10:08:56.000000000 -0700
+++ rccl-rocm-5.3.3/ext-net/google-fastsocket/Makefile	2023-09-19 18:33:08.072965373 -0700
@@ -1,4 +1,4 @@
-CUDA_HOME?=/usr/local/cuda
+CUDA_HOME?=@ESYSROOT@/opt/cuda
 INC:=-I$(CUDA_HOME)/include
 PLUGIN_SO:=libnccl-net.so
 
@@ -10,11 +10,11 @@ $(PLUGIN_SO): nccl-fastsocket/net_fastso
 nccl-fastsocket/%.cc:
 	git clone https://github.com/google/nccl-fastsocket.git
 
-install: $(BUILDDIR)/lib/$(PLUGIN_SO)
+install: $(BUILDDIR)/@LIBDIR@/$(PLUGIN_SO)
 
-$(BUILDDIR)/lib/$(PLUGIN_SO): $(PLUGIN_SO)
+$(BUILDDIR)/@LIBDIR@/$(PLUGIN_SO): $(PLUGIN_SO)
 	@printf "Grabbing %-35s > %s\n" $< $@
-	mkdir -p $(BUILDDIR)/lib
+	mkdir -p $(BUILDDIR)/@LIBDIR@
 	install -m 644 $< $@
 
 clean:
diff -urp rccl-rocm-5.3.3.orig/install.sh rccl-rocm-5.3.3/install.sh
--- rccl-rocm-5.3.3.orig/install.sh	2022-10-05 10:08:56.000000000 -0700
+++ rccl-rocm-5.3.3/install.sh	2023-09-19 18:32:35.596965806 -0700
@@ -17,7 +17,7 @@ function display_help()
     echo "    [-s|--static] Build RCCL as a static library instead of shared library."
     echo "    [--run_tests_all] Run all unit tests (must be built already.)"
     echo "    [--hcc] Build library using deprecated hcc compiler (default:hip-clang)."
-    echo "    [--prefix] Specify custom directory to install RCCL to (default: /opt/rocm)."
+    echo "    [--prefix] Specify custom directory to install RCCL to (default: @ESYSROOT_ROCM_PATH@)."
     echo "    [--address-sanitizer] Build with address sanitizer enabled"
     echo "    [--build_allreduce_only] Build only AllReduce + sum + float kernel"
     echo "    [--rm-legacy-include-dir] Remove legacy include dir Packaging added for file/folder reorg backward compatibility"
@@ -27,7 +27,7 @@ function display_help()
 # global variables
 # #################################################
 build_package=false
-ROCM_PATH=${ROCM_PATH:="/opt/rocm"}
+ROCM_PATH=${ROCM_PATH:="@ESYSROOT_ROCM_PATH@"}
 build_tests=false
 run_tests=false
 run_tests_all=false
diff -urp rccl-rocm-5.3.3.orig/makefiles/common.mk rccl-rocm-5.3.3/makefiles/common.mk
--- rccl-rocm-5.3.3.orig/makefiles/common.mk	2022-10-05 10:08:56.000000000 -0700
+++ rccl-rocm-5.3.3/makefiles/common.mk	2023-09-19 18:33:05.800965403 -0700
@@ -4,7 +4,7 @@
 # See LICENSE.txt for license information
 #
 
-CUDA_HOME ?= /usr/local/cuda
+CUDA_HOME ?= @ESYSROOT@/opt/cuda
 PREFIX ?= /usr/local
 VERBOSE ?= 0
 KEEP ?= 0
@@ -15,7 +15,7 @@ NVTX ?= 1
 
 NVCC = $(CUDA_HOME)/bin/nvcc
 
-CUDA_LIB ?= $(CUDA_HOME)/lib64
+CUDA_LIB ?= $(CUDA_HOME)/@LIBDIR@
 CUDA_INC ?= $(CUDA_HOME)/include
 CUDA_VERSION = $(strip $(shell which $(NVCC) >/dev/null && $(NVCC) --version | grep release | sed 's/.*release //' | sed 's/\,.*//'))
 #CUDA_VERSION ?= $(shell ls $(CUDA_LIB)/libcudart.so.* | head -1 | rev | cut -d "." -f -2 | rev)
diff -urp rccl-rocm-5.3.3.orig/pkg/txz/create_txz.sh.in rccl-rocm-5.3.3/pkg/txz/create_txz.sh.in
--- rccl-rocm-5.3.3.orig/pkg/txz/create_txz.sh.in	2022-10-05 10:08:56.000000000 -0700
+++ rccl-rocm-5.3.3/pkg/txz/create_txz.sh.in	2023-09-19 18:32:35.596965806 -0700
@@ -21,4 +21,4 @@ PKG_ARCH=${pkg:Arch}
 
 NCCLNAME="nccl_${NCCL_MAJOR}.${NCCL_MINOR}.${NCCL_PATCH}${NCCL_SUFFIX}-${PKG_REVISION}+cuda${CUDA_MAJOR}.${CUDA_MINOR}_${PKG_ARCH}"
 
-tar --transform "s/^$BUILDDIR/$NCCLNAME/" -Jcf $NCCLNAME.txz --owner=0 --group=0 $BUILDDIR/include $BUILDDIR/lib $BUILDDIR/*.txt
+tar --transform "s/^$BUILDDIR/$NCCLNAME/" -Jcf $NCCLNAME.txz --owner=0 --group=0 $BUILDDIR/include $BUILDDIR/@LIBDIR@ $BUILDDIR/*.txt
diff -urp rccl-rocm-5.3.3.orig/README.md rccl-rocm-5.3.3/README.md
--- rccl-rocm-5.3.3.orig/README.md	2022-10-05 10:08:56.000000000 -0700
+++ rccl-rocm-5.3.3/README.md	2023-09-19 18:32:35.596965806 -0700
@@ -21,7 +21,7 @@ For ROCm installation instructions, see
 The root of this repository has a helper script 'install.sh' to build and install RCCL on Ubuntu with a single command.  It does not take a lot of options and hard-codes configuration that can be specified through invoking cmake directly, but it's a great way to get started quickly and can serve as an example of how to build/install.
 
 *  `./install.sh` -- builds library including unit tests
-*  `./install.sh -i` -- builds and installs the library to /opt/rocm/rccl; installation path can be changed with --prefix argument (see below.)
+*  `./install.sh -i` -- builds and installs the library to @ESYSROOT_ROCM_PATH@/rccl; installation path can be changed with --prefix argument (see below.)
 *  `./install.sh -d` -- installs all necessary dependencies for RCCL.  Should be re-invoked if the build folder is removed.
 *  `./install.sh -h` -- shows help
 *  `./install.sh -t` -- builds library including unit tests
@@ -29,7 +29,7 @@ The root of this repository has a helper
 *  `./install.sh -p` -- builds RCCL package
 *  `./install.sh -s` -- builds RCCL as a static library (default: shared)
 *  `./install.sh -hcc` -- builds RCCL with hcc compiler; note that hcc is now deprecated. (default:hip-clang)
-*  `./install.sh --prefix` -- specify custom path to install RCCL to (default:/opt/rocm)
+*  `./install.sh --prefix` -- specify custom path to install RCCL to (default:@ESYSROOT_ROCM_PATH@)
 
 ## Manual build
 #### To build the library :
@@ -39,12 +39,12 @@ $ git clone https://github.com/ROCmSoftw
 $ cd rccl
 $ mkdir build
 $ cd build
-$ CXX=/opt/rocm/bin/hipcc cmake -DCMAKE_PREFIX_PATH=/opt/rocm/ ..
+$ CXX=@ESYSROOT_ROCM_PATH@/bin/hipcc cmake -DCMAKE_PREFIX_PATH=/usr/ ..
 $ make -j
 ```
 You may substitute an installation path of your own choosing by passing CMAKE_INSTALL_PREFIX. For example:
 ```shell
-$ CXX=/opt/rocm/bin/hipcc cmake -DCMAKE_PREFIX_PATH=/opt/rocm/ -DCMAKE_INSTALL_PREFIX=$PWD/rccl-install ..
+$ CXX=@ESYSROOT_ROCM_PATH@/bin/hipcc cmake -DCMAKE_PREFIX_PATH=/usr/ -DCMAKE_INSTALL_PREFIX=$PWD/rccl-install ..
 ```
 Note: ensure rocm-cmake is installed, `apt install rocm-cmake`.
 
@@ -58,7 +58,7 @@ $ make package
 $ sudo dpkg -i *.deb
 ```
 
-RCCL package install requires sudo/root access because it creates a directory called "rccl" under /opt/rocm/. This is an optional step and RCCL can be used directly by including the path containing librccl.so.
+RCCL package install requires sudo/root access because it creates a directory called "rccl" under @ESYSROOT_ROCM_PATH@/. This is an optional step and RCCL can be used directly by including the path containing librccl.so.
 
 ## Enabling peer-to-peer transport
 In order to enable peer-to-peer access on machines with PCIe-connected GPUs, the HSA environment variable HSA_FORCE_FINE_GRAIN_PCIE=1 is required to be set, on top of requiring GPUs that support peer-to-peer access and proper large BAR addressing support.
diff -urp rccl-rocm-5.3.3.orig/src/Makefile rccl-rocm-5.3.3/src/Makefile
--- rccl-rocm-5.3.3.orig/src/Makefile	2022-10-05 10:08:56.000000000 -0700
+++ rccl-rocm-5.3.3/src/Makefile	2023-09-19 18:32:35.596965806 -0700
@@ -23,9 +23,9 @@ PKGCONFIGFILE := nccl.pc
 ##### dirs
 BUILDDIR ?= $(abspath ../build)
 INCDIR := $(BUILDDIR)/include
-LIBDIR := $(BUILDDIR)/lib
+LIBDIR := $(BUILDDIR)/@LIBDIR@
 OBJDIR := $(BUILDDIR)/obj
-PKGDIR := $(BUILDDIR)/lib/pkgconfig
+PKGDIR := $(BUILDDIR)/@LIBDIR@/pkgconfig
 ##### target files
 CUDARTLIB  ?= cudart_static
 INCTARGETS := $(INCEXPORTS:%=$(INCDIR)/%)
@@ -122,11 +122,11 @@ clean :
 	rm -rf ${INCDIR} ${LIBDIR} ${PKGDIR} ${OBJDIR}
 
 install : build
-	mkdir -p $(PREFIX)/lib
-	mkdir -p $(PREFIX)/lib/pkgconfig
+	mkdir -p $(PREFIX)/@LIBDIR@
+	mkdir -p $(PREFIX)/@LIBDIR@/pkgconfig
 	mkdir -p $(PREFIX)/include
-	cp -P -v $(BUILDDIR)/lib/lib* $(PREFIX)/lib/
-	cp -P -v $(BUILDDIR)/lib/pkgconfig/* $(PREFIX)/lib/pkgconfig/
+	cp -P -v $(BUILDDIR)/@LIBDIR@/lib* $(PREFIX)/@LIBDIR@/
+	cp -P -v $(BUILDDIR)/@LIBDIR@/pkgconfig/* $(PREFIX)/@LIBDIR@/pkgconfig/
 	cp -v $(BUILDDIR)/include/* $(PREFIX)/include/
 
 FILESTOFORMAT := $(shell find . -name ".\#*" -prune -o \( -name "*.cc" -o -name "*.h" \) -print | grep -v -E 'ibvwrap.h|nvmlwrap.h|gdrwrap.h|nccl.h')
diff -urp rccl-rocm-5.3.3.orig/src/nccl.pc.in rccl-rocm-5.3.3/src/nccl.pc.in
--- rccl-rocm-5.3.3.orig/src/nccl.pc.in	2022-10-05 10:08:56.000000000 -0700
+++ rccl-rocm-5.3.3/src/nccl.pc.in	2023-09-19 18:32:35.596965806 -0700
@@ -1,6 +1,6 @@
 prefix=${nccl:Prefix}
 exec_prefix=${prefix}
-libdir=${exec_prefix}/lib
+libdir=${exec_prefix}/@LIBDIR@
 includedir=${prefix}/include
 
 Name: nccl
diff -urp rccl-rocm-5.3.3.orig/test/CMakeLists.txt rccl-rocm-5.3.3/test/CMakeLists.txt
--- rccl-rocm-5.3.3.orig/test/CMakeLists.txt	2023-09-19 18:32:17.928966042 -0700
+++ rccl-rocm-5.3.3/test/CMakeLists.txt	2023-09-19 18:32:35.596965806 -0700
@@ -10,7 +10,7 @@ if(BUILD_TESTS)
   #    message(FATAL_ERROR "chrpath is required for UnitTests. Please install (e.g. sudo apt-get install chrpath)")
   #endif()
 
-  find_package(hsa-runtime64 PATHS /opt/rocm )
+  find_package(hsa-runtime64 PATHS @ESYSROOT_ROCM_PATH@ )
   if(${hsa-runtime64_FOUND})
     message("hsa-runtime64 found @  ${hsa-runtime64_DIR} ")
   else()
@@ -19,11 +19,11 @@ if(BUILD_TESTS)
     message("Looking for library files in ${ROCR_LIB_DIR}")
 
     # Search for ROCr header file in user defined locations
-    find_path(ROCR_HDR hsa.h PATHS ${ROCR_INC_DIR} "/opt/rocm" PATH_SUFFIXES include/hsa REQUIRED)
+    find_path(ROCR_HDR hsa.h PATHS ${ROCR_INC_DIR} "@ESYSROOT_ROCM_PATH@" PATH_SUFFIXES include/hsa REQUIRED)
     INCLUDE_DIRECTORIES(${ROCR_HDR})
 
     # Search for ROCr library file in user defined locations
-    find_library(ROCR_LIB ${CORE_RUNTIME_TARGET} PATHS ${ROCR_LIB_DIR} "/opt/rocm" PATH_SUFFIXES lib lib64 REQUIRED)
+    find_library(ROCR_LIB ${CORE_RUNTIME_TARGET} PATHS ${ROCR_LIB_DIR} "@ESYSROOT_ROCM_PATH@" PATH_SUFFIXES @LIBDIR@ REQUIRED)
   endif()
 
   include_directories(${GTEST_INCLUDE_DIRS} ./common)
@@ -101,11 +101,11 @@ if(BUILD_TESTS)
   # through -l and -L instead of command line input.
   if(BUILD_STATIC)
     add_dependencies(UnitTests rccl)
-    target_link_libraries(UnitTests PRIVATE dl rt numa -lrccl -L${CMAKE_BINARY_DIR} -lrocm_smi64 -L${ROCM_PATH}/rocm_smi/lib)
+    target_link_libraries(UnitTests PRIVATE dl rt numa -lrccl -L${CMAKE_BINARY_DIR} -lrocm_smi64 -L${ROCM_PATH}/@LIBDIR@)
   else()
     target_link_libraries(UnitTests PRIVATE rccl)
   endif()
-  # HIPCC adds /opt/rocm/lib as RPATH, even though the install process is supposed to
+  # HIPCC adds @ESYSROOT_ROCM_PATH@/@LIBDIR@ as RPATH, even though the install process is supposed to
   # remove RPATH.  It also occurs before any user-specified rpath, which effectively overrides the user rpath.
   #  As a work-around, set the correct RPATH for the unit test executable as a post-install step
   # if (CMAKE_INSTALL_PREFIX MATCHES "${ROCM_PATH}")
diff -urp rccl-rocm-5.3.3.orig/tools/HelloRccl/Makefile rccl-rocm-5.3.3/tools/HelloRccl/Makefile
--- rccl-rocm-5.3.3.orig/tools/HelloRccl/Makefile	2022-10-05 10:08:56.000000000 -0700
+++ rccl-rocm-5.3.3/tools/HelloRccl/Makefile	2023-09-19 18:32:35.596965806 -0700
@@ -3,7 +3,7 @@
 # Set to where RCCL is installed
 RCCL_INSTALL=../../build/release
 
-HIP_PATH?= $(wildcard /opt/rocm/hip)
+HIP_PATH?= $(wildcard @ESYSROOT_ROCM_PATH@)
 ifeq (,$(HIP_PATH))
 HIP_PATH=../../..
 endif
diff -urp rccl-rocm-5.3.3.orig/tools/ib-test/Makefile rccl-rocm-5.3.3/tools/ib-test/Makefile
--- rccl-rocm-5.3.3.orig/tools/ib-test/Makefile	2022-10-05 10:08:56.000000000 -0700
+++ rccl-rocm-5.3.3/tools/ib-test/Makefile	2023-09-19 18:32:35.596965806 -0700
@@ -1,5 +1,5 @@
 # Copyright (c) 2019-2020 Advanced Micro Devices, Inc. All rights reserved.
-HIP_PATH ?= $(wildcard /opt/rocm/hip)
+HIP_PATH ?= $(wildcard @ESYSROOT_ROCM_PATH@)
 ifeq (,$(HIP_PATH))
 HIP_PATH = ../../..
 endif
diff -urp rccl-rocm-5.3.3.orig/tools/MultiRank/Makefile rccl-rocm-5.3.3/tools/MultiRank/Makefile
--- rccl-rocm-5.3.3.orig/tools/MultiRank/Makefile	2022-10-05 10:08:56.000000000 -0700
+++ rccl-rocm-5.3.3/tools/MultiRank/Makefile	2023-09-19 18:32:35.596965806 -0700
@@ -3,7 +3,7 @@
 # Set to where RCCL is installed
 RCCL_INSTALL=../../build/release
 
-HIP_PATH?= $(wildcard /opt/rocm/hip)
+HIP_PATH?= $(wildcard @ESYSROOT_ROCM_PATH@)
 ifeq (,$(HIP_PATH))
 HIP_PATH=../../..
 endif
diff -urp rccl-rocm-5.3.3.orig/tools/MultiRank/README.mpi rccl-rocm-5.3.3/tools/MultiRank/README.mpi
--- rccl-rocm-5.3.3.orig/tools/MultiRank/README.mpi	2022-10-05 10:08:56.000000000 -0700
+++ rccl-rocm-5.3.3/tools/MultiRank/README.mpi	2023-09-19 18:32:35.596965806 -0700
@@ -3,9 +3,9 @@ export MPI_INSTALL_PATH=
 export RCCL_INSTALL_PATH=
 export ROCM_INSTALL_PATH=
 
-$MPI_INSTALL_PATH/bin/mpiCC -o rccl-allreduce-mpi-multirank rccl-allreduce-mpi-multirank.cc -I$ROCM_INSTALL_PATH/include -I$RCCL_INSTALL_PATH/include -D__HIP_PLATFORM_AMD__ -L$ROCM_INSTALL_PATH/lib -lamdhip64 -L$RCCL_INSTALL_PATH/lib -lrccl
+$MPI_INSTALL_PATH/bin/mpiCC -o rccl-allreduce-mpi-multirank rccl-allreduce-mpi-multirank.cc -I$ROCM_INSTALL_PATH/include -I$RCCL_INSTALL_PATH/include -D__HIP_PLATFORM_AMD__ -L$ROCM_INSTALL_PATH/@LIBDIR@ -lamdhip64 -L$RCCL_INSTALL_PATH/@LIBDIR@ -lrccl
 
-$MPI_INSTALL_PATH/bin/mpiCC -o rccl-reducescatter-mpi-multirank rccl-reducescatter-mpi-multirank.cc -I$ROCM_INSTALL_PATH/include -I$RCCL_INSTALL_PATH/include -D__HIP_PLATFORM_AMD__ -L$ROCM_INSTALL_PATH/lib -lamdhip64 -L$RCCL_INSTALL_PATH/lib -lrccl
+$MPI_INSTALL_PATH/bin/mpiCC -o rccl-reducescatter-mpi-multirank rccl-reducescatter-mpi-multirank.cc -I$ROCM_INSTALL_PATH/include -I$RCCL_INSTALL_PATH/include -D__HIP_PLATFORM_AMD__ -L$ROCM_INSTALL_PATH/@LIBDIR@ -lamdhip64 -L$RCCL_INSTALL_PATH/@LIBDIR@ -lrccl
 
 
 export GPU_MAX_HW_QUEUES=16
diff -urp rccl-rocm-5.3.3.orig/tools/rccl-prim-test/Makefile rccl-rocm-5.3.3/tools/rccl-prim-test/Makefile
--- rccl-rocm-5.3.3.orig/tools/rccl-prim-test/Makefile	2022-10-05 10:08:56.000000000 -0700
+++ rccl-rocm-5.3.3/tools/rccl-prim-test/Makefile	2023-09-19 18:32:35.596965806 -0700
@@ -1,12 +1,12 @@
 # Copyright (c) 2019-2020 Advanced Micro Devices, Inc. All rights reserved.
-HIP_PATH?= $(wildcard /opt/rocm/hip)
+HIP_PATH?= $(wildcard @ESYSROOT_ROCM_PATH@)
 ifeq (,$(HIP_PATH))
 	HIP_PATH=../../..
 endif
 HIPCC=$(HIP_PATH)/bin/hipcc
 
 EXE=rccl_prim_test
-CXXFLAGS = -O3 -g -I/opt/rocm/rocrand/include
+CXXFLAGS = -O3 -g -I@ESYSROOT_ROCM_PATH@/include/rocrand
 
 all: $(EXE)
 
diff -urp rccl-rocm-5.3.3.orig/tools/topo_expl/Makefile rccl-rocm-5.3.3/tools/topo_expl/Makefile
--- rccl-rocm-5.3.3.orig/tools/topo_expl/Makefile	2022-10-05 10:08:56.000000000 -0700
+++ rccl-rocm-5.3.3/tools/topo_expl/Makefile	2023-09-19 18:32:35.596965806 -0700
@@ -1,12 +1,12 @@
 # Copyright (c) 2019-2020 Advanced Micro Devices, Inc. All rights reserved.
-HIP_PATH ?= $(wildcard /opt/rocm/hip)
+HIP_PATH ?= $(wildcard @ESYSROOT_ROCM_PATH@)
 ifeq (,$(HIP_PATH))
 HIP_PATH = ../../..
 endif
 HIPCC = $(HIP_PATH)/bin/hipcc
 
 EXE = topo_expl
-CXXFLAGS = -g -O3 -Iinclude -I../../src -I../../src/include -I../../src/graph/ -I/opt/rocm/rocm_smi/include/ -DTOPO_EXPL -DENABLE_TRACE
+CXXFLAGS = -g -O3 -Iinclude -I../../src -I../../src/include -I../../src/graph/ -I@ESYSROOT_ROCM_PATH@/include/rocm_smi/ -DTOPO_EXPL -DENABLE_TRACE
 
 files = $(EXE).cpp model.cpp utils.cpp ../../src/graph/topo.cc ../../src/graph/rings.cc ../../src/graph/paths.cc ../../src/graph/trees.cc ../../src/misc/param.cc \
 	../../src/graph/search.cc ../../src/graph/connect.cc ../../src/graph/tuning.cc ../../src/graph/xml.cc ../../src/misc/nvmlwrap_stub.cc ../../src/graph/rome_models.cc
diff -urp rccl-rocm-5.3.3.orig/tools/TransferBench/Makefile rccl-rocm-5.3.3/tools/TransferBench/Makefile
--- rccl-rocm-5.3.3.orig/tools/TransferBench/Makefile	2022-10-05 10:08:56.000000000 -0700
+++ rccl-rocm-5.3.3/tools/TransferBench/Makefile	2023-09-19 18:32:35.596965806 -0700
@@ -1,9 +1,9 @@
 # Copyright (c) 2019-2022 Advanced Micro Devices, Inc. All rights reserved.
-ROCM_PATH ?= /opt/rocm
+ROCM_PATH ?= @ESYSROOT_ROCM_PATH@
 HIPCC=$(ROCM_PATH)/bin/hipcc
 
 EXE=TransferBench
-CXXFLAGS = -O3 -I. -lnuma -L$(ROCM_PATH)/hsa/lib -lhsa-runtime64
+CXXFLAGS = -O3 -I. -lnuma -L$(ROCM_PATH)/@LIBDIR@ -lhsa-runtime64
 
 all: $(EXE)
 
diff -urp rccl-rocm-5.3.3.orig/tools/TransferBench/README.md rccl-rocm-5.3.3/tools/TransferBench/README.md
--- rccl-rocm-5.3.3.orig/tools/TransferBench/README.md	2022-10-05 10:08:56.000000000 -0700
+++ rccl-rocm-5.3.3/tools/TransferBench/README.md	2023-09-19 18:32:35.596965806 -0700
@@ -11,4 +11,4 @@ TransferBench is a simple utility capabl
   To build TransferBench:
 * `make`
 
-  If ROCm is installed in a folder other than `/opt/rocm/`, set ROCM_PATH appropriately
+  If ROCm is installed in a folder other than `@ESYSROOT_ROCM_PATH@/`, set ROCM_PATH appropriately
