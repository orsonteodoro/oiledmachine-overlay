diff -urp rccl-rocm-5.7.0.orig/cmake/Dependencies.cmake rccl-rocm-5.7.0/cmake/Dependencies.cmake
--- rccl-rocm-5.7.0.orig/cmake/Dependencies.cmake	2023-09-07 13:52:51.000000000 -0700
+++ rccl-rocm-5.7.0/cmake/Dependencies.cmake	2023-09-19 18:21:09.880974963 -0700
@@ -60,10 +60,8 @@ if(NOT GTest_FOUND AND BUILD_TESTS OR IN
                      UPDATE_DISCONNECTED TRUE
     )
     set(GTEST_INCLUDE_DIRS ${CMAKE_CURRENT_BINARY_DIR}/gtest/include CACHE PATH "")
-    if(EXISTS ${CMAKE_CURRENT_BINARY_DIR}/gtest/lib)
-        set(GTEST_BOTH_LIBRARIES ${CMAKE_CURRENT_BINARY_DIR}/gtest/lib/libgtest.a;${CMAKE_CURRENT_BINARY_DIR}/gtest/lib/libgtest_main.a CACHE PATH "")
-    elseif(EXISTS ${CMAKE_CURRENT_BINARY_DIR}/gtest/lib64)
-        set(GTEST_BOTH_LIBRARIES ${CMAKE_CURRENT_BINARY_DIR}/gtest/lib64/libgtest.a;${CMAKE_CURRENT_BINARY_DIR}/gtest/lib64/libgtest_main.a CACHE PATH "")
+    if(EXISTS ${CMAKE_CURRENT_BINARY_DIR}/gtest/@LIBDIR@)
+        set(GTEST_BOTH_LIBRARIES ${CMAKE_CURRENT_BINARY_DIR}/gtest/@LIBDIR@/libgtest.a;${CMAKE_CURRENT_BINARY_DIR}/gtest/@LIBDIR@/libgtest_main.a CACHE PATH "")
     else()
         message(FATAL_ERROR "Cannot find gtest library installation path.")
     find_package(GTest REQUIRED CONFIG PATHS ${GTEST_ROOT})
@@ -121,7 +119,7 @@ endfunction()
 
 # Find or download/install rocm-cmake project
 set( PROJECT_EXTERN_DIR ${CMAKE_CURRENT_BINARY_DIR}/extern )
-find_package(ROCM 0.7.3 QUIET CONFIG PATHS /opt/rocm)
+find_package(ROCM 0.7.3 QUIET CONFIG PATHS @ESYSROOT_ROCM_PATH@)
 if(NOT ROCM_FOUND)
     set(rocm_cmake_tag "master" CACHE STRING "rocm-cmake tag to download")
     file(
@@ -158,7 +156,7 @@ endif()
 # NOTE: This will eventually be part of ROCm-CMake and should be removed at that time
 function(rocm_local_targets VARIABLE)
   set(${VARIABLE} "NOTFOUND" PARENT_SCOPE)
-  find_program(_rocm_agent_enumerator rocm_agent_enumerator HINTS /opt/rocm/bin ENV ROCM_PATH)
+  find_program(_rocm_agent_enumerator rocm_agent_enumerator HINTS @ESYSROOT_ROCM_PATH@/bin ENV ROCM_PATH)
   if(NOT _rocm_agent_enumerator STREQUAL "_rocm_agent_enumerator-NOTFOUND")
     execute_process(
       COMMAND "${_rocm_agent_enumerator}"
Only in rccl-rocm-5.7.0/cmake: Dependencies.cmake.orig
diff -urp rccl-rocm-5.7.0.orig/CMakeLists.txt rccl-rocm-5.7.0/CMakeLists.txt
--- rccl-rocm-5.7.0.orig/CMakeLists.txt	2023-09-07 13:52:51.000000000 -0700
+++ rccl-rocm-5.7.0/CMakeLists.txt	2023-09-19 18:21:08.696974979 -0700
@@ -80,7 +80,7 @@ if(NOT DEFINED ROCM_PATH)
     message(STATUS "Setting ROCM_PATH based on hipcc location to ${ROCM_PATH}")
   else()
     # Guess default location
-    set(ROCM_PATH "/opt/rocm")
+    set(ROCM_PATH "@ESYSROOT_ROCM_PATH@")
     message(WARNING "Unable to find ROCM_PATH: Falling back to ${ROCM_PATH}")
   endif()
 else()
@@ -141,16 +141,16 @@ get_target_property(HSA_INCLUDE_PATH hsa
 message(STATUS "HSA runtime: ${HSA_INCLUDE_PATH}")
 
 ## Check for ROCM-smi
-find_package(rocm_smi PATHS ${ROCM_PATH}/lib/cmake/rocm_smi)
+find_package(rocm_smi PATHS ${ROCM_PATH}/@LIBDIR@/cmake/rocm_smi)
 if (rocm_smi_FOUND)
   message(STATUS "Found rocm_smi at ${ROCM_SMI_INCLUDE_DIR}")
 else()
   message(STATUS "Checking old include directory structure for rocm_smi")
-  set(ROCM_SMI_INCLUDE_DIR "${ROCM_PATH}/rocm_smi/include")
-  set(ROCM_SMI_LIB_DIR     "${ROCM_PATH}/rocm_smi/lib")
+  set(ROCM_SMI_INCLUDE_DIR "${ROCM_PATH}/include/rocm_smi")
+  set(ROCM_SMI_LIB_DIR     "${ROCM_PATH}/@LIBDIR@")
   set(ROCM_SMI_LIBRARIES   rocm_smi64)
 endif()
-check_include_file_cxx("${ROCM_SMI_INCLUDE_DIR}/rocm_smi/rocm_smi64Config.h" HAVE_ROCM_SMI64CONFIG)
+check_include_file_cxx("${ROCM_SMI_INCLUDE_DIR}/rocm_smi64Config.h" HAVE_ROCM_SMI64CONFIG)
 
 ## Check for BFD library if custom backtrace is requested
 if(BUILD_BFD)
@@ -175,7 +175,7 @@ if(BUILD_BFD)
       HAVE_TWO_ARG_BFD_SECTION_SIZE)
 
     # Check for iberty support
-    find_library(HAVE_IBERTY iberty PATHS /usr/lib64 /usr/lib/ PATH_SUFFIXES x86_64-linux-gnu)
+    find_library(HAVE_IBERTY iberty PATHS @ESYSROOT@/usr/@LIBDIR@ PATH_SUFFIXES x86_64-linux-gnu)
     if(HAVE_IBERTY)
       message(STATUS "iberty found @ ${HAVE_IBERTY}")
     endif()
Only in rccl-rocm-5.7.0: CMakeLists.txt.orig
Only in rccl-rocm-5.7.0: CMakeLists.txt.rej
diff -urp rccl-rocm-5.7.0.orig/ext-net/example/Makefile rccl-rocm-5.7.0/ext-net/example/Makefile
--- rccl-rocm-5.7.0.orig/ext-net/example/Makefile	2023-09-07 13:52:51.000000000 -0700
+++ rccl-rocm-5.7.0/ext-net/example/Makefile	2023-09-19 18:22:23.832973976 -0700
@@ -4,7 +4,7 @@
 # See LICENSE.txt for license information
 #
 NCCL_HOME:=../../build/
-CUDA_HOME:=/usr/local/cuda
+CUDA_HOME:=@ESYSROOT@/opt/cuda
 INC:= -I$(NCCL_HOME)/include -I$(CUDA_HOME)/include
 PLUGIN_SO:=libnccl-net.so
 
diff -urp rccl-rocm-5.7.0.orig/ext-net/google-fastsocket/Makefile rccl-rocm-5.7.0/ext-net/google-fastsocket/Makefile
--- rccl-rocm-5.7.0.orig/ext-net/google-fastsocket/Makefile	2023-09-07 13:52:51.000000000 -0700
+++ rccl-rocm-5.7.0/ext-net/google-fastsocket/Makefile	2023-09-19 18:22:22.632973992 -0700
@@ -1,4 +1,4 @@
-CUDA_HOME?=/usr/local/cuda
+CUDA_HOME?=@ESYSROOT@/opt/cuda
 INC:=-I$(CUDA_HOME)/include
 PLUGIN_SO:=libnccl-net.so
 
@@ -10,11 +10,11 @@ $(PLUGIN_SO): nccl-fastsocket/*.cc
 nccl-fastsocket/*.cc:
 	git clone https://github.com/google/nccl-fastsocket.git
 
-install: $(BUILDDIR)/lib/$(PLUGIN_SO)
+install: $(BUILDDIR)/@LIBDIR@/$(PLUGIN_SO)
 
-$(BUILDDIR)/lib/$(PLUGIN_SO): $(PLUGIN_SO)
+$(BUILDDIR)/@LIBDIR@/$(PLUGIN_SO): $(PLUGIN_SO)
 	@printf "Grabbing %-35s > %s\n" $< $@
-	mkdir -p $(BUILDDIR)/lib
+	mkdir -p $(BUILDDIR)/@LIBDIR@
 	install -m 644 $< $@
 
 clean:
diff -urp rccl-rocm-5.7.0.orig/install.sh rccl-rocm-5.7.0/install.sh
--- rccl-rocm-5.7.0.orig/install.sh	2023-09-07 13:52:51.000000000 -0700
+++ rccl-rocm-5.7.0/install.sh	2023-09-19 18:18:38.920976979 -0700
@@ -4,7 +4,7 @@
 # #################################################
 # global variables
 # #################################################
-ROCM_PATH=${ROCM_PATH:="/opt/rocm"}
+ROCM_PATH=${ROCM_PATH:="@ESYSROOT_ROCM_PATH@"}
 
 # Default values
 build_address_sanitizer=false
@@ -49,7 +49,7 @@ function display_help()
     echo "       --no_clean              Don't delete files if they already exist"
     echo "       --npkit-enable          Compile with npkit enabled"
     echo "    -p|--package_build         Build RCCL package"
-    echo "       --prefix                Specify custom directory to install RCCL to (default: /opt/rocm)"
+    echo "       --prefix                Specify custom directory to install RCCL to (default: @ESYSROOT_ROCM_PATH@)"
     echo "       --rm-legacy-include-dir Remove legacy include dir Packaging added for file/folder reorg backward compatibility"
     echo "       --run_tests_all         Run all rccl unit tests (must be built already)"
     echo "    -r|--run_tests_quick       Run small subset of rccl unit tests (must be built already)"
Only in rccl-rocm-5.7.0: install.sh.orig
Only in rccl-rocm-5.7.0: install.sh.rej
diff -urp rccl-rocm-5.7.0.orig/makefiles/common.mk rccl-rocm-5.7.0/makefiles/common.mk
--- rccl-rocm-5.7.0.orig/makefiles/common.mk	2023-09-07 13:52:51.000000000 -0700
+++ rccl-rocm-5.7.0/makefiles/common.mk	2023-09-19 18:22:21.512974007 -0700
@@ -4,7 +4,7 @@
 # See LICENSE.txt for license information
 #
 
-CUDA_HOME ?= /usr/local/cuda
+CUDA_HOME ?= @ESYSROOT@/opt/cuda
 PREFIX ?= /usr/local
 VERBOSE ?= 0
 KEEP ?= 0
@@ -15,7 +15,7 @@ NVTX ?= 1
 
 NVCC = $(CUDA_HOME)/bin/nvcc
 
-CUDA_LIB ?= $(CUDA_HOME)/lib64
+CUDA_LIB ?= $(CUDA_HOME)/@LIBDIR@
 CUDA_INC ?= $(CUDA_HOME)/include
 CUDA_VERSION = $(strip $(shell which $(NVCC) >/dev/null && $(NVCC) --version | grep release | sed 's/.*release //' | sed 's/\,.*//'))
 #CUDA_VERSION ?= $(shell ls $(CUDA_LIB)/libcudart.so.* | head -1 | rev | cut -d "." -f -2 | rev)
diff -urp rccl-rocm-5.7.0.orig/pkg/txz/create_txz.sh.in rccl-rocm-5.7.0/pkg/txz/create_txz.sh.in
--- rccl-rocm-5.7.0.orig/pkg/txz/create_txz.sh.in	2023-09-07 13:52:51.000000000 -0700
+++ rccl-rocm-5.7.0/pkg/txz/create_txz.sh.in	2023-09-19 18:14:32.548980269 -0700
@@ -21,4 +21,4 @@ PKG_ARCH=${pkg:Arch}
 
 NCCLNAME="nccl_${NCCL_MAJOR}.${NCCL_MINOR}.${NCCL_PATCH}${NCCL_SUFFIX}-${PKG_REVISION}+cuda${CUDA_MAJOR}.${CUDA_MINOR}_${PKG_ARCH}"
 
-tar --transform "s/^$BUILDDIR/$NCCLNAME/" -Jcf $NCCLNAME.txz --owner=0 --group=0 $BUILDDIR/include $BUILDDIR/lib $BUILDDIR/*.txt
+tar --transform "s/^$BUILDDIR/$NCCLNAME/" -Jcf $NCCLNAME.txz --owner=0 --group=0 $BUILDDIR/include $BUILDDIR/@LIBDIR@ $BUILDDIR/*.txt
diff -urp rccl-rocm-5.7.0.orig/README.md rccl-rocm-5.7.0/README.md
--- rccl-rocm-5.7.0.orig/README.md	2023-09-07 13:52:51.000000000 -0700
+++ rccl-rocm-5.7.0/README.md	2023-09-19 18:19:41.960976137 -0700
@@ -38,7 +38,7 @@ The root of this repository has a helper
        --no_clean              Don't delete files if they already exist
        --npkit-enable          Compile with npkit enabled
     -p|--package_build         Build RCCL package
-       --prefix                Specify custom directory to install RCCL to (default: /opt/rocm)
+       --prefix                Specify custom directory to install RCCL to (default: @ESYSROOT_ROCM_PATH@)
        --rm-legacy-include-dir Remove legacy include dir Packaging added for file/folder reorg backward compatibility
        --run_tests_all         Run all rccl unit tests (must be built already)
     -r|--run_tests_quick       Run small subset of rccl unit tests (must be built already)
@@ -57,12 +57,12 @@ $ git clone https://github.com/ROCmSoftw
 $ cd rccl
 $ mkdir build
 $ cd build
-$ CXX=/opt/rocm/bin/hipcc cmake -DCMAKE_PREFIX_PATH=/opt/rocm/ ..
+$ CXX=@ESYSROOT_ROCM_PATH@/bin/hipcc cmake -DCMAKE_PREFIX_PATH=@ESYSROOT_ROCM_PATH@/ ..
 $ make -j 16      # Or some other suitable number of parallel jobs
 ```
 You may substitute an installation path of your own choosing by passing CMAKE_INSTALL_PREFIX. For example:
 ```shell
-$ CXX=/opt/rocm/bin/hipcc cmake -DCMAKE_PREFIX_PATH=/opt/rocm/ -DCMAKE_INSTALL_PREFIX=$PWD/rccl-install ..
+$ CXX=@ESYSROOT_ROCM_PATH@/bin/hipcc cmake -DCMAKE_PREFIX_PATH=@ESYSROOT_ROCM_PATH@/ -DCMAKE_INSTALL_PREFIX=$PWD/rccl-install ..
 ```
 Note: ensure rocm-cmake is installed, `apt install rocm-cmake`.
 
@@ -76,7 +76,7 @@ $ make package
 $ sudo dpkg -i *.deb
 ```
 
-RCCL package install requires sudo/root access because it creates a directory called "rccl" under /opt/rocm/. This is an optional step and RCCL can be used directly by including the path containing librccl.so.
+RCCL package install requires sudo/root access because it creates a directory called "rccl" under @ESYSROOT_ROCM_PATH@/. This is an optional step and RCCL can be used directly by including the path containing librccl.so.
 
 ## Enabling peer-to-peer transport
 
Only in rccl-rocm-5.7.0: README.md.orig
Only in rccl-rocm-5.7.0: README.md.rej
diff -urp rccl-rocm-5.7.0.orig/src/Makefile rccl-rocm-5.7.0/src/Makefile
--- rccl-rocm-5.7.0.orig/src/Makefile	2023-09-07 13:52:51.000000000 -0700
+++ rccl-rocm-5.7.0/src/Makefile	2023-09-19 18:14:32.548980269 -0700
@@ -25,9 +25,9 @@ PKGCONFIGFILE := nccl.pc
 ##### dirs
 BUILDDIR ?= $(abspath ../build)
 INCDIR := $(BUILDDIR)/include
-LIBDIR := $(BUILDDIR)/lib
+LIBDIR := $(BUILDDIR)/@LIBDIR@
 OBJDIR := $(BUILDDIR)/obj
-PKGDIR := $(BUILDDIR)/lib/pkgconfig
+PKGDIR := $(BUILDDIR)/@LIBDIR@/pkgconfig
 ##### target files
 CUDARTLIB  ?= cudart_static
 
@@ -130,11 +130,11 @@ clean :
 	rm -rf ${INCDIR} ${LIBDIR} ${PKGDIR} ${OBJDIR}
 
 install : build
-	mkdir -p $(PREFIX)/lib
-	mkdir -p $(PREFIX)/lib/pkgconfig
+	mkdir -p $(PREFIX)/@LIBDIR@
+	mkdir -p $(PREFIX)/@LIBDIR@/pkgconfig
 	mkdir -p $(PREFIX)/include
-	cp -P -v $(BUILDDIR)/lib/lib* $(PREFIX)/lib/
-	cp -P -v $(BUILDDIR)/lib/pkgconfig/* $(PREFIX)/lib/pkgconfig/
+	cp -P -v $(BUILDDIR)/@LIBDIR@/lib* $(PREFIX)/@LIBDIR@/
+	cp -P -v $(BUILDDIR)/@LIBDIR@/pkgconfig/* $(PREFIX)/@LIBDIR@/pkgconfig/
 	cp -v $(BUILDDIR)/include/* $(PREFIX)/include/
 
 FILESTOFORMAT := $(shell find . -name ".\#*" -prune -o \( -name "*.cc" -o -name "*.h" \) -print | grep -v -E 'ibvwrap.h|nvmlwrap.h|gdrwrap.h|nccl.h')
Only in rccl-rocm-5.7.0/src: Makefile.orig
diff -urp rccl-rocm-5.7.0.orig/src/nccl.pc.in rccl-rocm-5.7.0/src/nccl.pc.in
--- rccl-rocm-5.7.0.orig/src/nccl.pc.in	2023-09-07 13:52:51.000000000 -0700
+++ rccl-rocm-5.7.0/src/nccl.pc.in	2023-09-19 18:14:32.548980269 -0700
@@ -1,6 +1,6 @@
 prefix=${nccl:Prefix}
 exec_prefix=${prefix}
-libdir=${exec_prefix}/lib
+libdir=${exec_prefix}/@LIBDIR@
 includedir=${prefix}/include
 
 Name: nccl
diff -urp rccl-rocm-5.7.0.orig/test/CMakeLists.txt rccl-rocm-5.7.0/test/CMakeLists.txt
--- rccl-rocm-5.7.0.orig/test/CMakeLists.txt	2023-09-19 18:14:16.432980484 -0700
+++ rccl-rocm-5.7.0/test/CMakeLists.txt	2023-09-19 18:14:32.548980269 -0700
@@ -12,7 +12,7 @@ if(BUILD_TESTS)
   #    message(FATAL_ERROR "chrpath is required for rccl-UnitTests. Please install (e.g. sudo apt-get install chrpath)")
   #endif()
 
-  find_package(hsa-runtime64 PATHS /opt/rocm )
+  find_package(hsa-runtime64 PATHS @ESYSROOT_ROCM_PATH@ )
   if(${hsa-runtime64_FOUND})
     message("hsa-runtime64 found @  ${hsa-runtime64_DIR} ")
   else()
@@ -21,11 +21,11 @@ if(BUILD_TESTS)
     message("Looking for library files in ${ROCR_LIB_DIR}")
 
     # Search for ROCr header file in user defined locations
-    find_path(ROCR_HDR hsa/hsa.h PATHS ${ROCR_INC_DIR} "/opt/rocm" PATH_SUFFIXES include REQUIRED)
+    find_path(ROCR_HDR hsa/hsa.h PATHS ${ROCR_INC_DIR} "@ESYSROOT_ROCM_PATH@" PATH_SUFFIXES include REQUIRED)
     INCLUDE_DIRECTORIES(${ROCR_HDR})
 
     # Search for ROCr library file in user defined locations
-    find_library(ROCR_LIB ${CORE_RUNTIME_TARGET} PATHS ${ROCR_LIB_DIR} "/opt/rocm" PATH_SUFFIXES lib lib64 REQUIRED)
+    find_library(ROCR_LIB ${CORE_RUNTIME_TARGET} PATHS ${ROCR_LIB_DIR} "@ESYSROOT_ROCM_PATH@" PATH_SUFFIXES @LIBDIR@ REQUIRED)
   endif()
 
   include_directories(${GTEST_INCLUDE_DIRS} ./common)
@@ -75,21 +75,21 @@ if(BUILD_TESTS)
   # through -l and -L instead of command line input.
   if(BUILD_STATIC)
     add_dependencies(rccl-UnitTests rccl)
-    target_link_libraries(rccl-UnitTests PRIVATE dl rt numa -lrccl -L${CMAKE_BINARY_DIR} -lrocm_smi64 -L${ROCM_PATH}/lib -L${ROCM_PATH}/rocm_smi/lib)
+    target_link_libraries(rccl-UnitTests PRIVATE dl rt numa -lrccl -L${CMAKE_BINARY_DIR} -lrocm_smi64 -L${ROCM_PATH}/@LIBDIR@)
   else()
     target_link_libraries(rccl-UnitTests PRIVATE rccl)
   endif()
-  # HIPCC adds /opt/rocm/lib as RPATH, even though the install process is supposed to
+  # HIPCC adds @ESYSROOT_ROCM_PATH@/@LIBDIR@ as RPATH, even though the install process is supposed to
   # remove RPATH.  It also occurs before any user-specified rpath, which effectively overrides the user rpath.
   #  As a work-around, set the correct RPATH for the rccl unit test executable as a post-install step
   # if (CMAKE_INSTALL_PREFIX MATCHES "${ROCM_PATH}")
   #   # install_prefix/CMAKE_INSTALL_PREFIX was not explicitly specified, so look in build/release
-  #   add_custom_command( TARGET rccl-UnitTests POST_BUILD COMMAND chrpath ARGS -r ${CMAKE_BINARY_DIR}:${ROCM_PATH}/lib ${CMAKE_BINARY_DIR}/test/rccl-UnitTests)
+  #   add_custom_command( TARGET rccl-UnitTests POST_BUILD COMMAND chrpath ARGS -r ${CMAKE_BINARY_DIR}:${ROCM_PATH}/@LIBDIR@ ${CMAKE_BINARY_DIR}/test/rccl-UnitTests)
   # else()
-  #   add_custom_command( TARGET rccl-UnitTests POST_BUILD COMMAND chrpath ARGS -r ${CMAKE_INSTALL_PREFIX}/lib:${ROCM_PATH}/lib ${CMAKE_INSTALL_PREFIX}/test/rccl-UnitTests)
+  #   add_custom_command( TARGET rccl-UnitTests POST_BUILD COMMAND chrpath ARGS -r ${CMAKE_INSTALL_PREFIX}/@LIBDIR@:${ROCM_PATH}/@LIBDIR@ ${CMAKE_INSTALL_PREFIX}/test/rccl-UnitTests)
   # endif()
-  set_property(TARGET rccl-UnitTests PROPERTY INSTALL_RPATH "${CMAKE_INSTALL_PREFIX}/lib;${ROCM_PATH}/lib;${CMAKE_BINARY_DIR}")
-  set_property(TARGET rccl-UnitTests PROPERTY BUILD_RPATH "${CMAKE_BINARY_DIR};${ROCM_PATH}/lib")
+  set_property(TARGET rccl-UnitTests PROPERTY INSTALL_RPATH "${CMAKE_INSTALL_PREFIX}/@LIBDIR@;${ROCM_PATH}/@LIBDIR@;${CMAKE_BINARY_DIR}")
+  set_property(TARGET rccl-UnitTests PROPERTY BUILD_RPATH "${CMAKE_BINARY_DIR};${ROCM_PATH}/@LIBDIR@")
   rocm_install(TARGETS rccl-UnitTests COMPONENT tests)
 else()
   message("Not building rccl unit tests")
Only in rccl-rocm-5.7.0/test: CMakeLists.txt.orig
diff -urp rccl-rocm-5.7.0.orig/tools/GraphBench/Makefile rccl-rocm-5.7.0/tools/GraphBench/Makefile
--- rccl-rocm-5.7.0.orig/tools/GraphBench/Makefile	2023-09-07 13:52:51.000000000 -0700
+++ rccl-rocm-5.7.0/tools/GraphBench/Makefile	2023-09-19 18:14:32.548980269 -0700
@@ -3,7 +3,7 @@
 # Set to where RCCL is installed
 RCCL_INSTALL=../../build/release
 
-HIP_PATH?= $(wildcard /opt/rocm)
+HIP_PATH?= $(wildcard @ESYSROOT_ROCM_PATH@)
 ifeq (,$(HIP_PATH))
 HIP_PATH=../../..
 endif
diff -urp rccl-rocm-5.7.0.orig/tools/HelloRccl/Makefile rccl-rocm-5.7.0/tools/HelloRccl/Makefile
--- rccl-rocm-5.7.0.orig/tools/HelloRccl/Makefile	2023-09-07 13:52:51.000000000 -0700
+++ rccl-rocm-5.7.0/tools/HelloRccl/Makefile	2023-09-19 18:14:32.548980269 -0700
@@ -3,7 +3,7 @@
 # Set to where RCCL is installed
 RCCL_INSTALL=../../build/release
 
-HIP_PATH?= $(wildcard /opt/rocm)
+HIP_PATH?= $(wildcard @ESYSROOT_ROCM_PATH@)
 ifeq (,$(HIP_PATH))
 HIP_PATH=../../..
 endif
diff -urp rccl-rocm-5.7.0.orig/tools/ib-test/Makefile rccl-rocm-5.7.0/tools/ib-test/Makefile
--- rccl-rocm-5.7.0.orig/tools/ib-test/Makefile	2023-09-07 13:52:51.000000000 -0700
+++ rccl-rocm-5.7.0/tools/ib-test/Makefile	2023-09-19 18:14:32.548980269 -0700
@@ -1,5 +1,5 @@
 # Copyright (c) 2019-2020 Advanced Micro Devices, Inc. All rights reserved.
-HIP_PATH ?= $(wildcard /opt/rocm)
+HIP_PATH ?= $(wildcard @ESYSROOT_ROCM_PATH@)
 ifeq (,$(HIP_PATH))
 HIP_PATH = ../../..
 endif
diff -urp rccl-rocm-5.7.0.orig/tools/MultiRank/Makefile rccl-rocm-5.7.0/tools/MultiRank/Makefile
--- rccl-rocm-5.7.0.orig/tools/MultiRank/Makefile	2023-09-07 13:52:51.000000000 -0700
+++ rccl-rocm-5.7.0/tools/MultiRank/Makefile	2023-09-19 18:14:32.548980269 -0700
@@ -3,7 +3,7 @@
 # Set to where RCCL is installed
 RCCL_INSTALL=../../build/release
 
-HIP_PATH?= $(wildcard /opt/rocm)
+HIP_PATH?= $(wildcard @ESYSROOT_ROCM_PATH@)
 ifeq (,$(HIP_PATH))
 HIP_PATH=../../..
 endif
diff -urp rccl-rocm-5.7.0.orig/tools/MultiRank/README.mpi rccl-rocm-5.7.0/tools/MultiRank/README.mpi
--- rccl-rocm-5.7.0.orig/tools/MultiRank/README.mpi	2023-09-07 13:52:51.000000000 -0700
+++ rccl-rocm-5.7.0/tools/MultiRank/README.mpi	2023-09-19 18:14:32.548980269 -0700
@@ -9,9 +9,9 @@ export MPI_INSTALL_PATH=
 export RCCL_INSTALL_PATH=
 export ROCM_INSTALL_PATH=
 
-$MPI_INSTALL_PATH/bin/mpiCC -o rccl-allreduce-mpi-multirank rccl-allreduce-mpi-multirank.cc -I$ROCM_INSTALL_PATH/include -I$RCCL_INSTALL_PATH/include -D__HIP_PLATFORM_AMD__ -L$ROCM_INSTALL_PATH/lib -lamdhip64 -L$RCCL_INSTALL_PATH/lib -lrccl
+$MPI_INSTALL_PATH/bin/mpiCC -o rccl-allreduce-mpi-multirank rccl-allreduce-mpi-multirank.cc -I$ROCM_INSTALL_PATH/include -I$RCCL_INSTALL_PATH/include -D__HIP_PLATFORM_AMD__ -L$ROCM_INSTALL_PATH/@LIBDIR@ -lamdhip64 -L$RCCL_INSTALL_PATH/@LIBDIR@ -lrccl
 
-$MPI_INSTALL_PATH/bin/mpiCC -o rccl-reducescatter-mpi-multirank rccl-reducescatter-mpi-multirank.cc -I$ROCM_INSTALL_PATH/include -I$RCCL_INSTALL_PATH/include -D__HIP_PLATFORM_AMD__ -L$ROCM_INSTALL_PATH/lib -lamdhip64 -L$RCCL_INSTALL_PATH/lib -lrccl
+$MPI_INSTALL_PATH/bin/mpiCC -o rccl-reducescatter-mpi-multirank rccl-reducescatter-mpi-multirank.cc -I$ROCM_INSTALL_PATH/include -I$RCCL_INSTALL_PATH/include -D__HIP_PLATFORM_AMD__ -L$ROCM_INSTALL_PATH/@LIBDIR@ -lamdhip64 -L$RCCL_INSTALL_PATH/@LIBDIR@ -lrccl
 
 
 export GPU_MAX_HW_QUEUES=16
diff -urp rccl-rocm-5.7.0.orig/tools/rccl-prim-test/Makefile rccl-rocm-5.7.0/tools/rccl-prim-test/Makefile
--- rccl-rocm-5.7.0.orig/tools/rccl-prim-test/Makefile	2023-09-07 13:52:51.000000000 -0700
+++ rccl-rocm-5.7.0/tools/rccl-prim-test/Makefile	2023-09-19 18:21:12.488974928 -0700
@@ -1,12 +1,12 @@
 # Copyright (c) 2019-2020 Advanced Micro Devices, Inc. All rights reserved.
-HIP_PATH?= $(wildcard /opt/rocm)
+HIP_PATH?= $(wildcard @ESYSROOT_ROCM_PATH@)
 ifeq (,$(HIP_PATH))
 	HIP_PATH=../../..
 endif
 HIPCC=$(HIP_PATH)/bin/hipcc
 
 EXE=rccl_prim_test
-CXXFLAGS = -O3 -g -I/opt/rocm/rocrand/include
+CXXFLAGS = -O3 -g -I@ESYSROOT_ROCM_PATH@/include/rocrand
 
 all: $(EXE)
 
diff -urp rccl-rocm-5.7.0.orig/tools/topo_expl/Makefile rccl-rocm-5.7.0/tools/topo_expl/Makefile
--- rccl-rocm-5.7.0.orig/tools/topo_expl/Makefile	2023-09-07 13:52:51.000000000 -0700
+++ rccl-rocm-5.7.0/tools/topo_expl/Makefile	2023-09-19 18:21:14.136974906 -0700
@@ -1,12 +1,12 @@
 # Copyright (c) 2019-2020 Advanced Micro Devices, Inc. All rights reserved.
-HIP_PATH ?= $(wildcard /opt/rocm)
+HIP_PATH ?= $(wildcard @ESYSROOT_ROCM_PATH@)
 ifeq (,$(HIP_PATH))
 HIP_PATH = ../../..
 endif
 HIPCC = $(HIP_PATH)/bin/hipcc
 
 EXE = topo_expl
-CXXFLAGS = -g -O3 -Iinclude -Ihipify_rccl/include -Ihipify_rccl/graph -I/opt/rocm/include/ -DTOPO_EXPL -DENABLE_TRACE -DNVTX_NO_IMPL
+CXXFLAGS = -g -O3 -Iinclude -Ihipify_rccl/include -Ihipify_rccl/graph -I@ESYSROOT_ROCM_PATH@/include/ -DTOPO_EXPL -DENABLE_TRACE -DNVTX_NO_IMPL
 
 files = $(EXE).cpp model.cpp utils.cpp hipify_rccl/graph/topo.cc hipify_rccl/graph/rings.cc hipify_rccl/graph/paths.cc hipify_rccl/graph/trees.cc ../../src/misc/param.cc \
 	hipify_rccl/graph/search.cc hipify_rccl/graph/connect.cc hipify_rccl/graph/tuning.cc hipify_rccl/graph/xml.cc ../../src/misc/nvmlwrap_stub.cc hipify_rccl/graph/rome_models.cc
