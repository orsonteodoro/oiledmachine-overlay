diff '--color=auto' -urp rccl-rocm-5.5.1.orig/cmake/Dependencies.cmake rccl-rocm-5.5.1/cmake/Dependencies.cmake
--- rccl-rocm-5.5.1.orig/cmake/Dependencies.cmake	2023-04-26 13:54:45.000000000 -0700
+++ rccl-rocm-5.5.1/cmake/Dependencies.cmake	2024-07-11 00:31:43.963797082 -0700
@@ -73,7 +73,7 @@ endif()
 
 # Find or download/install rocm-cmake project
 set( PROJECT_EXTERN_DIR ${CMAKE_CURRENT_BINARY_DIR}/extern )
-find_package(ROCM 0.7.3 QUIET CONFIG PATHS /opt/rocm)
+find_package(ROCM 0.7.3 QUIET CONFIG PATHS /opt/rocm-@ROCM_VERSION@)
 if(NOT ROCM_FOUND)
     set(rocm_cmake_tag "master" CACHE STRING "rocm-cmake tag to download")
     file(
diff '--color=auto' -urp rccl-rocm-5.5.1.orig/test/CMakeLists.txt rccl-rocm-5.5.1/test/CMakeLists.txt
--- rccl-rocm-5.5.1.orig/test/CMakeLists.txt	2024-07-11 00:31:03.944371645 -0700
+++ rccl-rocm-5.5.1/test/CMakeLists.txt	2024-07-11 00:31:38.459876109 -0700
@@ -12,7 +12,7 @@ if(BUILD_TESTS)
   #    message(FATAL_ERROR "chrpath is required for rccl-UnitTests. Please install (e.g. sudo apt-get install chrpath)")
   #endif()
 
-  find_package(hsa-runtime64 PATHS /opt/rocm )
+  find_package(hsa-runtime64 PATHS /opt/rocm-@ROCM_VERSION@ )
   if(${hsa-runtime64_FOUND})
     message("hsa-runtime64 found @  ${hsa-runtime64_DIR} ")
   else()
@@ -21,11 +21,11 @@ if(BUILD_TESTS)
     message("Looking for library files in ${ROCR_LIB_DIR}")
 
     # Search for ROCr header file in user defined locations
-    find_path(ROCR_HDR hsa/hsa.h PATHS ${ROCR_INC_DIR} "/opt/rocm" PATH_SUFFIXES include REQUIRED)
+    find_path(ROCR_HDR hsa/hsa.h PATHS ${ROCR_INC_DIR} "/opt/rocm-@ROCM_VERSION@" PATH_SUFFIXES include REQUIRED)
     INCLUDE_DIRECTORIES(${ROCR_HDR})
 
     # Search for ROCr library file in user defined locations
-    find_library(ROCR_LIB ${CORE_RUNTIME_TARGET} PATHS ${ROCR_LIB_DIR} "/opt/rocm" PATH_SUFFIXES lib lib64 REQUIRED)
+    find_library(ROCR_LIB ${CORE_RUNTIME_TARGET} PATHS ${ROCR_LIB_DIR} "/opt/rocm-@ROCM_VERSION@" PATH_SUFFIXES lib lib64 REQUIRED)
   endif()
 
   include_directories(${GTEST_INCLUDE_DIRS} ./common)
