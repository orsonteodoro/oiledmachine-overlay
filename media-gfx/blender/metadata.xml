<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
  <maintainer type="person">
    <!-- Ebuild fork on the oiledmachine-overlay -->
    <email>orsonteodoro@hotmail.com</email>
    <name>Orson Teodoro</name>
  </maintainer>
  <maintainer type="person">
    <!-- Ebuild originators -->
    <email>agrigo2001@yahoo.com.au</email>
    <name>Adrian Grigo</name>
  </maintainer>
  <maintainer type="project">
    <!-- Ebuild originators -->
    <email>proxy-maint@gentoo.org</email>
    <name>Proxy Maintainers</name>
  </maintainer>
  <maintainer type="project">
    <!-- Ebuild originators -->
    <email>graphics@gentoo.org</email>
    <name>Gentoo Graphics Project</name>
  </maintainer>
  <longdescription>
    Blender is for 3D modeling, animation, rendering, post-production,
    interactive creation and playback.
  </longdescription>
  <!--

    oiledmachine-overlay notes:

    3.3.x         - LTS (Long Term Support) to Sept 2024
    3.6.x         - LTS (Long Term Support) to Jun 2025
    4.0 and later - Stable

    Information about Cycles network rendering can be found at:
    https://wiki.blender.org/wiki/Source/Render/Cycles/Network_Render
    https://developer.blender.org/D2808

    BLENDER_MAIN_SYMLINK_MODE as a per-package environmental variable
    can be set to latest-lts, latest (default), custom-x.yy where x.yy is a
    slotted version series.  This will set the /usr/bin/blender symlink
    to that version

    For tracking the latest or stable please use virtual/blender-lts or
    virtual/blender-stable instead.  Do not emerge this package directly.  The
    package has been modified to allow for multiple installation of point
    releases for render farms that only allow for a specific version.

    When build_portable USE flag is on, it will place a portable version
    in /usr/share/blender/${SLOT}/portable.

    When build_headless USE flag is on, the executible is called
    blender_headless-${SLOT} or blender_headless.

    The release USE flag depends on the platform defaults which are the
    default set/unset USE flags.


    x86 users (AKA 32-bit):

    You may define BLENDER_CC_ALT and BLENDER_CXX_ALT to change the compiler.
    Using gcc may result in less optimal code when compiling Cycles.  If not
    defined, it will fall back to clang++, then icpc.


    HIP targets:

    You may choose a few needed targets to speed up compile time.

    The mapping of the model codename to *_gfx* symbols can be found in:

      https://packages-cdn-origin.gentoo.org/useflags/amdgpu_targets_gfx906
      https://llvm.org/docs/AMDGPUUsage.html#processors

    Only GCN GFX9 (aka Vega) and newer are supported by this package.


    CUDA targets:

    You may choose a few needed targets to speed up compile time.

    See also

      https://en.wikipedia.org/wiki/CUDA#GPUs_supported        # sm_xy corresponds to "Compute capability (version)"
      https://docs.nvidia.com/cuda/cuda-compiler-driver-nvcc/index.html#virtual-architecture-feature-list


  -->
  <upstream>
    <doc lang="en">https://docs.blender.org/manual/en/3.3/index.html</doc>
    <doc lang="de">https://docs.blender.org/manual/de/3.3/index.html</doc>
    <doc lang="es">https://docs.blender.org/manual/es/3.3/index.html</doc>
    <doc lang="fr">https://docs.blender.org/manual/fr/3.3/index.html</doc>
    <doc lang="it">https://docs.blender.org/manual/it/3.3/index.html</doc>
    <doc lang="ja">https://docs.blender.org/manual/ja/3.3/index.html</doc>
    <doc lang="ko">https://docs.blender.org/manual/ko/3.3/index.html</doc>
    <doc lang="nb">https://docs.blender.org/manual/nb/3.3/index.html</doc>
    <doc lang="pt">https://docs.blender.org/manual/pt/3.3/index.html</doc>
    <doc lang="ru">https://docs.blender.org/manual/ru/3.3/index.html</doc>
    <doc lang="fi">https://docs.blender.org/manual/fi/3.3/index.html</doc>
    <doc lang="uk">https://docs.blender.org/manual/uk/3.3/index.html</doc>
    <doc lang="vi">https://docs.blender.org/manual/vi/3.3/index.html</doc>
    <doc lang="zh-hans">
      https://docs.blender.org/manual/zh-hans/3.3/index.html
    </doc>
    <doc lang="zh-hant">
      https://docs.blender.org/manual/zh-hant/3.3/index.html
    </doc>
    <bugs-to>
      https://developer.blender.org/
    </bugs-to>
    <remote-id type="cpe">cpe:/a:blender:blender</remote-id>
  </upstream>
  <use>
    <flag name="abi9-compat">
      Use ABI 9.x compatible OpenVDB.
    </flag>
    <flag name="abi10-compat">
      Use ABI 10.x compatible OpenVDB.
    </flag>
    <flag name="alembic">
      Add support for Alembic through <pkg>media-gfx/alembic</pkg> used as an
      animation interchange format.
    </flag>
    <flag name="aot">
      Enable AOT (Ahead Of Time) optimization/compilation for Intel® GPUs.
    </flag>
    <flag name="asan">
      Enable address sanitiation.  This is only for bug and vulnerability
      discovery only.  It does not necessarily prevent when activated.
    </flag>
    <flag name="boost">
      Enables using componenents that may depend on Boost such as Blender player
      (2.7 only), Cycles GPU rendering, Cycles network rendering, game engine
      (2.7 only), JACK (2.7 only), nls (multilanguage support), OpenAL, OpenVDB,
      color-management.  Disabling implies reducing bloat and heavy Boost
      dependency and faster build times.
    </flag>
    <flag name="build_creator">
      Builds the IDE.  The default.
    </flag>
    <flag name="build_headless">
      Builds Blender for render farms.  Disables windowing and audio.
    </flag>
    <flag name="build_portable">
      Builds Blender for redistribution.  Makes use of static libraries.
    </flag>
    <flag name="bullet">
      Enable Bullet (Physics Engine).
    </flag>
    <flag name="collada">
      Add support for Collada interchange format through
      <pkg>media-libs/opencollada</pkg>.
    </flag>
    <flag name="color-management">
      Enable color management via <pkg>media-libs/opencolorio</pkg>.
    </flag>
    <flag name="cpu_flags_x86_bmi">
      Enables support for BMI optimizations if cpudetection is disabled.
    </flag>
    <flag name="cpu_flags_x86_lzcnt">
      Enables support for LZCNT optimization if cpudetection is disabled.
    </flag>
    <flag name="cpudetection">
      Detect at build time the SIMD instruction sets for cycles.
    </flag>
    <flag name="cuda">
      Build the Cycles renderer with NVIDIA® CUDA® support.
    </flag>
    <flag name="cycles">
      Build the Cycles renderer (requires <pkg>media-libs/openimageio</pkg> and
      <pkg>dev-libs/boost</pkg>).
    </flag>
    <flag name="cycles-network">
      Enable experimental peer-to-peer LAN networking support for Cycles.
    </flag>
    <flag name="dbus">
      Adds themed cursor support for Wayland support.
    </flag>
    <flag name="dds">
      Adds DDS textures support to Blender.
    </flag>
    <flag name="doc">
      Build C and Python API documentation directly from the source code.
    </flag>
    <flag name="draco">
      Adds Draco Compression support for glTF.

      Details:
https://docs.blender.org/manual/en/latest/addons/import_export/scene_gltf2.html#compression
    </flag>
    <flag name="elbeem">
      Adds surface fluid simulation to Blender using El'Beem library.
    </flag>
    <flag name="embree">
      Build cycles renderer with Embree support as a CPU ray accelerator.
    </flag>
    <flag name="flac">
      Adds support for FLAC lossless audio support.
    </flag>
    <flag name="gmp">
      Adds Intersect (Knife) and Intersect (Boolean) to Face Tools, and the
      ability to switch between fast and the default exact solver modes for
      the mesh modifier.  It adds support for exact booleans with overlapping
      geometry support than fast float approximations without overlapping
      geometry support.

      Details:
https://docs.blender.org/manual/en/latest/modeling/modifiers/generate/booleans.html#boolean-modifier
https://docs.blender.org/manual/en/latest/modeling/meshes/editing/face/intersect_knife.html
https://docs.blender.org/manual/en/latest/modeling/meshes/editing/face/intersect_boolean.html
    </flag>
    <flag name="ffmpeg">
      Adds support for FFMPEG enabling internal FFMPEG codecs support and
      possibly external codec support if added.
    </flag>
    <flag name="rocm">
      Adds support for primarily AMD GPUs via the HIP render device with the
      Cycles renderer.
    </flag>
    <flag name="hiprt">
      Add support for hardware accelerated raytracing for Navi 1x, Navi 2x,
      Navi 3x and ray tracing support for Vega 10, Raven, Renoir.
    </flag>
    <flag name="hydra">
      Use USD hydra for rendering and for a performance benefit.
    </flag>
    <flag name="joystick">
      Adds support for a joystick through SDL used for the Blender Game Engine
      (BGE, 2.79.x only).
    </flag>
    <flag name="llvm">
      Enable features depending on llvm.
    </flag>
    <flag name="llvm-13">
      Build against llvm:13 to avoid multiple libLLVM.so load bug.  This
      must correspond to the same LLVM linked to the system's Mesa.
    </flag>
    <flag name="llvm-14">
      Build against llvm:14 to avoid multiple libLLVM.so load bug.  This
      must correspond to the same LLVM linked to the system's Mesa.

      (Not officially supported upstream, but provided for distro compatibility)
      [EXPERIMENTAL]
    </flag>
    <flag name="llvm-15">
      Build against llvm:15 to avoid multiple libLLVM.so load bug.  This
      must correspond to the same LLVM linked to the system's Mesa.
    </flag>
    <flag name="man">
      Build and install man pages.
    </flag>
    <flag name="nanovdb">
      Adds support for GPU accelerated volume based rendering for cycles.
    </flag>
    <flag name="ndof">
      Enable NDOF (3D Mouse) input device (SpaceNavigator and friends) support.
    </flag>
    <flag name="nvcc">
      Use the NVCC compiler for CUDA®/Optix™ support.
    </flag>
    <flag name="nvrtc">
      Use NVRTC to build the cubin compiler for CUDA® support.
    </flag>
    <flag name="openal">
      Adds 3D sound support.
    </flag>
    <flag name="opus">
      Adds support for the Opus audio codec used for speech compression
      and general use.
    </flag>
    <flag name="opencl">
      Allow OpenCL™ Graphics Acceleration. This may require extra graphics card
      drivers.
    </flag>
    <flag name="openimagedenoise">
      Enable Open Image Denoise support for CPU based AI denoising for improved
      blending.
    </flag>
    <flag name="openimageio">
      Enable OpenImageIO Support
    </flag>
    <flag name="opensubdiv">
      Accelerates the subdivision rendering to produce smoother curved 3D
      surfaces with the use of GPU and CPU.
    </flag>
    <flag name="openvdb">
      Add GPU preview rendering.
    </flag>
    <flag name="openxr">
      Add VR features.
    </flag>
    <flag name="optix">
      Build cycles renderer with NVIDIA® OptiX™ support on Quadro®/GeForce RTX™
      GPUs for hardware accelerated rendering and denoising.
    </flag>
    <flag name="osl">
      Add support for OpenShadingLanguage scripting.
    </flag>
    <flag name="pdf">
      Adds support to export to PDF directly.
    </flag>
    <flag name="potrace">
      Add support for converting bitmaps into a grease pencil line for smoother
      edges.
    </flag>
    <flag name="release">
      Builds Blender with the release configuration (AKA precompiled Blender),
      with a subset of the release configuration but allows for flexibility.
      Otherwise, it falls back to the platform default.

      * Hard USE requirements are for formats and quality standards.
      * Flexible requirements are for (proprietary) performance libs or driver
      support.

      The hard USE requirements are to ensure compatibility and render quality
      consistency with render farms.
    </flag>
    <flag name="sycl">
      Add support for GPU accelerated raytracing for Intel® GPUs.
    </flag>
    <flag name="tbb">
      Enables using TBB componenents which also may enable sculpt multithreading,
      Cycles, El'Beem, OpenImageDenoise, OpenVDB.
    </flag>
    <flag name="test">
      Build the provided unit tests.
    </flag>
    <flag name="theora">
      Adds theora for video output.
    </flag>
    <flag name="usd">
      Allows to export certain types of selected visible meshes to USD format.
    </flag>
    <flag name="webm">
      Adds support for WebM preset with dependency checks.
    </flag>
    <flag name="vorbis">
      Adds vorbis as an audio output format.
    </flag>
    <flag name="valgrind">
      Add support for memory debugging using
      <pkg>dev-util/valgrind</pkg>
    </flag>
    <flag name="vpx">
      Adds support for VP9 for video output.
    </flag>
    <flag name="x264">
      Adds support for x264 for video output.
    </flag>
    <flag name="X">
      Checks for X11 dependencies.
    </flag>
    <flag name="xvid">
      Adds support for the Xvid codec to render and output MPEG-4 video.
    </flag>
    <flag name="ebuild-revision-N">
      Ebuild revision.  FOR INTERNAL USE ONLY.  Bumps the revision while keeping
      CCACHE paths for faster rebuilds.
    </flag>
  </use>
</pkgmetadata>
