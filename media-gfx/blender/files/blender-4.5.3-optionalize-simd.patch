diff '--color=auto' -urp blender-4.5.3.orig/build_files/cmake/Modules/FindEmbree.cmake blender-4.5.3/build_files/cmake/Modules/FindEmbree.cmake
--- blender-4.5.3.orig/build_files/cmake/Modules/FindEmbree.cmake	2025-07-10 02:43:06.000000000 -0700
+++ blender-4.5.3/build_files/cmake/Modules/FindEmbree.cmake	2025-10-11 09:38:54.969390934 -0700
@@ -12,6 +12,10 @@
 #                        This can also be an environment variable.
 #  EMBREEFOUND, If false, do not try to use Embree.
 
+option(WITH_SSE42 "Allow SSE4.2" ON)
+option(WITH_AVX "Allow AVX" ON)
+option(WITH_AVX2 "Allow AVX2" ON)
+
 # If `EMBREE_ROOT_DIR` was defined in the environment, use it.
 if(DEFINED EMBREE_ROOT_DIR)
   # Pass.
@@ -59,11 +63,16 @@ endif()
 
 if(EMBREE_STATIC_LIB)
   if((CMAKE_SYSTEM_PROCESSOR MATCHES "x86_64|AMD64") OR (APPLE AND (CMAKE_OSX_ARCHITECTURES STREQUAL "x86_64")))
-    set(_embree_SIMD_COMPONENTS
-      embree_sse42
-      embree_avx
-      embree_avx2
-    )
+    set(_embree_SIMD_COMPONENTS)
+    if(WITH_SSE42)
+      list(APPEND _embree_SIMD_COMPONENTS embree_sse42)
+    endif()
+    if(WITH_AVX)
+      list(APPEND _embree_SIMD_COMPONENTS embree_avx)
+    endif()
+    if(WITH_AVX2)
+      list(APPEND _embree_SIMD_COMPONENTS embree_avx2)
+    endif()
   endif()
 
   if(EMBREE_SYCL_SUPPORT)
diff '--color=auto' -urp blender-4.5.3.orig/intern/cycles/CMakeLists.txt blender-4.5.3/intern/cycles/CMakeLists.txt
--- blender-4.5.3.orig/intern/cycles/CMakeLists.txt	2025-10-11 09:21:13.326079184 -0700
+++ blender-4.5.3/intern/cycles/CMakeLists.txt	2025-10-11 09:39:18.569019403 -0700
@@ -2,6 +2,20 @@
 #
 # SPDX-License-Identifier: Apache-2.0
 
+option(WITH_SSE "Allow SSE" ON)
+option(WITH_SSE2 "Allow SSE2" ON)
+option(WITH_SSE3 "Allow SSE3" ON)
+option(WITH_SSSE3 "Allow SSSE3" ON)
+option(WITH_SSE41 "Allow SSE4.1" ON)
+option(WITH_SSE42 "Allow SSE4.2" ON)
+option(WITH_AVX "Allow AVX" ON)
+option(WITH_AVX2 "Allow AVX2" ON)
+option(WITH_FMA "Allow FMA" ON)
+option(WITH_LZCNT "Allow LZCNT" ON)
+option(WITH_BMI "Allow BMI" ON)
+option(WITH_BMI2 "Allow BMI2" ON)
+option(WITH_F16C "Allow F16C" ON)
+
 # Standalone or with Blender
 if(NOT WITH_BLENDER)
   set(CYCLES_INSTALL_PATH ${CMAKE_INSTALL_PREFIX})
@@ -73,8 +87,16 @@ elseif(NOT WITH_CPU_SIMD OR (SUPPORT_NEO
   set(CXX_HAS_SSE42 FALSE)
   set(CXX_HAS_AVX2 FALSE)
 elseif(WIN32 AND MSVC AND NOT CMAKE_CXX_COMPILER_ID MATCHES "Clang")
-  set(CXX_HAS_SSE42 TRUE)
-  set(CXX_HAS_AVX2 TRUE)
+  if(WITH_SSE42)
+    set(CXX_HAS_SSE42 TRUE)
+  else()
+    set(CXX_HAS_SSE42 FALSE)
+  endif()
+  if(WITH_AVX2)
+    set(CXX_HAS_AVX2 TRUE)
+  else()
+    set(CXX_HAS_AVX2 FALSE)
+  endif()
 
   # /arch:AVX for VC2012 and above
   if(NOT MSVC_VERSION LESS 1700)
@@ -90,8 +112,16 @@ elseif(WIN32 AND MSVC AND NOT CMAKE_CXX_
     set(CYCLES_SSE42_FLAGS "/arch:SSE2")
   endif()
 elseif(CMAKE_COMPILER_IS_GNUCC OR (CMAKE_CXX_COMPILER_ID MATCHES "Clang"))
-  check_cxx_compiler_flag(-msse4.2 CXX_HAS_SSE42)
-  check_cxx_compiler_flag(-mavx2 CXX_HAS_AVX2)
+  if(WITH_SSE AND WITH_SSE2 AND WITH_SSE3 AND WITH_SSSE3 AND WITH_SSE41 AND WITH_SSE42)
+    check_cxx_compiler_flag(-msse4.2 CXX_HAS_SSE42)
+  else()
+    set(CXX_HAS_SSE42 FALSE)
+  endif()
+  if(WITH_AVX AND WITH_AVX2 AND WITH_FMA AND WITH_LZCNT AND WITH_BMI AND WITH_BMI2 AND WITH_F16C)
+    check_cxx_compiler_flag(-mavx2 CXX_HAS_AVX2)
+  else()
+    set(CXX_HAS_AVX2 FALSE)
+  endif()
 
   if(CXX_HAS_SSE42)
     set(CYCLES_SSE42_FLAGS "-msse -msse2 -msse3 -mssse3 -msse4.1 -msse4.2")
@@ -101,8 +131,16 @@ elseif(CMAKE_COMPILER_IS_GNUCC OR (CMAKE
   endif()
 
 elseif(WIN32 AND CMAKE_CXX_COMPILER_ID STREQUAL "Intel")
-  check_cxx_compiler_flag(/QxSSE4.2 CXX_HAS_SSE42)
-  check_cxx_compiler_flag(/QxCORE-AVX2 CXX_HAS_AVX2)
+  if(WITH_SSE42)
+    check_cxx_compiler_flag(/QxSSE4.2 CXX_HAS_SSE42)
+  else()
+    set(CXX_HAS_SSE42 FALSE)
+  endif()
+  if(WITH_AVX2)
+    check_cxx_compiler_flag(/QxCORE-AVX2 CXX_HAS_AVX2)
+  else()
+    set(CXX_HAS_AVX2 FALSE)
+  endif()
 
   if(CXX_HAS_SSE42)
     set(CYCLES_SSE42_FLAGS "/QxSSE4.2")
@@ -112,8 +150,16 @@ elseif(WIN32 AND CMAKE_CXX_COMPILER_ID S
     endif()
   endif()
 elseif(CMAKE_CXX_COMPILER_ID STREQUAL "Intel")
-  check_cxx_compiler_flag(-xsse4.2 CXX_HAS_SSE42)
-  check_cxx_compiler_flag(-xcore-avx2 CXX_HAS_AVX2)
+  if(WITH_SSE42)
+    check_cxx_compiler_flag(-xsse4.2 CXX_HAS_SSE42)
+  else()
+    set(CXX_HAS_SSE42 FALSE)
+  endif()
+  if(WITH_AVX2)
+    check_cxx_compiler_flag(-xcore-avx2 CXX_HAS_AVX2)
+  else()
+    set(CXX_HAS_AVX2 FALSE)
+  endif()
 
   if(CXX_HAS_SSE42)
     set(CYCLES_SSE42_FLAGS "-xsse4.2")
