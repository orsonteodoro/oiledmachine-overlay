<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
  <maintainer type="person" proxied="yes">
    <!-- only for this ebuild on the oiledmachine-overlay -->
    <email>orsonteodoro@hotmail.com</email>
    <name>Orson Teodoro</name>
  </maintainer>
  <longdescription>
    NanoVDB is a slim down header only implementation of
    the VDB data structure that is static readonly with primarily
    support for GPUs (with CPUs support) for use in raytracing rendering
    or collision detection. Benefits include faster read access and less memory.
  </longdescription>
  <upstream>
    <remote-id type="github">AcademySoftwareFoundation/openvdb</remote-id>
  </upstream>
  <use>
    <flag restrict="&gt;=media-gfx/openvdb-7.0.0" name="abi7-compat">
      Disables newer features to maintain compatibility with ABI7.
    </flag>
    <flag name="benchmark">
      Builds and installs the benchmark example
    </flag>
    <flag name="blosc">
      Adds improved disk compression support
    </flag>
    <flag name="cuda">
      Adds CUDA support
    </flag>
    <flag name="doc">
      Generates and installs documentation
    </flag>
    <flag name="examples">
      Builds and installs examples
    </flag>
    <flag name="egl">
      Min requirements to prevent a crash with EGL.  Adds EGL support to the
      nanovdb viewer.
    </flag>
    <flag name="imgui">
      Adds point and click GUI elements for the interactive renderer to improve
      usability.  If disabled, it will fallback to hotkeys to control the
      interactive-renderer.  Use I to get a list of hotkeys.
    </flag>
    <flag name="interactive-renderer">
      Builds the interactive renderer tool
    </flag>
    <flag name="native-file-dialog">
      Adds support for a GTK3 based native file dialog for the interacitve
      renderer tool to open vdb/nvdb assets.  You may still open assets
      in the command line.  See --help for details.
    </flag>
    <flag name="opencl">
      Adds OpenCL support
    </flag>
    <flag name="openexr">
      Adds OpenEXR support
    </flag>
    <flag name="opengl">
      Adds OpenGL support
    </flag>
    <flag name="openvdb">
      Adds OpenVDB support
    </flag>
    <flag name="jemalloc">
      Uses jemalloc as the concurrent memory allocator for binaries (that use the
      utils USE flag) or unit tests.
    </flag>
    <flag name="log4cplus">
      Adds improved logging support
    </flag>
    <flag restrict="&gt;=media-gfx/openvdb-7.0.0" name="numpy">
      Adds <pkg>dev-python/numpy</pkg> support to the pyopenvdb module
    </flag>
    <flag name="optix">
      Adds OptiX support
    </flag>
    <flag restrict="&gt;=media-gfx/openvdb-7.0.0" name="python">
      Builds the pyopenvdb module
    </flag>
    <flag restrict="&gt;=media-gfx/openvdb-7.0.0" name="utils">
      Build utility binaries
    </flag>
    <flag name="system-glfw">
      Uses the system's glfw; otherwise, it may fetch it via git.
    </flag>
    <flag name="system-gtest">
      Uses the system's gtest; otherwise, it may fetch it via git.
    </flag>
    <flag name="test">
      Runs unit tests
    </flag>
    <flag name="tbb">
      Uses TBB as the concurrent memory allocator for binaries (that use the
      utils USE flag) or unit tests.
    </flag>
  </use>
</pkgmetadata>
