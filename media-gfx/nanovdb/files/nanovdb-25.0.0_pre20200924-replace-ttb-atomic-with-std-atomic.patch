Subject:        Replaced tbb::atomic with std::atomic
Patch author:   Orson Teodoro <orsonteodoro@hotmail.com>
Date:           Wed Jun 30 09:22:08 PM PDT 2021 (Unix timestamp: 1625113328)

Copyright notice for nanovdb/util/OpenToNanoVDB.h:

// Copyright Contributors to the OpenVDB Project
// SPDX-License-Identifier: MPL-2.0

Contribution notice:

/*!
    \file OpenToNanoVDB.h

    \author Ken Museth

    \date January 8, 2020

    \brief This class will serialize an OpenVDB grid into a NanoVDB grid.
*/

diff -urp nanovdb.orig/nanovdb/util/OpenToNanoVDB.h nanovdb/nanovdb/util/OpenToNanoVDB.h
--- nanovdb.orig/nanovdb/util/OpenToNanoVDB.h	2020-09-24 20:19:30.000000000 -0700
+++ nanovdb/nanovdb/util/OpenToNanoVDB.h	2021-06-30 21:31:08.231497764 -0700
@@ -21,8 +21,9 @@
 #include <tbb/parallel_for.h>
 #include <tbb/parallel_invoke.h>
 #include <tbb/parallel_sort.h>
-#include <tbb/atomic.h>
+										// oteodoro - deleted line
 
+#include <atomic>								// oteodoro - added line
 #include <type_traits>
 
 #ifndef NANOVDB_OPENTONANOVDB_H_HAS_BEEN_INCLUDED
@@ -51,7 +52,7 @@ class OpenToNanoVDB
     ValueT                  mDelta; // skip node if: node.max < -mDelta || node.min > mDelta
     uint8_t*                mData;
     uint64_t                mBytes[8]; // Byte offsets to from mData to: tree, blindmetadata, root, node2, node1, leafs, blinddata, (total size)
-    tbb::atomic<uint64_t>   mActiveVoxelCount;
+    std::atomic<uint64_t>   mActiveVoxelCount;					// oteodoro - tbb -> std
     std::set<BlindMetaData> mBlindMetaData; // sorted accoring to index
 
 public:
@@ -164,7 +165,7 @@ template<typename SrcTreeT, typename Buf
 template<typename LeafT>
 uint64_t OpenToNanoVDB<SrcTreeT, BufferT>::pointCount(std::vector<const LeafT*>& array)
 {
-    tbb::atomic<uint64_t> pointCount = 0;
+    std::atomic<uint64_t> pointCount(0);							// oteodoro - tbb -> std
     tbb::parallel_for(tbb::blocked_range<uint64_t>(0, array.size(), 16),
                       [&](const tbb::blocked_range<uint64_t>& r) {
                           uint64_t sum = 0;
