diff -urp xpra-4.1.3.orig/xpra/scripts/config.py xpra-4.1.3/xpra/scripts/config.py
--- xpra-4.1.3.orig/xpra/scripts/config.py	2021-04-18 06:39:35.000000000 -0700
+++ xpra-4.1.3/xpra/scripts/config.py	2021-05-03 23:59:39.386895644 -0700
@@ -1244,11 +1244,31 @@ def do_validate_config(d:dict, discard,
 def make_defaults_struct(extras_defaults=None, extras_types=None, extras_validation=None, username="", uid=getuid(), gid=getgid()):
     return do_make_defaults_struct(extras_defaults or {}, extras_types or {}, extras_validation or {}, username, uid, gid)
 
+def get_speaker_override(d={}):
+    from xpra.util import envbool
+    speaker = "on"
+    try:
+        speaker = os.environ.get("XPRA_SPEAKER")
+        if speaker is None:
+            speaker = d["speaker"]
+        else:
+            if speaker == "1" or speaker == "on":
+                speaker = "on"
+            elif speaker == "disabled":
+                speaker = "disabled"
+            else:
+                speaker = "off"
+    except ValueError:
+        speaker = d["speaker"]
+    d.update({"speaker" : speaker})
+    return d
+
 def do_make_defaults_struct(extras_defaults:dict, extras_types:dict, extras_validation:dict, username:str, uid:int, gid:int):
     #populate config with default values:
     if not username and uid:
         username = get_username_for_uid(uid)
     defaults = read_xpra_defaults(username, uid, gid)
+    defaults = get_speaker_override(defaults)
     return dict_to_validated_config(defaults, extras_defaults, extras_types, extras_validation)
 
 def dict_to_validated_config(d:dict, extras_defaults=None, extras_types=None, extras_validation=None):
