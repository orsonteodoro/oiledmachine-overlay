<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE pkgmetadata SYSTEM "https://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
  <maintainer type="person" proxied="yes">
    <!-- Ebuild originators -->
    <email>dnovomesky@gmail.com</email>
    <name>Daniel Novomesky</name>
  </maintainer>
  <maintainer type="project" proxied="proxy">
    <!-- Ebuild originators -->
    <email>proxy-maint@gentoo.org</email>
    <name>Proxy Maintainers</name>
  </maintainer>
  <!--

  oiledmachine-overlay notes:

  Ebuild forked to control cpu flags.

  -->
  <longdescription>
    Highway is a C++ library for SIMD (Single Instruction, Multiple Data),
    i.e. applying the same operation to multiple 'lanes' using a single CPU
    instruction.
  </longdescription>
  <upstream>
    <remote-id type="github">google/highway</remote-id>
  </upstream>
  <use>
    <flag name="cpu_flags_arm_neon">
      Optimize for ARM NEON
    </flag>
    <flag name="cpu_flags_arm_neon_bf16">
      Optimize for ARM NEON with BF16
    </flag>
    <flag name="cpu_flags_arm_neon_without_aes">
      Optimize for ARM NEON without AES
    </flag>
    <flag name="cpu_flags_arm_sve">
      Optimize for ARM SVE
    </flag>
    <flag name="cpu_flags_arm_sve_256">
      Optimize for ARM SVE 256-bit vectors
    </flag>
    <flag name="cpu_flags_arm_sve2">
      Optimize for ARM SVE2
    </flag>
    <flag name="cpu_flags_arm_sve2_128">
      Optimize for ARM SVE2 128-bit vectors
    </flag>
    <flag name="cpu_flags_ppc_crypto">
      Optimize with cryptographic instructions
    </flag>
    <flag name="cpu_flags_ppc_power8-vector">
      Optimize for POWER8
    </flag>
    <flag name="cpu_flags_ppc_power9-vector">
      Optimize for POWER9
    </flag>
    <flag name="cpu_flags_ppc_power10-vector">
      Optimize for POWER10
    </flag>
    <flag name="cpu_flags_riscv_rvv">
      Optimize with RVV
    </flag>
    <flag name="cpu_flags_s390_z14">
      Optimize for z14
    </flag>
    <flag name="cpu_flags_s390_z15">
      Optimize for z15
    </flag>
    <flag name="cpu_flags_x86_aes">
      Optimize with AES-NI
    </flag>
    <flag name="cpu_flags_x86_avx">
      Optimize with AVX
    </flag>
    <flag name="cpu_flags_x86_avx2">
      Optimize with AVX2
    </flag>
    <flag name="cpu_flags_x86_avx512bf16">
      Optimize with BF16 for Zen 4 or later
    </flag>
    <flag name="cpu_flags_x86_avx512bitalg">
      Optimize with AVX512BITALG
    </flag>
    <flag name="cpu_flags_x86_avx512bw">
      Optimize with AVX512BW
    </flag>
    <flag name="cpu_flags_x86_avx512cd">
      Optimize with AVX512CD
    </flag>
    <flag name="cpu_flags_x86_avx512dq">
      Optimize with AVX512DQ
    </flag>
    <flag name="cpu_flags_x86_avx512f">
      Optimize with AVX512F
    </flag>
    <flag name="cpu_flags_x86_avx512fp16">
      Optimize with BF16/FP16 for Sapphire Rapids or later
    </flag>
    <flag name="cpu_flags_x86_avx512vbmi">
      Optimize with AVX512VBMI
    </flag>
    <flag name="cpu_flags_x86_avx512vbmi2">
      Optimize with AVX512VBMI2
    </flag>
    <flag name="cpu_flags_x86_avx512vl">
      Optimize with AVX512VL
    </flag>
    <flag name="cpu_flags_x86_avx512vnni">
      Optimize with AVX512VNNI
    </flag>
    <flag name="cpu_flags_x86_avx512vpopcntdq">
      Optimize with AVX512VPOPCNTDQ
    </flag>
    <flag name="cpu_flags_x86_bmi">
      Optimize with BMI
    </flag>
    <flag name="cpu_flags_x86_bmi2">
      Optimize with BMI2
    </flag>
    <flag name="cpu_flags_x86_fma">
      Optimize with FMA
    </flag>
    <flag name="cpu_flags_x86_f16c">
      Optimize with F16C
    </flag>
    <flag name="cpu_flags_x86_gfni">
      Optimize with GFNI
    </flag>
    <flag name="cpu_flags_x86_pclmul">
      Optimize with PCLMUL
    </flag>
    <flag name="cpu_flags_x86_sse2">
      Optimize with SSE2
    </flag>
    <flag name="cpu_flags_x86_sse4_2">
      Optimize with SSE4.1, SSE4.2
    </flag>
    <flag name="cpu_flags_x86_ssse3">
      Optimize with SSSE3
    </flag>
    <flag name="cpu_flags_x86_vaes">
      Optimize with VAES
    </flag>
    <flag name="cpu_flags_x86_vpclmulqdq">
      Optimize with VPCLMULQDQ
    </flag>
  </use>
</pkgmetadata>
