<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
  <maintainer type="person">
    <!-- Ebuild fork on the oiledmachine-overlay -->
    <email>orsonteodoro@hotmail.com</email>
    <name>Orson Teodoro</name>
  </maintainer>
  <maintainer type="project">
    <!-- Ebuild originator -->
    <!-- This ebuild-package was obtained from the gentoo-overlay -->
    <email>sci@gentoo.org</email>
    <name>Gentoo Science Project</name>
  </maintainer>
  <longdescription lang="en">
    The oneAPI Threading Building Blocks (oneTBB) is a library that helps you
    leverage multi-core processor performance without having to be a threading
    expert.  It represents a higher-level, task-based parallelism that abstracts
    platform details and threading mechanism for performance and scalability.
  </longdescription>
  <!--  
    oneTBB library can be safely mixed with the TBB but with a oversubscription
    [more threads than cores] penalty.[1]

    The document "TBB Revamp: Background, Changes, and Modernization" describes
    the migration differences between TBB and oneTBB.[2]

    References:

      [1] https://software.intel.com/content/www/us/en/develop/documentation/onetbb-documentation/top/onetbb-developer-guide/migrating-from-threading-building-blocks-tbb/mixing-two-runtimes.html
      [2] https://software.intel.com/content/www/us/en/develop/articles/tbb-revamp.html

    The purpose of this ebuild fork was originally to meet minimum requirements of
    either Blender or its dependencies.
  -->
  <upstream>
    <bugs-to>https://github.com/oneapi-src/oneTBB/issues</bugs-to>
    <remote-id type="cpe">cpe:/a:intel:threading_building_blocks</remote-id>
    <remote-id type="github">oneapi-src/oneTBB</remote-id>
  </upstream>
  <use>
    <flag name="debug">
      Builds with debug symbols.
    </flag>
    <flag name="doc">
      Generates and installs documentation.
    </flag>
    <flag name="examples">
      Builds and installs examples.
    </flag>
    <flag name="numa">
      Builds and installs the NUMA support library (tbbbind).
    </flag>
    <flag name="python">
      Builds Python bindings for efficient composable threading and a
      replacement of Python's ThreadPool.
    </flag>
    <flag name="rml">
      Builds and installs Resource Management Layer (RML).
    </flag>
    <flag name="test">
      Builds and runs test suite.
    </flag>
    <flag name="X">
      Builds examples with X support.  Otherwise, builds them for command line
      console.
    </flag>
  </use>
  <slots>
    <slot name="0">
      <!-- Same as the latest version -->
      oneTBB version.  C++11 mandatory.
    </slot>
    <slot name="2">
      <!-- Same as TBB_COMPATIBLE_INTERFACE_VERSION in include/tbb/tbb_stddef.h -->
      (Legacy) TBB version.  C++03/98 compatible.
    </slot>
    <slot name="12">
      <!-- Same as __TBB_BINARY_VERSION in include/oneapi/tbb/version.h -->
      oneTBB version.  C++11 mandatory.
    </slot>
  </slots>
</pkgmetadata>
