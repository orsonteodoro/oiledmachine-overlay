Subject:  Fix static-libs build failure
Author:   Orson Teodoro <orsonteodoro@hotmail.com>
Date:     Sat Jun 26 06:32:24 PM PDT 2021 (Unix timestamp: 1624757544)

Fixes:

[78/153] : && /usr/lib/ccache/bin/x86_64-pc-linux-gnu-g++ -march=native -O2 -fomit-frame-pointer -frename-registers -pipe -fPIC -Wl,-O1 -Wl,--as-needed   -rdynamic examples/parallel_for/polygon_overlay/CMakeFiles/polygon_overlay.dir/pover_video.cpp.o examples/parallel_for/polygon_overlay/CMakeFiles/polygon_overlay.dir/polymain.cpp.o examples/parallel_for/polygon_overlay/CMakeFiles/polygon_overlay.dir/polyover.cpp.o -o gnu_10.3_cxx11_64_gentoo/polygon_overlay  gnu_10.3_cxx11_64_gentoo/libtbb.a  gnu_10.3_cxx11_64_gentoo/libtbbmalloc.a  gnu_10.3_cxx11_64_gentoo/libUI_LIB_polygon_overlay.a  -pthread  -ldl  -lSM  -lICE  -lX11  -lXext && :
FAILED: gnu_10.3_cxx11_64_gentoo/polygon_overlay 
: && /usr/lib/ccache/bin/x86_64-pc-linux-gnu-g++ -march=native -O2 -fomit-frame-pointer -frename-registers -pipe -fPIC -Wl,-O1 -Wl,--as-needed   -rdynamic examples/parallel_for/polygon_overlay/CMakeFiles/polygon_overlay.dir/pover_video.cpp.o examples/parallel_for/polygon_overlay/CMakeFiles/polygon_overlay.dir/polymain.cpp.o examples/parallel_for/polygon_overlay/CMakeFiles/polygon_overlay.dir/polyover.cpp.o -o gnu_10.3_cxx11_64_gentoo/polygon_overlay  gnu_10.3_cxx11_64_gentoo/libtbb.a  gnu_10.3_cxx11_64_gentoo/libtbbmalloc.a  gnu_10.3_cxx11_64_gentoo/libUI_LIB_polygon_overlay.a  -pthread  -ldl  -lSM  -lICE  -lX11  -lXext && :
/usr/lib/gcc/x86_64-pc-linux-gnu/10.3.0/../../../../x86_64-pc-linux-gnu/bin/ld: error: gnu_10.3_cxx11_64_gentoo/libtbbmalloc.a(tbbmalloc.cpp.o): multiple definition of 'tbb::detail::r1::assertion_failure(char const*, int, char const*, char const*)'
/usr/lib/gcc/x86_64-pc-linux-gnu/10.3.0/../../../../x86_64-pc-linux-gnu/bin/ld: gnu_10.3_cxx11_64_gentoo/libtbb.a(misc.cpp.o): previous definition here
/usr/lib/gcc/x86_64-pc-linux-gnu/10.3.0/../../../../x86_64-pc-linux-gnu/bin/ld: error: gnu_10.3_cxx11_64_gentoo/libtbbmalloc.a(tbbmalloc.cpp.o): multiple definition of 'tbb::detail::r1::runtime_warning(char const*, ...)'
/usr/lib/gcc/x86_64-pc-linux-gnu/10.3.0/../../../../x86_64-pc-linux-gnu/bin/ld: gnu_10.3_cxx11_64_gentoo/libtbb.a(misc.cpp.o): previous definition here
collect2: error: ld returned 1 exit status

Copyright notice for src/tbb/assert_impl.h:

/*
    Copyright (c) 2005-2021 Intel Corporation

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
*/


Copyright notice of src/tbb/CMakeLists.txt:

# Copyright (c) 2020-2021 Intel Corporation
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

diff -urp oneTBB-2021.2.0.orig/src/tbb/CMakeLists.txt oneTBB-2021.2.0/src/tbb/CMakeLists.txt
--- oneTBB-2021.2.0.orig/src/tbb/CMakeLists.txt	2021-01-27 12:03:49.000000000 -0800
+++ oneTBB-2021.2.0/src/tbb/CMakeLists.txt	2021-06-26 18:39:12.952744369 -0700
@@ -12,10 +12,13 @@
 # See the License for the specific language governing permissions and
 # limitations under the License.
 
+# Added assert_impl.cpp line for static-libs build
+
 add_library(tbb 
     allocator.cpp
     arena.cpp
     arena_slot.cpp
+    assert_impl.cpp # oteodoro - added line
     concurrent_bounded_queue.cpp
     dynamic_link.cpp
     exception.cpp
diff -Nurp oneTBB-2021.2.0.orig/src/tbb/assert_impl.cpp oneTBB-2021.2.0/src/tbb/assert_impl.cpp
--- oneTBB-2021.2.0.orig/src/tbb/assert_impl.cpp	1969-12-31 16:00:00.000000000 -0800
+++ oneTBB-2021.2.0/src/tbb/assert_impl.cpp	2021-06-26 18:23:42.824811237 -0700
@@ -0,0 +1,46 @@
+/*
+    Copyright (c) 2005-2021 Intel Corporation
+
+    Licensed under the Apache License, Version 2.0 (the "License");
+    you may not use this file except in compliance with the License.
+    You may obtain a copy of the License at
+
+        http://www.apache.org/licenses/LICENSE-2.0
+
+    Unless required by applicable law or agreed to in writing, software
+    distributed under the License is distributed on an "AS IS" BASIS,
+    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+    See the License for the specific language governing permissions and
+    limitations under the License.
+*/
+
+// oteodoro - moved definition of runtime_warning and assertion_failure from src/tbb/assert_impl.h to this file for static-libs build
+
+#include "oneapi/tbb/detail/_config.h"
+#include "assert_impl.h"
+
+#include <cstdio>
+#include <cstdlib>
+#include <mutex>
+
+namespace tbb {
+namespace detail {
+namespace r1 {
+
+void __TBB_EXPORTED_FUNC assertion_failure(const char* filename, int line, const char* expression, const char* comment) {
+    static std::once_flag flag;
+    std::call_once(flag, [&](){ assertion_failure_impl(filename, line, expression, comment); });
+}
+
+//! Report a runtime warning.
+void runtime_warning( const char* format, ... ) {
+    char str[1024]; std::memset(str, 0, 1024);
+    va_list args; va_start(args, format);
+    vsnprintf( str, 1024-1, format, args);
+    va_end(args);
+    fprintf(stderr, "TBB Warning: %s\n", str);
+}
+
+} // namespace r1
+} // namespace detail
+} // namespace tbb
diff -Nurp oneTBB-2021.2.0.orig/src/tbb/assert_impl.h oneTBB-2021.2.0/src/tbb/assert_impl.h
--- oneTBB-2021.2.0.orig/src/tbb/assert_impl.h	2021-01-27 12:03:49.000000000 -0800
+++ oneTBB-2021.2.0/src/tbb/assert_impl.h	2021-06-26 18:24:13.097989000 -0700
@@ -49,19 +49,10 @@ static void assertion_failure_impl(const
 #endif
 }
 
-void __TBB_EXPORTED_FUNC assertion_failure(const char* filename, int line, const char* expression, const char* comment) {
-    static std::once_flag flag;
-    std::call_once(flag, [&](){ assertion_failure_impl(filename, line, expression, comment); });
-}
+void __TBB_EXPORTED_FUNC assertion_failure(const char* filename, int line, const char* expression, const char* comment); // oteodoro - definition moved to src/tbb/assert_impl.cpp
 
 //! Report a runtime warning.
-void runtime_warning( const char* format, ... ) {
-    char str[1024]; std::memset(str, 0, 1024);
-    va_list args; va_start(args, format);
-    vsnprintf( str, 1024-1, format, args);
-    va_end(args);
-    fprintf(stderr, "TBB Warning: %s\n", str);
-}
+void runtime_warning( const char* format, ... ); // oteodoro - definition moved to src/tbb/assert_impl.cpp
 
 } // namespace r1
 } // namespace detail
diff -Nurp oneTBB-2021.2.0.orig/src/tbb/assert_impl.h.orig oneTBB-2021.2.0/src/tbb/assert_impl.h.orig
--- oneTBB-2021.2.0.orig/src/tbb/assert_impl.h.orig	1969-12-31 16:00:00.000000000 -0800
+++ oneTBB-2021.2.0/src/tbb/assert_impl.h.orig	2021-01-27 12:03:49.000000000 -0800
@@ -0,0 +1,71 @@
+/*
+    Copyright (c) 2005-2021 Intel Corporation
+
+    Licensed under the Apache License, Version 2.0 (the "License");
+    you may not use this file except in compliance with the License.
+    You may obtain a copy of the License at
+
+        http://www.apache.org/licenses/LICENSE-2.0
+
+    Unless required by applicable law or agreed to in writing, software
+    distributed under the License is distributed on an "AS IS" BASIS,
+    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+    See the License for the specific language governing permissions and
+    limitations under the License.
+*/
+
+#ifndef __TBB_assert_impl_H
+#define __TBB_assert_impl_H
+
+#include "oneapi/tbb/detail/_config.h"
+
+#include <cstdio>
+#include <cstdlib>
+#include <cstring>
+#include <cstdarg>
+#if _MSC_VER && _DEBUG
+#include <crtdbg.h>
+#endif
+
+#include <mutex>
+
+namespace tbb {
+namespace detail {
+namespace r1 {
+
+// TODO: consider extension for formatted error description string
+static void assertion_failure_impl(const char* filename, int line, const char* expression, const char* comment) {
+    std::fprintf(stderr, "Assertion %s failed on line %d of file %s\n", expression, line, filename);
+    if (comment) {
+        std::fprintf(stderr, "Detailed description: %s\n", comment);
+    }
+#if _MSC_VER && _DEBUG
+    if (1 == _CrtDbgReport(_CRT_ASSERT, filename, line, "tbb_debug.dll", "%s\r\n%s", expression, comment?comment:"")) {
+        _CrtDbgBreak();
+    }
+#else
+    std::fflush(stderr);
+    std::abort();
+#endif
+}
+
+void __TBB_EXPORTED_FUNC assertion_failure(const char* filename, int line, const char* expression, const char* comment) {
+    static std::once_flag flag;
+    std::call_once(flag, [&](){ assertion_failure_impl(filename, line, expression, comment); });
+}
+
+//! Report a runtime warning.
+void runtime_warning( const char* format, ... ) {
+    char str[1024]; std::memset(str, 0, 1024);
+    va_list args; va_start(args, format);
+    vsnprintf( str, 1024-1, format, args);
+    va_end(args);
+    fprintf(stderr, "TBB Warning: %s\n", str);
+}
+
+} // namespace r1
+} // namespace detail
+} // namespace tbb
+
+#endif // __TBB_assert_impl_H
+
