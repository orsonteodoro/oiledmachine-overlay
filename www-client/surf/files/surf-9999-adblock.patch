diff -urp surf-2.0_p20190208.orig/surf.c surf-2.0_p20190208/surf.c
--- surf-2.0_p20190208.orig/surf.c	2020-02-15 04:40:04.622575866 -0800
+++ surf-2.0_p20190208/surf.c	2020-02-15 11:10:13.598500752 -0800
@@ -35,7 +35,7 @@
 #define LENGTH(x)               (sizeof(x) / sizeof(x[0]))
 #define CLEANMASK(mask)         (mask & (MODKEY|GDK_SHIFT_MASK))
 
-enum { AtomFind, AtomGo, AtomUri, AtomLast };
+enum { AtomFind, AtomGo, AtomUri, AtomScriptFile, AtomLast };
 
 enum {
 	OnDoc   = WEBKIT_HIT_TEST_RESULT_CONTEXT_DOCUMENT,
@@ -166,7 +166,7 @@ static const char *getcert(const char *u
 static void setcert(Client *c, const char *file);
 static const char *getstyle(const char *uri);
 static void setstyle(Client *c, const char *file);
-static void runscript(Client *c);
+static void runscript(Client *c, const char *scriptfile);
 static void evalscript(Client *c, const char *jsstr, ...);
 static void updatewinid(Client *c);
 static void handleplumb(Client *c, const char *uri);
@@ -328,6 +328,7 @@ setup(void)
 	atoms[AtomFind] = XInternAtom(dpy, "_SURF_FIND", False);
 	atoms[AtomGo] = XInternAtom(dpy, "_SURF_GO", False);
 	atoms[AtomUri] = XInternAtom(dpy, "_SURF_URI", False);
+	atoms[AtomScriptFile] = XInternAtom(dpy, "_SURF_SCRIPT", False);
 
 	gtk_init(NULL, NULL);
 
@@ -567,6 +568,7 @@ loaduri(Client *c, const Arg *a)
 
 	setatom(c, AtomUri, url);
 
+	updatewinid(c);
 	if (strcmp(url, geturi(c)) == 0) {
 		reload(c, a);
 	} else {
@@ -940,7 +942,7 @@ setstyle(Client *c, const char *file)
 }
 
 void
-runscript(Client *c)
+runscript(Client *c, const char *scriptfile)
 {
 	gchar *script;
 	gsize l;
@@ -1316,6 +1318,12 @@ processx(GdkXEvent *e, GdkEvent *event,
 				loaduri(c, &a);
 
 				return GDK_FILTER_REMOVE;
+			} else if(ev->atom == atoms[AtomScriptFile]) {
+				gchar *scriptpath;
+				scriptpath = getatom(c, AtomScriptFile);
+				runscript(c, scriptpath);
+				g_unlink(scriptpath);
+				return GDK_FILTER_REMOVE;
 			}
 		}
 	}
@@ -1404,6 +1412,7 @@ showview(WebKitWebView *v, Client *c)
 
 	setatom(c, AtomFind, "");
 	setatom(c, AtomUri, "about:blank");
+	setatom(c, AtomScriptFile, "");
 }
 
 GtkWidget *
@@ -1516,6 +1525,7 @@ loadchanged(WebKitWebView *v, WebKitLoad
 		seturiparameters(c, uri, loadcommitted);
 		c->https = webkit_web_view_get_tls_info(c->view, &c->cert,
 		                                        &c->tlserr);
+		PAGE_LOAD_COMMITTED(c);
 		break;
 	case WEBKIT_LOAD_FINISHED:
 		seturiparameters(c, uri, loadfinished);
@@ -1524,7 +1534,7 @@ loadchanged(WebKitWebView *v, WebKitLoad
 		evalscript(c, "document.documentElement.style.overflow = '%s'",
 		    enablescrollbars ? "auto" : "hidden");
 		*/
-		runscript(c);
+		runscript(c, scriptfile);
 		break;
 	}
 	updatetitle(c);
