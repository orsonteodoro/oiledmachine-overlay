Keeping these ebuild requires takes a lot of time.  The vanilla ebuilds used are
the same as the gentoo overlay which get modified with multilib changes.  We
use the vanilla ebuilds because the (R)DEPENDs are updated by them and cut
down the maintenance cost a bit.

Due to time to compile and time it takes to migrate changes, there may be large
lag time between Gentoo's release and the one found on oiledmachine-overlay.


Time Investment Estimation:

Estimated ebuild update time (best case): 30 minutes
Estimated ebuild update time (worst case) with additonal patches for building
  and patching and finding a solution: 3 days to a week.
Estimated build time to build 2 ABIs: ~11 hours to 1 days

The raw numbers for 2 ABI (from doing `time emerge firefox`) are:

real	661m8.513s  <- The wall time because doing time sleep 2 demonstrates this number.
user	937m36.251s
sys	56m48.536s

*These numbers may limited by MAKEOPTS=-j2

Update checklist fork:

Make sure you are using ccache first and it works.  This will
cut down on rebuild times from several days to a few minutes.

Make sure that you copy the files folder but also copy the custom patches
you added.

Make sure that (R)DEPENDs have MULTILIB_USEDEP for all libraries and programs
that have it.

Make sure that the versions of the dependencies are the same.  It is easier
to just copy the ebuild and apply changes.  Some dependencies must be
changed especially the virtuals which must be changed to be multilib aware.

Make sure that the inherit adds multilib-minimal.

Make sure that the functions call the src_ and pkg_ functions get
prefixed with multilib_.

If a new library (in categories *-libs) is used without supporting multilib,
the ebuild it needs to be forked to make it multilib ready.

Make sure that the binary is properly built with the right multilib
toolchain and libraries and the CHOST for the ABI is used.

Make sure all wrappers use the respected multilib versions.

Make sure that _fix_paths gets copied and called so that the VARIABLES and
toolchain get built with the proper values and programs.

Make sure that the eclasses are in kept in sync with gentoo overlay and
have multilib changes.

Important:  Due to the large codebase and internal libraries, the ebuild
needs to be updated every critical vulnerability and that ebuild and earlier
be removed.  The recurrance interval is about a month between criticals
and high.  Currently it is +85 days from May 26, 2020.

For the list of CVE's see:
https://nvd.nist.gov/vuln/search/results?query=firefox&results_type=overview&form_type=Basic&search_type=all&startIndex=0

Also check GLSA ( https://security.gentoo.org/glsa ) and
MFSA ( https://www.mozilla.org/en-US/security/advisories/ ).  They're numerous
occassions where they are reported or visible first on MFSA than in the
NVD CVE database.

Verify in the About > Help that you are using the 32-bit version or non-native
ABI version.

x in beginning of line means scratch and (ignore)
x Make sure that all cargo parts get built for the respective target ABI.
x Do:
x `grep -F -r -e "TARGET = Some(\"x86_64-unknown-linux-g" /var/tmp/portage/www-client/firefox-79.0-r3/temp/build.log`,
x replacing x86_64 with the one returned by get `$(get_abi_CHOST ${ABI} | cut -f 1 -d "-")`,
x and to see if it is in compile phase of x86.  If it is, the cross compiling is broken.

x Make sure no other -m64 gets mixed with -m32 (should be the same ABI) in the
x compiling phase.  It must be the same ABI throughout the phase.  See build.log
x for details.

x Make sure that no /lib64/ gets mixed in the multilib_src_configure if
x using -m32.  See build.log for details.

We do not use full cross compile, but but the browser still works.  WebRender
tested ok on 32-bit.  Some parts are native ABI for the bindings generator
toolchain which get used by python with native ABI.  No multilib python exists
in gentoo overlay.  The code generated may likley be the cross compiled one.

Check that the libX matches the corresponding ABI for correctness.  All
libraries and executibles are the same ABI.  Code to check:
for f in $(find /usr/lib64/firefox) ; do readelf -h "${f}" ; done # Class should say ELF64
for f in $(find /usr/lib32/firefox) ; do readelf -h "${f}" ; done # Class should say ELF32

Check if the .desktop files have distinguishable from 32-bit or 64-bit with
labels and links to ABI.  Make sure the wrappers produced in the install
section of the ebuild indicate the ABI.

Test microphone support on sound recording website or "search by sound" website.


Additional notes:

It helps if you diff it with the same ebuild point release to see which parts
of the ebuild/package got added or changed.  See the _maintainer_notes
folder for details.

It helps to do a side-by-side comparison between the forked and the same
point release to see what changes to migrate.
