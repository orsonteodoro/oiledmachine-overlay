--- firefox-97.0.ebuild.orig	2022-02-11 20:42:58.000000000 -0800
+++ firefox-97.0.ebuild	2022-02-12 00:58:16.836287463 -0800
@@ -1,6 +1,12 @@
 # Copyright 1999-2022 Gentoo Authors
 # Distributed under the terms of the GNU General Public License v2
 
+# Originally based on the firefox-89.0.ebuild from the gentoo-overlay,
+# with update sync updated with 96.0.2 ebuild.
+# Revisions may change in the oiledmachine-overlay.
+
+# Track http://ftp.mozilla.org/pub/firefox/releases/ for version updates.
+
 EAPI="7"
 
 FIREFOX_PATCHSET="firefox-97-patches-02j.tar.xz"
@@ -40,6 +46,7 @@ MOZ_P_DISTFILES="${MOZ_PN}-${MOZ_PV_DIST
 inherit autotools check-reqs desktop flag-o-matic gnome2-utils linux-info \
 	llvm multiprocessing pax-utils python-any-r1 toolchain-funcs \
 	virtualx xdg
+inherit multilib-minimal rust-toolchain
 
 MOZ_SRC_BASE_URI="https://archive.mozilla.org/pub/${MOZ_PN}/releases/${MOZ_PV}"
 
@@ -61,11 +68,153 @@ KEYWORDS="~amd64 ~arm64 ~ppc64 ~x86"
 
 SLOT="rapid"
 LICENSE="MPL-2.0 GPL-2 LGPL-2.1"
-
-IUSE="+clang cpu_flags_arm_neon dbus debug eme-free hardened hwaccel"
-IUSE+=" jack libproxy lto +openh264 pgo pulseaudio sndio selinux"
-IUSE+=" +system-av1 +system-harfbuzz +system-icu +system-jpeg +system-libevent +system-libvpx system-png +system-webp"
-IUSE+=" wayland wifi"
+# MPL-2.0 is the mostly used and default
+#1234567890123456789012345678901234567890123456789012345678901234567890123456789
+LICENSE_FINGERPRINT="\
+0297907923dc62a2c9ebd3e5b0572e053dd11673af9af7606b0368a2cc9ac4c6\
+cb397048079dda1254f41a71170e0014d7edd29ac3b0952b6b2a77a54946e45a" # SHA512
+# FF-96.0-THIRD-PARTY-LICENSES should be updated per new feature or if the fingerprint changes.
+# Update the license version also.
+LICENSE+=" FF-97.0-THIRD-PARTY-LICENSES"
+LICENSE+="
+	( BSD-2
+		BSD
+		LGPL-2.1
+		( all-rights-reserved || ( MPL-1.1 GPL-2+ LGPL-2.1+ ) )
+		( all-rights-reserved || ( MIT AFL-2.1 ) )
+		( MIT GPL-2 )
+		( all-rights-reserved || ( AFL-2.1 BSD ) ) )
+	( all-rights-reserved || ( MPL-1.1 GPL-2+ LGPL-2.1+ ) )
+	Apache-2.0
+	Apache-2.0-with-LLVM-exceptions
+	all-rights-reserved
+	Boost-1.0
+	BSD
+	BSD-2
+	CC0-1.0
+	CC-BY-4.0
+	curl
+	GPL-2+
+	GPL-3+
+	icu
+	ISC
+	Ispell
+	libpng
+	MIT
+	NAIST-IPADIC
+	OFL-1.1
+	Old-MIT
+	OPENLDAP
+	PSF-2
+	PSF-2.4
+	SunPro
+	UoI-NCSA
+	unicode
+	W3C-document
+	ZLIB
+	pgo? ( ( BSD-2
+		  ( all-rights-reserved || ( MIT AFL-2.1 ) )
+		  ( MIT GPL-2 )
+		  BSD
+		  MIT )
+		BSD
+		BSD-2
+		LGPL-2.1
+		LGPL-2.1+
+		MPL-2.0	)" # \
+# emerge does not recognize ^^ for the LICENSE variable.  You must choose
+# at most one for some packages when || is present.
+
+# Third party licenses:
+#
+# build/pgo/** folder:
+#   ( BSD-2
+#     ( all-rights-reserved || ( MIT AFL-2.1 ) )
+#     ( MIT GPL-2 )
+#     BSD
+#     MIT ) \
+#     build/pgo/js-input/sunspider/string-unpack-code.html
+#   || ( MIT GPL-2 ) build/pgo/blueprint/LICENSE
+#   BSD
+#   BSD-2
+#   LGPL-2.1
+#   LGPL-2.1+
+#   MPL-2.0
+#
+# ( BSD-2 BSD LGPL-2.1
+#   ( all-rights-reserved ^^ ( MPL-1.1 GPL-2+ LGPL-2.1+ ) )
+#   ( all-rights-reserved || ( MIT AFL-2.1 ) )
+#   ( MIT GPL-2 )
+#   ( all-rights-reserved || ( AFL-2.1 BSD) ) ) \
+#     third_party/webkit/PerformanceTests/SunSpider/sunspider-1.0.1/sunspider-1.0.1/sunspider-test-contents.js
+# ( all-rights-reserved || ( MPL-1.1 GPL-2+ LGPL-2.1+ ) ) \
+#   testing/talos/talos/pageloader/chrome/pageloader.xhtml
+# ^^ ( GPL-3? ( FTL ) GPL-2 ) modules/freetype2/LICENSE.TXT - GPL-2 assumed # \
+#   since original ebuild cites it
+# all-rights-reserved MIT mfbt/Span.h \
+#   The standard MIT license template does not contain all rights reserved.
+# all-rights-reserved MIT devtools/client/shared/widgets/CubicBezierWidget.js \
+#   The standard MIT license template does not contain all rights reserved.
+# Apache-2.0 for files listed in dom/encoding/test/stringencoding-license.txt
+# Apache-2.0-with-LLVM-exceptions tools/fuzzing/libfuzzer/FuzzerUtilLinux.cpp
+# Boost-1.0 - third_party/msgpack/include/msgpack/predef/compiler/ibm.h
+# BSD media/kiss_fft/_kiss_fft_guts.h
+# BSD dom/media/webrtc/transport/third_party/nrappkit/src/util/util.c
+# BSD-2 ISC third_party/dav1d/tools/compat/getopt.c
+# BSD, MIT, ISC nsprpub/pr/src/misc/praton.c
+# CC-BY-4.0 browser/fonts/TwemojiMozilla.ttf \
+#   (See https://github.com/mozilla/twemoji-colr/blob/master/LICENSE.md)
+# curl - toolkit/crashreporter/google-breakpad/src/third_party/curl/COPYING
+# custom testing/web-platform/tests/css/tools/w3ctestlib/catalog/xhtml11.dtd *
+# custom testing/web-platform/tests/css/CSS2/LICENSE-W3CTS *
+# custom js/src/tests/test262/built-ins/RegExp/S15.10.2_A1_T1.js *
+# FTL modules/freetype2/builds/windows/w32-icc.mk
+# GlyphWiki - layout/reftests/fonts/glyphwiki-license.txt *
+# GPL-2+ testing/talos/talos/tests/v8_7/deltablue.js
+# GPL-3+ js/src/devtools/rootAnalysis/run_complete
+# ISC ipc/chromium/src/third_party/libevent/arc4random.c
+# libpng media/libpng/pngconf.h
+# OFL-1.1 layout/reftests/fonts/Chunkfive-license.txt
+# OPENLDAP third_party/rust/lmdb-rkv-sys/lmdb/libraries/liblmdb/mdb.c
+# Old-MIT gfx/harfbuzz/
+# PSF-2.4 (is a variation of) third_party/python/virtualenv/__virtualenv__/typing-3.7.4.3-py2-none-any/typing-3.7.4.3.dist-info/LICENSE
+# PSF-2 third_party/python/virtualenv/__virtualenv__/contextlib2-0.6.0.post1-py2.py3-none-any/contextlib2-0.6.0.post1.dist-info/LICENSE.txt
+# M+ FONTS LICENSE_E - layout/reftests/fonts/mplus/mplus-license.txt *
+# MIT CC0-1.0 devtools/client/shared/vendor/lodash.js (more details can be \
+#   found at https://github.com/lodash/lodash/blob/master/LICENSE)
+# MIT UoI-NCSA js/src/jit/arm/llvm-compiler-rt/assembly.h
+# UoI-NCSA tools/fuzzing/libfuzzer/LICENSE.TXT
+# unicode BSD NAIST-IPADIC intl/icu/source/data/brkitr/dictionaries/cjdict.txt
+# unicode icu security/sandbox/chromium/base/third_party/icu/LICENSE
+# unicode intl/icu/source/data/unidata/ucdterms.txt
+# unicode rust/regex-syntax/src/unicode_tables/LICENSE-UNICODE
+# Spencer-94 js/src/editline/README *
+# SunPro modules/fdlibm/src/math_private.h
+# W3C-document testing/web-platform/tests/css/CSS2/LICENSE-W3CD
+# ZLIB gfx/sfntly/cpp/src/test/tinyxml/tinyxml.cpp
+# ZLIB media/ffvpx/libavutil/adler32.c
+# ZLIB third_party/rust/libz-sys/src/zlib/zlib.h
+# ZLIB MIT devtools/client/shared/vendor/jszip.js
+# ZLIB all-rights-reserved media/libjpeg/simd/powerpc/jdsample-altivec.c -- \#
+#   the vanilla ZLIB lib license doesn't contain all rights reserved
+
+IUSE="+clang cpu_flags_arm_neon dbus debug eme-free hardened hwaccel
+	jack libproxy lto +openh264 pgo pulseaudio sndio selinux
+	+system-av1 +system-harfbuzz +system-icu +system-jpeg +system-libevent
+	+system-libvpx system-png +system-webp
+	wayland wifi"
+_ABIS="abi_x86_32
+	abi_x86_64
+	abi_x86_x32
+	abi_mips_n32
+	abi_mips_n64
+	abi_mips_o32
+	abi_ppc_32
+	abi_ppc_64
+	abi_s390_32
+	abi_s390_64"
+IUSE+=" ${_ABIS}"
+IUSE+=" -jemalloc"
 
 # Firefox-only IUSE
 IUSE+=" geckodriver"
@@ -80,128 +229,127 @@ REQUIRED_USE="debug? ( !system-av1 )
 # Firefox-only REQUIRED_USE flags
 REQUIRED_USE+=" screencast? ( wayland )"
 
-BDEPEND="${PYTHON_DEPS}
-	app-arch/unzip
-	app-arch/zip
-	>=dev-util/cbindgen-0.19.0
-	>=net-libs/nodejs-10.23.1
-	virtual/pkgconfig
-	>=virtual/rust-1.57.0
-	|| (
-		(
-			sys-devel/clang:13
-			sys-devel/llvm:13
-			clang? (
-				=sys-devel/lld-13*
-				pgo? ( =sys-libs/compiler-rt-sanitizers-13*[profile] )
-			)
-		)
-		(
-			sys-devel/clang:12
-			sys-devel/llvm:12
-			clang? (
-				=sys-devel/lld-12*
-				pgo? ( =sys-libs/compiler-rt-sanitizers-12*[profile] )
-			)
-		)
+LLVM_SLOTS=(13 12 11 10)
+
+gen_llvm_bdepends() {
+	local o=""
+	for s in ${LLVM_SLOTS[@]} ; do
+		o+="
 		(
-			sys-devel/clang:11
-			sys-devel/llvm:11
+			sys-devel/clang:${s}[${MULTILIB_USEDEP}]
+			sys-devel/llvm:${s}[${MULTILIB_USEDEP}]
 			clang? (
-				=sys-devel/lld-11*
-				pgo? ( =sys-libs/compiler-rt-sanitizers-11*[profile] )
+				>=sys-devel/lld-${s}
+				pgo? ( =sys-libs/compiler-rt-sanitizers-${s}*[profile] )
 			)
 		)
-	)
+		"
+	done
+	echo -e "${o}"
+}
+
+BDEPEND+=" || ( $(gen_llvm_bdepends) )"
+BDEPEND+=" ${PYTHON_DEPS}
+	app-arch/unzip
+	app-arch/zip
+	>=dev-util/cbindgen-0.19.0
+	>=net-libs/nodejs-10.23.1
+	>=dev-util/pkgconf-1.3.7[${MULTILIB_USEDEP},pkg-config(+)]
+	>=virtual/rust-1.57.0[${MULTILIB_USEDEP}]
 	amd64? ( >=dev-lang/nasm-2.14 )
 	x86? ( >=dev-lang/nasm-2.14 )"
 
-COMMON_DEPEND="
-	>=dev-libs/nss-3.74
-	>=dev-libs/nspr-4.32
-	dev-libs/atk
-	dev-libs/expat
-	>=x11-libs/cairo-1.10[X]
-	>=x11-libs/gtk+-3.4.0:3[X]
-	x11-libs/gdk-pixbuf
-	>=x11-libs/pango-1.22.0
-	>=media-libs/mesa-10.2:*
-	media-libs/fontconfig
-	>=media-libs/freetype-2.9
-	kernel_linux? ( !pulseaudio? ( media-libs/alsa-lib ) )
+CDEPEND="
+	>=dev-libs/nss-3.74[${MULTILIB_USEDEP}]
+	>=dev-libs/nspr-4.32[${MULTILIB_USEDEP}]
+	dev-libs/atk[${MULTILIB_USEDEP}]
+	dev-libs/expat[${MULTILIB_USEDEP}]
+	>=x11-libs/cairo-1.10[X,${MULTILIB_USEDEP}]
+	>=x11-libs/gtk+-3.4.0:3[X,${MULTILIB_USEDEP}]
+	x11-libs/gdk-pixbuf[${MULTILIB_USEDEP}]
+	>=x11-libs/pango-1.22.0[${MULTILIB_USEDEP}]
+	>=media-libs/mesa-10.2:*[${MULTILIB_USEDEP}]
+	media-libs/fontconfig[${MULTILIB_USEDEP}]
+	>=media-libs/freetype-2.9[${MULTILIB_USEDEP}]
+	kernel_linux? ( !pulseaudio? ( media-libs/alsa-lib[${MULTILIB_USEDEP}] ) )
 	virtual/freedesktop-icon-theme
-	>=x11-libs/pixman-0.19.2
-	>=dev-libs/glib-2.42:2
-	>=sys-libs/zlib-1.2.3
-	>=dev-libs/libffi-3.0.10:=
-	media-video/ffmpeg
-	x11-libs/libX11
-	x11-libs/libXcomposite
-	x11-libs/libXdamage
-	x11-libs/libXext
-	x11-libs/libXfixes
-	x11-libs/libXrandr
-	x11-libs/libXrender
-	x11-libs/libXtst
-	x11-libs/libxcb
+	>=x11-libs/pixman-0.19.2[${MULTILIB_USEDEP}]
+	>=dev-libs/glib-2.42:2[${MULTILIB_USEDEP}]
+	>=sys-libs/zlib-1.2.3[${MULTILIB_USEDEP}]
+	>=dev-libs/libffi-3.0.10:=[${MULTILIB_USEDEP}]
+	media-video/ffmpeg[${MULTILIB_USEDEP}]
+	x11-libs/libX11[${MULTILIB_USEDEP}]
+	x11-libs/libXcomposite[${MULTILIB_USEDEP}]
+	x11-libs/libXdamage[${MULTILIB_USEDEP}]
+	x11-libs/libXext[${MULTILIB_USEDEP}]
+	x11-libs/libXfixes[${MULTILIB_USEDEP}]
+	x11-libs/libXrandr[${MULTILIB_USEDEP}]
+	x11-libs/libXrender[${MULTILIB_USEDEP}]
+	x11-libs/libXtst[${MULTILIB_USEDEP}]
+	x11-libs/libxcb[${MULTILIB_USEDEP}]
 	dbus? (
-		sys-apps/dbus
-		dev-libs/dbus-glib
+		sys-apps/dbus[${MULTILIB_USEDEP}]
+		dev-libs/dbus-glib[${MULTILIB_USEDEP}]
 	)
-	libproxy? ( net-libs/libproxy )
-	screencast? ( media-video/pipewire:= )
+	libproxy? ( net-libs/libproxy[${MULTILIB_USEDEP}] )
+	screencast? ( media-video/pipewire:0/0.3[${MULTILIB_USEDEP}] )
 	system-av1? (
-		>=media-libs/dav1d-0.9.3:=
-		>=media-libs/libaom-1.0.0:=
+		>=media-libs/dav1d-0.9.3:=[${MULTILIB_USEDEP}]
+		>=media-libs/libaom-1.0.0:=[${MULTILIB_USEDEP}]
 	)
 	system-harfbuzz? (
-		>=media-libs/harfbuzz-2.8.1:0=
-		>=media-gfx/graphite2-1.3.13
+		>=media-libs/harfbuzz-2.8.1:0=[${MULTILIB_USEDEP}]
+		>=media-gfx/graphite2-1.3.13[${MULTILIB_USEDEP}]
 	)
-	system-icu? ( >=dev-libs/icu-70.1:= )
-	system-jpeg? ( >=media-libs/libjpeg-turbo-1.2.1 )
-	system-libevent? ( >=dev-libs/libevent-2.0:0=[threads] )
-	system-libvpx? ( >=media-libs/libvpx-1.8.2:0=[postproc] )
-	system-png? ( >=media-libs/libpng-1.6.35:0=[apng] )
-	system-webp? ( >=media-libs/libwebp-1.1.0:0= )
+	system-icu? ( >=dev-libs/icu-70.1:=[${MULTILIB_USEDEP}] )
+	system-jpeg? ( >=media-libs/libjpeg-turbo-1.2.1[${MULTILIB_USEDEP}] )
+	system-libevent? ( >=dev-libs/libevent-2.0:0=[threads,${MULTILIB_USEDEP}] )
+	system-libvpx? ( >=media-libs/libvpx-1.8.2:0=[postproc,${MULTILIB_USEDEP}] )
+	system-png? ( >=media-libs/libpng-1.6.35:0=[apng,${MULTILIB_USEDEP}] )
+	system-webp? ( >=media-libs/libwebp-1.1.0:0=[${MULTILIB_USEDEP}] )
 	wifi? (
 		kernel_linux? (
-			sys-apps/dbus
-			dev-libs/dbus-glib
-			net-misc/networkmanager
+			sys-apps/dbus[${MULTILIB_USEDEP}]
+			dev-libs/dbus-glib[${MULTILIB_USEDEP}]
+			net-misc/networkmanager[${MULTILIB_USEDEP}]
 		)
 	)
-	jack? ( virtual/jack )
+	jack? ( virtual/jack[${MULTILIB_USEDEP}] )
 	selinux? ( sec-policy/selinux-mozilla )
-	sndio? ( media-sound/sndio )"
+	sndio? ( media-sound/sndio[${MULTILIB_USEDEP}] )"
 
-RDEPEND="${COMMON_DEPEND}
+RDEPEND="${CDEPEND}
 	!www-client/firefox:0
 	!www-client/firefox:esr
-	jack? ( virtual/jack )
-	openh264? ( media-libs/openh264:*[plugin] )
+	jack? ( virtual/jack[${MULTILIB_USEDEP}] )
+	openh264? ( media-libs/openh264:*[plugin,${MULTILIB_USEDEP}] )
 	pulseaudio? (
 		|| (
-			media-sound/pulseaudio
-			>=media-sound/apulse-0.1.12-r4
+			media-sound/pulseaudio[${MULTILIB_USEDEP}]
+			>=media-sound/apulse-0.1.12-r4[${MULTILIB_USEDEP}]
 		)
 	)
 	selinux? ( sec-policy/selinux-mozilla )"
 
-DEPEND="${COMMON_DEPEND}
-	x11-libs/libICE
-	x11-libs/libSM
+DEPEND="${CDEPEND}
+	x11-libs/libICE[${MULTILIB_USEDEP}]
+	x11-libs/libSM[${MULTILIB_USEDEP}]
 	pulseaudio? (
 		|| (
-			media-sound/pulseaudio
-			>=media-sound/apulse-0.1.12-r4[sdk]
+			media-sound/pulseaudio[${MULTILIB_USEDEP}]
+			>=media-sound/apulse-0.1.12-r4[sdk,${MULTILIB_USEDEP}]
 		)
 	)
-	wayland? ( >=x11-libs/gtk+-3.11:3[wayland] )
-	amd64? ( virtual/opengl )
-	x86? ( virtual/opengl )"
+	wayland? ( >=x11-libs/gtk+-3.11:3[wayland,${MULTILIB_USEDEP}] )
+	amd64? ( virtual/opengl[${MULTILIB_USEDEP}] )
+	x86? ( virtual/opengl[${MULTILIB_USEDEP}] )"
+RESTRICT="mirror"
 
 S="${WORKDIR}/${PN}-${PV%_*}"
+S_BAK="${WORKDIR}/${PN}-${PV%_*}"
+
+MOZILLA_FIVE_HOME=""
+BUILD_OBJ_DIR=""
 
 # Allow MOZ_GMP_PLUGIN_LIST to be set in an eclass or
 # overridden in the enviromnent (advanced hackers only)
@@ -216,8 +364,8 @@ llvm_check_deps() {
 	fi
 
 	if use clang ; then
-		if ! has_version -b "=sys-devel/lld-${LLVM_SLOT}*" ; then
-			einfo "=sys-devel/lld-${LLVM_SLOT}* is missing! Cannot use LLVM slot ${LLVM_SLOT} ..." >&2
+		if ! has_version -b ">=sys-devel/lld-${LLVM_SLOT}" ; then
+			einfo ">=sys-devel/lld-${LLVM_SLOT} is missing! Cannot use LLVM slot ${LLVM_SLOT} ..." >&2
 			return 1
 		fi
 
@@ -429,7 +577,9 @@ pkg_pretend() {
 	fi
 }
 
+NABIS=0
 pkg_setup() {
+	ewarn "This ebuild is a Work In Progress (WIP) / Testing.  It may freeze or lock up for both 32 and 64-bit builds."
 	if [[ ${MERGE_TYPE} != binary ]] ; then
 		if use pgo ; then
 			if ! has userpriv ${FEATURES} ; then
@@ -467,7 +617,7 @@ pkg_setup() {
 				[[ -z ${version_llvm_rust} ]] && die "Failed to read used LLVM version from rustc!"
 			fi
 
-			if ver_test "${version_lld}" -ne "${version_llvm_rust}" ; then
+			if ver_test "${version_lld}" -lt "${version_llvm_rust}" ; then
 				eerror "Rust is using LLVM version ${version_llvm_rust} but ld.lld version belongs to LLVM version ${version_lld}."
 				eerror "You will be unable to link ${CATEGORY}/${PN}. To proceed you have the following options:"
 				eerror "  - Manually switch rust version using 'eselect rust' to match used LLVM version"
@@ -559,6 +709,40 @@ pkg_setup() {
 	CONFIG_CHECK="~SECCOMP"
 	WARNING_SECCOMP="CONFIG_SECCOMP not set! This system will be unable to play DRM-protected content."
 	linux-info_pkg_setup
+
+einfo
+einfo "To set up cross-compile for other ABIs see \`epkginfo -d firefox\` or"
+einfo "the metadata.xml"
+einfo
+
+	local jobs=$(echo "${MAKEOPTS}" | grep -P -o -e "(-j|--jobs=)\s*[0-9]+" \
+			| sed -r -e "s#(-j|--jobs=)\s*##g")
+	local cores=$(nproc)
+	if (( ${jobs} > $((${cores}/2)) )) ; then
+ewarn
+ewarn "Firefox may lock up or freeze the computer if the N value in"
+ewarn "MAKEOPTS=\"-jN\" is greater than \$(nproc)/2"
+ewarn
+	fi
+
+	if ! use pulseaudio ; then
+		ewarn "Microphone support may be disabled when pulseaudio is disabled."
+	fi
+
+	if [[ -n "${FF_EBUILD_MAINTAINER}" ]] ; then
+		if [[ -z "${MY_OVERLAY_DIR}" ]] ; then
+eerror
+eerror "You need to set MY_OVERLAY_DIR as a per-package envvar to the base path"
+eerror "of your overlay or local repo.  The base path should contain all the"
+eerror "overlay's categories."
+eerror
+			die
+		fi
+	fi
+
+	for a in $(multilib_get_enabled_abis) ; do
+		NABIS=$((${NABIS} + 1))
+	done
 }
 
 src_unpack() {
@@ -573,15 +757,58 @@ src_unpack() {
 		if [[ ${_src_file} == *.xpi ]]; then
 			cp "${DISTDIR}/${_src_file}" "${_lp_dir}" || die "Failed to copy '${_src_file}' to '${_lp_dir}'!"
 		else
+			# TODO:  Add files with all-rights-reserved or crazy
+			# licensing to the exclusion list if possible to
+			# simpify LICENSE variable.
 			unpack ${_src_file}
 		fi
 	done
 }
 
+verify_license_fingerprint() {
+einfo "Verifying about:license fingerprint"
+	x_license_fingerprint=$(sha512sum "${S}/toolkit/content/license.html" \
+		| cut -f 1 -d " ")
+	# Check even between patched versions and/or new features.
+	if [[ -n "${FF_EBUILD_MAINTAINER}" ]] ; then
+		local license_file_name="FF-$(ver_cut 1-2)-THIRD-PARTY-LICENSES"
+		if [[ ! ( "${LICENSE}" =~ "${license_file_name}" ) \
+			|| ! -f "${MY_OVERLAY_DIR}/licenses/${license_file_name}" \
+			|| "${x_license_fingerprint}" != "${LICENSE_FINGERPRINT}" \
+		]] ; then
+eerror
+eerror "A change in the license was detected.  Please change"
+eerror "LICENSE_FINGERPRINT=${x_license_fingerprint} and do a"
+eerror
+eerror "  \`cp -a ${S}/toolkit/content/license.html \
+${MY_OVERLAY_DIR}/licenses/${license_file_name}\`"
+eerror
+eerror "and update the license variable with the correct version."
+eerror
+			die
+		fi
+	else
+		if [[ "${x_license_fingerprint}" != "${LICENSE_FINGERPRINT}" ]] ; then
+eerror
+eerror "A change in the license was detected.  Please notify the ebuild"
+eerror "maintainer."
+eerror
+			die
+		fi
+	fi
+}
+
 src_prepare() {
 	use lto && rm -v "${WORKDIR}"/firefox-patches/*-LTO-Only-enable-LTO-*.patch
+
 	eapply "${WORKDIR}/firefox-patches"
 
+	# Only partial patching was done because Gentoo doesn't support multilib
+	# Python.  Only native ABI is supported.  This means cbindgen cannot
+	# load the 32-bit clang.  It will build the cargo parts.  When it links
+	# it, it fails because of cbindings is 64-bit and the dependencies use
+	# the build information for 64-bit linking, which should be 32-bit.
+
 	# Allow user to apply any additional patches without modifing ebuild
 	eapply_user
 
@@ -600,11 +827,11 @@ src_prepare() {
 		"${S}"/intl/icu_sources_data.py \
 		|| die "sed failed to set num_cores"
 
-	# sed-in toolchain prefix
-	sed -i \
-		-e "s/objdump/${CHOST}-objdump/" \
-		"${S}"/python/mozbuild/mozbuild/configure/check_debug_ranges.py \
-		|| die "sed failed to set toolchain prefix"
+	# sed-in toolchain prefix patch section was moved to the bottom of this function
+	#
+	# Moved down
+	#
+	#
 
 	sed -i \
 		-e 's/ccache_stats = None/return None/' \
@@ -617,9 +844,9 @@ src_prepare() {
 	# Clearing checksums where we have applied patches
 	moz_clear_vendor_checksums target-lexicon-0.9.0
 
-	# Create build dir
-	BUILD_DIR="${WORKDIR}/${PN}_build"
-	mkdir -p "${BUILD_DIR}" || die
+	# Removed creation of a single build dir
+	#
+	#
 
 	# Write API keys to disk
 	echo -n "${MOZ_API_KEY_GOOGLE//gGaPi/}" > "${S}"/api-google.key || die
@@ -627,9 +854,71 @@ src_prepare() {
 	echo -n "${MOZ_API_KEY_MOZILLA//m0ap1/}" > "${S}"/api-mozilla.key || die
 
 	xdg_src_prepare
+
+	if [[ "${CFLAGS}" =~ "fast-math" || "${CXXFLAGS}" =~ "fast-math" ]] ; then
+		pushd "${S}" || die
+		eapply "${FILESDIR}/multiabi/firefox-78.0.2-opus-fast-math.patch"
+		popd || die
+	fi
+
+	verify_license_fingerprint
+
+	(( ${NABIS} > 1 )) && multilib_copy_sources
+
+	_src_prepare() {
+		if (( ${NABIS} == 1 )) ; then
+			export BUILD_DIR="${S}"
+		fi
+
+		cd "${BUILD_DIR}" || die
+		local cbuild=$(get_abi_CHOST ${DEFAULT_ABI})	# builder machine
+		local chost=$(get_abi_CHOST ${ABI})		# target machine
+		if ( tc-is-cross-compiler && test -f "${ESYSROOT}/usr/bin/${chost}-objdump" ) \
+			|| ( ! tc-is-cross-compiler && test -f "/usr/bin/${chost}-objdump" ) ; then
+			# sed-in toolchain prefix
+			sed -i \
+				-e "s/objdump/${chost}-objdump/" \
+				"${BUILD_DIR}"/python/mozbuild/mozbuild/configure/check_debug_ranges.py \
+				|| die "sed failed to set toolchain prefix"
+			einfo "Using ${chost}-objdump for chost"
+		else
+			ewarn "Using objdump from cbuild"
+		fi
+	}
+
+	multilib_foreach_abi _src_prepare
+}
+
+# corrections based on the ABI being compiled
+_fix_paths() {
+	# For proper rust cargo cross-compile for libloading and glslopt
+	export PKG_CONFIG=${chost}-pkg-config
+	export CARGO_CFG_TARGET_ARCH=$(echo ${chost} | cut -f 1 -d "-")
+	export MOZILLA_FIVE_HOME="/usr/$(get_libdir)/${PN}"
+	export BUILD_OBJ_DIR="${BUILD_DIR}/ff"
+
+	# Set MOZCONFIG
+	export MOZCONFIG="${BUILD_DIR}/.mozconfig"
+
+	# for rust crates libloading and glslopt
+	if use clang && ! tc-is-clang ; then
+		CC=${chost}-clang
+		CXX=${chost}-clang++
+	elif ! use clang && ! tc-is-gcc ; then
+		CC=${chost}-gcc
+		CXX=${chost}-g++
+	fi
+	tc-export CC CXX
 }
 
-src_configure() {
+multilib_src_configure() {
+	if (( ${NABIS} == 1 )) ; then
+		export BUILD_DIR="${S}"
+		cd "${BUILD_DIR}" || die
+	fi
+
+	local cbuild=$(get_abi_CHOST ${DEFAULT_ABI})
+	local chost=$(get_abi_CHOST ${ABI})
 	# Show flags set at the beginning
 	einfo "Current BINDGEN_CFLAGS:\t${BINDGEN_CFLAGS:-no value set}"
 	einfo "Current CFLAGS:\t\t${CFLAGS:-no value set}"
@@ -637,14 +926,15 @@ src_configure() {
 	einfo "Current LDFLAGS:\t\t${LDFLAGS:-no value set}"
 	einfo "Current RUSTFLAGS:\t\t${RUSTFLAGS:-no value set}"
 
+	einfo "Cross-compile: chost=${chost}"
 	local have_switched_compiler=
 	if use clang && ! tc-is-clang ; then
 		# Force clang
 		einfo "Enforcing the use of clang due to USE=clang ..."
 		have_switched_compiler=yes
 		AR=llvm-ar
-		CC=${CHOST}-clang
-		CXX=${CHOST}-clang++
+		CC=${chost}-clang
+		CXX=${chost}-clang++
 		NM=llvm-nm
 		RANLIB=llvm-ranlib
 	elif ! use clang && ! tc-is-gcc ; then
@@ -652,8 +942,8 @@ src_configure() {
 		have_switched_compiler=yes
 		einfo "Enforcing the use of gcc due to USE=-clang ..."
 		AR=gcc-ar
-		CC=${CHOST}-gcc
-		CXX=${CHOST}-g++
+		CC=${chost}-gcc
+		CXX=${chost}-g++
 		NM=gcc-nm
 		RANLIB=gcc-ranlib
 	fi
@@ -668,14 +958,14 @@ src_configure() {
 	export HOST_CC="$(tc-getBUILD_CC)"
 	export HOST_CXX="$(tc-getBUILD_CXX)"
 	tc-export CC CXX LD AR NM OBJDUMP RANLIB PKG_CONFIG
-
+	_fix_paths
 	# Pass the correct toolchain paths through cbindgen
 	if tc-is-cross-compiler ; then
-		export BINDGEN_CFLAGS="${SYSROOT:+--sysroot=${ESYSROOT}} --target=${CHOST} ${BINDGEN_CFLAGS-}"
+		export BINDGEN_CFLAGS="${SYSROOT:+--sysroot=${ESYSROOT}} --host=${cbuild} --target=${chost} ${BINDGEN_CFLAGS-}"
 	fi
 
-	# Set MOZILLA_FIVE_HOME
-	export MOZILLA_FIVE_HOME="/usr/$(get_libdir)/${PN}"
+	# MOZILLA_FIVE_HOME is dynamically generated per ABI in _fix_paths().
+	#
 
 	# python/mach/mach/mixin/process.py fails to detect SHELL
 	export SHELL="${EPREFIX}/bin/bash"
@@ -683,8 +973,8 @@ src_configure() {
 	# Set state path
 	export MOZBUILD_STATE_PATH="${BUILD_DIR}"
 
-	# Set MOZCONFIG
-	export MOZCONFIG="${S}/.mozconfig"
+	# MOZCONFIG is dynamically generated per ABI in _fix_paths().
+	#
 
 	# Initialize MOZCONFIG
 	mozconfig_add_options_ac '' --enable-application=browser
@@ -706,28 +996,34 @@ src_configure() {
 		--enable-release \
 		--enable-system-ffi \
 		--enable-system-pixman \
-		--host="${CBUILD:-${CHOST}}" \
+		--host="${cbuild}" \
 		--libdir="${EPREFIX}/usr/$(get_libdir)" \
 		--prefix="${EPREFIX}/usr" \
-		--target="${CHOST}" \
+		--target="${chost}" \
 		--without-ccache \
 		--without-wasm-sandboxed-libraries \
 		--with-intl-api \
-		--with-libclang-path="$(llvm-config --libdir)" \
+		\
 		--with-system-nspr \
 		--with-system-nss \
 		--with-system-zlib \
-		--with-toolchain-prefix="${CHOST}-" \
+		--with-toolchain-prefix="${chost}-" \
 		--with-unsigned-addon-scopes=app,system \
 		--x-includes="${SYSROOT}${EPREFIX}/usr/include" \
 		--x-libraries="${SYSROOT}${EPREFIX}/usr/$(get_libdir)"
 
+	# mozconfig_add_options_ac '' --with-libclang-path="$(${chost}-llvm-config --libdir)"
+	#   disabled because Gentoo doesn't support multilib python, so full cross-compile is not supported.
+
+	#   the commented above is mutually exclusive with this line below.
+	mozconfig_add_options_ac '' --with-libclang-path="$(llvm-config --libdir)"
+
 	# Set update channel
 	local update_channel=release
 	[[ -n ${MOZ_ESR} ]] && update_channel=esr
 	mozconfig_add_options_ac '' --update-channel=${update_channel}
 
-	if ! use x86 && [[ ${CHOST} != armv*h* ]] ; then
+	if ! use x86 && [[ ${cbuild} != armv*h* ]] ; then
 		mozconfig_add_options_ac '' --enable-rust-simd
 	fi
 
@@ -740,38 +1036,38 @@ src_configure() {
 		mozconfig_add_options_ac '' --enable-sandbox
 	fi
 
-	if [[ -s "${S}/api-google.key" ]] ; then
+	if [[ -s "${BUILD_DIR}/api-google.key" ]] ; then
 		local key_origin="Gentoo default"
-		if [[ $(cat "${S}/api-google.key" | md5sum | awk '{ print $1 }') != 709560c02f94b41f9ad2c49207be6c54 ]] ; then
+		if [[ $(cat "${BUILD_DIR}/api-google.key" | md5sum | awk '{ print $1 }') != 709560c02f94b41f9ad2c49207be6c54 ]] ; then
 			key_origin="User value"
 		fi
 
 		mozconfig_add_options_ac "${key_origin}" \
-			--with-google-safebrowsing-api-keyfile="${S}/api-google.key"
+			--with-google-safebrowsing-api-keyfile="${BUILD_DIR}/api-google.key"
 	else
 		einfo "Building without Google API key ..."
 	fi
 
-	if [[ -s "${S}/api-location.key" ]] ; then
+	if [[ -s "${BUILD_DIR}/api-location.key" ]] ; then
 		local key_origin="Gentoo default"
-		if [[ $(cat "${S}/api-location.key" | md5sum | awk '{ print $1 }') != ffb7895e35dedf832eb1c5d420ac7420 ]] ; then
+		if [[ $(cat "${BUILD_DIR}/api-location.key" | md5sum | awk '{ print $1 }') != ffb7895e35dedf832eb1c5d420ac7420 ]] ; then
 			key_origin="User value"
 		fi
 
 		mozconfig_add_options_ac "${key_origin}" \
-			--with-google-location-service-api-keyfile="${S}/api-location.key"
+			--with-google-location-service-api-keyfile="${BUILD_DIR}/api-location.key"
 	else
 		einfo "Building without Location API key ..."
 	fi
 
-	if [[ -s "${S}/api-mozilla.key" ]] ; then
+	if [[ -s "${BUILD_DIR}/api-mozilla.key" ]] ; then
 		local key_origin="Gentoo default"
-		if [[ $(cat "${S}/api-mozilla.key" | md5sum | awk '{ print $1 }') != 3927726e9442a8e8fa0e46ccc39caa27 ]] ; then
+		if [[ $(cat "${BUILD_DIR}/api-mozilla.key" | md5sum | awk '{ print $1 }') != 3927726e9442a8e8fa0e46ccc39caa27 ]] ; then
 			key_origin="User value"
 		fi
 
 		mozconfig_add_options_ac "${key_origin}" \
-			--with-mozilla-api-keyfile="${S}/api-mozilla.key"
+			--with-mozilla-api-keyfile="${BUILD_DIR}/api-mozilla.key"
 	else
 		einfo "Building without Mozilla API key ..."
 	fi
@@ -907,13 +1203,13 @@ src_configure() {
 		fi
 	fi
 
-	if [[ ${CHOST} == armv*h* ]] ; then
+	if [[ ${cbuild} == armv*h* ]] ; then
 		mozconfig_add_options_ac 'CHOST=armv*h*' --with-float-abi=hard
 
 		if ! use system-libvpx ; then
 			sed -i \
 				-e "s|softfp|hard|" \
-				"${S}"/media/libvpx/moz.build \
+				"${BUILD_DIR}"/media/libvpx/moz.build \
 				|| die
 		fi
 	fi
@@ -984,7 +1280,18 @@ src_configure() {
 	mozconfig_add_options_ac 'Gentoo default' "XARGS=${EPREFIX}/usr/bin/xargs"
 
 	# Set build dir
-	mozconfig_add_options_mk 'Gentoo default' "MOZ_OBJDIR=${BUILD_DIR}"
+	mozconfig_add_options_mk 'Gentoo default' "MOZ_OBJDIR=${BUILD_OBJ_DIR}"
+
+	if ! use jemalloc ; then
+		mozconfig_add_options_ac '-jemalloc' --disable-jemalloc
+	else
+		mozconfig_add_options_ac '+jemalloc' --enable-jemalloc
+	fi
+
+	einfo "Cross-compile: ${ABI} CFLAGS=${CFLAGS}"
+	einfo "Cross-compile: CC=${CC} CXX=${CXX}"
+	echo "export PKG_CONFIG=${chost}-pkg-config" >>${MOZCONFIG}
+	echo "export PKG_CONFIG_PATH=/usr/$(get_libdir)/pkgconfig:/usr/share/pkgconfig" >>${MOZCONFIG}
 
 	# Show flags we will use
 	einfo "Build BINDGEN_CFLAGS:\t${BINDGEN_CFLAGS:-no value set}"
@@ -1018,7 +1325,16 @@ src_configure() {
 	./mach configure || die
 }
 
-src_compile() {
+multilib_src_compile() {
+	if (( ${NABIS} == 1 )) ; then
+		export BUILD_DIR="${S}"
+		cd "${BUILD_DIR}" || die
+	fi
+
+	local cbuild=$(get_abi_CHOST ${DEFAULT_ABI})
+	local chost=$(get_abi_CHOST ${ABI})
+	_fix_paths
+	cd "${BUILD_DIR}" || die
 	local virtx_cmd=
 
 	if use pgo ; then
@@ -1036,12 +1352,179 @@ src_compile() {
 		|| die
 }
 
-src_install() {
+_install_header_license() {
+	local dir_path=$(dirname "${1}")
+	local file_name=$(basename "${1}")
+	local license_name="${2}"
+	local length="${3}"
+	d="${dir_path}"
+	dl="licenses/${d}"
+	docinto "${dl}"
+	mkdir -p "${T}/${dl}" || die
+	head -n ${length} "${S}/${d}/${file_name}" > \
+		"${T}/${dl}/${license_name}" || die
+	dodoc "${T}/${dl}/${license_name}"
+}
+
+_install_header_license_mid() {
+	local dir_path=$(dirname "${1}")
+	local file_name=$(basename "${1}")
+	local license_name="${2}"
+	local start="${3}"
+	local length="${4}"
+	d="${dir_path}"
+	dl="licenses/${d}"
+	docinto "${dl}"
+	mkdir -p "${T}/${dl}" || die
+	tail -n +${start} "${S}/${d}/${file_name}" \
+		| head -n ${length} > \
+		"${T}/${dl}/${license_name}" || die
+	dodoc "${T}/${dl}/${license_name}"
+}
+
+# @FUNCTION: _install_licenses
+# @DESCRIPTION:
+# Installs licenses and copyright notices from third party rust cargo
+# packages and other internal packages.
+_install_licenses() {
+	[[ -f "${T}/.copied_licenses" ]] && return
+
+	einfo "Copying third party licenses and copyright notices"
+	export IFS=$'\n'
+	for f in $(find "${S}" \
+	  -iname "*licens*" -type f \
+	  -o -iname "*licenc*" \
+	  -o -iname "*copyright*" \
+	  -o -iname "*copying*" \
+	  -o -iname "*patent*" \
+	  -o -iname "ofl.txt" \
+	  -o -iname "*notice*" \
+	  -o -iname "*author*" \
+	  -o -iname "*CONTRIBUTORS*" \
+	  ) $(grep -i -G -l \
+		-e "copyright" \
+		-e "licens" \
+		-e "licenc" \
+		-e "warrant" \
+		$(find "${S}" -iname "*readme*")) ; \
+	do
+		if [[ -f "${f}" ]] ; then
+			d=$(dirname "${f}" | sed -e "s|^${S}||")
+		else
+			d=$(echo "${f}" | sed -e "s|^${S}||")
+		fi
+		docinto "licenses/${d}"
+		dodoc -r "${f}"
+	done
+	export IFS=$' \t\n'
+
+	_install_header_license \
+		"modules/fdlibm/src/math_private.h" \
+		"SunPro.LICENSE" \
+		10
+	_install_header_license \
+		"js/src/tests/test262/built-ins/RegExp/S15.10.2_A1_T1.js" \
+		"S15.10.2_A1_T1.js.LICENSE" \
+		17
+	_install_header_license \
+		"testing/web-platform/tests/css/tools/w3ctestlib/catalog/xhtml11.dtd" \
+		"xhtml11.dtd.LICENSE" \
+		27
+
+	# Duped because of must not alter clause
+	_install_header_license \
+		"gfx/sfntly/cpp/src/test/tinyxml/tinyxml.cpp" \
+		"tinyxml.LICENSE1" \
+		23
+	_install_header_license \
+		"gfx/sfntly/cpp/src/test/tinyxml/tinyxmlerror.cpp" \
+		"tinyxml.LICENSE2" \
+		23
+	_install_header_license \
+		"gfx/sfntly/cpp/src/test/tinyxml/tinyxml.h" \
+		"tinyxml.LICENSE3" \
+		23
+	_install_header_license \
+		"gfx/sfntly/cpp/src/test/tinyxml/tinystr.cpp" \
+		"tinyxml.LICENSE4" \
+		22
+
+	_install_header_license \
+		"third_party/msgpack/include/msgpack/predef/compiler/ibm.h" \
+		"ibm.h.copyright_notice" \
+		6
+
+	_install_header_license \
+		"media/ffvpx/libavutil/adler32.c" \
+		"adler32.c.LICENSE" \
+		22
+
+	_install_header_license \
+		"js/src/octane/box2d.js" \
+		"box2d.LICENSE" \
+		19
+
+	_install_header_license \
+		"devtools/client/shared/vendor/jszip.js" \
+		"jszip.js.LICENSE1" \
+		11
+	_install_header_license_mid \
+		"devtools/client/shared/vendor/jszip.js" \
+		"jszip.js.LICENSE2" \
+		5689 \
+		18
+
+	# Duped because of must not alter clause
+	for f in $(grep -r -l -F -e "origin of this software" \
+		media/libjpeg) ; do
+		_install_header_license \
+			$(echo "${f}" | sed -e "s|^./||g") \
+			$(basename "${f}")".LICENSE" \
+			32
+	done
+
+	_install_header_license \
+		"mfbt/Span.h" \
+		"Span.h.LICENSE" \
+		15
+
+	_install_header_license \
+		"media/openmax_dl/dl/api/omxtypes.h" \
+		"omxtypes.h.LICENSE" \
+		31
+
+	_install_header_license \
+		"devtools/client/shared/widgets/CubicBezierWidget.js" \
+		"CubicBezierWidget.js.LICENSE" \
+		21
+
+	_install_header_license \
+		"netwerk/dns/nsIDNKitInterface.h" \
+		"nsIDNKitInterface.h.LICENSE" \
+		41
+
+	_install_header_license \
+		"gfx/qcms/qcms.h" \
+		"qcms.h.LICENSE" \
+		41
+
+	touch "${T}/.copied_licenses"
+}
+
+multilib_src_install() {
+	if (( ${NABIS} == 1 )) ; then
+		export BUILD_DIR="${S}"
+	fi
+
+	local cbuild=$(get_abi_CHOST ${DEFAULT_ABI})
+	local chost=$(get_abi_CHOST ${ABI})
+	_fix_paths
+	cd "${BUILD_DIR}" || die
 	# xpcshell is getting called during install
 	pax-mark m \
-		"${BUILD_DIR}"/dist/bin/xpcshell \
-		"${BUILD_DIR}"/dist/bin/${PN} \
-		"${BUILD_DIR}"/dist/bin/plugin-container
+		"${BUILD_OBJ_DIR}"/dist/bin/xpcshell \
+		"${BUILD_OBJ_DIR}"/dist/bin/${PN} \
+		"${BUILD_OBJ_DIR}"/dist/bin/plugin-container
 
 	DESTDIR="${D}" ./mach install || die
 
@@ -1104,15 +1587,15 @@ src_install() {
 	# Install geckodriver
 	if use geckodriver ; then
 		einfo "Installing geckodriver into ${ED}${MOZILLA_FIVE_HOME} ..."
-		pax-mark m "${BUILD_DIR}"/dist/bin/geckodriver
+		pax-mark m "${BUILD_OBJ_DIR}"/dist/bin/geckodriver
 		exeinto "${MOZILLA_FIVE_HOME}"
-		doexe "${BUILD_DIR}"/dist/bin/geckodriver
+		doexe "${BUILD_OBJ_DIR}"/dist/bin/geckodriver
 
 		dosym ${MOZILLA_FIVE_HOME}/geckodriver /usr/bin/geckodriver
 	fi
 
 	# Install icons
-	local icon_srcdir="${S}/browser/branding/official"
+	local icon_srcdir="${BUILD_DIR}/browser/branding/official"
 	local icon_symbolic_file="${FILESDIR}/icon/firefox-symbolic.svg"
 
 	insinto /usr/share/icons/hicolor/symbolic/apps
@@ -1131,10 +1614,10 @@ src_install() {
 	done
 
 	# Install menu
-	local app_name="Mozilla ${MOZ_PN^}"
+	local app_name="Mozilla ${MOZ_PN^} (${ABI})"
 	local desktop_file="${FILESDIR}/icon/${PN}-r3.desktop"
-	local desktop_filename="${PN}.desktop"
-	local exec_command="${PN}"
+	local desktop_filename="${PN}-${ABI}.desktop"
+	local exec_command="${PN}-${ABI}"
 	local icon="${PN}"
 	local use_wayland="false"
 
@@ -1157,16 +1640,19 @@ src_install() {
 
 	# Install wrapper script
 	[[ -f "${ED}/usr/bin/${PN}" ]] && rm "${ED}/usr/bin/${PN}"
-	newbin "${FILESDIR}/${PN}-r1.sh" ${PN}
+	newbin "${FILESDIR}/multiabi/${PN}-r1.sh" ${PN}-${ABI}
+	dosym /usr/bin/${PN}-${ABI} /usr/bin/${PN}
 
 	# Update wrapper
 	sed -i \
 		-e "s:@PREFIX@:${EPREFIX}/usr:" \
+		-e "s:@LIBDIR@:$(get_libdir):" \
 		-e "s:@MOZ_FIVE_HOME@:${MOZILLA_FIVE_HOME}:" \
 		-e "s:@APULSELIB_DIR@:${apulselib}:" \
 		-e "s:@DEFAULT_WAYLAND@:${use_wayland}:" \
-		"${ED}/usr/bin/${PN}" \
+		"${ED}/usr/bin/${PN}-${ABI}" \
 		|| die
+	_install_licenses
 }
 
 pkg_preinst() {
@@ -1264,4 +1750,19 @@ pkg_postinst() {
 		elog "If you still want to be able to select between running Mozilla ${PN^}"
 		elog "on X11 or Wayland, you have to re-create these shortcuts on your own."
 	fi
+
+einfo
+einfo "By default, the /usr/bin/firefox symlink is set to the last ABI"
+einfo "installed.  You must change it manually if you want to run on a"
+einfo "different default ABI."
+einfo
+einfo "Examples"
+einfo "ln -sf /usr/lib64/${PN} /usr/bin/firefox"
+einfo "ln -sf /usr/lib/${PN} /usr/bin/firefox"
+einfo "ln -sf /usr/lib32/${PN} /usr/bin/firefox"
+einfo
+# Reported in bugid 1010527, 1646007, 1449901
+einfo "WebGL performance is suboptimal and runs at ~40 FPS.  There is currently"
+einfo "no fix for this."
+einfo
 }
