--- firefox-80.0.1-r1.ebuild.orig	2020-10-23 05:13:14.000000000 -0700
+++ firefox-80.0.1-r1.ebuild	2020-10-23 11:11:37.846606320 -0700
@@ -1,6 +1,8 @@
 # Copyright 1999-2020 Gentoo Authors
 # Distributed under the terms of the GNU General Public License v2
 
+# Based on the firefox-80.0.1-r1.ebuild from the gentoo-overlay
+
 EAPI="6"
 VIRTUALX_REQUIRED="pgo"
 WANT_AUTOCONF="2.1"
@@ -44,6 +46,7 @@ LLVM_MAX_SLOT=10
 inherit check-reqs eapi7-ver flag-o-matic toolchain-funcs eutils \
 		gnome2-utils llvm mozcoreconf-v6 pax-utils xdg-utils \
 		autotools mozlinguas-v2 multiprocessing virtualx
+inherit multilib-minimal rust-toolchain
 
 DESCRIPTION="Firefox Web Browser"
 HOMEPAGE="https://www.mozilla.com/firefox"
@@ -57,6 +60,9 @@ IUSE="bindist clang cpu_flags_x86_avx2 d
 	+openh264 pgo pulseaudio screencast +screenshot selinux +system-av1
 	+system-harfbuzz +system-icu +system-jpeg +system-libevent
 	+system-libvpx +system-webp test wayland wifi"
+_ABIS="abi_x86_32 abi_x86_64 abi_x86_x32 abi_mips_n32 abi_mips_n64 abi_mips_o32 abi_ppc_32 abi_ppc_64 abi_s390_32 abi_s390_64"
+IUSE+=" ${_ABIS}"
+IUSE+=" -jemalloc"
 
 REQUIRED_USE="pgo? ( lto )
 	screencast? ( wayland )"
@@ -70,68 +76,68 @@ SRC_URI="${SRC_URI}
 	${PATCH_URIS[@]}"
 
 CDEPEND="
-	>=dev-libs/nss-3.55
-	>=dev-libs/nspr-4.26
-	dev-libs/atk
-	dev-libs/expat
-	>=x11-libs/cairo-1.10[X]
-	>=x11-libs/gtk+-2.18:2
-	>=x11-libs/gtk+-3.4.0:3[X]
-	x11-libs/gdk-pixbuf
-	>=x11-libs/pango-1.22.0
-	>=media-libs/libpng-1.6.35:0=[apng]
-	>=media-libs/mesa-10.2:*
-	media-libs/fontconfig
-	>=media-libs/freetype-2.4.10
-	kernel_linux? ( !pulseaudio? ( media-libs/alsa-lib ) )
+	>=dev-libs/nss-3.55[${MULTILIB_USEDEP}]
+	>=dev-libs/nspr-4.26[${MULTILIB_USEDEP}]
+	dev-libs/atk[${MULTILIB_USEDEP}]
+	dev-libs/expat[${MULTILIB_USEDEP}]
+	>=x11-libs/cairo-1.10[X,${MULTILIB_USEDEP}]
+	>=x11-libs/gtk+-2.18:2[${MULTILIB_USEDEP}]
+	>=x11-libs/gtk+-3.4.0:3[X,${MULTILIB_USEDEP}]
+	x11-libs/gdk-pixbuf[${MULTILIB_USEDEP}]
+	>=x11-libs/pango-1.22.0[${MULTILIB_USEDEP}]
+	>=media-libs/libpng-1.6.35:0=[apng,${MULTILIB_USEDEP}]
+	>=media-libs/mesa-10.2:*[${MULTILIB_USEDEP}]
+	media-libs/fontconfig[${MULTILIB_USEDEP}]
+	>=media-libs/freetype-2.4.10[${MULTILIB_USEDEP}]
+	kernel_linux? ( !pulseaudio? ( media-libs/alsa-lib[${MULTILIB_USEDEP}] ) )
 	virtual/freedesktop-icon-theme
-	>=x11-libs/pixman-0.19.2
-	>=dev-libs/glib-2.26:2
-	>=sys-libs/zlib-1.2.3
-	>=dev-libs/libffi-3.0.10:=
-	media-video/ffmpeg
-	x11-libs/libX11
-	x11-libs/libXcomposite
-	x11-libs/libXdamage
-	x11-libs/libXext
-	x11-libs/libXfixes
-	x11-libs/libXrender
-	x11-libs/libXt
+	>=x11-libs/pixman-0.19.2[${MULTILIB_USEDEP}]
+	>=dev-libs/glib-2.26:2[${MULTILIB_USEDEP}]
+	>=sys-libs/zlib-1.2.3[${MULTILIB_USEDEP}]
+	>=dev-libs/libffi-3.0.10:=[${MULTILIB_USEDEP}]
+	media-video/ffmpeg[${MULTILIB_USEDEP}]
+	x11-libs/libX11[${MULTILIB_USEDEP}]
+	x11-libs/libXcomposite[${MULTILIB_USEDEP}]
+	x11-libs/libXdamage[${MULTILIB_USEDEP}]
+	x11-libs/libXext[${MULTILIB_USEDEP}]
+	x11-libs/libXfixes[${MULTILIB_USEDEP}]
+	x11-libs/libXrender[${MULTILIB_USEDEP}]
+	x11-libs/libXt[${MULTILIB_USEDEP}]
 	dbus? (
-		sys-apps/dbus
-		dev-libs/dbus-glib
+		sys-apps/dbus[${MULTILIB_USEDEP}]
+		dev-libs/dbus-glib[${MULTILIB_USEDEP}]
 	)
 	screencast? ( media-video/pipewire:0/0.3 )
 	system-av1? (
-		>=media-libs/dav1d-0.3.0:=
-		>=media-libs/libaom-1.0.0:=
+		>=media-libs/dav1d-0.3.0:=[${MULTILIB_USEDEP}]
+		>=media-libs/libaom-1.0.0:=[${MULTILIB_USEDEP}]
 	)
 	system-harfbuzz? (
-		>=media-libs/harfbuzz-2.6.8:0=
-		>=media-gfx/graphite2-1.3.13
+		>=media-libs/harfbuzz-2.6.8:0=[${MULTILIB_USEDEP}]
+		>=media-gfx/graphite2-1.3.13[${MULTILIB_USEDEP}]
 	)
-	system-icu? ( >=dev-libs/icu-67.1:= )
-	system-jpeg? ( >=media-libs/libjpeg-turbo-1.2.1 )
-	system-libevent? ( >=dev-libs/libevent-2.0:0=[threads] )
-	system-libvpx? ( >=media-libs/libvpx-1.8.2:0=[postproc] )
-	system-webp? ( >=media-libs/libwebp-1.1.0:0= )
+	system-icu? ( >=dev-libs/icu-67.1:=[${MULTILIB_USEDEP}] )
+	system-jpeg? ( >=media-libs/libjpeg-turbo-1.2.1[${MULTILIB_USEDEP}] )
+	system-libevent? ( >=dev-libs/libevent-2.0:0=[threads,${MULTILIB_USEDEP}] )
+	system-libvpx? ( >=media-libs/libvpx-1.8.2:0=[postproc,${MULTILIB_USEDEP}] )
+	system-webp? ( >=media-libs/libwebp-1.1.0:0=[${MULTILIB_USEDEP}] )
 	wifi? (
 		kernel_linux? (
-			sys-apps/dbus
-			dev-libs/dbus-glib
-			net-misc/networkmanager
+			sys-apps/dbus[${MULTILIB_USEDEP}]
+			dev-libs/dbus-glib[${MULTILIB_USEDEP}]
+			net-misc/networkmanager[${MULTILIB_USEDEP}]
 		)
 	)
-	jack? ( virtual/jack )
+	jack? ( virtual/jack[${MULTILIB_USEDEP}] )
 	selinux? ( sec-policy/selinux-mozilla )"
 
 RDEPEND="${CDEPEND}
-	jack? ( virtual/jack )
-	openh264? ( media-libs/openh264:*[plugin] )
+	jack? ( virtual/jack[${MULTILIB_USEDEP}] )
+	openh264? ( media-libs/openh264:*[plugin,${MULTILIB_USEDEP}] )
 	pulseaudio? (
 		|| (
-			media-sound/pulseaudio
-			>=media-sound/apulse-0.1.12-r4
+			media-sound/pulseaudio[${MULTILIB_USEDEP}]
+			>=media-sound/apulse-0.1.12-r4[${MULTILIB_USEDEP}]
 		)
 	)
 	selinux? ( sec-policy/selinux-mozilla )"
@@ -143,63 +149,70 @@ DEPEND="${CDEPEND}
 	>=net-libs/nodejs-10.19.0
 	>=sys-devel/binutils-2.30
 	sys-apps/findutils
-	virtual/pkgconfig
-	>=virtual/rust-1.43.0
+	virtual/pkgconfig[${MULTILIB_USEDEP}]
+	>=dev-lang/rust-1.43.0[${MULTILIB_USEDEP}]
+	!dev-lang/rust-bin
 	|| (
 		(
-			sys-devel/clang:10
-			!clang? ( sys-devel/llvm:10 )
+			sys-devel/clang:10[${MULTILIB_USEDEP}]
+			!clang? ( sys-devel/llvm:10[${MULTILIB_USEDEP}] )
 			clang? (
 				=sys-devel/lld-10*
-				sys-devel/llvm:10[gold]
+				sys-devel/llvm:10[gold,${MULTILIB_USEDEP}]
 				pgo? ( =sys-libs/compiler-rt-sanitizers-10*[profile] )
 			)
 		)
 		(
-			sys-devel/clang:9
-			!clang? ( sys-devel/llvm:9 )
+			sys-devel/clang:9[${MULTILIB_USEDEP}]
+			!clang? ( sys-devel/llvm:9[${MULTILIB_USEDEP}] )
 			clang? (
 				=sys-devel/lld-9*
-				sys-devel/llvm:9[gold]
+				sys-devel/llvm:9[gold,${MULTILIB_USEDEP}]
 				pgo? ( =sys-libs/compiler-rt-sanitizers-9*[profile] )
 			)
 		)
 		(
-			sys-devel/clang:8
-			!clang? ( sys-devel/llvm:8 )
+			sys-devel/clang:8[${MULTILIB_USEDEP}]
+			!clang? ( sys-devel/llvm:8[${MULTILIB_USEDEP}] )
 			clang? (
 				=sys-devel/lld-8*
-				sys-devel/llvm:8[gold]
+				sys-devel/llvm:8[gold,${MULTILIB_USEDEP}]
 				pgo? ( =sys-libs/compiler-rt-sanitizers-8*[profile] )
 			)
 		)
 		(
-			sys-devel/clang:7
-			!clang? ( sys-devel/llvm:7 )
+			sys-devel/clang:7[${MULTILIB_USEDEP}]
+			!clang? ( sys-devel/llvm:7[${MULTILIB_USEDEP}] )
 			clang? (
 				=sys-devel/lld-7*
-				sys-devel/llvm:7[gold]
+				sys-devel/llvm:7[gold,${MULTILIB_USEDEP}]
 				pgo? ( =sys-libs/compiler-rt-sanitizers-7*[profile] )
 			)
 		)
 	)
 	pulseaudio? (
 		|| (
-			media-sound/pulseaudio
-			>=media-sound/apulse-0.1.12-r4[sdk]
+			media-sound/pulseaudio[${MULTILIB_USEDEP}]
+			>=media-sound/apulse-0.1.12-r4[sdk,${MULTILIB_USEDEP}]
 		)
 	)
-	wayland? ( >=x11-libs/gtk+-3.11:3[wayland] )
-	amd64? ( >=dev-lang/yasm-1.1 virtual/opengl )
-	x86? ( >=dev-lang/yasm-1.1 virtual/opengl )
+	wayland? ( >=x11-libs/gtk+-3.11:3[wayland,${MULTILIB_USEDEP}] )
+	abi_x86_64? ( >=dev-lang/yasm-1.1 virtual/opengl[${MULTILIB_USEDEP}] )
+	abi_x86_32? ( >=dev-lang/yasm-1.1 virtual/opengl[${MULTILIB_USEDEP}] )
+	abi_x86_x32? ( >=dev-lang/yasm-1.1 virtual/opengl[${MULTILIB_USEDEP}] )
 	!system-av1? (
-		amd64? ( >=dev-lang/nasm-2.13 )
-		x86? ( >=dev-lang/nasm-2.13 )
+		abi_x86_64? ( >=dev-lang/nasm-2.13 )
+		abi_x86_32? ( >=dev-lang/nasm-2.13 )
+		abi_x86_x32? ( >=dev-lang/nasm-2.13 )
 	)"
+# Gentoo's rust-bin package doesn't install the i686 libs.  Use only the
+# compiled version.
 
 S="${WORKDIR}/firefox-${PV%_*}"
+S_BAK="${WORKDIR}/firefox-${PV%_*}"
 
-BUILD_OBJ_DIR="${S}/ff"
+MOZILLA_FIVE_HOME=""
+BUILD_OBJ_DIR=""
 
 # allow GMP_PLUGIN_LIST to be set in an eclass or
 # overridden in the enviromnent (advanced hackers only)
@@ -284,6 +297,22 @@ pkg_setup() {
 		elog "a legal problem with Mozilla Foundation."
 		elog "You can disable it by emerging ${PN} _with_ the bindist USE-flag."
 	fi
+
+	einfo
+	einfo "To set up cross-compile for other ABIs see \`epkginfo -d firefox\`"
+
+	local jobs=$(echo "${MAKEOPTS}" | grep -P -o -e "(-j|--jobs=)\s*[0-9]+" \
+			| sed -r -e "s#(-j|--jobs=)\s*##g")
+	local cores=$(nproc)
+	if (( ${jobs} > $((${cores}/2)) )) ; then
+		ewarn \
+"Firefox may lock up or freeze the computer if the N value in MAKEOPTS=\"-jN\" \
+is greater than \$(nproc)/2"
+	fi
+
+	if ! use pulseaudio ; then
+		ewarn "Microphone support may be disabled when pulseaudio is disabled."
+	fi
 }
 
 src_unpack() {
@@ -296,6 +325,19 @@ src_unpack() {
 src_prepare() {
 	use pgo && rm "${WORKDIR}"/firefox/0032-LTO-Only-enable-LTO-for-Rust-when-complete-build-use.patch
 	eapply "${WORKDIR}/firefox"
+	eapply "${FILESDIR}/multiabi/${PN}-68.4.2-dont-check-rustc-host.patch"
+	eapply "${FILESDIR}/multiabi/${PN}-68.4.2-force-cross-compile.patch"
+	eapply "${FILESDIR}/multiabi/${PN}-79.0-elfhack-makefile-no-prefix-for-readelf.patch"
+	eapply "${FILESDIR}/multiabi/${PN}-79.0-check_binary-no-prefix-for-readelf.patch"
+	eapply "${FILESDIR}/multiabi/${PN}-79.0-dependentlibs_py-no-toolchain-prefix-for-readelf.patch"
+
+	# Disabled because they don't support multilib Python.  Only native ABI supported.
+	# This means cbindgen cannot load the 32 bit clang.  It will build the cargo
+	# parts.  When it links it, it fails because of cbindings is 64-bit and the
+	# dependencies use the build information for 64-bit linking.
+	#
+	# eapply "${FILESDIR}/multiabi/${PN}-79.0-compile-cargo-packages-same-abi-1.patch"
+	# eapply "${FILESDIR}/multiabi/${PN}-79.0-compile-cargo-packages-same-abi-2.patch"
 
 	# Make LTO respect MAKEOPTS
 	sed -i \
@@ -309,11 +351,7 @@ src_prepare() {
 		"${S}"/intl/icu_sources_data.py \
 		|| die "sed failed to set num_cores"
 
-	# sed-in toolchain prefix
-	sed -i \
-		-e "s/objdump/${CHOST}-objdump/" \
-		"${S}"/python/mozbuild/mozbuild/configure/check_debug_ranges.py \
-		|| die "sed failed to set toolchain prefix"
+	# sed-in toolchain prefix patch section was moved to the bottom of this function
 
 	# Allow user to apply any additional patches without modifing ebuild
 	eapply_user
@@ -372,9 +410,48 @@ src_prepare() {
 
 	# Clear checksums that present a problem
 	sed -i 's/\("files":{\)[^}]*/\1/' "${S}"/third_party/rust/target-lexicon-0.9.0/.cargo-checksum.json || die
+
+	if [[ "${CFLAGS}" =~ "fast-math" || "${CXXFLAGS}" =~ "fast-math" ]] ; then
+		pushd "${S}" || die
+		eapply "${FILESDIR}/multiabi/firefox-78.0.2-opus-fast-math.patch"
+		popd || die
+	fi
+
+	multilib_copy_sources
+
+	_src_prepare() {
+		local chost=$(get_abi_CHOST ${ABI})
+		# sed-in toolchain prefix
+		sed -i \
+			-e "s/objdump/${chost}-objdump/" \
+			"${S}"/python/mozbuild/mozbuild/configure/check_debug_ranges.py \
+			|| die "sed failed to set toolchain prefix"
+	}
+
+	multilib_foreach_abi _src_prepare
 }
 
-src_configure() {
+# corrections based on the ABI being compiled
+_fix_paths() {
+	# For proper rust cargo cross-compile for libloading and glslopt \
+	export PKG_CONFIG=${chost}-pkg-config
+	export CROSSCOMPILE=$(rust_abi ${chost})
+	export CARGO_CFG_TARGET_ARCH=$(echo ${chost} | cut -f 1 -d "-")
+	MOZILLA_FIVE_HOME="/usr/$(get_libdir)/${PN}"
+	BUILD_OBJ_DIR="${BUILD_DIR}/ff"
+	# for rust crates libloading and glslopt
+	if use clang && ! tc-is-clang ; then
+		CC=${chost}-clang
+		CXX=${chost}-clang++
+	elif ! use clang && ! tc-is-gcc ; then
+		CC=${chost}-gcc
+		CXX=${chost}-g++
+	fi
+	tc-export CC CXX
+}
+
+multilib_src_configure() {
+	local chost=$(get_abi_CHOST ${ABI})
 	MEXTENSIONS="default"
 	# Google API keys (see http://www.chromium.org/developers/how-tos/api-keys)
 	# Note: These are for Gentoo Linux use ONLY. For your own distribution, please
@@ -389,17 +466,18 @@ src_configure() {
 		einfo "TERM is unset."
 	fi
 
+	einfo "Cross-compile: chost=${chost}"
 	if use clang && ! tc-is-clang ; then
 		# Force clang
 		einfo "Enforcing the use of clang due to USE=clang ..."
-		CC=${CHOST}-clang
-		CXX=${CHOST}-clang++
+		CC=${chost}-clang
+		CXX=${chost}-clang++
 		strip-unsupported-flags
 	elif ! use clang && ! tc-is-gcc ; then
 		# Force gcc
 		einfo "Enforcing the use of gcc due to USE=-clang ..."
-		CC=${CHOST}-gcc
-		CXX=${CHOST}-g++
+		CC=${chost}-gcc
+		CXX=${chost}-g++
 		strip-unsupported-flags
 	fi
 
@@ -410,6 +488,7 @@ src_configure() {
 	####################################
 
 	mozconfig_init
+	_fix_paths
 	# common config components
 	mozconfig_annotate 'system_libs' \
 		--with-system-zlib
@@ -418,6 +497,11 @@ src_configure() {
 	mozconfig_annotate 'Enable by Gentoo' --enable-release
 
 	# libclang.so is not properly detected work around issue
+
+	# mozconfig_annotate '' --with-libclang-path="$(${chost}-llvm-config --libdir)"
+	#   disabled because Gentoo doesn't support multilib python, so full cross-compile is not supported.
+
+	#   the commented above is mutually exclusive with this line below.
 	mozconfig_annotate '' --with-libclang-path="$(llvm-config --libdir)"
 
 	if use pgo ; then
@@ -514,11 +598,11 @@ src_configure() {
 		fi
 	fi
 
-	if [[ ${CHOST} == armv*h* ]] ; then
+	if [[ ${chost} == armv*h* ]] ; then
 		mozconfig_annotate '' --with-float-abi=hard
 		if ! use system-libvpx ; then
 			sed -i -e "s|softfp|hard|" \
-				"${S}"/media/libvpx/moz.build
+				"${BUILD_DIR}"/media/libvpx/moz.build
 		fi
 	fi
 
@@ -547,14 +631,14 @@ src_configure() {
 	# of --build, and --target intstead of --host.
 	# Note, mozilla also has --build but it does not do what you think it does.
 	# Set both --target and --host as mozilla uses python to guess values otherwise
-	mozconfig_annotate '' --target="${CHOST}"
-	mozconfig_annotate '' --host="${CBUILD:-${CHOST}}"
-	mozconfig_annotate '' --with-toolchain-prefix="${CHOST}-"
+	mozconfig_annotate '' --target="${chost}"
+	mozconfig_annotate '' --host="${CBUILD:-${chost}}"
+	mozconfig_annotate '' --with-toolchain-prefix="${chost}-"
 	if use system-libevent ; then
 		mozconfig_annotate '' --with-system-libevent="${SYSROOT}${EPREFIX}"/usr
 	fi
 
-	if ! use x86 && [[ ${CHOST} != armv*h* ]] ; then
+	if ! use x86 && [[ ${chost} != armv*h* ]] ; then
 		mozconfig_annotate '' --enable-rust-simd
 	fi
 
@@ -601,9 +685,9 @@ src_configure() {
 	use eme-free && mozconfig_annotate '+eme-free' --disable-eme
 
 	# Setup api key for location services and safebrowsing, https://bugzilla.mozilla.org/show_bug.cgi?id=1531176#c34
-	echo -n "${_google_api_key}" > "${S}"/google-api-key
-	mozconfig_annotate '' --with-google-location-service-api-keyfile="${S}/google-api-key"
-	mozconfig_annotate '' --with-google-safebrowsing-api-keyfile="${S}/google-api-key"
+	echo -n "${_google_api_key}" > "${BUILD_DIR}"/google-api-key
+	mozconfig_annotate '' --with-google-location-service-api-keyfile="${BUILD_DIR}/google-api-key"
+	mozconfig_annotate '' --with-google-safebrowsing-api-keyfile="${BUILD_DIR}/google-api-key"
 
 	mozconfig_annotate '' --enable-extensions="${MEXTENSIONS}"
 
@@ -629,20 +713,36 @@ src_configure() {
 		fi
 	fi
 
-	echo "mk_add_options MOZ_OBJDIR=${BUILD_OBJ_DIR}" >> "${S}"/.mozconfig
-	echo "mk_add_options XARGS=/usr/bin/xargs" >> "${S}"/.mozconfig
+	echo "mk_add_options MOZ_OBJDIR=${BUILD_OBJ_DIR}" >> "${BUILD_DIR}"/.mozconfig
+	echo "mk_add_options XARGS=/usr/bin/xargs" >> "${BUILD_DIR}"/.mozconfig
+
+	if ! use jemalloc ; then
+		 mozconfig_annotate '-jemalloc' --disable-jemalloc
+	else
+		 mozconfig_annotate '+jemalloc' --enable-jemalloc
+	fi
+
+	einfo "Cross-compile: ${ABI} CFLAGS=${CFLAGS}"
+	einfo "Cross-compile: CC=${CC} CXX=${CXX}"
+	echo "export PKG_CONFIG=${chost}-pkg-config" >> .mozconfig
+	echo "export PKG_CONFIG_PATH=/usr/$(get_libdir)/pkgconfig:/usr/share/pkgconfig" >> .mozconfig
+	echo "export CROSSCOMPILE=${CROSSCOMPILE}" >> .mozconfig
+	mozconfig_annotate '' --target=${chost%-*}
 
 	# Finalize and report settings
 	mozconfig_final
 
-	mkdir -p "${S}"/third_party/rust/libloading/.deps
+	mkdir -p "${BUILD_DIR}"/third_party/rust/libloading/.deps
 
 	# workaround for funky/broken upstream configure...
+	TARGET="${chost}" \
 	SHELL="${SHELL:-${EPREFIX}/bin/bash}" MOZ_NOSPAM=1 \
 	./mach configure || die
 }
 
-src_compile() {
+multilib_src_compile() {
+	local chost=$(get_abi_CHOST ${ABI})
+	_fix_paths
 	local _virtx=
 	if use pgo ; then
 		_virtx=virtx
@@ -653,6 +753,7 @@ src_compile() {
 		addpredict /root
 	fi
 
+	TARGET="${chost}" \
 	GDK_BACKEND=x11 \
 		MOZ_MAKE_FLAGS="${MAKEOPTS} -O" \
 		SHELL="${SHELL:-${EPREFIX}/bin/bash}" \
@@ -662,7 +763,9 @@ src_compile() {
 		|| die
 }
 
-src_install() {
+multilib_src_install() {
+	local chost=$(get_abi_CHOST ${ABI})
+	_fix_paths
 	cd "${BUILD_OBJ_DIR}" || die
 
 	# Pax mark xpcshell for hardened support, only used for startupcache creation.
@@ -717,7 +820,8 @@ src_install() {
 		done
 	fi
 
-	cd "${S}"
+	cd "${BUILD_DIR}"
+	TARGET="${chost}" \
 	MOZ_MAKE_FLAGS="${MAKEOPTS}" SHELL="${SHELL:-${EPREFIX}/bin/bash}" MOZ_NOSPAM=1 \
 	DESTDIR="${D}" ./mach install || die
 
@@ -734,11 +838,11 @@ src_install() {
 	local size sizes icon_path icon name
 	if use bindist ; then
 		sizes="16 32 48"
-		icon_path="${S}/browser/branding/aurora"
+		icon_path="${BUILD_DIR}/browser/branding/aurora"
 		# Firefox's new rapid release cycle means no more codenames
 		# Let's just stick with this one...
 		icon="aurora"
-		name="Aurora"
+		name="Aurora (${ABI})"
 
 		# Override preferences to set the MOZ_DEV_EDITION defaults, since we
 		# don't define MOZ_DEV_EDITION to avoid profile debaucles.
@@ -752,9 +856,9 @@ PROFILE_EOF
 
 	else
 		sizes="16 22 24 32 48 64 128 256"
-		icon_path="${S}/browser/branding/official"
+		icon_path="${BUILD_DIR}/browser/branding/official"
 		icon="${PN}"
-		name="Mozilla Firefox"
+		name="Mozilla Firefox (${ABI})"
 	fi
 
 	# Disable built-in auto-update because we update firefox through package manager
@@ -778,12 +882,14 @@ PROFILE_EOF
 	local app_name desktop_filename display_protocol exec_command
 	for display_protocol in ${display_protocols} ; do
 		app_name="${name} on ${display_protocol}"
-		desktop_filename="${PN}-${display_protocol,,}.desktop"
+		desktop_filename="${PN}-${ABI}-${display_protocol,,}.desktop"
 
 		case ${display_protocol} in
 			Wayland)
-				exec_command='firefox-wayland --name firefox-wayland'
-				newbin "${FILESDIR}"/firefox-wayland.sh firefox-wayland
+				exec_command="firefox-${ABI}-wayland --name firefox-${ABI}-wayland"
+				newbin "${FILESDIR}"/multiabi/firefox-wayland.sh firefox-${ABI}-wayland
+				[ -e "/usr/bin/firefox-wayland" ] && rm /usr/bin/firefox-wayland
+				dosym /usr/bin/firefox-${ABI}-wayland /usr/bin/firefox-wayland
 				;;
 			X11)
 				if ! use wayland ; then
@@ -792,13 +898,15 @@ PROFILE_EOF
 					continue
 				fi
 
-				exec_command='firefox-x11 --name firefox-x11'
-				newbin "${FILESDIR}"/firefox-x11.sh firefox-x11
+				exec_command="firefox-${ABI}-x11 --name firefox-${ABI}-x11"
+				newbin "${FILESDIR}"/multiabi/firefox-x11.sh firefox-${ABI}-x11
+				[ -e "/usr/bin/firefox-x11" ] && rm /usr/bin/firefox-x11
+				dosym /usr/bin/firefox-${ABI}-x11 /usr/bin/firefox-x11
 				;;
 			*)
 				app_name="${name}"
-				desktop_filename="${PN}.desktop"
-				exec_command='firefox'
+				desktop_filename="${PN}-${ABI}.desktop"
+				exec_command="firefox-${ABI}"
 				;;
 		esac
 
@@ -811,18 +919,20 @@ PROFILE_EOF
 	done
 
 	rm "${ED%/}"/usr/bin/firefox || die
-	newbin "${FILESDIR}"/firefox.sh firefox
+	newbin "${FILESDIR}"/multiabi/firefox.sh firefox-${ABI}
+	dosym /usr/bin/firefox-${ABI} /usr/bin/firefox
 
 	local wrapper
 	for wrapper in \
-		"${ED%/}"/usr/bin/firefox \
-		"${ED%/}"/usr/bin/firefox-x11 \
-		"${ED%/}"/usr/bin/firefox-wayland \
+		"${ED%/}"/usr/bin/firefox-${ABI} \
+		"${ED%/}"/usr/bin/firefox-${ABI}-x11 \
+		"${ED%/}"/usr/bin/firefox-${ABI}-wayland \
 	; do
 		[[ ! -f "${wrapper}" ]] && continue
 
 		sed -i \
 			-e "s:@PREFIX@:${EPREFIX%/}/usr:" \
+			-e "s:@LIBDIR@:$(get_libdir):" \
 			-e "s:@DEFAULT_WAYLAND@:${use_wayland}:" \
 			"${wrapper}" || die
 	done
@@ -925,6 +1035,19 @@ pkg_postinst() {
 		elog
 		elog "in about:config."
 	fi
+
+	elog
+	elog "By default, the /usr/bin/firefox symlink is set to the last ABI installed."
+	elog "You must change it manually if you want to run on a different default ABI."
+	elog
+	elog "Examples"
+	elog "ln -sf /usr/lib64/${PN} /usr/bin/firefox"
+	elog "ln -sf /usr/lib/${PN} /usr/bin/firefox"
+	elog "ln -sf /usr/lib32/${PN} /usr/bin/firefox"
+	elog
+	# Reported in bugid 1010527, 1646007, 1449901
+	elog "WebGL performance is suboptimal and runs at ~40 FPS.  There is currently no fix for this."
+	elog
 }
 
 pkg_postrm() {
