Subject:  Mold linker support
Patch status:  WIP/Testing (Draft)
--- a/build/config/compiler/compiler.gni.orig	2023-02-16 06:15:49.918567200 -0800
+++ b/build/config/compiler/compiler.gni	2023-02-23 04:30:40.335298312 -0800
@@ -30,11 +30,13 @@ if (is_ios) {
 }
 
 declare_args() {
+  use_mold = false
+
   # Set to true to use lld, the LLVM linker.
   # In late bring-up on macOS (see docs/mac_lld.md).
   # Tentatively used on iOS.
   # The default linker everywhere else.
-  use_lld = is_clang && current_os != "zos"
+  use_lld = is_clang && current_os != "zos" && ! use_mold
 
   # If true, optimize for size.
   # Default to favoring speed over size for platforms not listed below.
@@ -234,8 +236,8 @@ can_unwind_with_cfi_table = is_android &
 enable_arm_cfi_table = is_android && !is_component_build && current_cpu == "arm"
 
 declare_args() {
-  # Whether to use the gold linker from binutils instead of lld or bfd.
-  use_gold = !use_lld && !(is_castos &&
+  # Whether to use the gold linker from binutils.
+  use_gold = !use_lld && !use_mold && !(is_castos &&
                            (current_cpu == "arm" || current_cpu == "mipsel")) &&
              (((is_linux || is_chromeos_lacros) &&
                (current_cpu == "x64" || current_cpu == "x86" ||
--- a/build/config/compiler/BUILD.gn.orig	2023-02-22 17:55:40.734042838 -0800
+++ b/build/config/compiler/BUILD.gn	2023-02-23 04:29:56.955296883 -0800
@@ -183,7 +183,7 @@ declare_args() {
   use_icf = (is_posix || is_fuchsia) && !is_debug && !using_sanitizer &&
             !use_clang_coverage && current_os != "zos" &&
             !(is_android && use_order_profiling) &&
-            (use_lld || (use_gold && (is_chromeos || !(current_cpu == "x86" ||
+            (use_mold || use_lld || (use_gold && (is_chromeos || !(current_cpu == "x86" ||
                                                        current_cpu == "x64"))))
 }
 
@@ -339,6 +339,10 @@ config("compiler") {
       }
     }
 
+    if (use_mold) {
+      ldflags += [ "-fuse-ld=mold" ]
+    }
+
     # Linker warnings.
     if (fatal_linker_warnings && !is_apple && current_os != "aix" &&
         current_os != "zos") {
@@ -483,7 +487,7 @@ config("compiler") {
     #}
   }
 
-  if (use_icf && (!is_apple || use_lld)) {
+  if (use_icf && (!is_apple || use_lld || use_mold)) {
     ldflags += [ "-Wl,--icf=all" ]
   }
 
@@ -521,9 +525,9 @@ config("compiler") {
     }
   }
 
-  # Enable text section splitting only on linux when using lld for now. Other
+  # Enable text section splitting only on linux. Other
   # platforms can be added later if needed.
-  if ((is_linux || is_chromeos) && use_lld && use_text_section_splitting) {
+  if ((is_linux || is_chromeos) && (use_lld || use_mold) && use_text_section_splitting) {
     ldflags += [ "-Wl,-z,keep-text-section-prefix" ]
   }
 
--- a/tools/v8_context_snapshot/BUILD.gn.orig	2023-02-16 06:16:23.677508000 -0800
+++ b/tools/v8_context_snapshot/BUILD.gn	2023-02-22 22:56:55.714638452 -0800
@@ -129,7 +129,7 @@ if (use_v8_context_snapshot) {
       ldflags = [ "/OPT:NOICF" ]  # link.exe, but also lld-link.exe.
     } else if (is_apple && !use_lld) {
       ldflags = [ "-Wl,-no_deduplicate" ]  # ld64.
-    } else if (use_gold || use_lld) {
+    } else if (use_gold || use_lld || use_mold) {
       ldflags = [ "-Wl,--icf=none" ]
     }
   }
