--- a/third_party/libjpeg_turbo/BUILD.gn.orig	2025-04-27 16:35:54.000000000 -0700
+++ b/third_party/libjpeg_turbo/BUILD.gn	2025-05-07 11:07:37.906337251 -0700
@@ -7,6 +7,7 @@
 
 import("//build/config/features.gni")
 import("//build/config/sanitizers/sanitizers.gni")
+import("//build/config/simd.gni")
 if (current_cpu == "arm" || current_cpu == "arm64") {
   import("//build/config/arm.gni")
 }
@@ -42,111 +43,156 @@ if (current_cpu == "x86" || current_cpu
 
     if (current_cpu == "x86") {
       include_dirs += [ "simd/i386/" ]
-      inputs += [
-        "simd/i386/jccolext-avx2.asm",
-        "simd/i386/jccolext-mmx.asm",
-        "simd/i386/jccolext-sse2.asm",
-        "simd/i386/jcgryext-avx2.asm",
-        "simd/i386/jcgryext-mmx.asm",
-        "simd/i386/jcgryext-sse2.asm",
-        "simd/i386/jdcolext-avx2.asm",
-        "simd/i386/jdcolext-mmx.asm",
-        "simd/i386/jdcolext-sse2.asm",
-        "simd/i386/jdmrgext-avx2.asm",
-        "simd/i386/jdmrgext-mmx.asm",
-        "simd/i386/jdmrgext-sse2.asm",
-      ]
-      sources = [
-        "simd/i386/jccolor-avx2.asm",
-        "simd/i386/jccolor-mmx.asm",
-        "simd/i386/jccolor-sse2.asm",
-        "simd/i386/jcgray-avx2.asm",
-        "simd/i386/jcgray-mmx.asm",
-        "simd/i386/jcgray-sse2.asm",
-        "simd/i386/jchuff-sse2.asm",
-        "simd/i386/jcphuff-sse2.asm",
-        "simd/i386/jcsample-avx2.asm",
-        "simd/i386/jcsample-mmx.asm",
-        "simd/i386/jcsample-sse2.asm",
-        "simd/i386/jdcolor-avx2.asm",
-        "simd/i386/jdcolor-mmx.asm",
-        "simd/i386/jdcolor-sse2.asm",
-        "simd/i386/jdmerge-avx2.asm",
-        "simd/i386/jdmerge-mmx.asm",
-        "simd/i386/jdmerge-sse2.asm",
-        "simd/i386/jdsample-avx2.asm",
-        "simd/i386/jdsample-mmx.asm",
-        "simd/i386/jdsample-sse2.asm",
-        "simd/i386/jfdctflt-3dn.asm",
-        "simd/i386/jfdctflt-sse.asm",
-        "simd/i386/jfdctfst-mmx.asm",
-        "simd/i386/jfdctfst-sse2.asm",
-        "simd/i386/jfdctint-avx2.asm",
-        "simd/i386/jfdctint-mmx.asm",
-        "simd/i386/jfdctint-sse2.asm",
-        "simd/i386/jidctflt-3dn.asm",
-        "simd/i386/jidctflt-sse.asm",
-        "simd/i386/jidctflt-sse2.asm",
-        "simd/i386/jidctfst-mmx.asm",
-        "simd/i386/jidctfst-sse2.asm",
-        "simd/i386/jidctint-avx2.asm",
-        "simd/i386/jidctint-mmx.asm",
-        "simd/i386/jidctint-sse2.asm",
-        "simd/i386/jidctred-mmx.asm",
-        "simd/i386/jidctred-sse2.asm",
-        "simd/i386/jquant-3dn.asm",
-        "simd/i386/jquant-mmx.asm",
-        "simd/i386/jquant-sse.asm",
-        "simd/i386/jquantf-sse2.asm",
-        "simd/i386/jquanti-avx2.asm",
-        "simd/i386/jquanti-sse2.asm",
-        "simd/i386/jsimdcpu.asm",
-      ]
+      sources = []
+      if (use_mmx) {
+        inputs += [
+          "simd/i386/jccolext-mmx.asm",
+          "simd/i386/jcgryext-mmx.asm",
+          "simd/i386/jdcolext-mmx.asm",
+          "simd/i386/jdmrgext-mmx.asm",
+        ]
+        sources += [
+          "simd/i386/jccolor-mmx.asm",
+          "simd/i386/jcgray-mmx.asm",
+          "simd/i386/jcsample-mmx.asm",
+          "simd/i386/jdcolor-mmx.asm",
+          "simd/i386/jdmerge-mmx.asm",
+          "simd/i386/jdsample-mmx.asm",
+          "simd/i386/jfdctfst-mmx.asm",
+          "simd/i386/jfdctint-mmx.asm",
+          "simd/i386/jidctfst-mmx.asm",
+          "simd/i386/jidctint-mmx.asm",
+          "simd/i386/jidctred-mmx.asm",
+          "simd/i386/jquant-mmx.asm",
+        ]
+      }
+      if (use_sse) {
+        sources += [
+          "simd/i386/jfdctflt-sse.asm",
+          "simd/i386/jidctflt-sse.asm",
+          "simd/i386/jquant-sse.asm",
+        ]
+      }
+      if (use_sse2) {
+        inputs += [
+          "simd/i386/jccolext-sse2.asm",
+          "simd/i386/jcgryext-sse2.asm",
+          "simd/i386/jdcolext-sse2.asm",
+          "simd/i386/jdmrgext-sse2.asm",
+        ]
+        sources += [
+          "simd/i386/jccolor-sse2.asm",
+          "simd/i386/jcgray-sse2.asm",
+          "simd/i386/jchuff-sse2.asm",
+          "simd/i386/jcphuff-sse2.asm",
+          "simd/i386/jcsample-sse2.asm",
+          "simd/i386/jdcolor-sse2.asm",
+          "simd/i386/jdmerge-sse2.asm",
+          "simd/i386/jdsample-sse2.asm",
+          "simd/i386/jfdctfst-sse2.asm",
+          "simd/i386/jfdctint-sse2.asm",
+          "simd/i386/jidctflt-sse2.asm",
+          "simd/i386/jidctfst-sse2.asm",
+          "simd/i386/jidctint-sse2.asm",
+          "simd/i386/jidctred-sse2.asm",
+          "simd/i386/jquantf-sse2.asm",
+          "simd/i386/jquanti-sse2.asm",
+        ]
+      }
+      if (use_avx2) {
+        inputs += [
+          "simd/i386/jccolext-avx2.asm",
+          "simd/i386/jcgryext-avx2.asm",
+          "simd/i386/jdcolext-avx2.asm",
+          "simd/i386/jdmrgext-avx2.asm",
+        ]
+        sources += [
+          "simd/i386/jccolor-avx2.asm",
+          "simd/i386/jcgray-avx2.asm",
+          "simd/i386/jcsample-avx2.asm",
+          "simd/i386/jdcolor-avx2.asm",
+          "simd/i386/jdmerge-avx2.asm",
+          "simd/i386/jdsample-avx2.asm",
+          "simd/i386/jfdctint-avx2.asm",
+          "simd/i386/jidctint-avx2.asm",
+          "simd/i386/jquanti-avx2.asm",
+        ]
+      }
+      if (use_3dnow) {
+        sources += [
+          "simd/i386/jfdctflt-3dn.asm",
+          "simd/i386/jidctflt-3dn.asm",
+          "simd/i386/jquant-3dn.asm",
+        ]
+      }
+
+      if (use_mmx || use_3dnow || use_sse || use_sse2 || use_avx2) {
+        sources += [
+          "simd/i386/jsimdcpu.asm",
+        ]
+      }
       defines += [
         "__x86__",
         "PIC",
       ]
     } else if (current_cpu == "x64") {
       include_dirs += [ "simd/x86_64/" ]
-      inputs += [
-        "simd/x86_64/jccolext-avx2.asm",
-        "simd/x86_64/jccolext-sse2.asm",
-        "simd/x86_64/jcgryext-avx2.asm",
-        "simd/x86_64/jcgryext-sse2.asm",
-        "simd/x86_64/jdcolext-avx2.asm",
-        "simd/x86_64/jdcolext-sse2.asm",
-        "simd/x86_64/jdmrgext-avx2.asm",
-        "simd/x86_64/jdmrgext-sse2.asm",
-      ]
-      sources = [
-        "simd/x86_64/jccolor-avx2.asm",
-        "simd/x86_64/jccolor-sse2.asm",
-        "simd/x86_64/jcgray-avx2.asm",
-        "simd/x86_64/jcgray-sse2.asm",
-        "simd/x86_64/jchuff-sse2.asm",
-        "simd/x86_64/jcphuff-sse2.asm",
-        "simd/x86_64/jcsample-avx2.asm",
-        "simd/x86_64/jcsample-sse2.asm",
-        "simd/x86_64/jdcolor-avx2.asm",
-        "simd/x86_64/jdcolor-sse2.asm",
-        "simd/x86_64/jdmerge-avx2.asm",
-        "simd/x86_64/jdmerge-sse2.asm",
-        "simd/x86_64/jdsample-avx2.asm",
-        "simd/x86_64/jdsample-sse2.asm",
-        "simd/x86_64/jfdctflt-sse.asm",
-        "simd/x86_64/jfdctfst-sse2.asm",
-        "simd/x86_64/jfdctint-avx2.asm",
-        "simd/x86_64/jfdctint-sse2.asm",
-        "simd/x86_64/jidctflt-sse2.asm",
-        "simd/x86_64/jidctfst-sse2.asm",
-        "simd/x86_64/jidctint-avx2.asm",
-        "simd/x86_64/jidctint-sse2.asm",
-        "simd/x86_64/jidctred-sse2.asm",
-        "simd/x86_64/jquantf-sse2.asm",
-        "simd/x86_64/jquanti-avx2.asm",
-        "simd/x86_64/jquanti-sse2.asm",
-        "simd/x86_64/jsimdcpu.asm",
-      ]
+      sources = []
+      if (use_sse) {
+        sources += [
+          "simd/x86_64/jfdctflt-sse.asm",
+        ]
+      }
+      if (use_sse2) {
+        inputs += [
+          "simd/x86_64/jccolext-sse2.asm",
+          "simd/x86_64/jcgryext-sse2.asm",
+          "simd/x86_64/jdcolext-sse2.asm",
+          "simd/x86_64/jdmrgext-sse2.asm",
+        ]
+        sources += [
+          "simd/x86_64/jccolor-sse2.asm",
+          "simd/x86_64/jcgray-sse2.asm",
+          "simd/x86_64/jchuff-sse2.asm",
+          "simd/x86_64/jcphuff-sse2.asm",
+          "simd/x86_64/jcsample-sse2.asm",
+          "simd/x86_64/jdcolor-sse2.asm",
+          "simd/x86_64/jdmerge-sse2.asm",
+          "simd/x86_64/jdsample-sse2.asm",
+          "simd/x86_64/jfdctfst-sse2.asm",
+          "simd/x86_64/jfdctint-sse2.asm",
+          "simd/x86_64/jidctflt-sse2.asm",
+          "simd/x86_64/jidctfst-sse2.asm",
+          "simd/x86_64/jidctint-sse2.asm",
+          "simd/x86_64/jidctred-sse2.asm",
+          "simd/x86_64/jquantf-sse2.asm",
+          "simd/x86_64/jquanti-sse2.asm",
+        ]
+      }
+      if (use_avx2) {
+        inputs += [
+          "simd/x86_64/jccolext-avx2.asm",
+          "simd/x86_64/jcgryext-avx2.asm",
+          "simd/x86_64/jdcolext-avx2.asm",
+          "simd/x86_64/jdmrgext-avx2.asm",
+          "simd/x86_64/jquanti-avx2.asm",
+        ]
+        sources += [
+          "simd/x86_64/jccolor-avx2.asm",
+          "simd/x86_64/jcgray-avx2.asm",
+          "simd/x86_64/jcsample-avx2.asm",
+          "simd/x86_64/jdcolor-avx2.asm",
+          "simd/x86_64/jdmerge-avx2.asm",
+          "simd/x86_64/jdsample-avx2.asm",
+          "simd/x86_64/jfdctint-avx2.asm",
+          "simd/x86_64/jidctint-avx2.asm",
+        ]
+      }
+      if (use_sse || use_sse2 || use_avx2) {
+        sources += [
+          "simd/x86_64/jsimdcpu.asm",
+        ]
+      }
       defines += [
         "__x86_64__",
         "PIC",
@@ -200,31 +246,38 @@ static_library("simd") {
   } else if ((current_cpu == "arm" || current_cpu == "arm64") && arm_use_neon) {
     include_dirs += [ "simd/arm/" ]
 
-    sources = [
-      "simd/arm/jccolor-neon.c",
-      "simd/arm/jcgray-neon.c",
-      "simd/arm/jcphuff-neon.c",
-      "simd/arm/jcsample-neon.c",
-      "simd/arm/jdcolor-neon.c",
-      "simd/arm/jdmerge-neon.c",
-      "simd/arm/jdsample-neon.c",
-      "simd/arm/jfdctfst-neon.c",
-      "simd/arm/jfdctint-neon.c",
-      "simd/arm/jidctfst-neon.c",
-      "simd/arm/jidctint-neon.c",
-      "simd/arm/jidctred-neon.c",
-      "simd/arm/jquanti-neon.c",
-    ]
-    if (current_cpu == "arm") {
+    sources = []
+    if (use_neon) {
       sources += [
-        "simd/arm/aarch32/jchuff-neon.c",
-        "simd/arm/aarch32/jsimd.c",
+        "simd/arm/jccolor-neon.c",
+        "simd/arm/jcgray-neon.c",
+        "simd/arm/jcphuff-neon.c",
+        "simd/arm/jcsample-neon.c",
+        "simd/arm/jdcolor-neon.c",
+        "simd/arm/jdmerge-neon.c",
+        "simd/arm/jdsample-neon.c",
+        "simd/arm/jfdctfst-neon.c",
+        "simd/arm/jfdctint-neon.c",
+        "simd/arm/jidctfst-neon.c",
+        "simd/arm/jidctint-neon.c",
+        "simd/arm/jidctred-neon.c",
+        "simd/arm/jquanti-neon.c",
       ]
+    }
+    if (current_cpu == "arm") {
+      if (use_neon) {
+        sources += [
+          "simd/arm/aarch32/jchuff-neon.c",
+          "simd/arm/aarch32/jsimd.c",
+        ]
+      }
     } else if (current_cpu == "arm64") {
-      sources += [
-        "simd/arm/aarch64/jchuff-neon.c",
-        "simd/arm/aarch64/jsimd.c",
-      ]
+      if (use_neon) {
+        sources += [
+          "simd/arm/aarch64/jchuff-neon.c",
+          "simd/arm/aarch64/jsimd.c",
+        ]
+      }
     }
 
     configs -= [ "//build/config/compiler:default_optimization" ]
@@ -365,8 +418,12 @@ static_library("libjpeg") {
   deps = [
     ":libjpeg12",
     ":libjpeg16",
-    ":simd",
   ]
+  if (use_mmx || use_3dnow || use_sse || use_sse2 || use_avx2 || use_neon) {
+    deps += [
+      ":simd",
+    ]
+  }
 
   if (current_cpu == "x86" || current_cpu == "x64") {
     # Avoid the 64K jpeg_nbits table.
--- a/third_party/libjpeg_turbo/simd/i386/jsimd.c.orig	2025-05-05 12:21:24.000000000 -0700
+++ b/third_party/libjpeg_turbo/simd/i386/jsimd.c	2025-05-16 14:31:06.078031532 -0700
@@ -51,16 +51,26 @@ init_simd(void)
 
 #ifndef NO_GETENV
   /* Force different settings through environment variables */
+#if defined(__MMX__)
   if (!GETENV_S(env, 2, "JSIMD_FORCEMMX") && !strcmp(env, "1"))
     simd_support &= JSIMD_MMX;
+#endif
+#if defined(__3dNOW__)
   if (!GETENV_S(env, 2, "JSIMD_FORCE3DNOW") && !strcmp(env, "1"))
     simd_support &= JSIMD_3DNOW | JSIMD_MMX;
+#endif
+#if defined(__SSE__)
   if (!GETENV_S(env, 2, "JSIMD_FORCESSE") && !strcmp(env, "1"))
     simd_support &= JSIMD_SSE | JSIMD_MMX;
+#endif
+#if defined(__SSE2__)
   if (!GETENV_S(env, 2, "JSIMD_FORCESSE2") && !strcmp(env, "1"))
     simd_support &= JSIMD_SSE2;
+#endif
+#if defined(__AVX2__)
   if (!GETENV_S(env, 2, "JSIMD_FORCEAVX2") && !strcmp(env, "1"))
     simd_support &= JSIMD_AVX2;
+#endif
   if (!GETENV_S(env, 2, "JSIMD_FORCENONE") && !strcmp(env, "1"))
     simd_support = 0;
   if (!GETENV_S(env, 2, "JSIMD_NOHUFFENC") && !strcmp(env, "1"))
--- a/third_party/libjpeg_turbo/simd/x86_64/jsimd.c.orig	2025-05-05 12:21:24.000000000 -0700
+++ b/third_party/libjpeg_turbo/simd/x86_64/jsimd.c	2025-05-16 14:27:00.255713383 -0700
@@ -51,10 +51,14 @@ init_simd(void)
 
 #ifndef NO_GETENV
   /* Force different settings through environment variables */
+#if defined(__SSE2__)
   if (!GETENV_S(env, 2, "JSIMD_FORCESSE2") && !strcmp(env, "1"))
     simd_support &= JSIMD_SSE2;
+#endif
+#if defined(__AVX2__)
   if (!GETENV_S(env, 2, "JSIMD_FORCEAVX2") && !strcmp(env, "1"))
     simd_support &= JSIMD_AVX2;
+#endif
   if (!GETENV_S(env, 2, "JSIMD_FORCENONE") && !strcmp(env, "1"))
     simd_support = 0;
   if (!GETENV_S(env, 2, "JSIMD_NOHUFFENC") && !strcmp(env, "1"))
