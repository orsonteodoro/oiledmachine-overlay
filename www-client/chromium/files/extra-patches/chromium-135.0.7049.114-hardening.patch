--- a/build/config/compiler/BUILD.gn.orig	2025-04-26 14:23:44.027798230 -0700
+++ b/build/config/compiler/BUILD.gn	2025-04-26 14:34:52.361070233 -0700
@@ -202,6 +202,12 @@ declare_args() {
 
   #use_mold = false
   #custom_optimization_level = ""
+
+  use_retpoline = is_linux && is_clang
+  use_stack_clash_protection = is_linux
+  use_cf_protection = "none"
+  use_trapv = 0
+  use_fortify_source = -1
 }
 
 declare_args() {
@@ -390,6 +393,39 @@ config("compiler") {
       }
     }
 
+    if (use_retpoline) {
+      cflags += [ "-mretpoline" ]
+      rustflags += [ "-Ctarget-feature=+retpoline" ]
+    }
+
+    if (use_stack_clash_protection) {
+      cflags += [ "-fstack-clash-protection" ]
+    }
+
+    if (use_cf_protection == "none") {
+      cflags += [ "-fc-protection=none" ]
+      rustflags += [ "-Ctarget-feature=-cet" ]
+    } else if (use_cf_protection == "full") {
+      cflags += [ "-fc-protection=full" ]
+      rustflags += [ "-Ctarget-feature=+cet" ]
+    } else if (use_cf_protection == "return") {
+      cflags += [ "-fc-protection=return" ]
+    } else if (use_cf_protection == "branch") {
+      cflags += [ "-fc-protection=branch" ]
+    }
+
+    rustflags -= [ "-Coverflow-checks=on" ]
+    if (use_trapv) {
+      cflags += [ "-ftrapv" ]
+      rustflags += [ "-Coverflow-checks=on" ]
+    }
+
+    if (use_fortify_source == 2) {
+      defines += [ "_FORTIFY_SOURCE=2" ]
+    } else if (use_fortify_source == 3) {
+      defines += [ "_FORTIFY_SOURCE=3" ]
+    }
+
     if (use_mold) {
       ldflags += [ "-fuse-ld=mold" ]
     } else if (use_lld) {
