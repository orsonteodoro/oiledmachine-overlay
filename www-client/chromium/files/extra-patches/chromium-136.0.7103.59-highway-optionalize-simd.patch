--- a/third_party/highway/BUILD.gn.orig	2025-05-05 20:25:04.701200821 -0700
+++ b/third_party/highway/BUILD.gn	2025-05-05 20:31:03.205724922 -0700
@@ -2,12 +2,126 @@
 # Use of this source code is governed by a BSD-style license that can be
 # found in the LICENSE file.
 
+import("//build/config/simd.gni")
 import("//testing/test.gni")
 
 # This config is applied to targets that depend on libhwy
 config("libhwy_external_config") {
   include_dirs = [ "src" ]
   defines = []
+  cflags = []
+  if (target_cpu == "x64" || target_cpu == "x86") {
+    if (!use_f16c) {
+      defines += [ "HWY_DISABLE_F16C" ]
+      cflags += [ "-mno-f16c" ]
+    }
+    if (!use_sse2) {
+      defines += [ "HWY_DISABLED_TARGETS=HWY_SSE2" ]
+      cflags += [ "-mno-sse2" ]
+    }
+    if (!use_ssse3) {
+      defines += [ "HWY_DISABLED_TARGETS=HWY_SSSE3" ]
+      cflags += [ "-mno-ssse3" ]
+    }
+    if (!use_sse4) {
+      defines += [ "HWY_DISABLED_TARGETS=HWY_SSE4" ]
+      cflags += [ "-mno-sse4.1", "-mno-sse4.2" ]
+    }
+    if (!use_avx2) {
+      defines += [ "HWY_DISABLED_TARGETS=HWY_AVX2" ]
+      cflags += [ "-mno-avx2" ]
+    }
+    if (!use_avx3) {
+      defines += [ "HWY_DISABLED_TARGETS=HWY_AVX3" ]
+      cflags += [ "-mno-avx512f" ]
+      cflags += [ "-mno-avx512bw" ]
+      cflags += [ "-mno-avx512cd" ]
+      cflags += [ "-mno-avx512dq" ]
+      cflags += [ "-mno-avx512vl" ]
+    }
+    if (!use_avx3_dl) {
+      defines += [ "HWY_DISABLED_TARGETS=HWY_AVX3_DL" ]
+      cflags += [ "-mno-avx512bitalg" ]
+      cflags += [ "-mno-avx512vpopcntdq" ]
+      cflags += [ "-mno-avx512vbmi" ]
+      cflags += [ "-mno-avx512vbmi2" ]
+      cflags += [ "-mno-avx512vnni" ]
+      cflags += [ "-mno-gfni" ]
+      cflags += [ "-mno-vaes" ]
+      cflags += [ "-mno-vpclmulqdq" ]
+    }
+    if (!use_avx3_spr) {
+      defines += [ "HWY_DISABLED_TARGETS=HWY_AVX3_SPR" ]
+      cflags += [ "-mno-avx512fp16" ]
+      cflags += [ "-mno-avx512bf16" ]
+    }
+    if (!use_avx3_zen4) {
+      defines += [ "HWY_DISABLED_TARGETS=HWY_AVX3_ZEN4" ]
+      cflags += [ "-mno-avx512bf16" ]
+    }
+  }
+  if (target_cpu == "arm" || target_cpu == "arm64") {
+    if (!use_sve) {
+      defines += [ "HWY_DISABLED_TARGETS=HWY_SVE" ]
+    }
+    if (!use_sve_256) {
+      defines += [ "HWY_DISABLED_TARGETS=HWY_SVE_256" ]
+    }
+    if (!use_sve2) {
+      defines += [ "HWY_DISABLED_TARGETS=HWY_SVE2" ]
+    }
+    if (!use_sve2_128) {
+      defines += [ "HWY_DISABLED_TARGETS=HWY_SVE2_128" ]
+    }
+    if (!use_neon) {
+      defines += [ "HWY_DISABLED_TARGETS=HWY_NEON" ]
+    }
+    if (!use_neon_aes) {
+      defines += [ "HWY_DISABLED_TARGETS=HWY_NEON_WITHOUT_AES" ]
+    }
+    if (!use_neon_bf16) {
+      defines += [ "HWY_DISABLED_TARGETS=HWY_NEON_BF16" ]
+    }
+  }
+  if (target_cpu == "riscv") {
+    if (!use_rvv) {
+      defines += [ "HWY_DISABLED_TARGETS=HWY_RVV" ]
+    }
+  }
+  if (target_cpu == "ppc" || target_cpu == "ppc64") {
+    if (!use_ppc8) {
+      defines += [ "HWY_DISABLED_TARGETS=HWY_PPC8" ]
+      cflags += [ "-mno-altivec" ]
+      cflags += [ "-mno-crypto" ]
+      cflags += [ "-mno-power8-vector" ]
+    }
+    if (!use_ppc9) {
+      defines += [ "HWY_DISABLED_TARGETS=HWY_PPC9" ]
+      cflags += [ "-mno-power9-vector" ]
+    }
+    if (!use_ppc10) {
+      defines += [ "HWY_DISABLED_TARGETS=HWY_PPC10" ]
+      if (is_clang) {
+        cflags += [ "-mno-power10-vector" ]
+      }
+    }
+  }
+  if (target_cpu == "s390" || target_cpu == "s390x") {
+    if (!use_z15) {
+      defines += [ "HWY_DISABLED_TARGETS=HWY_Z15" ]
+    }
+    if (!use_z16) {
+      defines += [ "HWY_DISABLED_TARGETS=HWY_Z16" ]
+    }
+  }
+  if (target_cpu == "wasm") {
+    if (!use_wasm_emu256) {
+      defines += [ "HWY_DISABLED_TARGETS=HWY_WASM_EMU256" ]
+    }
+    if (!use_wasm) {
+      defines += [ "HWY_DISABLED_TARGETS=HWY_WASM" ]
+    }
+  }
   if (target_cpu == "x86") {
     # Highway automatically disables AVX2 and AVX3 targets when compiling in
     # 32-bit mode due to bugs in the generated code. However, when doing so it
