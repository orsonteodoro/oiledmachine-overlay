diff '--color=auto' -urp a/third_party/highway/BUILD.gn b/third_party/highway/BUILD.gn
--- a/third_party/highway/BUILD.gn	2025-04-27 16:35:54.000000000 -0700
+++ b/third_party/highway/BUILD.gn	2025-05-05 08:47:34.911819003 -0700
@@ -4,10 +4,123 @@
 
 import("//testing/test.gni")
 
+declare_args() {
+  use_f16c = true
+  use_sse2 = true
+  use_ssse3 = true
+  use_sse4 = true
+  use_avx2 = true
+  use_avx3 = true
+  use_avx3_dl = true
+  use_avx3_spr = true
+  use_avx3_zen4 = true
+
+  use_sve = true
+  use_sve_256 = true
+  use_sve2 = true
+  use_sve2_128 = true
+  use_neon = true
+  use_neon_aes = true
+  use_neon_bf16 = true
+
+  use_riscv_rvv = true
+
+  use_ppc8 = true
+  use_ppc9 = true
+  use_ppc10 = true
+  use_z15 = true
+  use_z16 = true
+
+  use_wasm = true
+  use_wasm_emu256 = true
+}
+
 # This config is applied to targets that depend on libhwy
 config("libhwy_external_config") {
   include_dirs = [ "src" ]
   defines = []
+  if (target_cpu == "x64" || target_cpu == "x86") {
+    if (!use_f16c) {
+      defines += [ "HWY_DISABLE_F16C" ]
+    }
+    if (!use_sse2) {
+      defines += [ "HWY_DISABLED_TARGETS=HWY_SSE2" ]
+    }
+    if (!use_ssse3) {
+      defines += [ "HWY_DISABLED_TARGETS=HWY_SSSE3" ]
+    }
+    if (!use_sse4) {
+      defines += [ "HWY_DISABLED_TARGETS=HWY_SSE4" ]
+    }
+    if (!use_avx2) {
+      defines += [ "HWY_DISABLED_TARGETS=HWY_AVX2" ]
+    }
+    if (!use_avx3) {
+      defines += [ "HWY_DISABLED_TARGETS=HWY_AVX3" ]
+    }
+    if (!use_avx3_dl) {
+      defines += [ "HWY_DISABLED_TARGETS=HWY_AVX3_DL" ]
+    }
+    if (!use_avx3_spr) {
+      defines += [ "HWY_DISABLED_TARGETS=HWY_AVX3_SPR" ]
+    }
+    if (!use_avx3_zen4) {
+      defines += [ "HWY_DISABLED_TARGETS=HWY_AVX3_ZEN4" ]
+    }
+  }
+  if (target_cpu == "arm" || target_cpu == "arm64") {
+    if (!use_sve) {
+      defines += [ "HWY_DISABLED_TARGETS=HWY_SVE" ]
+    }
+    if (!use_sve_256) {
+      defines += [ "HWY_DISABLED_TARGETS=HWY_SVE_256" ]
+    }
+    if (!use_sve2) {
+      defines += [ "HWY_DISABLED_TARGETS=HWY_SVE2" ]
+    }
+    if (!use_sve2_128) {
+      defines += [ "HWY_DISABLED_TARGETS=HWY_SVE2_128" ]
+    }
+    if (!use_neon) {
+      defines += [ "HWY_DISABLED_TARGETS=HWY_NEON" ]
+    }
+    if (!use_neon_aes) {
+      defines += [ "HWY_DISABLED_TARGETS=HWY_NEON_WITHOUT_AES" ]
+    }
+    if (!use_neon_bf16) {
+      defines += [ "HWY_DISABLED_TARGETS=HWY_NEON_BF16" ]
+    }
+  }
+  if (target_cpu == "riscv") {
+    if (!use_rvv) {
+      defines += [ "HWY_DISABLED_TARGETS=HWY_RVV" ]
+    }
+  }
+  if (target_cpu == "ppc" || target_cpu == "ppc64") {
+    if (!use_ppc8) {
+      defines += [ "HWY_DISABLED_TARGETS=HWY_PPC8" ]
+    }
+    if (!use_ppc9) {
+      defines += [ "HWY_DISABLED_TARGETS=HWY_PPC9" ]
+    }
+    if (!use_ppc10) {
+      defines += [ "HWY_DISABLED_TARGETS=HWY_PPC10" ]
+    }
+    if (!use_z15) {
+      defines += [ "HWY_DISABLED_TARGETS=HWY_Z15" ]
+    }
+    if (!use_z16) {
+      defines += [ "HWY_DISABLED_TARGETS=HWY_Z16" ]
+    }
+  }
+  if (target_cpu == "wasm") {
+    if (!use_wasm_emu256) {
+      defines += [ "HWY_DISABLED_TARGETS=HWY_WASM_EMU256" ]
+    }
+    if (!use_wasm) {
+      defines += [ "HWY_DISABLED_TARGETS=HWY_WASM" ]
+    }
+  }
   if (target_cpu == "x86") {
     # Highway automatically disables AVX2 and AVX3 targets when compiling in
     # 32-bit mode due to bugs in the generated code. However, when doing so it
