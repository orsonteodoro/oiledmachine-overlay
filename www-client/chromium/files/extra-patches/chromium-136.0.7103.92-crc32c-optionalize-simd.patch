--- a/third_party/crc32c/BUILD.gn.orig	2025-04-27 16:35:54.000000000 -0700
+++ b/third_party/crc32c/BUILD.gn	2025-05-07 16:30:25.429864195 -0700
@@ -3,6 +3,7 @@
 # found in the LICENSE file.
 
 import("//build/config/features.gni")
+import("//build/config/simd.gni")
 import("//testing/test.gni")
 
 # Only applied to CRC32C source and tests. (not exported)
@@ -23,10 +24,24 @@ config("crc32c_config") {
   # BYTE_ORDER_BIG_ENDIAN.
 
   if (current_cpu == "x86" || current_cpu == "x64") {
-    defines += [
-      "HAVE_MM_PREFETCH=1",
-      "HAVE_SSE42=1",
-    ]
+    if (use_sse) {
+      defines += [
+        "HAVE_MM_PREFETCH=1",
+      ]
+    } else {
+      defines += [
+        "HAVE_MM_PREFETCH=0",
+      ]
+    }
+    if (use_sse4_2) {
+      defines += [
+        "HAVE_SSE42=1",
+      ]
+    } else {
+      defines += [
+        "HAVE_SSE42=0",
+      ]
+    }
   } else {
     defines += [
       "HAVE_MM_PREFETCH=0",
@@ -34,13 +49,31 @@ config("crc32c_config") {
     ]
   }
   if (is_clang || !is_win) {
-    defines += [ "HAVE_BUILTIN_PREFETCH=1" ]
+    if (use_sse) {
+      defines += [ "HAVE_BUILTIN_PREFETCH=1" ]
+    } else if (use_armv5te) {
+      defines += [ "HAVE_BUILTIN_PREFETCH=1" ]
+    } else if (current_cpu == "loong64") {
+      defines += [ "HAVE_BUILTIN_PREFETCH=1" ]
+    } else if (current_cpu == "mips" || current_cpu == "mips64" || current_cpu == "mipsel" || current_cpu == "mips64el") {
+      defines += [ "HAVE_BUILTIN_PREFETCH=1" ]
+    } else if (current_cpu == "ppc" || current_cpu == "ppc64") {
+      defines += [ "HAVE_BUILTIN_PREFETCH=1" ]
+    } else if (current_cpu == "s390" || current_cpu == "s390x") {
+      defines += [ "HAVE_BUILTIN_PREFETCH=1" ]
+    } else {
+      defines += [ "HAVE_BUILTIN_PREFETCH=0" ]
+    }
   } else {
     defines += [ "HAVE_BUILTIN_PREFETCH=0" ]
   }
 
   if (current_cpu == "arm64") {
-    defines += [ "HAVE_ARM64_CRC32C=1" ]
+    if (use_crc32) {
+      defines += [ "HAVE_ARM64_CRC32C=1" ]
+    } else {
+      defines += [ "HAVE_ARM64_CRC32C=0" ]
+    }
   } else {
     defines += [ "HAVE_ARM64_CRC32C=0" ]
   }
@@ -68,10 +101,18 @@ source_set("crc32c") {
 
   configs += [ ":crc32c_config" ]
   deps = [
-    ":crc32c_arm64",
     ":crc32c_internal_headers",
-    ":crc32c_sse42",
   ]
+  if (use_aes && use_crc32 && use_crypto) {
+    deps += [
+      ":crc32c_arm64",
+    ]
+  }
+  if (use_sse4_2) {
+    deps += [
+      ":crc32c_sse42",
+    ]
+  }
 }
 
 source_set("crc32c_sse42") {
@@ -159,9 +200,19 @@ test("crc32c_tests") {
   configs += [ ":crc32c_config" ]
   deps = [
     ":crc32c",
-    ":crc32c_arm64",
     ":crc32c_internal_headers",
-    ":crc32c_sse42",
+  ]
+  if (use_aes && use_crc32 && use_crypto) {
+    deps += [
+      ":crc32c_arm64",
+    ]
+  }
+  if (use_sse4_2) {
+    deps += [
+      ":crc32c_sse42",
+    ]
+  }
+  deps += [
     "//testing/gtest:gtest_main",
     "//third_party/googletest:gtest",
   ]
@@ -172,9 +223,19 @@ test("crc32c_benchmark") {
   configs += [ ":crc32c_config" ]
   deps = [
     ":crc32c",
-    ":crc32c_arm64",
     ":crc32c_internal_headers",
-    ":crc32c_sse42",
+  ]
+  if (use_aes && use_crc32 && use_crypto) {
+    deps += [
+      ":crc32c_arm64",
+    ]
+  }
+  if (use_sse4_2) {
+    deps += [
+      ":crc32c_sse42",
+    ]
+  }
+  deps += [
     "//third_party/google_benchmark",
   ]
 }
