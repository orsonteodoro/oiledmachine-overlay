--- a/ui/qt/qt.gni.orig	2024-05-21 15:43:36.308571800 -0700
+++ b/ui/qt/qt.gni	2024-05-22 18:58:14.760517119 -0700
@@ -9,17 +9,17 @@ import("//build/config/sysroot.gni")
 declare_args() {
   # TODO(https://crbug.com/1424435): Allow QT in MSAN builds once QT is
   # added to the instrumented libraries.
-  use_qt = is_linux && !is_castos && !is_msan
+  use_qt5 = is_linux && !is_castos && !is_msan
 }
 
 declare_args() {
-  if (!use_sysroot && use_qt) {
-    moc_qt5_path = ""
+  if(!use_sysroot && use_qt5) {
+     moc_qt5_path = ""
   }
 }
 
 declare_args() {
-  use_qt6 = use_qt && use_sysroot
+  use_qt6 = use_qt5 && use_sysroot
 }
 
 declare_args() {
@@ -28,5 +28,5 @@ declare_args() {
   }
 }
 
-# use_qt6 => use_qt
-assert(!use_qt6 || use_qt)
+# require one
+#assert(use_qt6 || use_qt5)
--- a/ui/linux/BUILD.gn.orig	2024-05-21 15:43:36.216563700 -0700
+++ b/ui/linux/BUILD.gn	2024-05-22 18:58:14.760517119 -0700
@@ -65,7 +65,7 @@ component("linux_ui_factory") {
     # This is the only component that can interact with gtk.
     deps += [ "//ui/gtk" ]
   }
-  if (use_qt) {
+  if (use_qt5 || use_qt6) {
     deps += [ "//ui/qt" ]
   }
 }
--- a/ui/base/BUILD.gn.orig	2024-05-21 15:43:35.564505600 -0700
+++ b/ui/base/BUILD.gn	2024-05-22 18:58:14.764517092 -0700
@@ -101,7 +101,8 @@ buildflag_header("buildflags") {
     "HAS_NATIVE_ACCESSIBILITY=$has_native_accessibility",
     "HAS_PLATFORM_ACCESSIBILITY_SUPPORT=$has_platform_accessibility_support",
     "USE_GTK=$use_gtk",
-    "USE_QT=$use_qt",
+    "USE_QT5=$use_qt5",
+    "USE_QT6=$use_qt6",
   ]
 }
 
--- a/ui/linux/linux_ui_factory.cc.orig	2024-05-21 15:43:36.216563700 -0700
+++ b/ui/linux/linux_ui_factory.cc	2024-05-22 18:58:35.240384604 -0700
@@ -24,7 +24,7 @@
 #if BUILDFLAG(USE_GTK)
 #include "ui/gtk/gtk_ui_factory.h"
 #endif
-#if BUILDFLAG(USE_QT)
+#if BUILDFLAG(USE_QT5) || BUILDFLAG(USE_QT6)
 #include "ui/qt/qt_ui.h"
 #endif
 
@@ -64,7 +64,7 @@ LinuxUiAndTheme* GetGtkUi() {
 }
 
 std::unique_ptr<LinuxUiAndTheme> CreateQtUi() {
-#if BUILDFLAG(USE_QT)
+#if BUILDFLAG(USE_QT5) || BUILDFLAG(USE_QT6)
   auto qt_ui = qt::CreateQtUi(GetGtkUi());
   if (qt_ui->Initialize()) {
     GetLinuxUiThemesImpl().push_back(qt_ui.get());
--- a/ui/qt/BUILD.gn.orig	2024-05-21 15:43:36.308571800 -0700
+++ b/ui/qt/BUILD.gn	2024-05-22 18:58:14.764517092 -0700
@@ -8,7 +8,7 @@ import("//build/config/sysroot.gni")
 import("//printing/buildflags/buildflags.gni")
 import("//ui/qt/qt.gni")
 
-assert(use_qt)
+assert(use_qt5 || use_qt6)
 assert(is_linux)
 assert(!is_castos)
 
@@ -101,10 +101,13 @@ template("qt_shim") {
     }
   }
 }
-qt_shim("qt5_shim") {
-  qt_version = "5"
-  if (!use_sysroot) {
-    moc_qt_path = "$moc_qt5_path"
+assert(use_qt5 || use_qt6)
+if (use_qt5) {
+  qt_shim("qt5_shim") {
+    qt_version = "5"
+    if (!use_sysroot) {
+      moc_qt_path = "$moc_qt5_path"
+    }
   }
 }
 if (use_qt6) {
@@ -122,7 +125,10 @@ component("qt") {
   defines = [ "IS_QT_IMPL" ]
 
   # qt_shim is in data_deps since we want to load it manually.
-  data_deps = [ ":qt5_shim" ]
+  data_deps = []
+  if (use_qt5) {
+    data_deps += [ ":qt5_shim" ]
+  }
   if (use_qt6) {
     data_deps += [ ":qt6_shim" ]
   }
