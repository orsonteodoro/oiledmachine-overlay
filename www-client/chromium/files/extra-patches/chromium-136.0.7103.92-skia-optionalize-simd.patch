--- a/third_party/skia/BUILD.gn.orig	2025-04-27 16:35:54.000000000 -0700
+++ b/third_party/skia/BUILD.gn	2025-05-07 01:23:06.659741007 -0700
@@ -3,6 +3,7 @@
 # Use of this source code is governed by a BSD-style license that can be
 # found in the LICENSE file.
 
+import("//build/config/simd.gni")
 import("gn/codec.gni")
 import("gn/fuchsia_defines.gni")
 import("gn/shared_sources.gni")
@@ -1639,21 +1640,41 @@ skia_component("skia") {
     ":avif",
     ":crabbyavif",
     ":heif",
-    ":hsw",
+  ]
+  if (use_sse2 && use_sse3 && use_ssse3 && use_sse4_1 && use_sse4_2 && use_pclmul && use_avx && use_avx2 && use_bmi && use_bmi2 && use_fma) {
+    deps += [
+      ":hsw",
+    ]
+  }
+  deps += [
     ":jpeg_decode",
     ":jpegxl_decode",
-    ":lasx",
+  ]
+  if (use_lasx) {
+    deps += [
+      ":lasx",
+    ]
+  }
+  deps += [
     ":minify_sksl",
     ":ndk_images",
     ":png_decode_libpng",
     ":png_decode_rust",
     ":raw",
-    ":skx",
+  ]
+  if (use_sse2 && use_sse3 && use_ssse3 && use_sse4_1 && use_sse4_2 && use_pclmul && use_avx && use_avx2 && use_bmi && use_bmi2 && use_fma && use_aes && use_avx512) {
+    deps += [
+      ":skx",
+    ]
+  }
+  deps += [
     ":typeface_fontations",
     ":vello",
     ":webp_decode",
     ":wuffs",
     ":xml",
+  ]
+  deps += [
     "modules/skcms",
   ]
 
@@ -1822,7 +1843,9 @@ skia_static_library("pathkit") {
   public_configs = [ ":skia_public" ]
   configs = skia_library_configs
 
-  deps = [ ":hsw" ]
+  if (use_sse2 && use_sse3 && use_ssse3 && use_sse4_1 && use_sse4_2 && use_pclmul && use_avx && use_avx2 && use_bmi && use_bmi2 && use_fma) {
+    deps = [ ":hsw" ]
+  }
 
   sources = []
   sources += skia_pathops_sources
--- a/third_party/skia/gn/skia/BUILD.gn.orig	2025-04-27 16:35:54.000000000 -0700
+++ b/third_party/skia/gn/skia/BUILD.gn	2025-05-07 01:15:32.214653091 -0700
@@ -3,6 +3,7 @@
 # Use of this source code is governed by a BSD-style license that can be
 # found in the LICENSE file.
 
+import("//build/config/simd.gni")
 if (is_fuchsia) {
   import("//build/fuchsia/sdk.gni")
 }
@@ -164,22 +165,34 @@ config("default") {
   if (current_cpu == "arm") {
     cflags += [
       "-march=armv7-a",
-      "-mfpu=neon",
-      "-mthumb",
     ]
+    if (use_neon && use_thumb) {
+      cflags += [
+        "-mfpu=neon",
+        "-mthumb",
+      ]
+    }
   } else if (current_cpu == "x86" && !is_win) {
     asmflags += [ "-m32" ]
     cflags += [
       "-m32",
-      "-msse2",
-      "-mfpmath=sse",
     ]
+    if (use_sse2) {
+      cflags += [
+        "-msse2",
+        "-mfpmath=sse",
+      ]
+    }
     ldflags += [ "-m32" ]
   } else if (current_cpu == "loong64") {
     cflags += [
-      "-mlsx",
       "-Wno-switch-default",
     ]
+    if (use_lsx) {
+      cflags += [
+        "-mlsx",
+      ]
+    }
   }
 
   if (malloc != "" && !is_win) {
--- a/third_party/skia/modules/skcms/BUILD.gn.orig	2025-04-27 16:35:54.000000000 -0700
+++ b/third_party/skia/modules/skcms/BUILD.gn	2025-05-07 02:37:14.023412210 -0700
@@ -3,6 +3,7 @@
 # Use of this source code is governed by a BSD-style license that can be
 # found in the LICENSE file.
 
+import("//build/config/simd.gni")
 import("skcms.gni")
 
 # Use for CPU-specific skcms transform code that needs particular compiler flags.
@@ -90,11 +91,29 @@ static_library("skcms") {
       "SKCMS_DISABLE_HSW",
       "SKCMS_DISABLE_SKX",
     ]
+  } else {
+    defines = []
+    if (!use_sse2 || !use_sse3 || !use_ssse3 || !use_sse4_1 || !use_sse4_2 || !use_pclmul || !use_avx || !use_avx2 || !use_bmi || !use_bmi2 || !use_fma) {
+      defines = [
+        "SKCMS_DISABLE_HSW",
+      ]
+    }
+    if (!use_sse2 || !use_sse3 || !use_ssse3 || !use_sse4_1 || !use_sse4_2 || !use_pclmul || !use_avx || !use_avx2 || !use_bmi || !use_bmi2 || !use_fma || !use_aes || !use_avx512) {
+      defines = [
+        "SKCMS_DISABLE_SKX",
+      ]
+    }
   }
   public = skcms_public_headers
   sources = skcms_public + skcms_TransformBaseline
-  deps = [
-    ":skcms_TransformHsw",
-    ":skcms_TransformSkx",
-  ]
+  if (use_sse2 && use_sse3 && use_ssse3 && use_sse4_1 && use_sse4_2 && use_pclmul && use_avx && use_avx2 && use_bmi && use_bmi2 && use_fma) {
+    deps = [
+      ":skcms_TransformHsw",
+    ]
+  }
+  if (use_sse2 && use_sse3 && use_ssse3 && use_sse4_1 && use_sse4_2 && use_pclmul && use_avx && use_avx2 && use_bmi && use_bmi2 && use_fma && use_aes && use_avx512) {
+    deps = [
+      ":skcms_TransformSkx",
+    ]
+  }
 }
