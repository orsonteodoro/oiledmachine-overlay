Subject:  Make SIMD instructions optional for zlib
Patch Author:  Orson Teodoro <orsonteodoro@hotmail.com>
Date: Wed Oct 20 03:40:04 PM PDT 2021 (Unix time: 1634769604)
--- a/third_party/skia/third_party/zlib/BUILD.gn.orig	2024-03-19 15:16:10.686770000 -0700
+++ b/third_party/skia/third_party/zlib/BUILD.gn	2024-03-20 08:41:53.569359410 -0700
@@ -6,6 +6,13 @@
 import("../third_party.gni")
 import("zlib.gni")
 
+declare_args() {
+  use_neon = true
+  use_sse4_2 = true
+  use_ssse3 = true
+  use_sse2 = true
+}
+
 if (skia_use_system_zlib) {
   system("zlib") {
     libs = [ "z" ]
@@ -30,12 +37,12 @@ if (skia_use_system_zlib) {
   }
 
   use_arm_neon_optimizations =
-      (current_cpu == "arm" || current_cpu == "arm64") && (is_clang || !is_win)
+      (current_cpu == "arm" || current_cpu == "arm64") && (is_clang || !is_win) && use_neon
   use_x86_x64_optimizations =
-      (current_cpu == "x86" || current_cpu == "x64") && !is_ios
+      (current_cpu == "x86" || current_cpu == "x64") && !is_ios && use_sse2
 
   config("zlib_adler32_simd_config") {
-    if (use_x86_x64_optimizations) {
+    if (use_x86_x64_optimizations && use_ssse3) {
       defines = [ "ADLER32_SIMD_SSSE3" ]
       if (is_win) {
         defines += [ "X86_WINDOWS" ]
@@ -52,7 +59,7 @@ if (skia_use_system_zlib) {
   source_set("zlib_adler32_simd") {
     visibility = [ ":*" ]
 
-    if (use_x86_x64_optimizations) {
+    if (use_x86_x64_optimizations && use_ssse3) {
       sources = [
         "../externals/zlib/adler32_simd.c",
         "../externals/zlib/adler32_simd.h",
@@ -165,7 +172,7 @@ if (skia_use_system_zlib) {
   }
 
   config("zlib_crc32_simd_config") {
-    if (use_x86_x64_optimizations) {
+    if (use_x86_x64_optimizations && use_sse4_2) {
       defines = [ "CRC32_SIMD_SSE42_PCLMUL" ]
     }
   }
@@ -173,7 +180,7 @@ if (skia_use_system_zlib) {
   source_set("zlib_crc32_simd") {
     visibility = [ ":*" ]
 
-    if (use_x86_x64_optimizations) {
+    if (use_x86_x64_optimizations && use_sse4_2) {
       sources = [
         "../externals/zlib/crc32_simd.c",
         "../externals/zlib/crc32_simd.h",
--- a/third_party/zlib/BUILD.gn.orig	2024-03-19 15:15:25.342724600 -0700
+++ b/third_party/zlib/BUILD.gn	2024-03-20 08:39:38.482542837 -0700
@@ -11,6 +11,13 @@ declare_args() {
   zlib_symbols_visible = false
 }
 
+declare_args() {
+  use_neon = true
+  use_sse4_2 = true
+  use_ssse3 = true
+  use_sse2 = true
+}
+
 if (build_with_chromium) {
   import("//testing/test.gni")
 }
@@ -72,16 +79,16 @@ if ((current_cpu == "arm" || current_cpu
     !(is_win && !is_clang)) {
   # TODO(richard.townsend@arm.com): Optimizations temporarily disabled for
   # Windows on Arm MSVC builds, see http://crbug.com/v8/10012.
-  if (arm_use_neon) {
+  if (arm_use_neon && use_neon) {
     use_arm_neon_optimizations = true
   }
 }
 
 use_x86_x64_optimizations =
-    (current_cpu == "x86" || current_cpu == "x64") && !is_ios
+    (current_cpu == "x86" || current_cpu == "x64") && !is_ios && use_sse2
 
 config("zlib_adler32_simd_config") {
-  if (use_x86_x64_optimizations) {
+  if (use_x86_x64_optimizations && use_ssse3) {
     defines = [ "ADLER32_SIMD_SSSE3" ]
     if (is_win) {
       defines += [ "X86_WINDOWS" ]
@@ -98,13 +105,13 @@ config("zlib_adler32_simd_config") {
 source_set("zlib_adler32_simd") {
   visibility = [ ":*" ]
 
-  if (use_x86_x64_optimizations) {
+  if (use_x86_x64_optimizations && use_ssse3) {
     sources = [
       "adler32_simd.c",
       "adler32_simd.h",
     ]
 
-    if (!is_win || is_clang) {
+    if ((!is_win || is_clang) && use_ssse3) {
       cflags = [ "-mssse3" ]
     }
   }
@@ -213,7 +220,7 @@ source_set("zlib_inflate_chunk_simd") {
 }
 
 config("zlib_crc32_simd_config") {
-  if (use_x86_x64_optimizations) {
+  if (use_x86_x64_optimizations && use_sse4_2) {
     defines = [ "CRC32_SIMD_SSE42_PCLMUL" ]
   }
 }
@@ -221,7 +228,7 @@ config("zlib_crc32_simd_config") {
 source_set("zlib_crc32_simd") {
   visibility = [ ":*" ]
 
-  if (use_x86_x64_optimizations) {
+  if (use_x86_x64_optimizations && use_sse4_2) {
     sources = [
       "crc32_simd.c",
       "crc32_simd.h",
