--- chromium-93.0.4535.3.ebuild.orig	2021-06-09 14:39:47.000000000 -0700
+++ chromium-93.0.4535.3.ebuild	2021-06-10 02:53:37.649966225 -0700
@@ -1,6 +1,8 @@
 # Copyright 2009-2021 Gentoo Authors
 # Distributed under the terms of the GNU General Public License v2
 
+# Monitor https://chromereleases.googleblog.com/search/label/Dev%20updates for security updates.  They are announced faster than NVD.
+
 EAPI=7
 PYTHON_COMPAT=( python3_8 )
 PYTHON_REQ_USE="xml"
@@ -10,6 +12,7 @@ CHROMIUM_LANGS="am ar bg bn ca cs da de
 	sv sw ta te th tr uk vi zh-CN zh-TW"
 
 inherit check-reqs chromium-2 desktop flag-o-matic multilib ninja-utils pax-utils portability python-any-r1 readme.gentoo-r1 toolchain-funcs xdg-utils
+inherit multilib-minimal
 
 DESCRIPTION="Open-source version of Google Chrome web browser"
 HOMEPAGE="https://chromium.org/"
@@ -19,85 +22,91 @@ SRC_URI="https://commondatastorage.googl
 	https://files.pythonhosted.org/packages/ed/7b/bbf89ca71e722b7f9464ebffe4b5ee20a9e5c9a555a56e2d3914bb9119a6/setuptools-44.1.0.zip
 	https://github.com/stha09/chromium-patches/releases/download/${PATCHSET_NAME}/${PATCHSET_NAME}.tar.xz
 	arm64? ( https://github.com/google/highway/archive/refs/tags/0.12.1.tar.gz -> highway-0.12.1.tar.gz )"
+RESTRICT="mirror"
 
 LICENSE="BSD"
 SLOT="0"
 KEYWORDS="~amd64 ~arm64 ~x86"
 IUSE="component-build cups cpu_flags_arm_neon +hangouts headless +js-type-check kerberos official pic +proprietary-codecs pulseaudio screencast selinux +suid +system-ffmpeg +system-icu vaapi wayland widevine"
+IUSE+=" +partitionalloc tcmalloc libcmalloc"
+_ABIS="abi_x86_32 abi_x86_64 abi_x86_x32 abi_mips_n32 abi_mips_n64 abi_mips_o32 abi_ppc_32 abi_ppc_64 abi_s390_32 abi_s390_64"
+IUSE+=" ${_ABIS}"
 REQUIRED_USE="
+	^^ ( partitionalloc tcmalloc libcmalloc )
 	component-build? ( !suid )
+	partitionalloc? ( !component-build )
 	screencast? ( wayland )
 "
 
 COMMON_X_DEPEND="
-	media-libs/mesa:=[gbm]
-	x11-libs/libX11:=
-	x11-libs/libXcomposite:=
-	x11-libs/libXcursor:=
-	x11-libs/libXdamage:=
-	x11-libs/libXext:=
-	x11-libs/libXfixes:=
-	>=x11-libs/libXi-1.6.0:=
-	x11-libs/libXrandr:=
-	x11-libs/libXrender:=
-	x11-libs/libXtst:=
-	x11-libs/libxcb:=
-	x11-libs/libxshmfence:=
-	vaapi? ( >=x11-libs/libva-2.7:=[X,drm] )
+	media-libs/mesa:=[gbm,${MULTILIB_USEDEP}]
+	x11-libs/libX11:=[${MULTILIB_USEDEP}]
+	x11-libs/libXcomposite:=[${MULTILIB_USEDEP}]
+	x11-libs/libXcursor:=[${MULTILIB_USEDEP}]
+	x11-libs/libXdamage:=[${MULTILIB_USEDEP}]
+	x11-libs/libXext:=[${MULTILIB_USEDEP}]
+	x11-libs/libXfixes:=[${MULTILIB_USEDEP}]
+	>=x11-libs/libXi-1.6.0:=[${MULTILIB_USEDEP}]
+	x11-libs/libXrandr:=[${MULTILIB_USEDEP}]
+	x11-libs/libXrender:=[${MULTILIB_USEDEP}]
+	x11-libs/libXtst:=[${MULTILIB_USEDEP}]
+	x11-libs/libxcb:=[${MULTILIB_USEDEP}]
+	x11-libs/libxshmfence:=[${MULTILIB_USEDEP}]
+	vaapi? ( >=x11-libs/libva-2.7:=[X,drm,${MULTILIB_USEDEP}] )
 "
 
 COMMON_DEPEND="
-	app-arch/bzip2:=
-	cups? ( >=net-print/cups-1.3.11:= )
-	dev-libs/expat:=
-	dev-libs/glib:2
-	>=dev-libs/libxml2-2.9.4-r3:=[icu]
-	dev-libs/nspr:=
-	>=dev-libs/nss-3.26:=
-	>=media-libs/alsa-lib-1.0.19:=
-	media-libs/fontconfig:=
-	media-libs/freetype:=
-	>=media-libs/harfbuzz-2.4.0:0=[icu(-)]
-	media-libs/libjpeg-turbo:=
-	media-libs/libpng:=
-	pulseaudio? ( media-sound/pulseaudio:= )
+	app-arch/bzip2:=[${MULTILIB_USEDEP}]
+	cups? ( >=net-print/cups-1.3.11:=[${MULTILIB_USEDEP}] )
+	dev-libs/expat:=[${MULTILIB_USEDEP}]
+	dev-libs/glib:2[${MULTILIB_USEDEP}]
+	>=dev-libs/libxml2-2.9.4-r3:=[icu,${MULTILIB_USEDEP}]
+	dev-libs/nspr:=[${MULTILIB_USEDEP}]
+	>=dev-libs/nss-3.26:=[${MULTILIB_USEDEP}]
+	>=media-libs/alsa-lib-1.0.19:=[${MULTILIB_USEDEP}]
+	media-libs/fontconfig:=[${MULTILIB_USEDEP}]
+	media-libs/freetype:=[${MULTILIB_USEDEP}]
+	>=media-libs/harfbuzz-2.4.0:0=[icu(-),${MULTILIB_USEDEP}]
+	media-libs/libjpeg-turbo:=[${MULTILIB_USEDEP}]
+	media-libs/libpng:=[${MULTILIB_USEDEP}]
+	pulseaudio? ( media-sound/pulseaudio:=[${MULTILIB_USEDEP}] )
 	system-ffmpeg? (
-		>=media-video/ffmpeg-4.3:=
+		>=media-video/ffmpeg-4.3:=[${MULTILIB_USEDEP}]
 		|| (
-			media-video/ffmpeg[-samba]
-			>=net-fs/samba-4.5.10-r1[-debug(-)]
+			media-video/ffmpeg[-samba,${MULTILIB_USEDEP}]
+			>=net-fs/samba-4.5.10-r1[-debug(-),${MULTILIB_USEDEP}]
 		)
-		>=media-libs/opus-1.3.1:=
+		>=media-libs/opus-1.3.1:=[${MULTILIB_USEDEP}]
 	)
 	net-misc/curl[ssl]
-	sys-apps/dbus:=
-	sys-apps/pciutils:=
+	sys-apps/dbus:=[${MULTILIB_USEDEP}]
+	sys-apps/pciutils:=[${MULTILIB_USEDEP}]
 	virtual/udev
-	x11-libs/cairo:=
-	x11-libs/gdk-pixbuf:2
-	x11-libs/libxkbcommon:=
-	x11-libs/pango:=
-	media-libs/flac:=
-	>=media-libs/libwebp-0.4.0:=
-	sys-libs/zlib:=[minizip]
-	kerberos? ( virtual/krb5 )
+	x11-libs/cairo:=[${MULTILIB_USEDEP}]
+	x11-libs/gdk-pixbuf:2[${MULTILIB_USEDEP}]
+	x11-libs/libxkbcommon:=[${MULTILIB_USEDEP}]
+	x11-libs/pango:=[${MULTILIB_USEDEP}]
+	media-libs/flac:=[${MULTILIB_USEDEP}]
+	>=media-libs/libwebp-0.4.0:=[${MULTILIB_USEDEP}]
+	sys-libs/zlib:=[minizip,${MULTILIB_USEDEP}]
+	kerberos? ( virtual/krb5[${MULTILIB_USEDEP}] )
 	!headless? (
 		${COMMON_X_DEPEND}
-		>=app-accessibility/at-spi2-atk-2.26:2
-		>=app-accessibility/at-spi2-core-2.26:2
-		>=dev-libs/atk-2.26
-		x11-libs/gtk+:3[X]
+		>=app-accessibility/at-spi2-atk-2.26:2[${MULTILIB_USEDEP}]
+		>=app-accessibility/at-spi2-core-2.26:2[${MULTILIB_USEDEP}]
+		>=dev-libs/atk-2.26[${MULTILIB_USEDEP}]
+		x11-libs/gtk+:3[X,${MULTILIB_USEDEP}]
 		wayland? (
-			dev-libs/wayland:=
+			dev-libs/wayland:=[${MULTILIB_USEDEP}]
 			screencast? ( media-video/pipewire:0/0.3 )
-			x11-libs/gtk+:3[wayland,X]
-			x11-libs/libdrm:=
+			x11-libs/gtk+:3[wayland,X,${MULTILIB_USEDEP}]
+			x11-libs/libdrm:=[${MULTILIB_USEDEP}]
 		)
 	)
 "
 RDEPEND="${COMMON_DEPEND}
 	x11-misc/xdg-utils
-	virtual/opengl
+	virtual/opengl[${MULTILIB_USEDEP}]
 	virtual/ttf-fonts
 	selinux? ( sec-policy/selinux-chromium )
 "
@@ -117,8 +126,11 @@ BDEPEND="
 	>=net-libs/nodejs-7.6.0[inspector]
 	sys-apps/hwids[usb(+)]
 	>=sys-devel/bison-2.4.3
-	sys-devel/flex
-	virtual/pkgconfig
+	sys-devel/flex[${MULTILIB_USEDEP}]
+	|| (
+		>=dev-util/pkgconf-1.3.7[${MULTILIB_USEDEP},pkg-config]
+		>=dev-util/pkgconfig-0.29.2[${MULTILIB_USEDEP}]
+	)
 	js-type-check? ( virtual/jre )
 "
 
@@ -127,19 +139,19 @@ BDEPEND="
 : ${CHROMIUM_FORCE_LIBCXX=no}
 
 if [[ ${CHROMIUM_FORCE_CLANG} == yes ]]; then
-	BDEPEND+=" >=sys-devel/clang-12"
+	BDEPEND+=" >=sys-devel/clang-12[${MULTILIB_USEDEP}]"
 fi
 
 if [[ ${CHROMIUM_FORCE_LIBCXX} == yes ]]; then
-	RDEPEND+=" >=sys-libs/libcxx-12"
-	DEPEND+=" >=sys-libs/libcxx-12"
+	RDEPEND+=" >=sys-libs/libcxx-12[${MULTILIB_USEDEP}]"
+	DEPEND+=" >=sys-libs/libcxx-12[${MULTILIB_USEDEP}]"
 else
 	COMMON_DEPEND="
-		app-arch/snappy:=
-		dev-libs/libxslt:=
-		>=dev-libs/re2-0.2019.08.01:=
-		>=media-libs/openh264-1.6.0:=
-		system-icu? ( >=dev-libs/icu-69.1:= )
+		app-arch/snappy:=[${MULTILIB_USEDEP}]
+		dev-libs/libxslt:=[${MULTILIB_USEDEP}]
+		>=dev-libs/re2-0.2019.08.01:=[${MULTILIB_USEDEP}]
+		>=media-libs/openh264-1.6.0:=[${MULTILIB_USEDEP}]
+		system-icu? ( >=dev-libs/icu-69.1:=[${MULTILIB_USEDEP}] )
 	"
 	RDEPEND+="${COMMON_DEPEND}"
 	DEPEND+="${COMMON_DEPEND}"
@@ -211,6 +223,7 @@ pkg_pretend() {
 }
 
 pkg_setup() {
+	ewarn "The $(ver_cut 1 ${PV}) series is the Dev branch."
 	pre_build_checks
 
 	chromium_suid_sandbox_check_kernel_config
@@ -532,9 +545,11 @@ src_prepare() {
 	# bundled eu-strip is for amd64 only and we don't want to pre-stripped binaries
 	mkdir -p buildtools/third_party/eu-strip/bin || die
 	ln -s "${EPREFIX}"/bin/true buildtools/third_party/eu-strip/bin/eu-strip || die
+	multilib_copy_sources
 }
 
-src_configure() {
+multilib_src_configure() {
+	local chost=$(get_abi_CHOST ${ABI})
 	# Calling this here supports resumption via FEATURES=keepwork
 	python_setup
 
@@ -545,8 +560,8 @@ src_configure() {
 
 	if [[ ${CHROMIUM_FORCE_CLANG} == yes ]] && ! tc-is-clang; then
 		# Force clang since gcc is pretty broken at the moment.
-		CC=${CHOST}-clang
-		CXX=${CHOST}-clang++
+		CC=${chost}-clang
+		CXX=${chost}-clang++
 		strip-unsupported-flags
 	fi
 
@@ -577,6 +592,14 @@ src_configure() {
 	# for development and debugging.
 	myconf_gn+=" is_component_build=$(usex component-build true false)"
 
+	if use partitionalloc ; then
+		myconf_gn+=" use_allocator=\"partition\""
+	elif use tcmalloc ; then
+		myconf_gn+=" use_allocator=\"tcmalloc\""
+	else
+		myconf_gn+=" use_allocator=\"none\""
+	fi
+
 	# Disable nacl, we can't build without pnacl (http://crbug.com/269560).
 	myconf_gn+=" enable_nacl=false"
 
@@ -709,6 +732,31 @@ src_configure() {
 		die "Failed to determine target arch, got '$myarch'."
 	fi
 
+	local target_cpu=""
+	case "${ABI}" in
+		amd64*|x64*)
+			target_cpu="x64"
+			;;
+		arm|n32|n64|o32)
+			target_cpu="${chost%%-*}"
+			;;
+		arm64|ppc|ppc64|s390*)
+			target_cpu="${ABI}"
+			;;
+		ppc_aix,ppc_macos)
+			target_cpu="ppc"
+			;;
+		x86*)
+			target_cpu="x86"
+			;;
+		*)
+			einfo "${ABI} is not supported"
+			;;
+	esac
+
+	myconf_gn+=" target_cpu=\"${target_cpu}\" v8_current_cpu=\"${target_cpu}\" current_cpu=\"${target_cpu}\" host_cpu=\"${target_cpu}\" "
+	myconf_gyp+=" -Dtarget_arch=${target_arch}"
+
 	# Make sure that -Werror doesn't get added to CFLAGS by the build system.
 	# Depending on GCC version the warnings are different and we don't want
 	# the build to fail because of that.
@@ -792,7 +840,7 @@ src_configure() {
 	"$@" || die
 }
 
-src_compile() {
+multilib_src_compile() {
 	# Final link uses lots of file descriptors.
 	ulimit -n 2048
 
@@ -833,15 +881,16 @@ src_compile() {
 		out/Release/chromium-browser.1 || die
 
 	# Build desktop file; bug #706786
-	sed -e 's|@@MENUNAME@@|Chromium|g;
-		s|@@USR_BIN_SYMLINK_NAME@@|chromium-browser|g;
-		s|@@PACKAGE@@|chromium-browser|g;
+	sed -e 's|@@PACKAGE@@|chromium-browser|g;
 		s|\(^Exec=\)/usr/bin/|\1|g;' \
 		chrome/installer/linux/common/desktop.template > \
 		out/Release/chromium-browser-chromium.desktop || die
+	sed -i -e "s|@@MENUNAME@@|Chromium (${ABI})|g" \
+		-e "s|@@USR_BIN_SYMLINK_NAME@@|chromium-browser-${ABI}|g" \
+		out/Release/chromium-browser-chromium.desktop || die
 }
 
-src_install() {
+multilib_src_install() {
 	local CHROMIUM_HOME="/usr/$(get_libdir)/chromium-browser"
 	exeinto "${CHROMIUM_HOME}"
 	doexe out/Release/chrome
@@ -851,24 +900,28 @@ src_install() {
 		fperms 4755 "${CHROMIUM_HOME}/chrome-sandbox"
 	fi
 
-	doexe out/Release/chromedriver
+	newexe out/Release/chromedriver chromedriver-${ABI}
 	doexe out/Release/crashpad_handler
 
 	local sedargs=( -e
 			"s:/usr/lib/:/usr/$(get_libdir)/:g;
+			s:chromium-browser-chromium.desktop:chromium-browser-chromium-${ABI}.desktop:g;
 			s:@@OZONE_AUTO_SESSION@@:$(usex wayland true false):g;
 			s:@@FORCE_OZONE_PLATFORM@@:$(usex headless true false):g"
 	)
 	sed "${sedargs[@]}" "${FILESDIR}/chromium-launcher-r6.sh" > chromium-launcher.sh || die
-	doexe chromium-launcher.sh
+	newexe chromium-launcher.sh chromium-launcher-${ABI}.sh
 
 	# It is important that we name the target "chromium-browser",
 	# xdg-utils expect it; bug #355517.
-	dosym "${CHROMIUM_HOME}/chromium-launcher.sh" /usr/bin/chromium-browser
+	dosym "${CHROMIUM_HOME}/chromium-launcher-${ABI}.sh" /usr/bin/chromium-browser-${ABI}
+	dosym "${CHROMIUM_HOME}/chromium-launcher-${ABI}.sh" /usr/bin/chromium-browser
 	# keep the old symlink around for consistency
-	dosym "${CHROMIUM_HOME}/chromium-launcher.sh" /usr/bin/chromium
+	dosym "${CHROMIUM_HOME}/chromium-launcher-${ABI}.sh" /usr/bin/chromium-${ABI}
+	dosym "${CHROMIUM_HOME}/chromium-launcher-${ABI}.sh" /usr/bin/chromium
 
-	dosym "${CHROMIUM_HOME}/chromedriver" /usr/bin/chromedriver
+	dosym "${CHROMIUM_HOME}/chromedriver-${ABI}" /usr/bin/chromedriver-${ABI}
+	dosym "${CHROMIUM_HOME}/chromedriver-${ABI}" /usr/bin/chromedriver
 
 	# Allow users to override command-line options, bug #357629.
 	insinto /etc/chromium
@@ -911,7 +964,7 @@ src_install() {
 	done
 
 	# Install desktop entry
-	domenu out/Release/chromium-browser-chromium.desktop
+	newmenu out/Release/chromium-browser-chromium.desktop chromium-browser-chromium-${ABI}.desktop
 
 	# Install GNOME default application entry (bug #303100).
 	insinto /usr/share/gnome-control-center/default-apps
@@ -945,4 +998,16 @@ pkg_postinst() {
 		elog "inside Chromium or add --enable-webrtc-pipewire-capturer"
 		elog "to CHROMIUM_FLAGS in /etc/chromium/default."
 	fi
+
+	elog
+	elog "By default, the /usr/bin/chromium and /usr/bin/chromedriver symlinks are"
+	elog "set to the last ABI installed."
+	elog "You must change it manually if you want to run on a different default ABI."
+	elog
+	elog "Examples"
+	elog "ln -sf /usr/lib64/chromium-browser/chromium-launcher-${ABI}.sh /usr/bin/chromium"
+	elog "ln -sf /usr/lib/chromium-browser/chromium-launcher-${ABI}.sh /usr/bin/chromium"
+	elog "ln -sf /usr/lib32/chromium-browser/chromium-launcher-${ABI}.sh /usr/bin/chromium"
+	elog "ln -sf /usr/lib32/chromium-browser/chromedriver-${ABI} /usr/bin/chromedriver"
+	elog
 }
